
PlaterDB = {
["captured_spells"] = {
[259277] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "DEBUFF",
["source"] = "Hakken",
["npcID"] = 165189,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[383061] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Liquid Magma Totem",
["npcID"] = 97369,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[124007] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Xuen",
["npcID"] = 63508,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[79962] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nelur Lightsown",
["npcID"] = 96954,
},
[423734] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Doomfiend",
["npcID"] = 210910,
},
[387476] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Infernal",
["npcID"] = 89,
},
[193635] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Void Tendril",
["npcID"] = 192337,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[389541] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "White Tiger Statue",
["npcID"] = 196581,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[386176] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[227291] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Niuzao",
["npcID"] = 73967,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[404942] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "DEBUFF",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[405736] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[89766] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Felguard",
["npcID"] = 17252,
},
[360969] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Hakken",
["npcID"] = 165189,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[58867] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Spirit Wolf",
["npcID"] = 100820,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[79892] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Murgha the Tempered",
["npcID"] = 96957,
},
[260249] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "BUFF",
["source"] = "Hakken",
["npcID"] = 165189,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[334713] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Dreadstalker",
["npcID"] = 98035,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[118905] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Capacitor Totem",
["npcID"] = 61245,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[124009] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Xuen",
["npcID"] = 63508,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[19483] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Infernal",
["npcID"] = 89,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[89751] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Klekfaran",
["npcID"] = 17252,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[192226] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Liquid Magma Totem",
["npcID"] = 97369,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[24450] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cat",
["npcID"] = 165189,
},
[135029] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Water Elemental",
["npcID"] = 208441,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[5672] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Healing Stream Totem",
["npcID"] = 3527,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[48168] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Matron Ossela",
["npcID"] = 96955,
},
[31707] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Water Elemental",
["npcID"] = 208441,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[49966] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Shocker",
["npcID"] = 165189,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[405681] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Klekfaran",
["npcID"] = 17252,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[59638] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Mirror Image",
["npcID"] = 31216,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[201754] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Iorek",
["npcID"] = 165189,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[104318] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Wild Imp",
["npcID"] = 143622,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[3110] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Quzuri",
["npcID"] = 416,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[30213] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Klekfaran",
["npcID"] = 17252,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[89753] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Klekfaran",
["npcID"] = 17252,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[419591] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Future Self",
["npcID"] = 208957,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[63619] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Shadowfiend",
["npcID"] = 19668,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[108446] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 17252,
},
[134477] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vazeelzekeel",
["npcID"] = 17252,
},
[216948] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shadescale Flyeater",
["npcID"] = 109023,
},
[405592] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Dragonfire Golem",
["npcID"] = 203230,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[138130] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Storm Spirit",
["npcID"] = 205353,
},
[224125] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 100820,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[386195] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "BUFF",
["source"] = "Dreadstalker",
["npcID"] = 98035,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[57984] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Greater Fire Elemental",
["npcID"] = 95061,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[389243] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Snoozy Clickclock",
["npcID"] = 191039,
},
[224126] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 100820,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[61684] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Shocker",
["npcID"] = 165189,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[100780] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Storm Spirit",
["npcID"] = 205353,
},
[264667] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "BUFF",
["source"] = "Shocker",
["npcID"] = 165189,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[213486] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Felsoul Courtesan",
["npcID"] = 111556,
},
[79849] = {
["source"] = "Pyromancer Scorchbrew",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 50716,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[81262] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Efflorescence",
["npcID"] = 47649,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[224127] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 100820,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[181113] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Dragonfire Golem",
["npcID"] = 203230,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[17253] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Hakken",
["npcID"] = 165189,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[411745] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Colossal Draconic Golem",
["npcID"] = 203826,
},
[193473] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "DEBUFF",
["source"] = "Void Tendril",
["npcID"] = 192337,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[192082] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "BUFF",
["source"] = "Wind Rush Totem",
["npcID"] = 97285,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[405886] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Dragonfire Golem",
["npcID"] = 203230,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[237352] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kirin Tor Sky Ward",
["npcID"] = 119540,
},
[267964] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Klekfaran",
["npcID"] = 17252,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[171982] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["type"] = "BUFF",
["source"] = "Klekfaran",
["npcID"] = 17252,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2689,
},
[36213] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Greater Earth Elemental",
["npcID"] = 95072,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[203761] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Chronarch Defender",
["npcID"] = 109670,
},
[30151] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Klekfaran",
["npcID"] = 17252,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[221573] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Chronarch Defender",
["npcID"] = 109670,
},
[2649] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "AGYAR",
["npcID"] = 165189,
},
[270481] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Demonic Tyrant",
["npcID"] = 135002,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[418588] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Future Self",
["npcID"] = 208957,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[327942] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Windfury Totem",
["npcID"] = 6112,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[1604] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Shadescale Flyeater",
["npcID"] = 109023,
},
[127801] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Turnip Punching Bag",
["npcID"] = 65310,
},
[61353] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dagna Flintlock",
["npcID"] = 96779,
},
},
["profileKeys"] = {
["Qpaladin - Ragnaros"] = "Default",
["Qpcheese - Chamber of Aspects"] = "Default",
["Qpcheese - Ragnaros"] = "Mage-MOD",
["Qpc - Draenor"] = "Default",
["Qutlaw - Ravencrest"] = "Default",
["Zelení - Draenor"] = "Default",
["Flurrq - Ragnaros"] = "Default",
["Djagon - Ragnaros"] = "Default",
["Qubit - Ragnaros"] = "Qubit",
["Myfficraider - Ragnaros"] = "Default",
["Fishanus - Ragnaros"] = "Default",
["Cyclosarin - Ragnaros"] = "Default",
["Laurs - Ragnaros"] = "Default",
["Qpe - Ravencrest"] = "Default",
["Qpebank - Draenor"] = "Default",
["Jerwin - Ragnaros"] = "Default",
["Qpfromage - Ragnaros"] = "Default",
["Qpew - Ragnaros"] = "Default",
["Dogson - Ragnaros"] = "Default",
},
["profiles"] = {
["Qpcheese - Ragnaros"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Combo Points"] = 6,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Extra Border"] = 2,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Hide Neutral Units"] = 1,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
398151,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Buff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
},
["PlaterCore"] = 1,
["Name"] = "Explosion Affix M+ [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.168627455830574,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1669340967,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 137,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"197697",
"59544",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
209033,
360850,
212784,
207980,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
392640,
397888,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["NpcNames"] = {
},
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["NpcNames"] = {
"165560",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Auto Set Skull",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["NpcNames"] = {
"174773",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Non Elite Trash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
377004,
381516,
196543,
199726,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate by Unit Buff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
352833,
330403,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
},
["aura2_x_offset"] = 0,
["update_throttle"] = 0.1200000047683716,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Time"] = 1547392935,
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Color Automation [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1541606242,
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Hide Neutral Units [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Time"] = 1596791840,
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["version"] = -1,
["Name"] = "Reorder Nameplate [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1554138845,
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Name"] = "Don't Have Aura [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["Time"] = 1547409079,
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Name"] = "Extra Border [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1552354619,
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Current Target Color [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 348,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["Time"] = 1597097268,
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["version"] = -1,
["Name"] = "Cast Bar Icon Settings [P]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Key"] = "iconPadding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Key"] = "textureHeightMod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["Time"] = 1547406548,
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Execute Range [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 363,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Time"] = 1620377377,
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["version"] = -1,
["Name"] = "Attacking Specific Unit [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Time"] = 1621935143,
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["version"] = -1,
["Name"] = "Combo Points [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1548278227,
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Name"] = "Players Targeting a Target [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 356,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["Time"] = 1608663128,
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Aura Reorder [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Options"] = {
},
},
},
["aura_x_offset"] = 0,
["range_check_alpha_friendlies"] = 0.6499999761581421,
["range_check_alpha"] = 0.6499999761581421,
["npc_cache"] = {
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
},
},
["ui_parent_scale_tune"] = 1.409999847412109,
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 1,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Unit - Show Energy"] = 11,
["Auto Set Skull"] = 11,
["Spiteful Affix"] = 3,
["Add - Non Elite Trash [P]"] = 4,
["Explosion Affix M+"] = 14,
["Add - Explode on Die [P]"] = 1,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Cast - Stop Casting"] = 4,
["Cast - Quick Flash"] = 2,
["Cast - Very Important"] = 15,
["Fixate On You"] = 11,
},
["range_check_in_range_or_target_alpha"] = 0.8999999761581421,
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["aura2_y_offset"] = 5,
["pet_height_scale"] = 0.949999988079071,
["health_selection_overlay_alpha"] = 0.09999999403953552,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["Name"] = "Cast - Alert + Timer [P]",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["__TrashAt"] = 1675712003,
},
},
["pet_width_scale"] = 0.949999988079071,
["patch_version"] = 24,
["not_affecting_combat_alpha"] = 0.5999999642372131,
["aura_y_offset"] = 5,
},
["Default"] = {
["target_shady_combat_only"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802706,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Desc"] = "Add the buff name in the trigger box.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Revision"] = 633,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Name"] = "Aura - Buff Alert [Plater]",
["Prio"] = 99,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["SpellIds"] = {
398151,
377738,
378149,
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["url"] = "",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1614608904,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["NpcNames"] = {
"174773",
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 188,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "M+ Spiteful",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Time to die Spiteful affix",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Time to Die",
["Value"] = "Time to Die",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Name"] = "Width",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "bgWidth",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Key"] = "bgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Name"] = "Text Size",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textSize",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Targeting",
["Value"] = "Targeting",
["Key"] = "option11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 11",
["Value"] = 0,
["Key"] = "option11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Icon"] = 135945,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1688802707,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 369,
["semver"] = "",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Desc"] = "Add the debuff name in the trigger box.",
["Author"] = "Tercioo-Sylvanas",
["SpellIds"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["Prio"] = 99,
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a special animation showing the explosion time.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Name"] = "Health Bar Height Mod",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Name"] = "Arrow Height",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Color List by SpellId",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
415437,
264050,
267824,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1622577650,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 64,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Auto Set Skull",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Auto set skull marker",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Only in Combat",
["Value"] = false,
["Key"] = "onlyInCombat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802694,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["Enabled"] = true,
["Revision"] = 210,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Countdown",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["Options"] = {
},
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Key"] = "animSpeed",
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1688802690,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 271,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Fixate [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show above the nameplate who is the player fixated",
["Options"] = {
},
["Icon"] = 1029718,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802689,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 235,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "script desc",
["Value"] = "Show the power of the unit above the nameplate.",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show at 80% of Energy",
["Value"] = true,
["Key"] = "showLater",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Name"] = "Font Color",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Key"] = "fontColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Name"] = "Enable Text Outline",
["Value"] = true,
["Key"] = "outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Icon"] = 136048,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802691,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 268,
["semver"] = "",
["Enabled"] = true,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Author"] = "Tecno-Azralon",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["Name"] = "Fixate On You [Plater]",
["Prio"] = 99,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["OptionsValues"] = {
["NameplateSizeOffset"] = 1.3500000238419,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Time"] = 1648170127,
["url"] = "https://wago.io/1TlaFYtDO/75",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["Enabled"] = true,
["Revision"] = 2918,
["semver"] = "1.0.74",
["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Author"] = "Bombad£o-Azralon",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["SpellIds"] = {
240446,
347363,
339415,
318406,
331223,
326607,
327885,
334625,
328016,
324527,
344005,
321999,
340219,
328986,
320576,
322358,
341445,
336451,
332672,
331398,
331379,
334664,
334967,
320230,
328146,
320631,
322493,
324372,
327240,
322939,
328756,
331745,
340304,
319685,
326827,
342481,
356548,
356537,
356407,
349987,
349663,
350090,
355782,
350922,
355438,
357404,
357189,
347150,
355057,
355139,
355429,
355584,
358131,
350517,
357260,
351119,
351646,
350180,
335783,
294533,
353782,
347855,
353769,
331935,
336383,
342160,
353742,
353444,
277039,
278192,
329909,
358328,
325632,
81008,
296355,
355224,
296839,
310392,
367380,
297966,
332002,
329904,
294517,
329423,
329905,
353124,
358270,
295985,
184381,
318995,
260344,
301952,
362820,
329930,
355212,
332165,
358327,
359770,
364040,
361644,
363088,
361989,
363024,
365008,
365805,
365958,
360717,
361923,
363533,
364386,
364114,
362028,
362617,
365385,
},
["Prio"] = 99,
["Name"] = "M+ Explosive [Fixed]",
["PlaterCore"] = 1,
["version"] = 75,
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["Options"] = {
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "ShowArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "ArrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Glow Alpha",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "GlowAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Nameplate Height Scale",
["Value"] = 1.25,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "NameplateSizeOffset",
},
},
["Icon"] = 2065634,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["OptionsValues"] = {
["customSize"] = {
{
"17",
"120, 16",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775232,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 283,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["SpellIds"] = {
354080,
},
["Prio"] = 99,
["Name"] = "Cast - Castbar is Timer [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["Options"] = {
{
["Type"] = 7,
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Value"] = {
{
"17",
"120, 16",
},
},
["Key"] = "customSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Name"] = "Cast Bar Width",
["Value"] = 120,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Name"] = "Cast Bar Height",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "height",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Name"] = "Cast Timer Size",
["Value"] = 12,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timerFontSize",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 7",
["Value"] = "Time Separators",
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Key"] = "separatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Width",
["Value"] = 1,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "separatorWidth",
},
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Shows the target name in a separate box",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Key"] = "option27",
["Value"] = 0,
["Name"] = "Option 27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Target Options",
["Name"] = "Option 28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 4,
["Key"] = "colorByClass",
["Value"] = true,
["Name"] = "Use Class Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgColor",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Fraction"] = false,
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Frame Height",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameHeight",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1688802705,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 379,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Aura - Blink by Time Left [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Blink Enabled",
["Value"] = true,
["Key"] = "blinkEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = true,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Name"] = "Change NamePlate Color",
["Value"] = false,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Name"] = "Timeleft to Blink",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Name"] = "Blink Speed",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Name"] = "Blink Max Alpha",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Timer Color Enabled",
["Value"] = true,
["Key"] = "timerColorEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Name"] = "Warning Color",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Key"] = "warningColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Name"] = "Critical Color",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Key"] = "criticalColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802692,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["Icon"] = 2175503,
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 534,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "Option 18",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Nameplate Color",
["Value"] = "Nameplate Color",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["Name"] = "Explosion Affix M+ [Plater]",
["Prio"] = 99,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["url"] = "",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1688802696,
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["url"] = "",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
["semver"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 148,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["version"] = -1,
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Name"] = "Add - Health Markers [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1688802697,
["semver"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 574,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Extra Texture",
["Value"] = "Extra Texture",
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Key"] = "showExtraTexture",
["Value"] = false,
["Name"] = "Show Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Key"] = "skullColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Name"] = "Alpha",
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Key"] = "skullScale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Scale",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Name"] = "Npc Color By NpcID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["Name"] = "Add - Important [P]",
["Prio"] = 99,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
376644,
373017,
386781,
384823,
372735,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Name"] = "Cast Color by SpellID",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
200630,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Key"] = "shakeAmplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1688802924,
["semver"] = "",
["url"] = "",
["Icon"] = 610472,
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 69,
["Options"] = {
},
["Name"] = "Aura is Shield [P]",
["Prio"] = 99,
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1688802703,
["semver"] = "",
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Desc"] = "Change the color of  add",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 164,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useFlash",
["Value"] = true,
["Name"] = "Flash Nameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Name"] = "NpcID to Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["Name"] = "Add - Warning [P]",
["Prio"] = 99,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
190426,
186696,
101075,
100818,
98081,
52019,
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1688802707,
["semver"] = "",
["url"] = "",
["Icon"] = 236209,
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["Revision"] = 20,
["Options"] = {
},
["Name"] = "Aura While Casting [P]",
["Prio"] = 99,
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1688802700,
["semver"] = "",
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Desc"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["Revision"] = 113,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateScale",
["Value"] = true,
["Name"] = "Change Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Key"] = "scale",
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Name"] = "Add - Non Elite Trash [P]",
["Prio"] = 99,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Name"] = "Rotation Duration",
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Name"] = "Texture Scale",
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Name"] = "Texture Alpha",
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Name"] = "Amount of Segments",
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1688802690,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Revision"] = 34,
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["Name"] = "Fixate by Unit Buff [P]",
["Prio"] = 99,
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
426662,
426663,
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["url"] = "",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802694,
["semver"] = "",
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Desc"] = "",
["Enabled"] = true,
["Revision"] = 108,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Reverse Health Bar",
["Value"] = false,
["Key"] = "useReverse",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable Shake",
["Value"] = false,
["Key"] = "useShake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Name"] = "Shake Amplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Red Background",
["Value"] = true,
["Key"] = "useBackground",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["Name"] = "Add - Explode on Die [P]",
["Prio"] = 99,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
},
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateLargeTopInset"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["NamePlateClassificationScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateShowFriendlyTotems"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplatePersonalHideDelaySeconds"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateTargetRadialPosition"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3993: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3991: in function <Interface/AddOns/Plater/Plater.lua:3991>\n",
["nameplateResourceOnTarget"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["clampTargetNameplateToScreen"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateShowAll"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateMaxDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["SoftTargetInteract"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/UltraSquirt/UltraSquirt.lua\"]:831: in function `ClearCVars'\n[string \"@Interface/AddOns/UltraSquirt/UltraSquirt.lua\"]:1623: in function `Open'\n[string \"@Interface/AddOns/UltraSquirt/UltraSquirt.lua\"]:1553: in function `?'\n[string \"@Interface/AddOns/ActionButtonSettings/Libs/AceConsole-3.0/AceConsole-3.0.lua\"]:90: in function `?'\n[string \"@Interface/FrameXML/ChatFrame.lua\"]:5291: in function `ChatEdit_ParseText'\n[string \"@Interface/FrameXML/ChatFrame.lua\"]:4948: in function `ChatEdit_SendText'\n[string \"@Interface/FrameXML/ChatFrame.lua\"]:4984: in function `ChatEdit_OnEnterPressed'\n[string \"*ChatFrame.xml:141_OnEnterPressed\"]:1: in function <[string \"*ChatFrame.xml:141_OnEnterPressed\"]:1>\n[string \"=[C]\"]: ?\n",
["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["NamePlateVerticalScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3995: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3991: in function <Interface/AddOns/Plater/Plater.lua:3991>\n",
["nameplateShowSelf"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateSelfTopInset"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateMotionSpeed"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateShowEnemyMinions"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateSelectedScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3994: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3991: in function <Interface/AddOns/Plater/Plater.lua:3991>\n",
["nameplateMotion"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateMinScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateOtherTopInset"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateOtherAtBase"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"=(tail call)\"]: ?\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:7: in function <...ace/AddOns/AdvancedInterfaceOptions/basicOptions.lua:5>\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:172: in function `SetCVar'\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:199: in function `SetValue'\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:1005: in function <...ace/AddOns/AdvancedInterfaceOptions/basicOptions.lua:1002>\n",
["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["SoftTargetIconGameObject"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["ShowNamePlateLoseAggroFlash"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
["NamePlateHorizontalScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1486: in function <Interface/AddOns/Plater/Plater.lua:1467>\n",
},
["url"] = "https://wago.io/RPHjubTGI/1",
["cast_statusbar_spark_alpha"] = 0.8299999833107,
["aura2_y_offset"] = 5,
["health_selection_overlay"] = "Wglass",
["expansion_triggerwipe"] = {
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.19607843137255,
0.050980392156863,
0.062745098039216,
1,
},
["color_override_colors"] = {
[3] = {
1,
0.0941176563501358,
0.1372549086809158,
},
},
["extra_icon_cooldown_reverse"] = false,
["health_animation_time_dilatation"] = 2.6199998855591,
["npc_cache"] = {
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
"enUS",
},
[155634] = {
"Bound Storm",
"The Eternal Palace",
"enUS",
},
[156146] = {
"Voidbound Shieldbearer",
"Horrific Vision of Orgrimmar",
"enUS",
},
[127485] = {
"Bilge Rat Looter",
"Tol Dagor",
"enUS",
},
[24777] = {
"Sunblade Sentinel",
"Magisters' Terrace",
"enUS",
},
[10375] = {
"Spire Spiderling",
"Lower Blackrock Spire",
"enUS",
},
[7268] = {
"Sandfury Guardian",
"Zul'Farrak",
},
[96005] = {
"Burning Crusher",
"Broken Shore",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[34190] = {
"Hardened Iron Golem",
"Ulduar",
"enUS",
},
[97285] = {
"Wind Rush Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
"enUS",
},
[159219] = {
"Umbral Seer",
"Ny'alotha, the Waking City",
"enUS",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
"enUS",
},
[29768] = {
"Unyielding Constrictor",
"Gundrak",
"enUS",
},
[127486] = {
"Ashvane Officer",
"Tol Dagor",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
"enUS",
},
[56713] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[7796] = {
"Nekrum Gutchewer",
"Zul'Farrak",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[34191] = {
"Trash",
"Ulduar",
"enUS",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[159224] = {
"Gryth'ax the Executioner",
"Ny'alotha, the Waking City",
"enUS",
},
[28169] = {
"Risen Zombie",
"The Culling of Stratholme",
},
[101639] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[160249] = {
"Spike Tentacle",
"Ny'alotha, the Waking City",
"enUS",
},
[16524] = {
"Shade of Aran",
"Karazhan",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[154619] = {
"Watcher Aum-ka",
"Halls of Origination",
"enUS",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
},
[34192] = {
"Boomer XP-500",
"Ulduar",
"enUS",
},
[54923] = {
"Infinite Warden",
"End Time",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
},
[127490] = {
"Knight Captain Valyri",
"Tol Dagor",
"enUS",
},
[4421] = {
"Charlga Razorflank",
"Razorfen Kraul",
},
[8904] = {
"Shadowforge Senator",
"Blackrock Depths",
"enUS",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[9416] = {
"Scarshield Worg",
"Lower Blackrock Spire",
"enUS",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[34193] = {
"Clockwork Sapper",
"Ulduar",
"enUS",
},
[182777] = {
"Rygelon",
"Sepulcher of the First Ones",
},
[9736] = {
"Quartermaster Zigris",
"Lower Blackrock Spire",
"enUS",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
},
[79888] = {
"Iron Infantry",
"Grimrail Depot",
"enUS",
},
[156161] = {
"Inquisitor Gnshal",
"Horrific Vision of Orgrimmar",
"enUS",
},
[36497] = {
"Bronjahm",
"The Forge of Souls",
"enUS",
},
[181244] = {
"Domination Core",
"Sepulcher of the First Ones",
},
[10376] = {
"Crystal Fang",
"Lower Blackrock Spire",
"enUS",
},
[162305] = {
"Aqir Heartpiercer",
"Ny'alotha, the Waking City",
"enUS",
},
[163841] = {
"Amalgamation of Flesh",
"Ny'alotha, the Waking City",
"enUS",
},
[184828] = {
"Winged Soul Eater",
"Path of the Primus",
},
[76306] = {
"Grand Defense Construct",
"Skyreach",
"enUS",
},
[162306] = {
"Aqir Drone",
"Ny'alotha, the Waking City",
"enUS",
},
[17357] = {
"Creeping Oozeling",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[208887] = {
"Nibix",
"Waycrest Manor",
"enUS",
},
[205304] = {
"Freya",
"10.1.5 Time Rifts - Titan (Ulderoth)",
"enUS",
},
[29834] = {
"Drakkari Frenzy",
"Gundrak",
"enUS",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[157700] = {
"Agustus Moulaine",
"Horrific Vision of Stormwind",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
},
[205305] = {
"The Lich King",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[76307] = {
"Grand Defense Construct",
"Skyreach",
"enUS",
},
[56717] = {
"Hoptallus",
"Stormstout Brewery",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
},
[205306] = {
"Illidan Stormrage",
"10.1.5 Time Rifts - Demon (Azewrath)",
"enUS",
},
[26763] = {
"Anomalus",
"The Nexus",
},
[96015] = {
"Inquisitor Tormentorum",
"Vault of the Wardens",
"enUS",
},
[205307] = {
"Fury of N'zoth",
"10.1.5 Time Rifts - Black Empire (Azq'roth)",
"enUS",
},
[15687] = {
"Moroes",
"Karazhan",
},
[161286] = {
"Dark Ritualist",
"Ny'alotha, the Waking City",
"enUS",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[205308] = {
"Varian Wrynn",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198142] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
},
[146443] = {
"Seer Drannix",
"The Sunwell",
"enUS",
},
[208380] = {
"Val'kyr Shadowguard",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[155657] = {
"Huffer",
"Horrific Vision of Orgrimmar",
"enUS",
},
[205309] = {
"Overlord Mechagon",
"10.1.5 Time Rifts - Robot (A.Z.E.R.O.T.H.)",
"enUS",
},
[185346] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[36499] = {
"Soulguard Reaper",
"The Forge of Souls",
"enUS",
},
[61453] = {
"Mu'Shiba",
"Mogu'shan Palace",
},
[185347] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[76310] = {
"Grand Defense Construct",
"Skyreach",
"enUS",
},
[34196] = {
"Rune Etched Sentry",
"Ulduar",
"enUS",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[8905] = {
"Warbringer Construct",
"Blackrock Depths",
"enUS",
},
[30283] = {
"Plague Walker",
"Ahn'kahet: The Old Kingdom",
},
[9033] = {
"General Angerforge",
"Blackrock Depths",
"enUS",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
"enUS",
},
[9097] = {
"Scarshield Legionnaire",
"Lower Blackrock Spire",
"enUS",
},
[134163] = {
"Mage-Commander Lyra",
"Stormwind Escape from Stockades",
"enUS",
},
[9257] = {
"Scarshield Warlock",
"Lower Blackrock Spire",
"enUS",
},
[161293] = {
"Neglected Guild Bank",
"Horrific Vision of Stormwind",
"enUS",
},
[18894] = {
"Felguard Brute",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[34069] = {
"Molten Colossus",
"Ulduar",
"enUS",
},
[34197] = {
"Chamber Overseer",
"Ulduar",
"enUS",
},
[77080] = {
"Sargerei Arbiter",
"Auchindoun",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
},
[192519] = {
"Monstrous Mud",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[212483] = {
"Gnarled Roots",
"The Everbloom",
"enUS",
},
[883] = {
"Deer",
"The Culling of Stratholme",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
"enUS",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[7269] = {
"Scarab",
"Zul'Farrak",
},
[139799] = {
"Ironhull Apprentice",
"Shrine of the Storm",
"enUS",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[34198] = {
"Iron Mender",
"Ulduar",
"enUS",
},
[204808] = {
"Gill'dan",
"10.1.5 Time Rifts - Murloc (Azmerloth)",
"enUS",
},
[139800] = {
"Galecaller Apprentice",
"Shrine of the Storm",
"enUS",
},
[86552] = {
"Gorged Burster",
"The Everbloom",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[17871] = {
"Underbog Shambler",
"Coilfang: The Underbog",
"enUS",
},
[26125] = {
"Pebblestalker",
"Sunken Temple",
},
[135706] = {
"Bilge Rat Looter",
"Tol Dagor",
"enUS",
},
[201738] = {
"Renewed Hatchling",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[7605] = {
"Raven",
"Zul'Farrak",
},
[161812] = {
"Faceless Ruiner",
"Chamber of Heart - Scenario",
"enUS",
},
[36502] = {
"Devourer of Souls",
"The Forge of Souls",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
},
[201739] = {
"Obsidian Bulwark",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[86809] = {
"Grom'kar Incinerator",
"Iron Docks",
},
[161813] = {
"K'thir Assassin",
"Chamber of Heart - Scenario",
"enUS",
},
[91672] = {
"Jailer Zerus",
"Broken Shore",
"enUS",
},
[7797] = {
"Ruuzlu",
"Zul'Farrak",
},
[201740] = {
"Obsidian Soldier",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[34199] = {
"Lightning Charged Iron Dwarf",
"Ulduar",
"enUS",
},
[23374] = {
"Ashtongue Stalker",
"Black Temple",
"enUS",
},
[134173] = {
"Animated Droplet",
"Shrine of the Storm",
"enUS",
},
[159767] = {
"Sanguimar",
"Ny'alotha, the Waking City",
"enUS",
},
[152089] = {
"Thrall",
"Horrific Vision of Orgrimmar",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[161815] = {
"K'thir Voidcaller",
"Chamber of Heart - Scenario",
"enUS",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
},
[146459] = {
"Necrotic Sentinel",
"The Sunwell",
"enUS",
},
[24078] = {
"Dragonflayer Metalworker",
"Utgarde Keep",
},
[20047] = {
"Crimson Hand Battle Mage",
"Tempest Keep",
"enUS",
},
[201742] = {
"Obsidian Magus",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[133663] = {
"Fanatical Headhunter",
"The Underrot",
"enUS",
},
[185363] = {
"Manifestor Krugan",
"Sepulcher of the First Ones",
},
[136735] = {
"Ashvane Marine",
"Tol Dagor",
"enUS",
},
[33432] = {
"Leviathan Mk II",
"Ulduar",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[104215] = {
"Patrol Captain Gerdo",
"Court of Stars",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58898] = {
"Vigilant Watchman",
"Scarlet Halls",
"enUS",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
},
[162331] = {
"Corrupted Neuron",
"Ny'alotha, the Waking City",
"enUS",
},
[8906] = {
"Ragereaver Golem",
"Blackrock Depths",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
},
[167962] = {
"Defunct Dental Drill",
"De Other Side",
},
[30285] = {
"Eye of Taldaram",
"Ahn'kahet: The Old Kingdom",
},
[9034] = {
"Hate'rel",
"Blackrock Depths",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[9258] = {
"Scarshield Raider",
"Lower Blackrock Spire",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
"enUS",
},
[196117] = {
"Crystal Construct",
"The Azure Vault",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[205843] = {
"Cinderstep Melter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[155680] = {
"Deephive Summoner",
"Mogu'shan Scenario",
"enUS",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[104218] = {
"Advisor Melandrus",
"Court of Stars",
},
[24079] = {
"Dragonflayer Forge Master",
"Utgarde Keep",
},
[20048] = {
"Crimson Hand Centurion",
"Tempest Keep",
"enUS",
},
[24207] = {
"Army of the Dead",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202262] = {
"Blazing Dreadsquall",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[155170] = {
"Risen Villager",
"Stratholme Pet Dungeon",
"enUS",
},
[131112] = {
"Cutwater Striker",
"Tol Dagor",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
},
[28878] = {
"Skeletal Minion",
"The Culling of Stratholme",
},
[99868] = {
"Fenryr",
"Halls of Valor",
},
[159266] = {
"Portal Master",
"Horrific Vision of Stormwind",
"enUS",
},
[5270] = {
"Atal'ai Corpse Eater",
"Sunken Temple",
},
[152612] = {
"Subjugator Klontzas",
"Torghast, Tower of the Damned",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[155684] = {
"Depthcaller Xith'el",
"Mogu'shan Scenario",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[74787] = {
"Slave Watcher Crushto",
"Bloodmaul Slag Mines",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
"enUS",
},
[155685] = {
"Deephive Soldier",
"Mogu'shan Scenario",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[30414] = {
"Forgotten One",
"Ahn'kahet: The Old Kingdom",
},
[97566] = {
"Wrathguard Cleaver",
"Broken Shore",
"enUS",
},
[130582] = {
"Despondent Scallywag",
"Tol Dagor",
"enUS",
},
[155174] = {
"Unholy Skeleton",
"Stratholme Pet Dungeon",
"enUS",
},
[155686] = {
"Azsh'ari Venomwatcher",
"The Eternal Palace",
"enUS",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
},
[189470] = {
"Lava Flare",
"Neltharus",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[154663] = {
"Gnome-Eating Droplet",
"Operation: Mechagon",
"enUS",
},
[155175] = {
"Gargoyle",
"Stratholme Pet Dungeon",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
"enUS",
},
[97567] = {
"Ravenous Felstalker",
"Broken Shore",
"enUS",
},
[163366] = {
"Magus of the Dead",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[102430] = {
"Tarspitter Slug",
"Neltharion's Lair",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[190496] = {
"Terros",
"Vault of the Incarnates",
},
[91681] = {
"Ravenous Felstalker",
"Broken Shore",
"enUS",
},
[175652] = {
"Lord of Woe",
"Torghast, Tower of the Damned",
"enUS",
},
[112668] = {
"Infernal Imp",
"Court of Stars",
},
[20049] = {
"Crimson Hand Blood Knight",
"Tempest Keep",
"enUS",
},
[153130] = {
"Greater Void Elemental",
"Horrific Vision of Orgrimmar",
"enUS",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[77605] = {
"Whirling Dervish",
"Skyreach",
"enUS",
},
[16530] = {
"Mana Warp",
"Karazhan",
"enUS",
},
[74534] = {
"Crystalline Behemoth",
"Razorfen Kraul",
},
[74790] = {
"Gug'rokk",
"Bloodmaul Slag Mines",
"enUS",
},
[6230] = {
"Peacekeeper Security Suit",
"Gnomeregan",
},
[134192] = {
"Gilnean Battlemage",
"Stormwind Escape from Stockades",
"enUS",
},
[75814] = {
"Bloodmaul Earthbreaker",
"Bloodmaul Slag Mines",
"enUS",
},
[180773] = {
"Vigilant Guardian",
"Sepulcher of the First Ones",
},
[134193] = {
"Stormwind Battlemage",
"Stormwind Escape from Stockades",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
},
[189988] = {
"Thing From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[8907] = {
"Wrath Hammer Construct",
"Blackrock Depths",
"enUS",
},
[17938] = {
"Coilfang Observer",
"Coilfang: The Slave Pens",
},
[30287] = {
"Plundering Geist",
"Ahn'kahet: The Old Kingdom",
},
[9035] = {
"Anger'rel",
"Blackrock Depths",
"enUS",
},
[80678] = {
"Black Iron Flame Reaver",
"Upper Blackrock Spire",
"enUS",
},
[182311] = {
"Pre-Fabricated Sentry",
"Sepulcher of the First Ones",
},
[134195] = {
"Stormwind Guard",
"Stormwind Escape from Stockades",
"enUS",
},
[9259] = {
"Firebrand Grunt",
"Lower Blackrock Spire",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
},
[9547] = {
"Guzzling Patron",
"Blackrock Depths",
"enUS",
},
[157231] = {
"Shad'har the Insatiable",
"Ny'alotha, the Waking City",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[106785] = {
"Bitterbrine Slave",
"Eye of Azshara",
"enUS",
},
[202789] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
},
[79912] = {
"Commander Tharbek",
"Upper Blackrock Spire",
"enUS",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[76585] = {
"Ragewing the Untamed",
"Upper Blackrock Spire",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
"enUS",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
},
[106786] = {
"Bitterbrine Slave",
"Eye of Azshara",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[24849] = {
"Proto-Drake Rider",
"Utgarde Keep",
},
[134200] = {
"Genn Greymane",
"Stormwind Escape from Stockades",
"enUS",
},
[7286] = {
"Zul'Farrak Zombie",
"Zul'Farrak",
},
[29264] = {
"Spirit Wolf",
"Shadowmoon Burial Grounds",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[80937] = {
"Grom'kar Gunner",
"Grimrail Depot",
"enUS",
},
[134201] = {
"Lady Jaina Proudmoore",
"Stormwind Escape from Stockades",
"enUS",
},
[17427] = {
"Shattered Hand Archer",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[17491] = {
"Laughing Skull Rogue",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
"enUS",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
"enUS",
},
[99365] = {
"Taintheart Stalker",
"Darkheart Thicket",
"enUS",
},
[134202] = {
"Anduin Wrynn",
"Stormwind Escape from Stockades",
"enUS",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
"enUS",
},
[7606] = {
"Oro Eyegouge",
"Zul'Farrak",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
"enUS",
},
[157238] = {
"Prophet Skitra",
"Ny'alotha, the Waking City",
"enUS",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
},
[158774] = {
"Broken Citizen",
"Horrific Vision of Stormwind",
"enUS",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[75820] = {
"Vengeful Magma Elemental",
"Bloodmaul Slag Mines",
"enUS",
},
[184880] = {
"Dominated Disrupter",
"Sepulcher of the First Ones",
},
[161334] = {
"Gnashing Terror",
"Ny'alotha, the Waking City",
"enUS",
},
[101414] = {
"Saltscale Skulker",
"Eye of Azshara",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
},
[23954] = {
"Ingvar the Plunderer",
"Utgarde Keep",
},
[24082] = {
"Proto-Drake Handler",
"Utgarde Keep",
},
[184882] = {
"Mawsworn Warden",
"Path of the Primus",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[80940] = {
"Iron Infantry",
"Grimrail Depot",
"enUS",
},
[61337] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
},
[155706] = {
"Yox'ith",
"Mogu'shan Scenario",
"enUS",
},
[16468] = {
"Spectral Patron",
"Karazhan",
"enUS",
},
[24722] = {
"Fel Crystal",
"Magisters' Terrace",
"enUS",
},
[184884] = {
"Mawsworn Warden",
"Path of the Primus",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[155708] = {
"Tentacle",
"Mogu'shan Scenario",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
},
[75055] = {
"Razorfen Torchbearer",
"Razorfen Kraul",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[204337] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[17940] = {
"Coilfang Technician",
"Coilfang: The Slave Pens",
},
[9036] = {
"Vile'rel",
"Blackrock Depths",
"enUS",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
"enUS",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[9196] = {
"Highlord Omokk",
"Lower Blackrock Spire",
"enUS",
},
[208945] = {
"Dwarven Bomber",
"Dawn of the Infinite",
"enUS",
},
[9260] = {
"Firebrand Legionnaire",
"Lower Blackrock Spire",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
},
[81967] = {
"Frostwall Nibbler",
"FW Horde Garrison Level 3",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[19668] = {
"Shadowfiend",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[205365] = {
"Time-Lost Tidehunter",
"Dawn of the Infinite",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[32593] = {
"Skittering Swarmer",
"Azjol-Nerub",
"enUS",
},
[10220] = {
"Halycon",
"Lower Blackrock Spire",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[205366] = {
"Time-Lost Wakethrasher",
"Dawn of the Infinite",
"enUS",
},
[24723] = {
"Selin Fireheart",
"Magisters' Terrace",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
},
[5271] = {
"Atal'ai Deathwalker",
"Sunken Temple",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[21268] = {
"Netherstrand Longbow",
"Tempest Keep",
"enUS",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[17941] = {
"Mennu the Betrayer",
"Coilfang: The Slave Pens",
},
[76595] = {
"Sargerei Soulpriest",
"Auchindoun",
"enUS",
},
[44704] = {
"Minion of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[208441] = {
"Water Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[152135] = {
"Void-Twisted Spellweaver",
"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario",
"enUS",
},
[201787] = {
"Inchoate Beastling",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[157254] = {
"Tek'ris",
"Ny'alotha, the Waking City",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
},
[5719] = {
"Morphaz",
"Sunken Temple",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
},
[168004] = {
"Empowered Imperial Consular",
"Torghast, Tower of the Damned",
"enUS",
},
[201788] = {
"Dazhak",
"Dawn of the Infinite",
"enUS",
},
[157255] = {
"Aqir Drone",
"Ny'alotha, the Waking City",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
},
[158279] = {
"Haywire Clockwork Rocket Bot",
"Horrific Vision of Stormwind",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[27731] = {
"Acolyte",
"The Culling of Stratholme",
},
[74549] = {
"Razorfen Stonechanter",
"Razorfen Kraul",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[23956] = {
"Dragonflayer Strategist",
"Utgarde Keep",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
},
[16171] = {
"Coldmist Widow",
"Karazhan",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[76597] = {
"Frost Wolf Alpha",
"FW Horde Garrison Level 1",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[101679] = {
"Dreadsoul Poisoner",
"Darkheart Thicket",
"enUS",
},
[159305] = {
"Maddened Conscript",
"Ny'alotha, the Waking City",
"enUS",
},
[208957] = {
"Mazzer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[16470] = {
"Ghostly Philanthropist",
"Karazhan",
"enUS",
},
[74550] = {
"Razorfen Kraulshaper",
"Razorfen Kraul",
},
[33572] = {
"Steelforged Defender",
"Ulduar",
"enUS",
},
[83764] = {
"Grom'kar Deadeye",
"Iron Docks",
},
[155723] = {
"Swarmguard Kzaz",
"Mogu'shan Scenario",
"enUS",
},
[201792] = {
"Ahnzon",
"Dawn of the Infinite",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
},
[74551] = {
"Razorfen Beast Stalker",
"Razorfen Kraul",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[8877] = {
"Sandfury Zealot",
"Zul'Farrak",
},
[8909] = {
"Fireguard",
"Blackrock Depths",
"enUS",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[17942] = {
"Quagmirran",
"Coilfang: The Slave Pens",
},
[76087] = {
"Defense Construct",
"Skyreach",
"enUS",
},
[9037] = {
"Gloom'rel",
"Blackrock Depths",
"enUS",
},
[76599] = {
"Black Iron Groundshaker",
"Upper Blackrock Spire",
"enUS",
},
[56863] = {
"Sleepy Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[36516] = {
"Soulguard Animator",
"The Forge of Souls",
"enUS",
},
[9197] = {
"Spirestone Battle Mage",
"Lower Blackrock Spire",
"enUS",
},
[127019] = {
"Training Dummy",
"Freehold",
"enUS",
},
[9261] = {
"Firebrand Darkweaver",
"Lower Blackrock Spire",
"enUS",
},
[74552] = {
"Razorfen Huntmaster",
"Razorfen Kraul",
},
[158286] = {
"Reprogrammed Warbot",
"Horrific Vision of Stormwind",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[155215] = {
"Faeleaf Lasher",
"Torghast, Tower of the Damned",
"enUS",
},
[76088] = {
"Razorfen Huntmaster",
"Razorfen Kraul",
},
[54688] = {
"Time-Twisted Nightsaber",
"End Time",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[27732] = {
"Master Necromancer",
"The Culling of Stratholme",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
},
[149586] = {
"Beast",
"Waycrest Manor",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[159312] = {
"Living Blood",
"Ny'alotha, the Waking City",
"enUS",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
},
[76089] = {
"Razorfen Beast Stalker",
"Razorfen Kraul",
},
[7079] = {
"Viscous Fallout",
"Gnomeregan",
},
[65310] = {
"Turnip Punching Bag",
"The Underrot",
"enUS",
},
[10221] = {
"Bloodaxe Worg Pup",
"Lower Blackrock Spire",
"enUS",
},
[16407] = {
"Spectral Servant",
"Karazhan",
},
[16471] = {
"Skeletal Usher",
"Karazhan",
"enUS",
},
[74554] = {
"Razorfen Scarblade",
"Razorfen Kraul",
},
[3636] = {
"Deviate Ravager",
"Wailing Caverns",
"enUS",
},
[155219] = {
"Gormling Spitter",
"Torghast, Tower of the Damned",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202824] = {
"Erratic Remnant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[152661] = {
"Mawsworn Ward",
"Torghast, Tower of the Damned",
"enUS",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
"enUS",
},
[203337] = {
"Faceless Subjugator",
"Tyr's Fall Scenario",
"enUS",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
"enUS",
},
[151638] = {
"Crazed Earth Rager",
"Broken Isles",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[56865] = {
"Aqua Dancer",
"Stormstout Brewery",
"enUS",
},
[203338] = {
"Corruptor Tentacle",
"Tyr's Fall Scenario",
"enUS",
},
[61216] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
"enUS",
},
[151639] = {
"Crazed Gyreworm",
"Neltharion's Lair - HoA Scenario",
"enUS",
},
[160341] = {
"Sewer Beastling",
"Horrific Vision of Stormwind",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
},
[23318] = {
"Ashtongue Rogue",
"Black Temple",
"enUS",
},
[85562] = {
"Skittering Doomstinger",
"Gorgrond Finale",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[159320] = {
"Amahtet",
"Ny'alotha, the Waking City",
"enUS",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
"enUS",
},
[159321] = {
"Khateph",
"Ny'alotha, the Waking City",
"enUS",
},
[16408] = {
"Phantom Valet",
"Karazhan",
},
[16472] = {
"Phantom Stagehand",
"Karazhan",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
},
[207438] = {
"Headless Horseman",
"Scarlet Monastery",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[84028] = {
"Siegemaster Rokra",
"Iron Docks",
},
[54435] = {
"Mattdémón",
"End Time",
"enUS",
},
[97081] = {
"King Bjorn",
"Halls of Valor",
},
[21271] = {
"Infinity Blades",
"Tempest Keep",
"enUS",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[152669] = {
"Void Globule",
"Horrific Vision of Orgrimmar",
"enUS",
},
[17624] = {
"Laughing Skull Warden",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[17816] = {
"Bogstrok",
"Hellfire Citadel: Ramparts",
},
[75839] = {
"Vigilant Kaathar",
"Auchindoun",
"enUS",
},
[9038] = {
"Seeth'rel",
"Blackrock Depths",
"enUS",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[56867] = {
"Fiery Trickster",
"Stormstout Brewery",
"enUS",
},
[85565] = {
"Desert Wastetalon",
"Gorgrond Finale",
"enUS",
},
[9198] = {
"Spirestone Mystic",
"Lower Blackrock Spire",
"enUS",
},
[98362] = {
"Troubled Soul",
"Black Rook Hold",
"enUS",
},
[9262] = {
"Firebrand Invoker",
"Lower Blackrock Spire",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22871] = {
"Teron Gorefiend",
"Black Temple",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
},
[97083] = {
"King Ranulf",
"Halls of Valor",
},
[77120] = {
"Warlord Zaela",
"Upper Blackrock Spire",
"enUS",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[181850] = {
"Pre-Fabricated Sentry",
"Sepulcher of the First Ones",
},
[194647] = {
"Thunder Caller",
"Vault of the Incarnates",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[76097] = {
"Solar Familiar",
"Skyreach",
"enUS",
},
[5048] = {
"Deviate Adder",
"Wailing Caverns",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
},
[196696] = {
"Geode Chunk",
"The Azure Vault",
},
[16473] = {
"Spectral Performer",
"Karazhan",
"enUS",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[210518] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[77890] = {
"Durag the Dominator",
"Auchindoun",
"enUS",
},
[136297] = {
"Forgotten Denizen",
"Shrine of the Storm",
"enUS",
},
[99645] = {
"Shadowmoon Technician",
"Vault of the Wardens",
"enUS",
},
[17817] = {
"Greater Bogstrok",
"Hellfire Citadel: Ramparts",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[101437] = {
"Burning Geode",
"UNKNOWN",
"enUS",
},
[36522] = {
"Soul Horror",
"The Forge of Souls",
"enUS",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[45096] = {
"Tamed Tol'vir Prowler",
"Lost City of the Tol'vir",
"enUS",
},
[181856] = {
"Point Defense Drone",
"Sepulcher of the First Ones",
},
[5720] = {
"Weaver",
"Sunken Temple",
},
[154727] = {
"Sun Prophet Tenhamen",
"Halls of Origination",
"enUS",
},
[75588] = {
"Grotto Toad",
"Razorfen Kraul",
},
[76100] = {
"Black Iron Alchemist",
"Upper Blackrock Spire",
"enUS",
},
[97087] = {
"Valarjar Champion",
"Halls of Valor",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
"enUS",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
"enUS",
},
[160871] = {
"Possessed Package",
"Horrific Vision of Orgrimmar",
"enUS",
},
[23960] = {
"Dragonflayer Runecaster",
"Utgarde Keep",
},
[151658] = {
"Strider Tonk",
"Operation: Mechagon",
"enUS",
},
[76101] = {
"Black Iron Engineer",
"Upper Blackrock Spire",
"enUS",
},
[181859] = {
"Volatile Materium",
"Sepulcher of the First Ones",
},
[44841] = {
"Blight Beast",
"Throne of the Tides",
},
[16410] = {
"Spectral Retainer",
"Karazhan",
},
[24664] = {
"Kael'thas Sunstrider",
"Magisters' Terrace",
"enUS",
},
[6232] = {
"Arcane Nullifier X-21",
"Gnomeregan",
},
[183396] = {
"Eternal Forger",
"Sepulcher of the First Ones",
},
[75590] = {
"Enormous Bullfrog",
"Razorfen Kraul",
},
[76102] = {
"Air Familiar",
"Skyreach",
"enUS",
},
[29335] = {
"Anub'ar Webspinner",
"Azjol-Nerub",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
},
[158315] = {
"Eye of Chaos",
"Horrific Vision of Stormwind",
"enUS",
},
[17306] = {
"Watchkeeper Gargolmar",
"Hellfire Citadel: Ramparts",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
},
[99649] = {
"Dreadlord Mendacius",
"Vault of the Wardens",
"enUS",
},
[183398] = {
"Ancient Sentinel",
"Sepulcher of the First Ones",
},
[17882] = {
"The Black Stalker",
"Coilfang: The Underbog",
"enUS",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
},
[9039] = {
"Doom'rel",
"Blackrock Depths",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[183399] = {
"Suppression Conduit",
"Torghast, Tower of the Damned",
"enUS",
},
[9199] = {
"Spirestone Enforcer",
"Lower Blackrock Spire",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[9263] = {
"Firebrand Dreadweaver",
"Lower Blackrock Spire",
"enUS",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
},
[9583] = {
"Bloodaxe Veteran",
"Lower Blackrock Spire",
"enUS",
},
[198757] = {
"Void Lasher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[54952] = {
"Brittle Ghoul",
"End Time",
"enUS",
},
[59175] = {
"Master Archer",
"Scarlet Halls",
"enUS",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[27736] = {
"Patchwork Construct",
"The Culling of Stratholme",
},
[107073] = {
"Duskwatch Reinforcement",
"Court of Stars",
},
[99651] = {
"Faceless Voidcaster",
"Vault of the Wardens",
"enUS",
},
[23961] = {
"Dragonflayer Ironhelm",
"Utgarde Keep",
},
[76105] = {
"Crystalfire Totem",
"Razorfen Kraul",
},
[157809] = {
"Mawsworn Darkcaster",
"Torghast, Tower of the Damned",
"enUS",
},
[44715] = {
"Vicious Mindlasher",
"Throne of the Tides",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
},
[16539] = {
"Homunculus",
"Karazhan",
"enUS",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
"enUS",
},
[162417] = {
"Anubisath Sentinel",
"Ny'alotha, the Waking City",
"enUS",
},
[183404] = {
"Eternal Assembler",
"Sepulcher of the First Ones",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[84552] = {
"Toxic Spiderling",
"The Everbloom",
},
[157811] = {
"Lilliam Sparkspindle",
"Horrific Vision of Stormwind",
"enUS",
},
[77130] = {
"Sargerei Ritualist",
"Auchindoun",
"enUS",
},
[17307] = {
"Vazruden the Herald",
"Hellfire Citadel: Ramparts",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
},
[157300] = {
"Tunk",
"Darkmaul Citadel",
},
[157812] = {
"Billibub Cogspinner",
"Horrific Vision of Stormwind",
"enUS",
},
[183406] = {
"Colossal Realmcrafter",
"Sepulcher of the First Ones",
},
[196203] = {
"Algeth'ar Nurse",
"Algeth'ar Academy",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[76107] = {
"Solarshard Totem",
"Razorfen Kraul",
},
[129598] = {
"Freehold Pack Mule",
"Freehold",
"enUS",
},
[7608] = {
"Murta Grimgut",
"Zul'Farrak",
},
[157813] = {
"Sprite Jumpsprocket",
"Horrific Vision of Stormwind",
"enUS",
},
[77131] = {
"Sargerei Spirit-Tender",
"Auchindoun",
"enUS",
},
[18331] = {
"Ethereal Darkcaster",
"Auchindoun: Mana-Tombs",
"enUS",
},
[183919] = {
"Dominated Sentry",
"Torghast, Tower of the Damned",
"enUS",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[18587] = {
"Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[7800] = {
"Mekgineer Thermaplugg",
"Gnomeregan",
},
[46252] = {
"Riverpaw Shaman",
"Stormwind Stockade",
"enUS",
},
[84554] = {
"Venom-Crazed Pale One",
"The Everbloom",
},
[77132] = {
"Sargerei Zealot",
"Auchindoun",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[27737] = {
"Risen Zombie",
"The Culling of Stratholme",
},
[158328] = {
"Il'gynoth",
"Ny'alotha, the Waking City",
"enUS",
},
[28249] = {
"Devouring Ghoul",
"The Culling of Stratholme",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
"enUS",
},
[8120] = {
"Sul'lithuz Abomination",
"Zul'Farrak",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[77133] = {
"Sargerei Hoplite",
"Auchindoun",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
},
[16412] = {
"Ghostly Baker",
"Karazhan",
},
[28825] = {
"Cyclone",
"Halls of Lightning",
"enUS",
},
[8336] = {
"Hakkari Sapper",
"Sunken Temple",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
},
[29209] = {
"Carrion Beetle",
"Azjol-Nerub",
"enUS",
},
[189555] = {
"Arcane Attendant",
"The Azure Vault",
},
[54699] = {
"Time-Twisted Nightsaber",
"End Time",
"enUS",
},
[4297] = {
"Scarlet Conjuror",
"Scarlet Monastery of Old",
"enUS",
},
[77134] = {
"Sargerei Cleric",
"Auchindoun",
"enUS",
},
[17308] = {
"Omor the Unscarred",
"Hellfire Citadel: Ramparts",
},
[137345] = {
"Officer Fairbanks",
"Stormwind Escape from Stockades",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
"enUS",
},
[146559] = {
"Lumbering Monstrosity",
"The Sunwell",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
"enUS",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
"enUS",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
"enUS",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
"enUS",
},
[9200] = {
"Spirestone Reaver",
"Lower Blackrock Spire",
"enUS",
},
[9264] = {
"Firebrand Pyromancer",
"Lower Blackrock Spire",
"enUS",
},
[152703] = {
"Walkie Shockie X1",
"Operation: Mechagon",
"enUS",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[22939] = {
"Temple Acolyte",
"Black Temple",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[152704] = {
"Crawling Corruption",
"Horrific Vision of Orgrimmar",
"enUS",
},
[54700] = {
"Time-Twisted Nightsaber",
"End Time",
"enUS",
},
[59051] = {
"Strife",
"Temple of the Jade Serpent",
},
[201333] = {
"Awakened Avalanche",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
"enUS",
},
[75857] = {
"Unstable Magma Elemental",
"Bloodmaul Slag Mines",
"enUS",
},
[184954] = {
"Ancient Shaper",
"Sepulcher of the First Ones",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
"enUS",
},
[146564] = {
"Blight Hound",
"The Sunwell",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[28826] = {
"Stormfury Revenant",
"Halls of Lightning",
"enUS",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
},
[5273] = {
"Atal'ai High Priest",
"Sunken Temple",
},
[152708] = {
"Mawsworn Seeker",
"Torghast, Tower of the Damned",
"enUS",
},
[54701] = {
"Time-Twisted Huntress",
"End Time",
"enUS",
},
[17309] = {
"Hellfire Watcher",
"Hellfire Citadel: Ramparts",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[136330] = {
"Soul Thorns",
"Waycrest Manor",
},
[56877] = {
"Raigonn",
"Gate of the Setting Sun",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[44976] = {
"Neferset Plaguebringer",
"Lost City of the Tol'vir",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[201851] = {
"Mordoth",
"Tyr's Fall Scenario",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[5721] = {
"Dreamscythe",
"Sunken Temple",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
"enUS",
},
[155271] = {
"Abyssal Spearhunter",
"The Eternal Palace",
"enUS",
},
[76116] = {
"Diving Chakram Spinner",
"Skyreach",
"enUS",
},
[23196] = {
"Bonechewer Behemoth",
"Black Temple",
"enUS",
},
[158343] = {
"Organ of Corruption",
"Ny'alotha, the Waking City",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[184961] = {
"Gnarled Skitter",
"Sepulcher of the First Ones",
},
[78932] = {
"Driving Gale-Caller",
"Skyreach",
"enUS",
},
[150154] = {
"Saurolisk Bonenipper",
"Operation: Mechagon",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[184962] = {
"Gnarled Scavenger",
"Sepulcher of the First Ones",
},
[100943] = {
"Earthen Wall Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[161416] = {
"Aqir Shadowcrafter",
"Ny'alotha, the Waking City",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
"enUS",
},
[44977] = {
"Neferset Torturer",
"Lost City of the Tol'vir",
"enUS",
},
[98384] = {
"Razormouth",
"Neltharion's Lair",
"enUS",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[83028] = {
"Grom'kar Deadeye",
"Iron Docks",
},
[6233] = {
"Mechanized Sentry",
"Gnomeregan",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[6329] = {
"Irradiated Pillager",
"Gnomeregan",
},
[126538] = {
"Void Fragment",
"The Sunwell",
"enUS",
},
[155276] = {
"Bursting Cragfish",
"The Eternal Palace",
"enUS",
},
[163978] = {
"Darkwhisper Cultist",
"Blackwing Descent Scenario",
"enUS",
},
[17694] = {
"Shadowmoon Darkcaster",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[8913] = {
"Twilight Emissary",
"Blackrock Depths",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[9041] = {
"Warder Stilgiss",
"Blackrock Depths",
"enUS",
},
[113998] = {
"Mightstone Breaker",
"Neltharion's Lair",
"enUS",
},
[81750] = {
"Bloodmaul Ogron",
"Bloodmaul Slag Mines",
"enUS",
},
[155790] = {
"Mawsworn Acolyte",
"Torghast, Tower of the Damned",
"enUS",
},
[41139] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
},
[156814] = {
"Gor'groth",
"Darkmaul Citadel",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
},
[13456] = {
"Noxxion's Spawn",
"Maraudon",
},
[75096] = {
"Crystalline Aberration",
"Razorfen Kraul",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[76376] = {
"Skyreach Arcanologist",
"Skyreach",
"enUS",
},
[23389] = {
"Fallen Ally",
"Black Temple",
"enUS",
},
[19486] = {
"Sunseeker Chemist",
"Tempest Keep: The Botanica",
"enUS",
},
[157328] = {
"Darkmaul Channeler",
"Darkmaul Citadel",
},
[75097] = {
"Crystalline Shard",
"Razorfen Kraul",
},
[23965] = {
"Frost Tomb",
"Utgarde Keep",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
},
[155793] = {
"Skeletal Remains",
"Torghast, Tower of the Damned",
"enUS",
},
[20062] = {
"Grand Astromancer Capernian",
"Tempest Keep",
"enUS",
},
[152722] = {
"Fallen Voidspeaker",
"Horrific Vision of Stormwind",
"enUS",
},
[183947] = {
"Empowered Guardian",
"Torghast, Tower of the Damned",
"enUS",
},
[16415] = {
"Skeletal Waiter",
"Karazhan",
},
[156818] = {
"Wrathion",
"Ny'alotha, the Waking City",
"enUS",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[7273] = {
"Gahz'rilla",
"Zul'Farrak",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
},
[3669] = {
"Lord Cobrahn",
"Wailing Caverns",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
"enUS",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[156820] = {
"Dod",
"Horrific Vision of Stormwind",
"enUS",
},
[17695] = {
"Shattered Hand Assassin",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[187021] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[60208] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[155797] = {
"Animated Guardian",
"Mogu'shan Scenario",
"enUS",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[156821] = {
"Darkmaul Shadowcaller",
"Darkmaul Citadel",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[44980] = {
"Neferset Theurgist",
"Lost City of the Tol'vir",
"enUS",
},
[136347] = {
"Tidesage Initiate",
"Shrine of the Storm",
"enUS",
},
[45620] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[7785] = {
"Ward of Zum'rah",
"Zul'Farrak",
},
[104277] = {
"Legion Hound",
"Court of Stars",
},
[46260] = {
"Searing Destroyer",
"Stormwind Stockade",
"enUS",
},
[7849] = {
"Mobile Alert System",
"Gnomeregan",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
"enUS",
},
[95832] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[20063] = {
"Master Engineer Telonicus",
"Tempest Keep",
"enUS",
},
[181395] = {
"Skolex",
"Sepulcher of the First Ones",
},
[157337] = {
"Spawn of Shad'har",
"Blackwing Descent Scenario",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
},
[36535] = {
"Corrupted Soul Fragment",
"The Forge of Souls",
"enUS",
},
[130896] = {
"Blackout Barrel",
"Freehold",
"enUS",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[153755] = {
"Naeno Megacrash",
"Operation: Mechagon",
"enUS",
},
[95833] = {
"Hyrja",
"Halls of Valor",
},
[29213] = {
"Anub'ar Darter",
"Azjol-Nerub",
"enUS",
},
[46261] = {
"Enraged Fire Elemental",
"Stormwind Stockade",
"enUS",
},
[58674] = {
"Angry Hound",
"Scarlet Halls",
"enUS",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[97369] = {
"Liquid Magma Totem",
"Sepulcher of the First Ones",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
"enUS",
},
[122963] = {
"Rezan",
"Atal'Dazar",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[157340] = {
"Skeletal Remains",
"Torghast, Tower of the Damned",
"enUS",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[17952] = {
"Darkwater Crocolisk",
"Opening of the Dark Portal",
"enUS",
},
[181399] = {
"Kin'tessa",
"Sepulcher of the First Ones",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[30621] = {
"Feto",
"Ahn'kahet: The Old Kingdom",
},
[44982] = {
"Neferset Darkcaster",
"Lost City of the Tol'vir",
"enUS",
},
[9266] = {
"Smolderthorn Witch Doctor",
"Lower Blackrock Spire",
"enUS",
},
[26782] = {
"Crystalline Keeper",
"The Nexus",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
"enUS",
},
[75360] = {
"Searing Ember",
"Bloodmaul Slag Mines",
"enUS",
},
[46262] = {
"Rumbling Earth",
"Stormwind Stockade",
"enUS",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
"enUS",
},
[153760] = {
"Enthralled Footman",
"Horrific Vision of Stormwind",
"enUS",
},
[195222] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
"enUS",
},
[27742] = {
"Infinite Adversary",
"The Culling of Stratholme",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
},
[56884] = {
"Corrupted Taran Zhu",
"Shado-Pan Monastery",
"enUS",
},
[16481] = {
"Ghastly Haunt",
"Karazhan",
"enUS",
},
[99676] = {
"Mogu'shan Secret-Keeper",
"Vault of the Wardens",
"enUS",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33722] = {
"Storm Tempered Keeper",
"Ulduar",
"enUS",
},
[29214] = {
"Anub'ar Assassin",
"Azjol-Nerub",
"enUS",
},
[46263] = {
"Slag Fury",
"Stormwind Stockade",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[34234] = {
"Runeforged Sentry",
"Ulduar",
"enUS",
},
[158371] = {
"Zardeth of the Black Claw",
"Horrific Vision of Stormwind",
"enUS",
},
[17377] = {
"Keli'dan the Breaker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
"enUS",
},
[29982] = {
"Drakkari Raider",
"Gundrak",
"enUS",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
},
[157349] = {
"Void Boar",
"Horrific Vision of Orgrimmar",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
},
[36666] = {
"Spectral Warden",
"The Forge of Souls",
"enUS",
},
[163492] = {
"Rabid Wolf",
"Redridge - 9xp Bastion",
},
[122968] = {
"Yazma",
"Atal'Dazar",
"enUS",
},
[89] = {
"Infernal",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[5722] = {
"Hazzas",
"Sunken Temple",
},
[134828] = {
"Aqualing",
"Shrine of the Storm",
"enUS",
},
[76132] = {
"Soaring Chakram Master",
"Skyreach",
"enUS",
},
[158375] = {
"Corruptor Tentacle",
"Ny'alotha, the Waking City",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[27743] = {
"Infinite Hunter",
"The Culling of Stratholme",
},
[95072] = {
"Greater Earth Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[158376] = {
"Psychus",
"Ny'alotha, the Waking City",
"enUS",
},
[19873] = {
"Lord Crispin Ference",
"Karazhan",
"enUS",
},
[96608] = {
"Ebonclaw Worg",
"Halls of Valor",
},
[48440] = {
"Mining Monkey",
"Deadmines",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[16482] = {
"Trapped Soul",
"Karazhan",
"enUS",
},
[78437] = {
"Gul'kosh",
"Auchindoun",
"enUS",
},
[157354] = {
"Vexiona",
"Ny'alotha, the Waking City",
"enUS",
},
[62005] = {
"Beast",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[75110] = {
"Razorfen Torchbearer",
"Razorfen Kraul",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
"enUS",
},
[96609] = {
"Gildedfur Stag",
"Halls of Valor",
},
[197793] = {
"Awakened Juggernaut",
"UNKNOWN",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
},
[157356] = {
"Extractor Thelsara",
"Blackwing Descent Scenario",
"enUS",
},
[150190] = {
"HK-8 Aerial Oppression Unit",
"Operation: Mechagon",
"enUS",
},
[79462] = {
"Blinding Solar Flare",
"Skyreach",
"enUS",
},
[168106] = {
"Empowered Mawsworn Guard",
"Torghast, Tower of the Damned",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[30623] = {
"Dögvèsz",
"Ahn'kahet: The Old Kingdom",
},
[159405] = {
"Aqir Scarab",
"Ny'alotha, the Waking City",
"enUS",
},
[168107] = {
"Empowered Mawsworn Interceptor",
"Torghast, Tower of the Damned",
"enUS",
},
[9267] = {
"Smolderthorn Axe Thrower",
"Lower Blackrock Spire",
"enUS",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[22881] = {
"Aqueous Surger",
"Black Temple",
"enUS",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[96611] = {
"Angerhoof Bull",
"Halls of Valor",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[130139] = {
"Void Effusion",
"The Sunwell",
"enUS",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[59191] = {
"Commander Lindon",
"Scarlet Halls",
"enUS",
},
[81767] = {
"Bloodmaul Flamespeaker",
"Bloodmaul Slag Mines",
"enUS",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
"enUS",
},
[180906] = {
"Halondrus",
"Sepulcher of the First Ones",
},
[198310] = {
"Flame Tarasek",
"Vault of the Incarnates",
},
[19874] = {
"Baron Rafe Dreuger",
"Karazhan",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
},
[197799] = {
"Quarry Infuser",
"UNKNOWN",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[150195] = {
"Gnome-Eating Slime",
"Operation: Mechagon",
"enUS",
},
[61239] = {
"Glintrok Oracle",
"Mogu'shan Palace",
},
[168111] = {
"Empowered Imperial Curator",
"Torghast, Tower of the Damned",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[7274] = {
"Sandfury Executioner",
"Zul'Farrak",
},
[29216] = {
"Anub'ar Guardian",
"Azjol-Nerub",
"enUS",
},
[197801] = {
"Awakened Terrasentry",
"UNKNOWN",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
"enUS",
},
[155828] = {
"Runecarved Colossus",
"Torghast, Tower of the Damned",
"enUS",
},
[1863] = {
"Mirneth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[79466] = {
"Initiate of the Rising Sun",
"Skyreach",
"enUS",
},
[30176] = {
"Ahn'kahar Guardian",
"Ahn'kahet: The Old Kingdom",
},
[157365] = {
"Crackling Stalker",
"Ny'alotha, the Waking City",
"enUS",
},
[61240] = {
"Glintrok Skulker",
"Mogu'shan Palace",
},
[183983] = {
"Dominated Attendant",
"Torghast, Tower of the Damned",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[193709] = {
"Primalist Earthwarden",
"Vault of the Incarnates",
},
[157366] = {
"Void Hunter",
"Ny'alotha, the Waking City",
"enUS",
},
[22882] = {
"Shadowmoon Deathshaper",
"Black Temple",
"enUS",
},
[79467] = {
"Adept of the Dawn",
"Skyreach",
"enUS",
},
[104293] = {
"Avatar of Shadow",
"Vault of the Wardens",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
"enUS",
},
[185008] = {
"Volatile Sentry",
"Sepulcher of the First Ones",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[23394] = {
"Promenade Sentinel",
"Black Temple",
"enUS",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[74349] = {
"Bloodmaul Magma Binder",
"Bloodmaul Slag Mines",
"enUS",
},
[157368] = {
"Velinaria",
"Blackwing Descent Scenario",
"enUS",
},
[23970] = {
"Vrykul Skeleton",
"Utgarde Keep",
},
[159416] = {
"Spiked Tentacle",
"Ny'alotha, the Waking City",
"enUS",
},
[76141] = {
"Araknath",
"Skyreach",
"enUS",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
},
[56890] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[174773] = {
"Spiteful Shade",
"Shadowmoon Burial Grounds",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[159417] = {
"Demented Knife-Twister",
"Ny'alotha, the Waking City",
"enUS",
},
[151739] = {
"Ma'haat the Indomitable",
"Neltharion's Lair - HoA Scenario",
"enUS",
},
[185011] = {
"Custodian Thonar",
"Torghast, Tower of the Damned",
"enUS",
},
[28961] = {
"Titanium Siegebreaker",
"Halls of Lightning",
"enUS",
},
[79469] = {
"Whirling Dervish",
"Skyreach",
"enUS",
},
[183988] = {
"Empowered Attendant",
"Torghast, Tower of the Damned",
"enUS",
},
[29217] = {
"Anub'ar Venomancer",
"Azjol-Nerub",
"enUS",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[17252] = {
"Shaadhun",
"Shadowmoon Burial Grounds",
},
[17380] = {
"Broggok",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[185013] = {
"Maw of the Maw",
"Torghast, Tower of the Damned",
"enUS",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
"enUS",
},
[151742] = {
"Void-Twisted Invader",
"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario",
"enUS",
},
[100713] = {
"Rockbait Fisher",
"Neltharion's Lair",
"enUS",
},
[48445] = {
"Oaf Lackey",
"Deadmines",
"enUS",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
"enUS",
},
[26530] = {
"Salramm the Fleshcrafter",
"The Culling of Stratholme",
},
[18404] = {
"Bloodwarder Steward",
"Tempest Keep: The Botanica",
"enUS",
},
[9236] = {
"Shadow Hunter Vosh'gajin",
"Lower Blackrock Spire",
"enUS",
},
[26722] = {
"Azure Magus",
"The Nexus",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[22947] = {
"Mother Shahraz",
"Black Temple",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[185016] = {
"Kosarus the Fallen",
"Torghast, Tower of the Damned",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[9716] = {
"Bloodaxe Warmonger",
"Lower Blackrock Spire",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
},
[21148] = {
"Rift Keeper",
"Opening of the Dark Portal",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[59835] = {
"Krik'thik Swarmer",
"Gate of the Setting Sun",
"enUS",
},
[21140] = {
"Rift Lord",
"Opening of the Dark Portal",
"enUS",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
},
[19876] = {
"Lord Robin Daris",
"Karazhan",
},
[18315] = {
"Ethereal Theurgist",
"Auchindoun: Mana-Tombs",
"enUS",
},
[135366] = {
"Blacktooth Arsonist",
"Tol Dagor",
"enUS",
},
[76145] = {
"Grand Defense Construct",
"Skyreach",
"enUS",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
"enUS",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
"enUS",
},
[48278] = {
"Mining Monkey",
"Deadmines",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
"enUS",
},
[61243] = {
"Gekkan",
"Mogu'shan Palace",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[16485] = {
"Arcane Watchman",
"Karazhan",
"enUS",
},
[156866] = {
"Ra-den",
"Ny'alotha, the Waking City",
"enUS",
},
[24201] = {
"Dalronn the Controller",
"Utgarde Keep",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[156145] = {
"Burrowing Appendage",
"Horrific Vision of Orgrimmar",
"enUS",
},
[18317] = {
"Ethereal Priest",
"Auchindoun: Mana-Tombs",
"enUS",
},
[47162] = {
"Glubtok",
"Deadmines",
"enUS",
},
[2630] = {
"Earthbind Totem",
"Sunken Temple",
},
[76146] = {
"Grand Defense Construct",
"Skyreach",
"enUS",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
"enUS",
},
[17621] = {
"Heathen Guard",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[17381] = {
"The Maker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[17356] = {
"Creeping Ooze",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[185021] = {
"Elder Longbranch",
"Torghast, Tower of the Damned",
"enUS",
},
[74355] = {
"Captured Miner",
"Bloodmaul Slag Mines",
"enUS",
},
[16523] = {
"Shattered Hand Savage",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[17420] = {
"Shattered Hand Heathen",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
},
[30178] = {
"Ahn'kahar Swarmer",
"Ahn'kahet: The Old Kingdom",
},
[17957] = {
"Coilfang Champion",
"Coilfang: The Slave Pens",
},
[185022] = {
"Decayspeaker",
"Torghast, Tower of the Damned",
"enUS",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
"enUS",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
"enUS",
},
[22945] = {
"Shadowmoon Blood Mage",
"Black Temple",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
"enUS",
},
[81522] = {
"Witherbark",
"The Everbloom",
},
[102253] = {
"Understone Demolisher",
"Neltharion's Lair",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[26723] = {
"Keristrasza",
"The Nexus",
},
[165060] = {
"Animimic",
"Torghast, Tower of the Damned",
"enUS",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
},
[90981] = {
"Balnazzar",
"Broken Shore",
"enUS",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
"enUS",
},
[22948] = {
"Gurtogg Bloodboil",
"Black Temple",
"enUS",
},
[5755] = {
"Deviate Viper",
"Wailing Caverns",
"enUS",
},
[151752] = {
"Voidswarm",
"Emerald Dream - HoA Scenario",
"enUS",
},
[6218] = {
"Irradiated Slime",
"Gnomeregan",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[54920] = {
"Infinite Suppressor",
"End Time",
"enUS",
},
[152718] = {
"Alleria Windrunner",
"Horrific Vision of Stormwind",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[19557] = {
"Greater Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[23524] = {
"Ashtongue Spiritbinder",
"Black Temple",
"enUS",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[185025] = {
"Goxul the Devourer",
"Torghast, Tower of the Damned",
"enUS",
},
[74357] = {
"Captured Miner",
"Bloodmaul Slag Mines",
"enUS",
},
[181954] = {
"Anduin Wrynn",
"Sepulcher of the First Ones",
},
[24715] = {
"High Explosive Sheep",
"Magisters' Terrace",
"enUS",
},
[196581] = {
"White Tiger Statue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[28067] = {
"Dark Iron Brewer",
"Blackrock Depths",
"enUS",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[151754] = {
"Void Haunt",
"Emerald Dream - HoA Scenario",
"enUS",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[136398] = {
"Illidari Satyr",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[22946] = {
"Shadowmoon War Hound",
"Black Temple",
"enUS",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[151755] = {
"Shadehound",
"Emerald Dream - HoA Scenario",
"enUS",
},
[185027] = {
"Vault Sentinel",
"Torghast, Tower of the Damned",
"enUS",
},
[136399] = {
"Vicious Hellhound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[6219] = {
"Corrosive Lurker",
"Gnomeregan",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
},
[22869] = {
"Illidari Boneslicer",
"Black Temple",
"enUS",
},
[17827] = {
"Claw",
"Coilfang: The Underbog",
"enUS",
},
[96323] = {
"Arachnis",
"FW Horde Garrison Level 3",
"enUS",
},
[46383] = {
"Randolph Moloch",
"Stormwind Stockade",
"enUS",
},
[18314] = {
"Nexus Stalker",
"Auchindoun: Mana-Tombs",
"enUS",
},
[20064] = {
"Thaladred the Darkener",
"Tempest Keep",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
"enUS",
},
[46382] = {
"Petty Criminal",
"Stormwind Stockade",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[17994] = {
"Bloodwarder Falconer",
"Tempest Keep: The Botanica",
"enUS",
},
[46264] = {
"Lord Overheat",
"Stormwind Stockade",
"enUS",
},
[134199] = {
"Gilnean Shieldwall",
"Stormwind Escape from Stockades",
"enUS",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[150222] = {
"Gunker",
"Operation: Mechagon",
"enUS",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
"enUS",
},
[30179] = {
"Twilight Apostle",
"Ahn'kahet: The Old Kingdom",
},
[17958] = {
"Coilfang Defender",
"Coilfang: The Slave Pens",
},
[76151] = {
"Black Iron Warcaster",
"Upper Blackrock Spire",
"enUS",
},
[9045] = {
"Scarshield Acolyte",
"Lower Blackrock Spire",
"enUS",
},
[16540] = {
"Shadow Pillager",
"Karazhan",
"enUS",
},
[9269] = {
"Smolderthorn Seer",
"Lower Blackrock Spire",
"enUS",
},
[162508] = {
"Anubisath Sentinel",
"Ny'alotha, the Waking City",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[9237] = {
"War Master Voone",
"Lower Blackrock Spire",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[45378] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[16593] = {
"Shattered Hand Brawler",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[75384] = {
"Kraulshaped Monstrosity",
"Razorfen Kraul",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22949] = {
"Gathios the Shatterer",
"Black Temple",
"enUS",
},
[208578] = {
"Wild Sproutling",
"10.1.5 Time Rifts - Titan (Ulderoth)",
"enUS",
},
[18982] = {
"Sable Jaguar",
"Opening of the Dark Portal",
"enUS",
},
[80247] = {
"Frostspinner Spiderling",
"FW Horde Garrison Level 1",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[18405] = {
"Tempest-Forge Peacekeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[46254] = {
"Hogger",
"Stormwind Stockade",
"enUS",
},
[23397] = {
"Illidari Blood Lord",
"Black Temple",
"enUS",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[9717] = {
"Bloodaxe Summoner",
"Lower Blackrock Spire",
"enUS",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
},
[201413] = {
"Inflammable Wall",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[19622] = {
"Kael'thas Sunstrider",
"Tempest Keep",
"enUS",
},
[90997] = {
"Mightstone Breaker",
"Neltharion's Lair",
"enUS",
},
[157904] = {
"Aqir Scarab",
"Horrific Vision of Orgrimmar",
"enUS",
},
[155278] = {
"Shimmerskin Pufferfish",
"The Eternal Palace",
"enUS",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[184522] = {
"Vigilant Custodian",
"Sepulcher of the First Ones",
},
[23953] = {
"Prince Keleseth",
"Utgarde Keep",
},
[136406] = {
"Shivarra",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[16594] = {
"Shadowmoon Acolyte",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[183499] = {
"Hired Muscle",
"Sepulcher of the First Ones",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[16807] = {
"Grand Warlock Nethekurse",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[136407] = {
"Wrathguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
"enUS",
},
[33350] = {
"Mimiron",
"Ulduar",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[7275] = {
"Shadowpriest Sezz'ziz",
"Zul'Farrak",
},
[6212] = {
"Dark Iron Agent",
"Gnomeregan",
},
[3654] = {
"Mutanus the Devourer",
"Wailing Caverns",
"enUS",
},
[76154] = {
"Skyreach Raven Whisperer",
"Skyreach",
"enUS",
},
[136408] = {
"Darkhound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45122] = {
"Oathsworn Captain",
"Lost City of the Tol'vir",
"enUS",
},
[205790] = {
"Time-Lost Smack-o-Tron",
"Dawn of the Infinite",
"enUS",
},
[16414] = {
"Ghostly Steward",
"Karazhan",
},
[183501] = {
"Artificer Xy'mox",
"Sepulcher of the First Ones",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[156884] = {
"Essence of Vita",
"Ny'alotha, the Waking City",
"enUS",
},
[159308] = {
"Zealous Adherent",
"Ny'alotha, the Waking City",
"enUS",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[17959] = {
"Coilfang Slavehandler",
"Coilfang: The Slave Pens",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[197835] = {
"Kaurdyth",
"UNKNOWN",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
},
[26533] = {
"Mal'Ganis",
"The Culling of Stratholme",
},
[15348] = {
"Kurinnaxx",
"Ruins of Ahn'Qiraj",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[46250] = {
"Riverpaw Poacher",
"Stormwind Stockade",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[74620] = {
"Battle Boar",
"Razorfen Kraul",
},
[18983] = {
"Blackfang Tarantula",
"Opening of the Dark Portal",
"enUS",
},
[133852] = {
"Living Rot",
"The Underrot",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[79739] = {
"Grom'kar Grenadier",
"Grimrail Depot",
"enUS",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[77889] = {
"Grom'tash the Destructor",
"Auchindoun",
"enUS",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[23398] = {
"Angered Soul Fragment",
"Black Temple",
"enUS",
},
[7915] = {
"Walking Bomb",
"Gnomeregan",
},
[126832] = {
"Skycap'n Kragg",
"Freehold",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
},
[63808] = {
"Faintly Glowing Gem",
"Mogu'shan Palace",
},
[91001] = {
"Tarspitter Lurker",
"Neltharion's Lair",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
},
[8138] = {
"Sul'lithuz Broodling",
"Zul'Farrak",
},
[99675] = {
"Enormous Stone Quilen",
"Vault of the Wardens",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
},
[184530] = {
"Eternal Sentry",
"Sepulcher of the First Ones",
},
[104822] = {
"Flame of Woe",
"Halls of Valor",
},
[76413] = {
"Orebender Gor'ashan",
"Upper Blackrock Spire",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[36551] = {
"Spiteful Apparition",
"The Forge of Souls",
"enUS",
},
[28581] = {
"Stormforged Tactician",
"Halls of Lightning",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[16488] = {
"Arcane Anomaly",
"Karazhan",
"enUS",
},
[82556] = {
"Drakonid Monstrosity",
"Upper Blackrock Spire",
"enUS",
},
[91002] = {
"Rotdrool Grabber",
"UNKNOWN",
"enUS",
},
[28965] = {
"Titanium Thunderer",
"Halls of Lightning",
"enUS",
},
[99704] = {
"Shadowmoon Warlock",
"Vault of the Wardens",
"enUS",
},
[16808] = {
"Warchief Kargath Bladefist",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[168932] = {
"Doomguard",
"Brackenhide Hollow",
},
[122986] = {
"Wild Skyscreamer",
"Atal'Dazar",
"enUS",
},
[4300] = {
"Scarlet Wizard",
"Scarlet Monastery of Old",
"enUS",
},
[131669] = {
"Jagged Hound",
"Waycrest Manor",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[134881] = {
"Icy Barrier",
"Stormwind Escape from Stockades",
"enUS",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[98681] = {
"Rook Spinner",
"Black Rook Hold",
"enUS",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[91003] = {
"Rokmora",
"Neltharion's Lair",
"enUS",
},
[4298] = {
"Scarlet Defender",
"Scarlet Monastery of Old",
"enUS",
},
[8886] = {
"Deviate Python",
"Wailing Caverns",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
},
[17960] = {
"Coilfang Soothsayer",
"Coilfang: The Slave Pens",
},
[575] = {
"Fire Elemental",
"Scarlet Monastery of Old",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[36296] = {
"Apothecary Hummel",
"Shadowfang Keep",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[18344] = {
"Nexus-Prince Shaffar",
"Auchindoun: Mana-Tombs",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
},
[184535] = {
"Overthrown Artisan",
"Sepulcher of the First Ones",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[91004] = {
"Ularogg Cragshaper",
"Neltharion's Lair",
"enUS",
},
[26918] = {
"Chaotic Rift",
"The Nexus",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[22951] = {
"Lady Malande",
"Black Temple",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[24085] = {
"Dragonflayer Overseer",
"Utgarde Keep",
},
[100216] = {
"Hatecoil Wrangler",
"Eye of Azshara",
"enUS",
},
[81279] = {
"Grom'kar Flameslinger",
"Iron Docks",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23399] = {
"Suffering Soul Fragment",
"Black Temple",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[9718] = {
"Ghok Bashguud",
"Lower Blackrock Spire",
"enUS",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
},
[144611] = {
"Coralback Scuttler",
"The Eternal Palace",
"enUS",
},
[91005] = {
"Naraxas",
"Neltharion's Lair",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[17993] = {
"Bloodwarder Protector",
"Tempest Keep: The Botanica",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[20060] = {
"Lord Sanguinar",
"Tempest Keep",
"enUS",
},
[28582] = {
"Stormforged Mender",
"Halls of Lightning",
"enUS",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
},
[184539] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
},
[16489] = {
"Chaotic Sentience",
"Karazhan",
"enUS",
},
[28838] = {
"Titanium Vanguard",
"Halls of Lightning",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
"enUS",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[183500] = {
"Thieveing Agent",
"Sepulcher of the First Ones",
},
[16809] = {
"Warbringer O'mrogg",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
},
[131817] = {
"Cragmaw the Infested",
"The Underrot",
"enUS",
},
[15343] = {
"Qiraji Swarmguard",
"Ruins of Ahn'Qiraj",
"enUS",
},
[208461] = {
"Scorching Roots",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[46248] = {
"Riverpaw Basher",
"Stormwind Stockade",
"enUS",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[98173] = {
"Mystic Ssa'veh",
"Eye of Azshara",
"enUS",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[44819] = {
"Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[91007] = {
"Dargrul",
"Neltharion's Lair",
"enUS",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[107114] = {
"Tormenting Orb",
"Vault of the Wardens",
"enUS",
},
[15691] = {
"The Curator",
"Karazhan",
"enUS",
},
[81235] = {
"Grimrail Laborer",
"Grimrail Depot",
"enUS",
},
[17961] = {
"Coilfang Enchantress",
"Coilfang: The Slave Pens",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[29062] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[158437] = {
"Fallen Taskmaster",
"Horrific Vision of Stormwind",
"enUS",
},
[201746] = {
"Sundered Naturalist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
},
[79463] = {
"Radiant Supernova",
"Skyreach",
"enUS",
},
[26727] = {
"Mage Hunter Ascendant",
"The Nexus",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[22952] = {
"Veras Darkshadow",
"Black Temple",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[155618] = {
"Zanj'ir Huntress",
"The Eternal Palace",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[23400] = {
"Illidari Archon",
"Black Temple",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
"enUS",
},
[152809] = {
"Alx'kov the Infested",
"Horrific Vision of Stormwind",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[20040] = {
"Crystalcore Devastator",
"Tempest Keep",
"enUS",
},
[28199] = {
"Tomb Stalker",
"The Culling of Stratholme",
},
[96640] = {
"Valarjar Marksman",
"Halls of Valor",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[154858] = {
"X'korr the Compelling",
"Karazhan Catacombs - HoA Scenario",
"enUS",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
"enUS",
},
[28583] = {
"Blistering Steamrager",
"Halls of Lightning",
"enUS",
},
[24552] = {
"Sliver",
"Magisters' Terrace",
"enUS",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
},
[24744] = {
"Vexallus",
"Magisters' Terrace",
"enUS",
},
[194273] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
},
[154347] = {
"Void-Twisted Corruptor",
"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario",
"enUS",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
},
[91697] = {
"Dark Inquisitor",
"Broken Shore",
"enUS",
},
[80005] = {
"Skylord Tovra",
"Grimrail Depot",
"enUS",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[133361] = {
"Wasting Servant",
"Waycrest Manor",
},
[59078] = {
"Failed Student",
"Scholomance",
"enUS",
},
[153141] = {
"Endless Hunger Totem",
"Horrific Vision of Orgrimmar",
"enUS",
},
[98177] = {
"Glayvianna Soulrender",
"Vault of the Wardens",
"enUS",
},
[29735] = {
"Savage Worg",
"Utgarde Keep",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[54983] = {
"Treant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
"enUS",
},
[150254] = {
"Scraphound",
"Operation: Mechagon",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[152033] = {
"Inconspicuous Plant",
"Operation: Mechagon",
"enUS",
},
[17962] = {
"Coilfang Collaborator",
"Coilfang: The Slave Pens",
},
[44234] = {
"Vicious Leech",
"Lost City of the Tol'vir",
"enUS",
},
[189669] = {
"Binding Spear",
"Neltharus",
},
[16525] = {
"Spell Shade",
"Karazhan",
"enUS",
},
[76935] = {
"Black Iron Drake-Keeper",
"Upper Blackrock Spire",
"enUS",
},
[152699] = {
"Voidbound Berserker",
"Horrific Vision of Orgrimmar",
"enUS",
},
[116834] = {
"Bileshroom",
"Wailing Caverns",
"enUS",
},
[416] = {
"Рулпепо",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[9239] = {
"Smolderthorn Mystic",
"Lower Blackrock Spire",
"enUS",
},
[26728] = {
"Mage Hunter Initiate",
"The Nexus",
},
[26792] = {
"Crystalline Protector",
"The Nexus",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
},
[22953] = {
"Wrathbone Flayer",
"Black Temple",
"enUS",
},
[83846] = {
"Yalnu",
"The Everbloom",
},
[29838] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[19306] = {
"Mana Leech",
"Auchindoun: Mana-Tombs",
"enUS",
},
[129659] = {
"Aruun the Darkener",
"The Sunwell",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[162030] = {
"Darkwhisper Ritualist",
"Blackwing Descent Scenario",
"enUS",
},
[23401] = {
"Hungering Soul Fragment",
"Black Temple",
"enUS",
},
[19016] = {
"Hellfire Familiar",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[23337] = {
"Illidari Centurion",
"Black Temple",
"enUS",
},
[131318] = {
"Elder Leaxa",
"The Underrot",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[78728] = {
"Shaadum",
"Auchindoun",
"enUS",
},
[151785] = {
"Void-Twisted Wyrmkiller",
"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario",
"enUS",
},
[28200] = {
"Dark Necromancer",
"The Culling of Stratholme",
},
[91781] = {
"Hatecoil Warrior",
"Eye of Azshara",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
},
[213219] = {
"Congealed Ooze",
"Throne of the Tides",
"enUS",
},
[127488] = {
"Ashvane Flamecaster",
"Tol Dagor",
"enUS",
},
[156913] = {
"Decaying Corpse",
"Darkmaul Citadel",
},
[113536] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[184043] = {
"Excavation Leader",
"Torghast, Tower of the Damned",
"enUS",
},
[28584] = {
"Unbound Firestorm",
"Halls of Lightning",
"enUS",
},
[126845] = {
"Captain Jolly",
"Freehold",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[16491] = {
"Mana Feeder",
"Karazhan",
"enUS",
},
[24745] = {
"Pure Energy",
"Magisters' Terrace",
"enUS",
},
[61442] = {
"Kuai the Brute",
"Mogu'shan Palace",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[29096] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[162303] = {
"Aqir Swarmkeeper",
"Ny'alotha, the Waking City",
"enUS",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
},
[91782] = {
"Hatecoil Crusher",
"Eye of Azshara",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[30277] = {
"Ahn'kahar Slasher",
"Ahn'kahet: The Old Kingdom",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[185581] = {
"Eternal Forger",
"Sepulcher of the First Ones",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[158781] = {
"Shredded Psyche",
"Ny'alotha, the Waking City",
"enUS",
},
[17771] = {
"Murkblood Oracle",
"Coilfang: The Underbog",
"enUS",
},
[91783] = {
"Hatecoil Stormweaver",
"Eye of Azshara",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[185582] = {
"Eternal Assembler",
"Sepulcher of the First Ones",
},
[18155] = {
"Bloodfalcon",
"Tempest Keep: The Botanica",
"enUS",
},
[4295] = {
"Scarlet Myrmidon",
"Scarlet Monastery of Old",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[126847] = {
"Captain Raoul",
"Freehold",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[26729] = {
"Steward",
"The Nexus",
},
[26793] = {
"Crystalline Frayer",
"The Nexus",
},
[78731] = {
"Khatuun",
"Auchindoun",
"enUS",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[17963] = {
"Wastewalker Slave",
"Coilfang: The Slave Pens",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[23018] = {
"Shadowmoon Houndmaster",
"Black Temple",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[185584] = {
"Blasphemy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[19307] = {
"Nexus Terror",
"Auchindoun: Mana-Tombs",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[23402] = {
"Illidari Battle-mage",
"Black Temple",
"enUS",
},
[142587] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[126848] = {
"Captain Eudora",
"Freehold",
"enUS",
},
[30278] = {
"Ahn'kahar Spell Flinger",
"Ahn'kahet: The Old Kingdom",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[34184] = {
"Clockwork Mechanic",
"Ulduar",
"enUS",
},
[51659] = {
"Scarlet Monk",
"Scarlet Monastery of Old",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[75149] = {
"Aggem Thorncurse",
"Razorfen Kraul",
},
[91785] = {
"Wandering Shellback",
"Kalimdor",
"enUS",
},
[79756] = {
"Coldsnout Sow",
"FW Horde Garrison Level 1",
"enUS",
},
[28201] = {
"Bile Golem",
"The Culling of Stratholme",
},
[158373] = {
"Roberto Pupellyverbos",
"Horrific Vision of Stormwind",
"enUS",
},
[9042] = {
"Verek",
"Blackrock Depths",
"enUS",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
},
[56906] = {
"Saboteur Kip'tilak",
"Gate of the Setting Sun",
"enUS",
},
[8156] = {
"Servant of Antu'sul",
"Zul'Farrak",
},
[28585] = {
"Slag",
"Halls of Lightning",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[16492] = {
"Syphoner",
"Karazhan",
"enUS",
},
[212981] = {
"Hapless Assistant",
"The Everbloom",
"enUS",
},
[160416] = {
"Angry Ale Barrel Spirit",
"Horrific Vision of Stormwind",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[56589] = {
"Striker Ga'dok",
"Gate of the Setting Sun",
"enUS",
},
[75406] = {
"Slagna",
"Bloodmaul Slag Mines",
"enUS",
},
[8440] = {
"Avatar of Hakkar",
"Sunken Temple",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
},
[79720] = {
"Grom'kar Boomer",
"Grimrail Depot",
"enUS",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[4301] = {
"Scarlet Centurion",
"Scarlet Monastery of Old",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[8179] = {
"Greater Healing Ward",
"Zul'Farrak",
},
[150159] = {
"King Gobbamak",
"Operation: Mechagon",
"enUS",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
},
[202481] = {
"Obsidian Tormentor",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[51660] = {
"Scarlet Chaplain",
"Scarlet Monastery of Old",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[169430] = {
"Ur'zul",
"Brackenhide Hollow",
},
[8920] = {
"Weapon Technician",
"Blackrock Depths",
"enUS",
},
[17964] = {
"Wastewalker Worker",
"Coilfang: The Slave Pens",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
"enUS",
},
[9016] = {
"Bael'Gar",
"Blackrock Depths",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
},
[76176] = {
"Black Iron Berserker",
"Upper Blackrock Spire",
"enUS",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
},
[157439] = {
"Fury of N'Zoth",
"Ny'alotha, the Waking City",
"enUS",
},
[9240] = {
"Smolderthorn Shadow Priest",
"Lower Blackrock Spire",
"enUS",
},
[26730] = {
"Mage Slayer",
"The Nexus",
"enUS",
},
[26794] = {
"Ormorok the Tree-Shaper",
"The Nexus",
},
[202483] = {
"Obsidian Tyrant",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
},
[22955] = {
"Charming Patron",
"Black Temple",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[23147] = {
"Shadowmoon Grunt",
"Black Temple",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[125828] = {
"Benzfahren",
"Atal'Dazar",
"enUS",
},
[23339] = {
"Illidari Heartseeker",
"Black Temple",
"enUS",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[185574] = {
"Dominated Saboteur",
"Sepulcher of the First Ones",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[152833] = {
"Azerite Giant",
"The Maelstrom - Heart of Azeroth",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[76177] = {
"Soulbinder Nyami",
"Auchindoun",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[24555] = {
"Garaxxas",
"Magisters' Terrace",
"enUS",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
},
[24683] = {
"Sunblade Mage Guard",
"Magisters' Terrace",
"enUS",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
},
[152834] = {
"Azerite Skitterer",
"The Maelstrom - Heart of Azeroth",
"enUS",
},
[5053] = {
"Deviate Crocolisk",
"Wailing Caverns",
"enUS",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
},
[28586] = {
"General Bjarngrim",
"Halls of Lightning",
"enUS",
},
[61387] = {
"Quilen Guardian",
"Mogu'shan Palace",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
},
[140038] = {
"Abyssal Eel",
"Shrine of the Storm",
"enUS",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
},
[102277] = {
"Deadeye Decoy",
"Darkheart Thicket",
"enUS",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
"enUS",
},
[91790] = {
"Mak'rana Siltwalker",
"Eye of Azshara",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[143622] = {
"Wild Imp",
"Shadowmoon Burial Grounds",
},
[5277] = {
"Nightmare Scalebane",
"Sunken Temple",
},
[34183] = {
"Arachnopod Destroyer",
"Ulduar",
"enUS",
},
[151812] = {
"Detect-o-Bot",
"Operation: Mechagon",
"enUS",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
},
[97677] = {
"Barbed Spiderling",
"Vault of the Wardens",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[204536] = {
"Blight Chunk",
"Dawn of the Infinite",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
"enUS",
},
[17517] = {
"Hellfire Sentry",
"Hellfire Citadel: Ramparts",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[7795] = {
"Hydromancer Velratha",
"Zul'Farrak",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
},
[95886] = {
"Ash'Golm",
"Vault of the Wardens",
"enUS",
},
[99657] = {
"Deranged Mindflayer",
"Vault of the Wardens",
"enUS",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
},
[201466] = {
"Cinderstep Igniter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
},
[44752] = {
"Faceless Sapper",
"Throne of the Tides",
},
[97678] = {
"Aranasi Broodmother",
"Vault of the Wardens",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[22956] = {
"Priestess of Torment",
"Black Temple",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
"enUS",
},
[26731] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
},
[5709] = {
"Shade of Eranikus",
"Sunken Temple",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
},
[79507] = {
"Felguard",
"Auchindoun",
"enUS",
},
[95888] = {
"Cordana Felsong",
"Vault of the Wardens",
"enUS",
},
[155094] = {
"Mechagon Trooper",
"Operation: Mechagon",
"enUS",
},
[201468] = {
"Stonebreath Landslider",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[91793] = {
"Seaspray Crab",
"Eye of Azshara",
"enUS",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[76181] = {
"Ragemaw Worg",
"Upper Blackrock Spire",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
},
[201469] = {
"Restless Pebble",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
"enUS",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[169426] = {
"Infernal",
"Brackenhide Hollow",
},
[71062] = {
"Large Illusionary Slayer",
"Proving Grounds",
"enUS",
},
[79508] = {
"Felborne Abyssal",
"Auchindoun",
"enUS",
},
[24556] = {
"Zelfan",
"Magisters' Terrace",
"enUS",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
},
[201470] = {
"Flickering Flame",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[157449] = {
"Sinister Soulcarver",
"Ny'alotha, the Waking City",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
},
[17991] = {
"Rokmar the Crackler",
"Coilfang: The Slave Pens",
},
[28587] = {
"Volkhan",
"Halls of Lightning",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
},
[201471] = {
"Earthborne Charger",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[33236] = {
"Steelforged Defender",
"Ulduar",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
},
[91794] = {
"Saltscale Lurker",
"Eye of Azshara",
"enUS",
},
[96657] = {
"Blade Dancer Illianna",
"Vault of the Wardens",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
},
[201472] = {
"Torch Revenant",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
},
[29931] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[184069] = {
"Dominated Excavator",
"Torghast, Tower of the Damned",
"enUS",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
},
[157452] = {
"Nightmare Antigen",
"Ny'alotha, the Waking City",
"enUS",
},
[59982] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[8889] = {
"Anvilrage Overseer",
"Blackrock Depths",
"enUS",
},
[8921] = {
"Bloodhound",
"Blackrock Depths",
"enUS",
},
[29713] = {
"Slad'ran Constrictor",
"Gundrak",
"enUS",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
},
[9017] = {
"Lord Incendius",
"Blackrock Depths",
"enUS",
},
[29836] = {
"Drakkari Battle Rider",
"Gundrak",
"enUS",
},
[97170] = {
"Hatecoil Wavebinder",
"Eye of Azshara",
"enUS",
},
[136665] = {
"Ashvane Spotter",
"Tol Dagor",
"enUS",
},
[36564] = {
"Soulguard Bonecaster",
"The Forge of Souls",
"enUS",
},
[155689] = {
"Zanj'ir Gladiator",
"The Eternal Palace",
"enUS",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[9241] = {
"Smolderthorn Headhunter",
"Lower Blackrock Spire",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[26796] = {
"Commander Stoutbeard",
"The Nexus",
"enUS",
},
[22957] = {
"Mistress of Dementia",
"Black Temple",
"enUS",
},
[91796] = {
"Skrog Wavecrasher",
"Eye of Azshara",
"enUS",
},
[158478] = {
"Corruption Tumor",
"Horrific Vision of Stormwind",
"enUS",
},
[79511] = {
"Blazing Trickster",
"Auchindoun",
"enUS",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[84984] = {
"Spore Image",
"The Everbloom",
"enUS",
},
[97171] = {
"Hatecoil Arcanist",
"Eye of Azshara",
"enUS",
},
[58959] = {
"Nipsillin",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[23469] = {
"Enslaved Soul",
"Black Temple",
"enUS",
},
[21126] = {
"Coilfang Scale-Healer",
"Coilfang: The Slave Pens",
},
[78734] = {
"Zipteq",
"Auchindoun",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
},
[97172] = {
"Saltsea Droplet",
"Eye of Azshara",
"enUS",
},
[75417] = {
"Coldsnout Piglet",
"FW Horde Garrison Level 1",
"enUS",
},
[134423] = {
"Abyss Dweller",
"Shrine of the Storm",
"enUS",
},
[3527] = {
"Healing Stream Totem",
"Sunken Temple",
},
[48338] = {
"Mine Bunny",
"Deadmines",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[56912] = {
"Krik'thik Engulfer",
"Gate of the Setting Sun",
"enUS",
},
[36565] = {
"Apothecary Baxter",
"Shadowfang Keep",
},
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[24557] = {
"Kagani Nightstrike",
"Magisters' Terrace",
"enUS",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[29153] = {
"Animated Bones",
"Azjol-Nerub",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[71067] = {
"Large Illusionary Varmint",
"Proving Grounds",
"enUS",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[17007] = {
"Lady Keira Berrybuck",
"Karazhan",
},
[3671] = {
"Lady Anacondra",
"Wailing Caverns",
"enUS",
},
[97173] = {
"Restless Tides",
"Eye of Azshara",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
},
[17839] = {
"Rift Lord",
"Opening of the Dark Portal",
"enUS",
},
[17455] = {
"Bonechewer Beastmaster",
"Hellfire Citadel: Ramparts",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
},
[84983] = {
"Spore Image",
"The Everbloom",
"enUS",
},
[71068] = {
"Large Illusionary Amber-Weaver",
"Proving Grounds",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
},
[134938] = {
"Teldrassil Sentinel",
"Stormwind Escape from Stockades",
"enUS",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[91784] = {
"Warlord Parjesh",
"Eye of Azshara",
"enUS",
},
[156949] = {
"Armsmaster Terenson",
"Horrific Vision of Stormwind",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
},
[153878] = {
"Mawsworn Archer",
"Torghast, Tower of the Damned",
"enUS",
},
[150295] = {
"Tank Buster MK1",
"Operation: Mechagon",
"enUS",
},
[74652] = {
"Razorfen Thornbolt",
"Razorfen Kraul",
},
[61392] = {
"Harthak Flameseeker",
"Mogu'shan Palace",
},
[127119] = {
"Freehold Deckhand",
"Freehold",
"enUS",
},
[45268] = {
"Servant of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
},
[22894] = {
"Cyclone Totem",
"Black Temple",
"enUS",
},
[71069] = {
"Large Illusionary Mystic",
"Proving Grounds",
"enUS",
},
[7789] = {
"Sandfury Cretin",
"Zul'Farrak",
},
[159510] = {
"Eye of the Depths",
"Ny'alotha, the Waking City",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[17259] = {
"Bonechewer Hungerer",
"Hellfire Citadel: Ramparts",
},
[76444] = {
"Subjugated Soul",
"Shadowmoon Burial Grounds",
},
[74900] = {
"Kraulshaper Tukaar",
"Razorfen Kraul",
},
[156794] = {
"SI:7 Light-Hunter",
"Horrific Vision of Stormwind",
"enUS",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
"enUS",
},
[157333] = {
"Darkwhisper Cultist",
"Blackwing Descent Scenario",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
},
[3975] = {
"Herod",
"Scarlet Monastery of Old",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[32665] = {
"Crystalline Tangler",
"The Nexus",
"enUS",
},
[76143] = {
"Rukhran",
"Skyreach",
"enUS",
},
[157461] = {
"Mycelial Cyst",
"Ny'alotha, the Waking City",
"enUS",
},
[9701] = {
"Spire Scorpid",
"Lower Blackrock Spire",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
"enUS",
},
[98926] = {
"Shadow Hunter",
"Vault of the Wardens",
"enUS",
},
[181011] = {
"Ancient Guardian",
"Sepulcher of the First Ones",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[130027] = {
"Ashvane Marine",
"Tol Dagor",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[187154] = {
"Arcane Curator",
"The Azure Vault",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[134943] = {
"Exodar Peacekeeper",
"Stormwind Escape from Stockades",
"enUS",
},
[69791] = {
"Akulakhan",
"Sepulcher of the First Ones",
},
[45269] = {
"Servant of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[100248] = {
"Ritualist Lesha",
"Eye of Azshara",
"enUS",
},
[151836] = {
"Void Horror",
"Emerald Dream - HoA Scenario",
"enUS",
},
[4286] = {
"Scarlet Soldier",
"Scarlet Monastery of Old",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[83612] = {
"Skulloc",
"Iron Docks",
},
[159514] = {
"Blood of Ny'alotha",
"Ny'alotha, the Waking City",
"enUS",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
},
[4302] = {
"Scarlet Champion",
"Scarlet Monastery of Old",
"enUS",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[157467] = {
"Void Ascendant",
"Ny'alotha, the Waking City",
"enUS",
},
[186644] = {
"Leymor",
"The Azure Vault",
},
[17264] = {
"Bonechewer Ravener",
"Hellfire Citadel: Ramparts",
},
[91636] = {
"Ravenous Felstalker",
"Broken Shore",
"enUS",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
"enUS",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
},
[158158] = {
"Forge-Guard Hurrul",
"Horrific Vision of Stormwind",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
},
[30286] = {
"Frostbringer",
"Ahn'kahet: The Old Kingdom",
},
[24083] = {
"Enslaved Proto-Drake",
"Utgarde Keep",
},
[8890] = {
"Anvilrage Warden",
"Blackrock Depths",
"enUS",
},
[8922] = {
"Bloodhound Mastiff",
"Blackrock Depths",
"enUS",
},
[100249] = {
"Channeler Varisz",
"Eye of Azshara",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
},
[185110] = {
"Vil'thras",
"Torghast, Tower of the Damned",
"enUS",
},
[98954] = {
"Felsworn Myrmidon",
"Vault of the Wardens",
"enUS",
},
[4542] = {
"High Inquisitor Fairbanks",
"Scarlet Monastery of Old",
"enUS",
},
[56915] = {
"Sun",
"Temple of the Jade Serpent",
"enUS",
},
[134191] = {
"Gilnean Mauler",
"Stormwind Escape from Stockades",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
"enUS",
},
[77559] = {
"Solar Magnifier",
"Skyreach",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
},
[26734] = {
"Azure Enforcer",
"The Nexus",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[145185] = {
"Gnomercy 4.U.",
"Operation: Mechagon",
"enUS",
},
[72849] = {
"Driftwatcher Rylak",
"FW Horde Garrison Level 3",
"enUS",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
},
[22959] = {
"Ardent Host",
"Black Temple",
"enUS",
},
[100250] = {
"Binder Ashioi",
"Eye of Azshara",
"enUS",
},
[184600] = {
"Llarondus",
"Sepulcher of the First Ones",
},
[158157] = {
"Overlord Mathias Shaw",
"Horrific Vision of Stormwind",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
},
[130026] = {
"Bilge Rat Seaspeaker",
"Tol Dagor",
"enUS",
},
[198933] = {
"Iridikron",
"Dawn of the Infinite",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
"enUS",
},
[29128] = {
"Anub'ar Prime Guard",
"Azjol-Nerub",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
},
[19632] = {
"Lykul Stinger",
"Coilfang: The Underbog",
"enUS",
},
[96584] = {
"Immoliant Fury",
"Vault of the Wardens",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
"enUS",
},
[71074] = {
"Small Illusionary Sha",
"Proving Grounds",
"enUS",
},
[151659] = {
"Rocket Tonk",
"Operation: Mechagon",
"enUS",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[152866] = {
"Hardened Azerite",
"The Maelstrom - Heart of Azeroth",
"enUS",
},
[20208] = {
"Mennu's Healing Ward",
"Coilfang: The Slave Pens",
},
[17670] = {
"Shattered Hand Houndmaster",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[134951] = {
"Gnomish Gyro-Engineer",
"Stormwind Escape from Stockades",
"enUS",
},
[24815] = {
"Sunblade Imp",
"Magisters' Terrace",
"enUS",
},
[151331] = {
"Cellblock Sentinel",
"Torghast, Tower of the Damned",
"enUS",
},
[184603] = {
"Ancient Bufonid",
"Sepulcher of the First Ones",
},
[24687] = {
"Sunblade Physician",
"Magisters' Terrace",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
},
[207638] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[75426] = {
"Bloodmaul Overseer",
"Bloodmaul Slag Mines",
"enUS",
},
[17478] = {
"Bleeding Hollow Scryer",
"Hellfire Citadel: Ramparts",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
},
[21104] = {
"Rift Keeper",
"Opening of the Dark Portal",
"enUS",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[157475] = {
"Synthesis Growth",
"Ny'alotha, the Waking City",
"enUS",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
"enUS",
},
[207639] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[91787] = {
"Cove Seagull",
"Eye of Azshara",
"enUS",
},
[17521] = {
"The Big Bad Wolf",
"Karazhan",
"enUS",
},
[153097] = {
"Voidbound Shaman",
"Horrific Vision of Orgrimmar",
"enUS",
},
[161571] = {
"Anubisath Sentinel",
"Ny'alotha, the Waking City",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
},
[71076] = {
"Small Illusionary Mystic",
"Proving Grounds",
"enUS",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
},
[30416] = {
"Bound Fire Elemental",
"Ahn'kahet: The Old Kingdom",
},
[150547] = {
"Scrapbone Grunter",
"Operation: Mechagon",
"enUS",
},
[3637] = {
"Deviate Guardian",
"Wailing Caverns",
"enUS",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[71077] = {
"Small Illusionary Amber-Weaver",
"Proving Grounds",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[91808] = {
"Serpentrix",
"Eye of Azshara",
"enUS",
},
[26735] = {
"Azure Scale-Binder",
"The Nexus",
},
[82594] = {
"Grimrail Loader",
"Grimrail Depot",
"enUS",
},
[161573] = {
"Disciple of the Prophet",
"Ny'alotha, the Waking City",
"enUS",
},
[5710] = {
"Jammal'an the Prophet",
"Sunken Temple",
},
[22896] = {
"Ashtongue Searing Totem",
"Black Temple",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[185120] = {
"Deadsoul Lifetaker",
"Torghast, Tower of the Damned",
"enUS",
},
[23216] = {
"Ashtongue Defender",
"Black Temple",
"enUS",
},
[7271] = {
"Witch Doctor Zum'rah",
"Zul'Farrak",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[24559] = {
"Warlord Salaris",
"Magisters' Terrace",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
},
[19505] = {
"Sunseeker Channeler",
"Tempest Keep: The Botanica",
"enUS",
},
[185121] = {
"Deadsoul Strider",
"Torghast, Tower of the Damned",
"enUS",
},
[19633] = {
"Bloodwarder Mender",
"Tempest Keep: The Botanica",
"enUS",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
},
[71078] = {
"Small Illusionary Varmint",
"Proving Grounds",
"enUS",
},
[163111] = {
"Magistrate Solomon",
"Redridge - 9xp Bastion",
},
[208668] = {
"Elisande",
"10.2. Nighthold",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[152874] = {
"Vez'okk the Lightless",
"Horrific Vision of Orgrimmar",
"enUS",
},
[157268] = {
"Crawling Corruption",
"Horrific Vision of Orgrimmar",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
},
[12218] = {
"Vile Larva",
"Maraudon",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[20465] = {
"Underbog Frenzy",
"Coilfang: The Underbog",
"enUS",
},
[76021] = {
"Kyrak",
"Upper Blackrock Spire",
"enUS",
},
[24688] = {
"Wretched Skulker",
"Magisters' Terrace",
"enUS",
},
[98900] = {
"Wyrmtongue Trickster",
"Black Rook Hold",
"enUS",
},
[6206] = {
"Caverndeep Burrower",
"Gnomeregan",
},
[6222] = {
"Leprous Technician",
"Gnomeregan",
},
[71079] = {
"Small Illusionary Guardian",
"Proving Grounds",
"enUS",
},
[83620] = {
"Bloodmaul Earthbreaker",
"Bloodmaul Slag Mines",
"enUS",
},
[208670] = {
"Glorious Vanguard",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[126969] = {
"Trothak",
"Freehold",
"enUS",
},
[157483] = {
"Ysedra the Darkener",
"Halls of Origination",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[185123] = {
"Lady Audat",
"Torghast, Tower of the Damned",
"enUS",
},
[146222] = {
"Nerubis Vanguard",
"The Sunwell",
"enUS",
},
[45377] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[77734] = {
"Teron'gor",
"Auchindoun",
"enUS",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
},
[45007] = {
"Enslaved Bandit",
"Lost City of the Tol'vir",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
"enUS",
},
[129599] = {
"Cutwater Knife Juggler",
"Freehold",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[71080] = {
"Small Illusionary Slayer",
"Proving Grounds",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
},
[100364] = {
"Spirit of Vengeance",
"Vault of the Wardens",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
},
[30319] = {
"Twilight Darkcaster",
"Ahn'kahet: The Old Kingdom",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
},
[106787] = {
"Bitterbrine Slave",
"Eye of Azshara",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[61398] = {
"Xin the Weaponmaster",
"Mogu'shan Palace",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[26800] = {
"Alliance Berserker",
"The Nexus",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
},
[26928] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[22897] = {
"Summoned Windfury Totem",
"Black Temple",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
},
[144842] = {
"Tide Crawler",
"The Eternal Palace",
"enUS",
},
[9499] = {
"Plugger Spazzring",
"Blackrock Depths",
"enUS",
},
[152162] = {
"Void-Twisted Skystriker",
"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario",
"enUS",
},
[3653] = {
"Kresh",
"Wailing Caverns",
"enUS",
},
[34269] = {
"XR-949 Salvagebot",
"Ulduar",
"enUS",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
},
[79510] = {
"Cackling Pyromaniac",
"Auchindoun",
"enUS",
},
[155952] = {
"Suffer",
"Horrific Vision of Orgrimmar",
"enUS",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[181546] = {
"Prototype of Renewal",
"Sepulcher of the First Ones",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[146227] = {
"Decrepit Stalker",
"The Sunwell",
"enUS",
},
[83623] = {
"Bloodmaul Warder",
"Bloodmaul Slag Mines",
"enUS",
},
[126489] = {
"Creeping Void",
"The Sunwell",
"enUS",
},
[131383] = {
"Sporecaller Zancha",
"The Underrot",
"enUS",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
},
[7604] = {
"Sergeant Bly",
"Zul'Farrak",
},
[80808] = {
"Neesa Nox",
"Iron Docks",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[176577] = {
"Mawsworn Cremator",
"Torghast, Tower of the Damned",
"enUS",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[24561] = {
"Yazzai",
"Magisters' Terrace",
"enUS",
},
[151859] = {
"Tomb Scarab",
"Halls of Origination",
"enUS",
},
[24689] = {
"Wretched Bruiser",
"Magisters' Terrace",
"enUS",
},
[181548] = {
"Prototype of Absolution",
"Sepulcher of the First Ones",
},
[198952] = {
"Kith'ix",
"Tyr's Fall Scenario",
"enUS",
},
[7246] = {
"Sandfury Shadowhunter",
"Zul'Farrak",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
},
[18309] = {
"Ethereal Scavenger",
"Auchindoun: Mana-Tombs",
"enUS",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
},
[34014] = {
"Sanctum Sentry",
"Ulduar",
"enUS",
},
[181549] = {
"Prototype of War",
"Sepulcher of the First Ones",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
},
[198953] = {
"Zakajz",
"Tyr's Fall Scenario",
"enUS",
},
[48450] = {
"Sunwing Squawker",
"Deadmines",
"enUS",
},
[29680] = {
"Slad'ran Viper",
"Gundrak",
"enUS",
},
[17395] = {
"Shadowmoon Summoner",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[156795] = {
"SI:7 Informant",
"Horrific Vision of Stormwind",
"enUS",
},
[156980] = {
"Essence of Void",
"Ny'alotha, the Waking City",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[43612] = {
"High Prophet Barim",
"Lost City of the Tol'vir",
"enUS",
},
[56754] = {
"Azure Serpent",
"Shado-Pan Monastery",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[45379] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[17669] = {
"Rabid Warhound",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[181551] = {
"Prototype of Duty",
"Sepulcher of the First Ones",
},
[8891] = {
"Anvilrage Guardsman",
"Blackrock Depths",
"enUS",
},
[105636] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[29826] = {
"Drakkari Medicine Man",
"Gundrak",
"enUS",
},
[77483] = {
"Grom'kar Gunner",
"Grimrail Depot",
"enUS",
},
[18419] = {
"Bloodwarder Greenkeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[184623] = {
"Ancient Avian",
"Sepulcher of the First Ones",
},
[26737] = {
"Crazed Mana-Surge",
"The Nexus",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
},
[26929] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[185023] = {
"Synod",
"Torghast, Tower of the Damned",
"enUS",
},
[75436] = {
"Quilboar Swinewatcher",
"Razorfen Kraul",
},
[31216] = {
"Bengeezuz",
"Sepulcher of the First Ones",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[205611] = {
"Molten Hound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[85232] = {
"Infested Venomfang",
"The Everbloom",
},
[34271] = {
"XD-175 Compactobot",
"Ulduar",
"enUS",
},
[155872] = {
"Trapped Saurok",
"Mogu'shan Scenario",
"enUS",
},
[10596] = {
"Mother Smolderweb",
"Lower Blackrock Spire",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[151353] = {
"Mawrat",
"Torghast, Tower of the Damned",
"enUS",
},
[102566] = {
"Grimhorn the Enslaver",
"Vault of the Wardens",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
},
[74669] = {
"Crystalfire Totem",
"Razorfen Kraul",
},
[153401] = {
"K'thir Dominator",
"Horrific Vision of Orgrimmar",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
},
[75437] = {
"Quilboar Broodmentor",
"Razorfen Kraul",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[155951] = {
"Ruffer",
"Horrific Vision of Orgrimmar",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[12219] = {
"Barbed Lasher",
"Maraudon",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[3670] = {
"Lord Pythas",
"Wailing Caverns",
"enUS",
},
[184627] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
},
[24690] = {
"Wretched Husk",
"Magisters' Terrace",
"enUS",
},
[95861] = {
"Hatecoil Oracle",
"Eye of Azshara",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[157447] = {
"Fanatical Cultist",
"Ny'alotha, the Waking City",
"enUS",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
},
[212781] = {
"Dreamtalon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[158367] = {
"Basher Tentacle",
"Ny'alotha, the Waking City",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
},
[4303] = {
"Scarlet Abbot",
"Scarlet Monastery of Old",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
},
[160704] = {
"Letter Encrusted Void Globule",
"Horrific Vision of Stormwind",
"enUS",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
},
[154909] = {
"Sleepless Voidseeker",
"Karazhan Catacombs - HoA Scenario",
"enUS",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[28837] = {
"Stormforged Sentinel",
"Halls of Lightning",
"enUS",
},
[36272] = {
"Apothecary Frye",
"Shadowfang Keep",
},
[43614] = {
"Lockmaw",
"Lost City of the Tol'vir",
"enUS",
},
[8892] = {
"Anvilrage Footman",
"Blackrock Depths",
"enUS",
},
[75439] = {
"Novice Quilboar",
"Razorfen Kraul",
},
[161312] = {
"Crushing Tendril",
"Ny'alotha, the Waking City",
"enUS",
},
[157419] = {
"Void-Twisted Whelp",
"Blackwing Descent Scenario",
"enUS",
},
[201522] = {
"Summitshaper Lorac",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[29832] = {
"Drakkari Golem",
"Gundrak",
"enUS",
},
[182071] = {
"Guardian Automa",
"Sepulcher of the First Ones",
},
[28580] = {
"Hardened Steel Skycaller",
"Halls of Lightning",
"enUS",
},
[36916] = {
"Ghoul Minion",
"The Forge of Souls",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[18420] = {
"Sunseeker Geomancer",
"Tempest Keep: The Botanica",
"enUS",
},
[160061] = {
"Crawling Corruption",
"Horrific Vision of Stormwind",
"enUS",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[26802] = {
"Alliance Ranger",
"The Nexus",
"enUS",
},
[5291] = {
"Hakkari Frostwing",
"Sunken Temple",
},
[26930] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[75440] = {
"Quilboar Pebble-Watcher",
"Razorfen Kraul",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[105705] = {
"Bound Energy",
"Court of Stars",
},
[151872] = {
"Grip of Horror",
"Emerald Dream - HoA Scenario",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[9596] = {
"Bannok Grimaxe",
"Lower Blackrock Spire",
"enUS",
},
[198965] = {
"Horrific Aberration",
"Tyr's Fall Scenario",
"enUS",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
"enUS",
},
[9692] = {
"Bloodaxe Raider",
"Lower Blackrock Spire",
"enUS",
},
[155953] = {
"C'Thuffer",
"Horrific Vision of Orgrimmar",
"enUS",
},
[19508] = {
"Sunseeker Herbalist",
"Tempest Keep: The Botanica",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[182074] = {
"Acquisitions Automa",
"Sepulcher of the First Ones",
},
[155930] = {
"Deephive Chosen",
"Mogu'shan Scenario",
"enUS",
},
[159303] = {
"Monstrous Behemoth",
"Ny'alotha, the Waking City",
"enUS",
},
[91786] = {
"Gritslime Snail",
"Eye of Azshara",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
"enUS",
},
[84399] = {
"Vicious Mandragora",
"The Everbloom",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[5055] = {
"Deviate Lasher",
"Wailing Caverns",
"enUS",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[96934] = {
"Valarjar Trapper",
"Halls of Valor",
},
[44895] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[157825] = {
"Crazed Tormenter",
"Horrific Vision of Orgrimmar",
"enUS",
},
[78001] = {
"Cloudburst Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
"enUS",
},
[198968] = {
"Neltharion",
"Tyr's Fall Scenario",
"enUS",
},
[11859] = {
"Doomguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[163260] = {
"Vicious Ghoul",
"Redridge - 9xp Bastion",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[134083] = {
"7th Legion Enforcer",
"Stormwind Escape from Stockades",
"enUS",
},
[59100] = {
"Expired Test Subject",
"Scholomance",
"enUS",
},
[130274] = {
"Creeping Sludge",
"Maraudon",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
},
[131402] = {
"Underrot Tick",
"The Underrot",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[17653] = {
"Shadowmoon Channeler",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[198970] = {
"Ysera",
"Tyr's Fall Scenario",
"enUS",
},
[77905] = {
"Felborne Abyssal",
"Auchindoun",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
"enUS",
},
[184126] = {
"Defense Matrix Automa",
"Sepulcher of the First Ones",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[84401] = {
"Swift Sproutling",
"The Everbloom",
},
[185436] = {
"Remnant of Creation",
"Torghast, Tower of the Damned",
"enUS",
},
[61247] = {
"Glintrok Greenhorn",
"Mogu'shan Palace",
},
[198971] = {
"Nozdormu",
"Tyr's Fall Scenario",
"enUS",
},
[204030] = {
"Goblin Sapper",
"Dawn of the Infinite",
"enUS",
},
[44896] = {
"Pygmy Brute",
"Lost City of the Tol'vir",
"enUS",
},
[18421] = {
"Sunseeker Researcher",
"Tempest Keep: The Botanica",
"enUS",
},
[75247] = {
"Groyat, the Blind Hunter",
"Razorfen Kraul",
},
[17732] = {
"Lykul Wasp",
"Coilfang: The Underbog",
"enUS",
},
[30624] = {
"Feto",
"Ahn'kahet: The Old Kingdom",
},
[103597] = {
"Understone Lasher",
"Neltharion's Lair",
"enUS",
},
[5711] = {
"Ogom the Wretched",
"Sunken Temple",
},
[15547] = {
"Spectral Charger",
"Karazhan",
},
[22964] = {
"Priestess of Delight",
"Black Temple",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[5775] = {
"Verdan the Everliving",
"Wailing Caverns",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
},
[165189] = {
"Smierdziel",
"Shadowmoon Burial Grounds",
},
[185100] = {
"Seeker of Souls",
"Torghast, Tower of the Damned",
"enUS",
},
[96677] = {
"Steeljaw Grizzly",
"Halls of Valor",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[74555] = {
"Razorfen Hidecrusher",
"Razorfen Kraul",
},
[157807] = {
"Mawsworn Soulweaver",
"Torghast, Tower of the Damned",
"enUS",
},
[19509] = {
"Sunseeker Harvester",
"Tempest Keep: The Botanica",
"enUS",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
"enUS",
},
[95920] = {
"Animated Storm",
"Eye of Azshara",
"enUS",
},
[198974] = {
"Malygos",
"Tyr's Fall Scenario",
"enUS",
},
[138061] = {
"Venture Co. Longshoreman",
"The MOTHERLODE!!",
"enUS",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[205629] = {
"Crazed Experiment",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[105703] = {
"Mana Wyrm",
"Court of Stars",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[185268] = {
"Ebonsteel Construct",
"Sepulcher of the First Ones",
},
[44897] = {
"Pygmy Scout",
"Lost City of the Tol'vir",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
"enUS",
},
[185155] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
},
[157002] = {
"Imperial Enforcer",
"Torghast, Tower of the Damned",
"enUS",
},
[8317] = {
"Atal'ai Deathwalker's Spirit",
"Sunken Temple",
},
[6223] = {
"Leprous Defender",
"Gnomeregan",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
},
[154555] = {
"Amathet Artificer",
"Halls of Origination",
"enUS",
},
[24080] = {
"Dragonflayer Weaponsmith",
"Utgarde Keep",
},
[157003] = {
"Imperial Duelist",
"Torghast, Tower of the Damned",
"enUS",
},
[89011] = {
"Rylak Skyterror",
"Iron Docks",
},
[153531] = {
"Aqir Bonecrusher",
"Horrific Vision of Orgrimmar",
"enUS",
},
[17270] = {
"Bleeding Hollow Archer",
"Hellfire Citadel: Ramparts",
},
[179526] = {
"Troz'igal the Oppressor",
"Torghast, Tower of the Damned",
"enUS",
},
[17398] = {
"Nascent Fel Orc",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[17462] = {
"Shattered Hand Zealot",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[30419] = {
"Bound Water Elemental",
"Ahn'kahet: The Old Kingdom",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
},
[8893] = {
"Anvilrage Soldier",
"Blackrock Depths",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
},
[100529] = {
"Hatespawn Slime",
"Darkheart Thicket",
"enUS",
},
[97202] = {
"Olmyr the Enlightened",
"Halls of Valor",
},
[6575] = {
"Scarlet Trainee",
"Scarlet Monastery of Old",
"enUS",
},
[56799] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
"enUS",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[44898] = {
"Pygmy Firebreather",
"Lost City of the Tol'vir",
"enUS",
},
[18422] = {
"Sunseeker Botanist",
"Tempest Keep: The Botanica",
"enUS",
},
[161562] = {
"General Shar'az",
"Halls of Origination",
"enUS",
},
[130272] = {
"Constrictor Vine",
"Maraudon",
},
[181398] = {
"Mal'Ganis",
"Sepulcher of the First Ones",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[9018] = {
"High Interrogator Gerstahn",
"Blackrock Depths",
"enUS",
},
[133972] = {
"Heavy Cannon",
"Tol Dagor",
"enUS",
},
[22965] = {
"Devoted Steward",
"Black Temple",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[156089] = {
"Aqir Venomweaver",
"Horrific Vision of Orgrimmar",
"enUS",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
},
[61399] = {
"Glintrok Scout",
"Mogu'shan Palace",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
},
[9693] = {
"Bloodaxe Evoker",
"Lower Blackrock Spire",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[59487] = {
"Bubble Shield",
"Stormstout Brewery",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
},
[61245] = {
"Capacitor Totem",
"Sunken Temple",
},
[80649] = {
"Black Iron Wyrmcaller",
"Upper Blackrock Spire",
"enUS",
},
[158452] = {
"Mindtwist Tendril",
"Horrific Vision of Stormwind",
"enUS",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[78933] = {
"Herald of Sunrise",
"Skyreach",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
},
[28340] = {
"Infinite Adversary",
"The Culling of Stratholme",
},
[44981] = {
"Oathsworn Skinner",
"Lost City of the Tol'vir",
"enUS",
},
[156406] = {
"Voidbound Honor Guard",
"Horrific Vision of Orgrimmar",
"enUS",
},
[156825] = {
"Darkmaul Centurion",
"Darkmaul Citadel",
},
[77036] = {
"Black Iron Summoner",
"Upper Blackrock Spire",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
},
[184651] = {
"Subjugator Zeltoth",
"Sepulcher of the First Ones",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208198] = {
"Whiiskeyz",
"Scarlet Monastery",
"enUS",
},
[7247] = {
"Sandfury Soul Eater",
"Zul'Farrak",
},
[75194] = {
"Gnasher",
"Bloodmaul Slag Mines",
"enUS",
},
[79545] = {
"Nitrogg Thundertower",
"Grimrail Depot",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[157709] = {
"Dreliana",
"Blackwing Descent Scenario",
"enUS",
},
[3680] = {
"Serpentbloom Snake",
"Wailing Caverns",
"enUS",
},
[158035] = {
"Magister Umbric",
"Horrific Vision of Stormwind",
"enUS",
},
[17271] = {
"Bonechewer Destroyer",
"Hellfire Citadel: Ramparts",
},
[154871] = {
"Sleepless Operative",
"Karazhan Catacombs - HoA Scenario",
"enUS",
},
[17399] = {
"Seductress",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[91792] = {
"Stormwake Hydra",
"Eye of Azshara",
"enUS",
},
[158284] = {
"Craggle Wobbletop",
"Horrific Vision of Stormwind",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
"enUS",
},
[161746] = {
"Ossirat",
"Ny'alotha, the Waking City",
"enUS",
},
[153527] = {
"Aqir Swarmleader",
"Horrific Vision of Orgrimmar",
"enUS",
},
[156501] = {
"Ravnyr",
"Darkmaul Citadel",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[135002] = {
"Demonic Tyrant",
"Sepulcher of the First Ones",
},
[17975] = {
"High Botanist Freywinn",
"Tempest Keep: The Botanica",
"enUS",
},
[44260] = {
"Venomfang Crocolisk",
"Lost City of the Tol'vir",
"enUS",
},
[153942] = {
"Annihilator Lak'hal",
"Horrific Vision of Orgrimmar",
"enUS",
},
[56929] = {
"Krik'thik Protectorate",
"Gate of the Setting Sun",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[203594] = {
"Lumbering Boulder",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[15324] = {
"Qiraji Gladiator",
"Ruins of Ahn'Qiraj",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
},
[157016] = {
"Imperial Archivist",
"Torghast, Tower of the Damned",
"enUS",
},
[79548] = {
"Assault Cannon",
"Grimrail Depot",
"enUS",
},
[26805] = {
"Alliance Cleric",
"The Nexus",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[153943] = {
"Decimator Shiq'voth",
"Horrific Vision of Orgrimmar",
"enUS",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[75452] = {
"Bonemaw",
"Shadowmoon Burial Grounds",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[75964] = {
"Ranjit",
"Skyreach",
"enUS",
},
[170418] = {
"Goxul the Devourer",
"Torghast, Tower of the Damned",
"enUS",
},
[23222] = {
"Bonechewer Brawler",
"Black Temple",
"enUS",
},
[153526] = {
"Aqir Swarmer",
"Horrific Vision of Orgrimmar",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
},
[157109] = {
"Vampire Bat",
"Torghast, Tower of the Damned",
"enUS",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[3976] = {
"Scarlet Commander Mograine",
"Scarlet Monastery of Old",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
},
[162647] = {
"Willing Sacrifice",
"Ny'alotha, the Waking City",
"enUS",
},
[75453] = {
"Geomancer Acolyte",
"Razorfen Kraul",
},
[8095] = {
"Sul'lithuz Sandcrawler",
"Zul'Farrak",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
"enUS",
},
[8127] = {
"Antu'sul",
"Zul'Farrak",
},
[158041] = {
"N'Zoth the Corruptor",
"Ny'alotha, the Waking City",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
"enUS",
},
[16504] = {
"Arcane Protector",
"Karazhan",
"enUS",
},
[192337] = {
"Void Tendril",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184659] = {
"Dominated Sentinel",
"Sepulcher of the First Ones",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
},
[28341] = {
"Infinite Agent",
"The Culling of Stratholme",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
},
[75198] = {
"Bloodmaul Geomancer",
"Bloodmaul Slag Mines",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[159578] = {
"Exposed Synapse",
"Ny'alotha, the Waking City",
"enUS",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[28695] = {
"Molten Golem",
"Halls of Lightning",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
},
[102583] = {
"Fel Scorcher",
"Vault of the Wardens",
"enUS",
},
[102584] = {
"Malignant Defiler",
"Vault of the Wardens",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
},
[17464] = {
"Shattered Hand Gladiator",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
"enUS",
},
[71064] = {
"Large Illusionary Guardian",
"Proving Grounds",
"enUS",
},
[105699] = {
"Mana Saber",
"Court of Stars",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[8894] = {
"Anvilrage Medic",
"Blackrock Depths",
"enUS",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[48229] = {
"Kobold Digger",
"Deadmines",
"enUS",
},
[17976] = {
"Commander Sarannis",
"Tempest Keep: The Botanica",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[30111] = {
"Twilight Worshipper",
"Ahn'kahet: The Old Kingdom",
},
[29120] = {
"Anub'arak",
"Azjol-Nerub",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
},
[164188] = {
"Horrific Figment",
"Horrific Vision of Stormwind",
"enUS",
},
[201467] = {
"Stonebreath Summoner",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[194389] = {
"Lava Spawn",
"Neltharus",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[95675] = {
"God-King Skovald",
"Halls of Valor",
},
[45926] = {
"Servant of Asaad",
"The Vortex Pinnacle",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
},
[164189] = {
"Horrific Figment",
"Horrific Vision of Stormwind",
"enUS",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23223] = {
"Bonechewer Spectator",
"Black Temple",
"enUS",
},
[76309] = {
"Grand Defense Construct",
"Skyreach",
"enUS",
},
[198997] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[77935] = {
"Sargerei Warden",
"Auchindoun",
"enUS",
},
[19512] = {
"Nethervine Reaper",
"Tempest Keep: The Botanica",
"enUS",
},
[9268] = {
"Smolderthorn Berserker",
"Lower Blackrock Spire",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[95676] = {
"Odyn",
"Halls of Valor",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[48230] = {
"Ogre Henchman",
"Deadmines",
"enUS",
},
[54191] = {
"Risen Ghoul",
"End Time",
"enUS",
},
[77033] = {
"Black Iron Siegebreaker",
"Upper Blackrock Spire",
"enUS",
},
[5056] = {
"Deviate Dreadfang",
"Wailing Caverns",
"enUS",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[76696] = {
"Emberscale Adolescent",
"Upper Blackrock Spire",
"enUS",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
},
[5280] = {
"Nightmare Wyrmkin",
"Sunken Temple",
},
[92350] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
},
[29097] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[208727] = {
"Guardian Ordan",
"10.2. Nighthold",
"enUS",
},
[17401] = {
"Felhound Manastalker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
},
[17465] = {
"Shattered Hand Centurion",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[111290] = {
"Braxas the Fleshcarver",
"Black Rook Hold",
"enUS",
},
[7788] = {
"Sandfury Drudge",
"Zul'Farrak",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[61947] = {
"Kargesh Ribcrusher",
"Mogu'shan Palace",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[75715] = {
"Reanimated Ritual Bones",
"Shadowmoon Burial Grounds",
},
[5648] = {
"Sandfury Shadowcaster",
"Zul'Farrak",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[18105] = {
"Ghaz'an",
"Coilfang: The Underbog",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[44648] = {
"Unyielding Behemoth",
"Throne of the Tides",
},
[158565] = {
"Naros",
"Horrific Vision of Orgrimmar",
"enUS",
},
[15325] = {
"Hive'Zara Wasp",
"Ruins of Ahn'Qiraj",
"enUS",
},
[208729] = {
"Astromancer's Guard",
"10.2. Nighthold",
"enUS",
},
[139626] = {
"Dredged Sailor",
"Shrine of the Storm",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[74948] = {
"Roogug",
"Razorfen Kraul",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[6220] = {
"Irradiated Horror",
"Gnomeregan",
},
[9545] = {
"Grim Patron",
"Blackrock Depths",
"enUS",
},
[134069] = {
"Vol'zith the Whisperer",
"Shrine of the Storm",
"enUS",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[196394] = {
"Tuskarr Training Dummy",
"The Underrot",
"enUS",
},
[158567] = {
"Tormented Kor'kron Annihilator",
"Horrific Vision of Orgrimmar",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[80212] = {
"Frostspinner Spider",
"FW Horde Garrison Level 1",
"enUS",
},
[206172] = {
"Nymue",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[47720] = {
"Camel",
"Lost City of the Tol'vir",
"enUS",
},
[183138] = {
"Inchoate Shadow",
"Sepulcher of the First Ones",
},
[208525] = {
"Mycelial Growth",
"10.1.5 Time Rifts - Black Empire (Azq'roth)",
"enUS",
},
[96192] = {
"Wrathguard Cleaver",
"Broken Shore",
"enUS",
},
[75152] = {
"Death Speaker Jargba",
"Razorfen Kraul",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[99956] = {
"Fel-Infused Fury",
"Vault of the Wardens",
"enUS",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[39708] = {
"Twilight Flame Caller",
"Blackrock Caverns",
"enUS",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
},
[115388] = {
"King",
"Return to Karazhan",
},
[24696] = {
"Coilskar Witch",
"Magisters' Terrace",
"enUS",
},
[152939] = {
"Boundless Corruption",
"Horrific Vision of Stormwind",
"enUS",
},
[8319] = {
"Nightmare Whelp",
"Sunken Temple",
},
[81638] = {
"Aqueous Globule",
"The Everbloom",
},
[6112] = {
"Windfury Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[17370] = {
"Laughing Skull Enforcer",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[208734] = {
"Senior Researcher Alydrus",
"10.2. Nighthold",
"enUS",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
"enUS",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
},
[102295] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[134198] = {
"Stormwind Cleric",
"Stormwind Escape from Stockades",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
},
[92387] = {
"Drums of War",
"Neltharion's Lair",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[185154] = {
"Mal'Ganis",
"Sepulcher of the First Ones",
},
[75193] = {
"Bloodmaul Overseer",
"Bloodmaul Slag Mines",
"enUS",
},
[183206] = {
"Winged Soul Eater",
"Path of the Primus",
},
[9040] = {
"Dope'rel",
"Blackrock Depths",
"enUS",
},
[8895] = {
"Anvilrage Officer",
"Blackrock Depths",
"enUS",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
"enUS",
},
[194467] = {
"Brackenhide Slasher",
"Brackenhide Hollow",
"enUS",
},
[75975] = {
"Skyreach Overlord",
"Skyreach",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[28836] = {
"Stormforged Runeshaper",
"Halls of Lightning",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
},
[200035] = {
"Carrion Worm",
"Shadowmoon Burial Grounds",
},
[163690] = {
"Shath'Yar Scribe",
"Ny'alotha, the Waking City",
"enUS",
},
[17978] = {
"Thorngrin the Tender",
"Tempest Keep: The Botanica",
"enUS",
},
[22841] = {
"Shade of Akama",
"Black Temple",
"enUS",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
},
[91332] = {
"Stoneclaw Hunter",
"Neltharion's Lair",
"enUS",
},
[79303] = {
"Adorned Bladetalon",
"Skyreach",
"enUS",
},
[95939] = {
"Skrog Tidestomper",
"Eye of Azshara",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[75976] = {
"Low-Born Arakkoa",
"Skyreach",
"enUS",
},
[92612] = {
"Mightstone Breaker",
"Neltharion's Lair",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[97219] = {
"Solsten",
"Halls of Valor",
},
[179560] = {
"Fragment of Troz'igal",
"Torghast, Tower of the Damned",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[19514] = {
"Al'ar",
"Tempest Keep",
"enUS",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
},
[59751] = {
"Shado-Pan Warden",
"Shado-Pan Monastery",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
},
[159275] = {
"Portal Keeper",
"Horrific Vision of Stormwind",
"enUS",
},
[75209] = {
"Molten Earth Elemental",
"Bloodmaul Slag Mines",
"enUS",
},
[83624] = {
"Bloodmaul Enforcer",
"Bloodmaul Slag Mines",
"enUS",
},
[96196] = {
"Eredar Deathspeaker",
"Broken Shore",
"enUS",
},
[80211] = {
"Frostspinner Widow",
"FW Horde Garrison Level 1",
"enUS",
},
[144244] = {
"The Platinum Pummeler",
"Operation: Mechagon",
"enUS",
},
[157610] = {
"K'thir Dominator",
"Horrific Vision of Orgrimmar",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
},
[33134] = {
"Sara",
"Ulduar",
"enUS",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[24697] = {
"Sister of Torment",
"Magisters' Terrace",
"enUS",
},
[24761] = {
"Brightscale Wyrm",
"Magisters' Terrace",
"enUS",
},
[28920] = {
"Stormforged Giant",
"Halls of Lightning",
"enUS",
},
[16699] = {
"Shattered Hand Reaver",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[75210] = {
"Bloodmaul Warder",
"Bloodmaul Slag Mines",
"enUS",
},
[75466] = {
"Vile Bat",
"Razorfen Kraul",
},
[29304] = {
"Slad'ran",
"Gundrak",
"enUS",
},
[29240] = {
"Stormforged Lieutenant",
"Halls of Lightning",
"enUS",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[17083] = {
"Fel Orc Convert",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
},
[185030] = {
"The Grand Malleare",
"Torghast, Tower of the Damned",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[134063] = {
"Brother Ironhull",
"Shrine of the Storm",
"enUS",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
"enUS",
},
[137458] = {
"Rotting Spore",
"The Underrot",
"enUS",
},
[17723] = {
"Bog Giant",
"Coilfang: The Underbog",
"enUS",
},
[76773] = {
"Black Iron Apprentice",
"Upper Blackrock Spire",
"enUS",
},
[75467] = {
"Cave Bat",
"Razorfen Kraul",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[161140] = {
"Bwemba",
"Horrific Vision of Orgrimmar",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
},
[96480] = {
"Viletongue Belcher",
"Vault of the Wardens",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[83613] = {
"Koramar",
"Iron Docks",
},
[76593] = {
"Frost Wolf",
"FW Horde Garrison Level 1",
},
[157608] = {
"Faceless Willbreaker",
"Horrific Vision of Orgrimmar",
"enUS",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[185010] = {
"Cellblock Sentinel",
"Torghast, Tower of the Damned",
"enUS",
},
[111068] = {
"Archmage Galeorn",
"Black Rook Hold",
},
[184737] = {
"Acquisitions Automa",
"Sepulcher of the First Ones",
},
[131445] = {
"Block Warden",
"Tol Dagor",
"enUS",
},
[134945] = {
"Gnomish Gyro-Engineer",
"Stormwind Escape from Stockades",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23418] = {
"Essence of Suffering",
"Black Temple",
"enUS",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[83762] = {
"Grom'kar Deckhand",
"Iron Docks",
},
[134944] = {
"Dwarven Rifleman",
"Stormwind Escape from Stockades",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[75927] = {
"Azzakel",
"Auchindoun",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
},
[6235] = {
"Electrocutioner 6000",
"Gnomeregan",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
"enUS",
},
[17397] = {
"Shadowmoon Adept",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[185202] = {
"Coldheart Guardian",
"Torghast, Tower of the Damned",
"enUS",
},
[10374] = {
"Spire Spider",
"Lower Blackrock Spire",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
},
[130024] = {
"Soggy Shiprat",
"Freehold",
"enUS",
},
[95674] = {
"Fenryr",
"Halls of Valor",
},
[71072] = {
"Large Illusionary Sha",
"Proving Grounds",
"enUS",
},
[28729] = {
"Watcher Narjil",
"Azjol-Nerub",
"enUS",
},
[24698] = {
"Ethereum Smuggler",
"Magisters' Terrace",
"enUS",
},
[54123] = {
"Echo of Sylvanas",
"End Time",
"enUS",
},
[28921] = {
"Hadronox",
"Azjol-Nerub",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
},
[150396] = {
"Aerial Unit R-21/X",
"Operation: Mechagon",
"enUS",
},
[20923] = {
"Blood Guard Porung",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[29305] = {
"Moorabi",
"Gundrak",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[77006] = {
"Corpse Skitterling",
"Shadowmoon Burial Grounds",
},
[4289] = {
"Scarlet Evoker",
"Scarlet Monastery of Old",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
},
[150397] = {
"King Mechagon",
"Operation: Mechagon",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[184693] = {
"Living Flame",
"Vault of the Incarnates",
},
[5650] = {
"Sandfury Witch Doctor",
"Zul'Farrak",
},
[55659] = {
"Imp Gang Boss",
"Shadowmoon Burial Grounds",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
},
[158588] = {
"Gamon",
"Horrific Vision of Orgrimmar",
"enUS",
},
[24084] = {
"Tunneling Ghoul",
"Utgarde Keep",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[9024] = {
"Pyromancer Loregrain",
"Blackrock Depths",
"enUS",
},
[9056] = {
"Fineous Darkvire",
"Blackrock Depths",
"enUS",
},
[97084] = {
"King Tor",
"Halls of Valor",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
},
[184533] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[157605] = {
"Burrowing Appendage",
"Horrific Vision of Orgrimmar",
"enUS",
},
[26746] = {
"Crazed Mana-Wraith",
"The Nexus",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
"enUS",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
},
[80098] = {
"Ironbarb Skyreaver",
"Upper Blackrock Spire",
"enUS",
},
[95947] = {
"Mak'rana Hardshell",
"Eye of Azshara",
"enUS",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[9568] = {
"Overlord Wyrmthalak",
"Lower Blackrock Spire",
"enUS",
},
[9696] = {
"Bloodaxe Worg",
"Lower Blackrock Spire",
"enUS",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
},
[23419] = {
"Essence of Desire",
"Black Temple",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[43878] = {
"Grand Vizier Ertan",
"The Vortex Pinnacle",
},
[144295] = {
"Mechagon Mechanic",
"Operation: Mechagon",
"enUS",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[202613] = {
"Portalkeeper Cimbra",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
},
[144246] = {
"K.U.-J.0.",
"Operation: Mechagon",
"enUS",
},
[19964] = {
"Red Seedling",
"Tempest Keep: The Botanica",
"enUS",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[16700] = {
"Shattered Hand Legionnaire",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[28410] = {
"Dragonflayer Spiritualist",
"Utgarde Keep",
},
[126983] = {
"Harlan Sweete",
"Freehold",
"enUS",
},
[134197] = {
"Stormwind Royal Guard",
"Stormwind Escape from Stockades",
"enUS",
},
[19875] = {
"Baroness Dorothea Millstipe",
"Karazhan",
},
[163712] = {
"Dying Voidspawn",
"Ny'alotha, the Waking City",
"enUS",
},
[28730] = {
"Watcher Gashra",
"Azjol-Nerub",
"enUS",
},
[185211] = {
"Mawsworn Sentry",
"Torghast, Tower of the Damned",
"enUS",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[28922] = {
"Anub'ar Crusher",
"Azjol-Nerub",
"enUS",
},
[185244] = {
"Monstrous Guardian",
"Torghast, Tower of the Damned",
"enUS",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
},
[185212] = {
"Mawsworn Archer",
"Torghast, Tower of the Damned",
"enUS",
},
[29306] = {
"Gal'darah",
"Gundrak",
"enUS",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[201756] = {
"Whiiskeyz",
"Dawn of the Infinite",
"enUS",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
},
[134056] = {
"Aqu'sirr",
"Shrine of the Storm",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[17725] = {
"Underbog Lurker",
"Coilfang: The Underbog",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[157602] = {
"Drest'agath",
"Ny'alotha, the Waking City",
"enUS",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[6234] = {
"Mechanized Guardian",
"Gnomeregan",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[15327] = {
"Hive'Zara Stinger",
"Ruins of Ahn'Qiraj",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
"enUS",
},
[5649] = {
"Sandfury Blood Drinker",
"Kalimdor",
},
[5761] = {
"Deviate Shambler",
"Wailing Caverns",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[87761] = {
"Dungeoneer's Training Dummy",
"FW Horde Garrison Level 3",
"enUS",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
},
[23420] = {
"Essence of Anger",
"Black Temple",
"enUS",
},
[171396] = {
"Kyrian Goliath",
"Sepulcher of the First Ones",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[74553] = {
"Blood-Branded Razorfen",
"Razorfen Kraul",
},
[33651] = {
"VX-001",
"Ulduar",
"enUS",
},
[104217] = {
"Talixae Flamewreath",
"Court of Stars",
},
[6017] = {
"Lava Spout Totem",
"Zul'Farrak",
},
[77035] = {
"Black Iron Dreadweaver",
"Upper Blackrock Spire",
"enUS",
},
[58856] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[81362] = {
"Frostwall Goren",
"FW Horde Garrison Level 2",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[44922] = {
"Oathsworn Axemaster",
"Lost City of the Tol'vir",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
"enUS",
},
[28731] = {
"Watcher Silthik",
"Azjol-Nerub",
"enUS",
},
[135052] = {
"Blight Toad",
"Waycrest Manor",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
"enUS",
},
[28923] = {
"Loken",
"Halls of Lightning",
"enUS",
},
[6225] = {
"Mechano-Tank",
"Gnomeregan",
},
[29051] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[29307] = {
"Drakkari Colossus",
"Gundrak",
"enUS",
},
[54511] = {
"Time-Twisted Geist",
"End Time",
"enUS",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[27734] = {
"Crypt Fiend",
"The Culling of Stratholme",
},
[76205] = {
"Blooded Bladefeather",
"Skyreach",
"enUS",
},
[17724] = {
"Underbat",
"Coilfang: The Underbog",
"enUS",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
},
[201089] = {
"Remnants of Sindragosa",
"The Azure Vault",
"enUS",
},
[185221] = {
"Coldheart Javelineer",
"Torghast, Tower of the Damned",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
},
[17726] = {
"Wrathfin Myrmidon",
"Coilfang: The Underbog",
"enUS",
},
[8897] = {
"Doomforge Craftsman",
"Blackrock Depths",
"enUS",
},
[156575] = {
"Dark Inquisitor Xanesh",
"Ny'alotha, the Waking City",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[9025] = {
"Lord Roccor",
"Blackrock Depths",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[44658] = {
"Deep Murloc Invader",
"Throne of the Tides",
},
[179080] = {
"Empowered Mawsworn Cremator",
"Torghast, Tower of the Damned",
"enUS",
},
[204162] = {
"Córc",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[9554] = {
"Hammered Patron",
"Blackrock Depths",
"enUS",
},
[7787] = {
"Sandfury Slave",
"Zul'Farrak",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[197509] = {
"Primal Thundercloud",
"10.0 Dragon Isles",
},
[54512] = {
"Time-Twisted Sentinel",
"End Time",
"enUS",
},
[101074] = {
"Hatespawn Whelpling",
"Darkheart Thicket",
"enUS",
},
[8914] = {
"Twilight Bodyguard",
"Blackrock Depths",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
"enUS",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
},
[9216] = {
"Spirestone Warlord",
"Lower Blackrock Spire",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
},
[159632] = {
"Cultist Shadowblade",
"Horrific Vision of Stormwind",
"enUS",
},
[8899] = {
"Doomforge Dragoon",
"Blackrock Depths",
"enUS",
},
[185226] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
},
[9217] = {
"Spirestone Lord Magus",
"Lower Blackrock Spire",
"enUS",
},
[10177] = {
"Spire Scarab",
"Lower Blackrock Spire",
"enUS",
},
[69792] = {
"Akulakhan",
"Sepulcher of the First Ones",
},
[159633] = {
"Cultist Executioner",
"Horrific Vision of Stormwind",
"enUS",
},
[28732] = {
"Anub'ar Warrior",
"Azjol-Nerub",
"enUS",
},
[185227] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[28924] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[162715] = {
"Fanatical Cultist",
"Ny'alotha, the Waking City",
"enUS",
},
[136083] = {
"Forgotten Denizen",
"Shrine of the Storm",
"enUS",
},
[16409] = {
"Phantom Guest",
"Karazhan",
},
[17371] = {
"Shadowmoon Warlock",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[29819] = {
"Drakkari Lancer",
"Gundrak",
"enUS",
},
[29308] = {
"Prince Taldaram",
"Ahn'kahet: The Old Kingdom",
},
[3673] = {
"Lord Serpentis",
"Wailing Caverns",
"enUS",
},
[127124] = {
"Freehold Barhand",
"Freehold",
"enUS",
},
[199049] = {
"Flesh Spawn",
"Tyr's Fall Scenario",
"enUS",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
},
[8896] = {
"Shadowforge Peasant",
"Blackrock Depths",
"enUS",
},
[81983] = {
"Verdant Mandragora",
"The Everbloom",
},
[17280] = {
"Shattered Hand Warhound",
"Hellfire Citadel: Ramparts",
},
[29820] = {
"Drakkari God Hunter",
"Gundrak",
"enUS",
},
[162238] = {
"Darkwhisper Cultist",
"Blackwing Descent Scenario",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
},
[17727] = {
"Wrathfin Sentry",
"Coilfang: The Underbog",
"enUS",
},
[127503] = {
"Overseer Korgus",
"Tol Dagor",
"enUS",
},
[152988] = {
"Faceless Shadowcaller",
"Horrific Vision of Orgrimmar",
"enUS",
},
[17537] = {
"Vazruden",
"Hellfire Citadel: Ramparts",
},
[201464] = {
"Cinderstep Weaver",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[15168] = {
"Vile Scarab",
"Ruins of Ahn'Qiraj",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[113197] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[153874] = {
"Mawsworn Sentry",
"Torghast, Tower of the Damned",
"enUS",
},
[16704] = {
"Shattered Hand Sharpshooter",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[18431] = {
"Ethereal Beacon",
"Auchindoun: Mana-Tombs",
"enUS",
},
[28925] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[152987] = {
"Faceless Willbreaker",
"Horrific Vision of Orgrimmar",
"enUS",
},
[161173] = {
"Abyssal Watcher",
"Ny'alotha, the Waking City",
"enUS",
},
[130400] = {
"Irontide Crusher",
"Freehold",
"enUS",
},
[22846] = {
"Ashtongue Stormcaller",
"Black Temple",
"enUS",
},
[146329] = {
"Elven Shambler",
"The Sunwell",
"enUS",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
"enUS",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[205799] = {
"Cinderstep Melter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[184734] = {
"Sacred Matrix Automa",
"Sepulcher of the First Ones",
},
[13282] = {
"Noxxion",
"Maraudon",
},
[27389] = {
"Dalronn the Controller",
"Utgarde Keep",
},
[157253] = {
"Ka'zir",
"Ny'alotha, the Waking City",
"enUS",
},
[157275] = {
"Darkwhisper Disciple",
"Blackwing Descent Scenario",
"enUS",
},
[104918] = {
"Vigilant Duskwatch",
"Court of Stars",
},
[126928] = {
"Irontide Corsair",
"Freehold",
"enUS",
},
[58198] = {
"Shado-Pan Disciple",
"Shado-Pan Monastery",
"enUS",
},
[185233] = {
"Mawsworn Guard",
"Torghast, Tower of the Damned",
"enUS",
},
[28926] = {
"Spark of Ionar",
"Halls of Lightning",
"enUS",
},
[8910] = {
"Blazing Fireguard",
"Blackrock Depths",
"enUS",
},
[211339] = {
"Dream Seedling",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[100820] = {
"Spirit Wolf",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[75829] = {
"Nhallish",
"Shadowmoon Burial Grounds",
},
[17269] = {
"Bleeding Hollow Darkcaster",
"Hellfire Citadel: Ramparts",
},
[20031] = {
"Bloodwarder Legionnaire",
"Tempest Keep",
"enUS",
},
[76253] = {
"Dread Raven Hatchling",
"Skyreach",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[54507] = {
"Time-Twisted Scourge Beast",
"End Time",
"enUS",
},
[100818] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
},
[162828] = {
"Corrosive Digester",
"Ny'alotha, the Waking City",
"enUS",
},
[134194] = {
"Stormwind Knight",
"Stormwind Escape from Stockades",
"enUS",
},
[28733] = {
"Anub'ar Shadowcaster",
"Azjol-Nerub",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[74462] = {
"Warlord Ramtusk",
"Razorfen Kraul",
},
[157594] = {
"Lesser Void Elemental",
"Horrific Vision of Orgrimmar",
"enUS",
},
[154011] = {
"Armed Prisoner",
"Torghast, Tower of the Damned",
"enUS",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
},
[29117] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[8916] = {
"Arena Spectator",
"Blackrock Depths",
"enUS",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[29309] = {
"Elder Nadox",
"Ahn'kahet: The Old Kingdom",
},
[157083] = {
"Stonewing Ravager",
"Torghast, Tower of the Damned",
"enUS",
},
[4290] = {
"Scarlet Guardsman",
"Scarlet Monastery of Old",
"enUS",
},
[199050] = {
"Faceless Devourer",
"Tyr's Fall Scenario",
"enUS",
},
[154524] = {
"K'thir Mindcarver",
"Horrific Vision of Orgrimmar",
"enUS",
},
[166262] = {
"Decaying Corpse",
"Darkmaul Citadel",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[17477] = {
"Hellfire Imp",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[83622] = {
"Bloodmaul Ogre Mage",
"Bloodmaul Slag Mines",
"enUS",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
"enUS",
},
[17728] = {
"Murkblood Tribesman",
"Coilfang: The Underbog",
"enUS",
},
[8898] = {
"Anvilrage Marshal",
"Blackrock Depths",
"enUS",
},
[77927] = {
"Son of the Beast",
"Upper Blackrock Spire",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[177950] = {
"Soul Prison",
"Torghast, Tower of the Damned",
"enUS",
},
[5756] = {
"Deviate Venomwing",
"Wailing Caverns",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[18176] = {
"Tainted Earthgrab Totem",
"Coilfang: The Slave Pens",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[162716] = {
"Spellbound Ritualist",
"Ny'alotha, the Waking City",
"enUS",
},
[76018] = {
"Drakonid Monstrosity",
"Upper Blackrock Spire",
"enUS",
},
[9218] = {
"Spirestone Battle Lord",
"Lower Blackrock Spire",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
"enUS",
},
[152479] = {
"Void-Twisted Whelp",
"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario",
"enUS",
},
[185224] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
"enUS",
},
[158285] = {
"Tinkered Shieldbot",
"Horrific Vision of Stormwind",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[162717] = {
"Sinister Soulcarver",
"Ny'alotha, the Waking City",
"enUS",
},
[61340] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
},
[75509] = {
"Sadana Bloodfury",
"Shadowmoon Burial Grounds",
},
[6207] = {
"Caverndeep Ambusher",
"Gnomeregan",
},
[136100] = {
"Sunken Denizen",
"Shrine of the Storm",
"enUS",
},
[158092] = {
"Fallen Heartpiercer",
"Horrific Vision of Stormwind",
"enUS",
},
[182169] = {
"Lihuvim",
"Sepulcher of the First Ones",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[162718] = {
"Iron-Willed Enforcer",
"Ny'alotha, the Waking City",
"enUS",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[75061] = {
"Young Boar",
"Razorfen Kraul",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
},
[185241] = {
"Torment Golem",
"Torghast, Tower of the Damned",
"enUS",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[75416] = {
"Coldsnout Boar",
"FW Horde Garrison Level 1",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[162719] = {
"Void Ascendant",
"Ny'alotha, the Waking City",
"enUS",
},
[133007] = {
"Unbound Abomination",
"The Underrot",
"enUS",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[20032] = {
"Bloodwarder Vindicator",
"Tempest Keep",
"enUS",
},
[156577] = {
"Therum Deepforge",
"Horrific Vision of Stormwind",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
"enUS",
},
[154018] = {
"Prisonbreak Mauler",
"Torghast, Tower of the Damned",
"enUS",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[65522] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[28734] = {
"Anub'ar Skirmisher",
"Azjol-Nerub",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
"enUS",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
},
[8876] = {
"Sandfury Acolyte",
"Zul'Farrak",
},
[146341] = {
"Risen Defender",
"The Sunwell",
"enUS",
},
[29118] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
"enUS",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
},
[54517] = {
"Time-Twisted Shadowtalon",
"End Time",
"enUS",
},
[17400] = {
"Felguard Annihilator",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[157603] = {
"Void Globule",
"Horrific Vision of Orgrimmar",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
"enUS",
},
[17281] = {
"Bonechewer Ripper",
"Hellfire Citadel: Ramparts",
},
[29630] = {
"Fanged Pit Viper",
"Gundrak",
"enUS",
},
[197831] = {
"Quarry Stonebreaker",
"UNKNOWN",
},
[184733] = {
"Dominated Grunt",
"Sepulcher of the First Ones",
},
[29822] = {
"Drakkari Fire Weaver",
"Gundrak",
"enUS",
},
[59764] = {
"Healing Tide Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[157604] = {
"Crawling Corruption",
"Horrific Vision of Orgrimmar",
"enUS",
},
[17729] = {
"Murkblood Spearman",
"Coilfang: The Underbog",
"enUS",
},
[134058] = {
"Galecaller Faye",
"Shrine of the Storm",
"enUS",
},
[176572] = {
"Mawsworn Accursed",
"Torghast, Tower of the Damned",
"enUS",
},
[95061] = {
"Greater Fire Elemental",
"Sunken Temple",
},
[88288] = {
"Dungeoneer's Training Dummy",
"FW Horde Garrison Level 3",
"enUS",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[18177] = {
"Tainted Stoneskin Totem",
"Coilfang: The Slave Pens",
},
[163708] = {
"Umbral Gatekeeper",
"Ny'alotha, the Waking City",
"enUS",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[26529] = {
"Meathook",
"The Culling of Stratholme",
},
[184735] = {
"Degeneration Automa",
"Sepulcher of the First Ones",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[157094] = {
"Imperial Curator",
"Torghast, Tower of the Damned",
"enUS",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
},
[22848] = {
"Storm Fury",
"Black Temple",
"enUS",
},
[134060] = {
"Lord Stormsong",
"Shrine of the Storm",
"enUS",
},
[27829] = {
"Ebon Gargoyle",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[5762] = {
"Deviate Moccasin",
"Wailing Caverns",
"enUS",
},
[59605] = {
"Sodden Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[23232] = {
"Mutant War Hound",
"Black Temple",
"enUS",
},
[157607] = {
"Faceless Shadowcaller",
"Horrific Vision of Orgrimmar",
"enUS",
},
[146809] = {
"Tormented Magister",
"The Sunwell",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[104295] = {
"Blazing Imp",
"Court of Stars",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[144299] = {
"Workshop Defender",
"Operation: Mechagon",
"enUS",
},
[183498] = {
"Illicit Collector",
"Sepulcher of the First Ones",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
},
[185607] = {
"Lost Soul",
"Sepulcher of the First Ones",
},
[183202] = {
"Mawsworn Warden",
"Path of the Primus",
},
[28578] = {
"Hardened Steel Reaver",
"Halls of Lightning",
"enUS",
},
[127497] = {
"Ashvane Warden",
"Tol Dagor",
"enUS",
},
[20033] = {
"Astromancer",
"Tempest Keep",
"enUS",
},
[144300] = {
"Mechagon Citizen",
"Operation: Mechagon",
"enUS",
},
[6066] = {
"Earthgrab Totem",
"Sunken Temple",
},
[157609] = {
"K'thir Mindcarver",
"Horrific Vision of Orgrimmar",
"enUS",
},
[144248] = {
"Head Machinist Sparkflux",
"Operation: Mechagon",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[12258] = {
"Razorlash",
"Maraudon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[209254] = {
"High Inquisitor Whitemane",
"Scarlet Monastery of Old",
"enUS",
},
[144301] = {
"Living Waste",
"Operation: Mechagon",
"enUS",
},
[16507] = {
"Shattered Hand Sentry",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
},
[28835] = {
"Stormforged Construct",
"Halls of Lightning",
"enUS",
},
[203679] = {
"Anduin Lothar",
"Dawn of the Infinite",
"enUS",
},
[29119] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[159190] = {
"Synod",
"Torghast, Tower of the Damned",
"enUS",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[29311] = {
"Herald Volazj",
"Ahn'kahet: The Old Kingdom",
},
[157099] = {
"Imperial Censor",
"Torghast, Tower of the Damned",
"enUS",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[130521] = {
"Freehold Deckhand",
"Freehold",
"enUS",
},
[28419] = {
"Frenzied Geist",
"Utgarde Keep",
},
[75429] = {
"Quilboar Mealtender",
"Razorfen Kraul",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[144303] = {
"G.U.A.R.D.",
"Operation: Mechagon",
"enUS",
},
[7603] = {
"Leprous Assistant",
"Gnomeregan",
},
[157612] = {
"Eye of Drest'agath",
"Ny'alotha, the Waking City",
"enUS",
},
[17730] = {
"Murkblood Healer",
"Coilfang: The Underbog",
"enUS",
},
[138161] = {
"Mageguard Elite",
"Stormwind Escape from Stockades",
"enUS",
},
[150958] = {
"Mawsworn Guard",
"Torghast, Tower of the Damned",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
},
[184742] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
},
[76263] = {
"Sargerei Magus",
"Auchindoun",
"enUS",
},
[76157] = {
"Black Iron Leadbelcher",
"Upper Blackrock Spire",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
},
[154030] = {
"Oddly Large Mawrat",
"Torghast, Tower of the Damned",
"enUS",
},
[130522] = {
"Freehold Shipmate",
"Freehold",
"enUS",
},
[150959] = {
"Mawsworn Interceptor",
"Torghast, Tower of the Damned",
"enUS",
},
[9219] = {
"Spirestone Butcher",
"Lower Blackrock Spire",
"enUS",
},
[9201] = {
"Spirestone Ogre Magus",
"Lower Blackrock Spire",
"enUS",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
},
[157102] = {
"Imperial Consular",
"Torghast, Tower of the Damned",
"enUS",
},
[194469] = {
"Fledgling Slasher",
"Brackenhide Hollow",
"enUS",
},
[22849] = {
"Ashtongue Feral Spirit",
"Black Temple",
"enUS",
},
[158056] = {
"Rat",
"Horrific Vision of Stormwind",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[78735] = {
"Zar'shuul",
"Auchindoun",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[161198] = {
"Warpweaver Dushar",
"Horrific Vision of Orgrimmar",
"enUS",
},
[130011] = {
"Irontide Buccaneer",
"Freehold",
"enUS",
},
[76090] = {
"Blood-Branded Razorfen",
"Razorfen Kraul",
},
[183209] = {
"Soulseeker",
"Path of the Primus",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[3840] = {
"Druid of the Fang",
"Wailing Caverns",
"enUS",
},
[45672] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[27744] = {
"Infinite Agent",
"The Culling of Stratholme",
},
[159425] = {
"Occult Shadowmender",
"Ny'alotha, the Waking City",
"enUS",
},
[185181] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
},
[135254] = {
"Irontide Raider",
"Tol Dagor",
"enUS",
},
[56930] = {
"Krik'thik Swarm Bringer",
"Gate of the Setting Sun",
"enUS",
},
[20034] = {
"Star Scryer",
"Tempest Keep",
"enUS",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[130012] = {
"Irontide Ravager",
"Freehold",
"enUS",
},
[170414] = {
"Howling Spectre",
"Torghast, Tower of the Damned",
"enUS",
},
[57080] = {
"Corrupted Scroll",
"Temple of the Jade Serpent",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[9502] = {
"Phalanx",
"Blackrock Depths",
"enUS",
},
[28736] = {
"Skittering Infector",
"Azjol-Nerub",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[83621] = {
"Bloodmaul Magma Binder",
"Bloodmaul Slag Mines",
"enUS",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
"enUS",
},
[76407] = {
"Ner'zhul",
"Shadowmoon Burial Grounds",
},
[10467] = {
"Mana Tide Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
"enUS",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
},
[76266] = {
"High Sage Viryx",
"Skyreach",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
},
[76778] = {
"Life-Pact Familiar",
"Skyreach",
"enUS",
},
[77034] = {
"Black Iron Veteran",
"Upper Blackrock Spire",
"enUS",
},
[203688] = {
"Horde Grunt",
"Dawn of the Infinite",
"enUS",
},
[150965] = {
"Mawsworn Shackler",
"Torghast, Tower of the Damned",
"enUS",
},
[201465] = {
"Cinderstep Melter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[98533] = {
"Foul Mother",
"Vault of the Wardens",
"enUS",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[74475] = {
"Magmolatus",
"Bloodmaul Slag Mines",
"enUS",
},
[157620] = {
"Prophet Skitra",
"Ny'alotha, the Waking City",
"enUS",
},
[17731] = {
"Fen Ray",
"Coilfang: The Underbog",
"enUS",
},
[129550] = {
"Bilge Rat Padfoot",
"Freehold",
"enUS",
},
[135699] = {
"Ashvane Jailer",
"Tol Dagor",
"enUS",
},
[44261] = {
"Sharptalon Eagle",
"Lost City of the Tol'vir",
"enUS",
},
[28579] = {
"Hardened Steel Berserker",
"Halls of Lightning",
"enUS",
},
[76267] = {
"Solar Zealot",
"Skyreach",
"enUS",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[36478] = {
"Soulguard Watchman",
"The Forge of Souls",
"enUS",
},
[154550] = {
"Amathet Sun Priest",
"Halls of Origination",
"enUS",
},
[44924] = {
"Oathsworn Myrmidon",
"Lost City of the Tol'vir",
"enUS",
},
[77803] = {
"Railmaster Rocketspark",
"Grimrail Depot",
"enUS",
},
[19511] = {
"Nethervine Inciter",
"Tempest Keep: The Botanica",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[1933] = {
"Sheep",
"The Culling of Stratholme",
},
[145337] = {
"Sandclaw Crab",
"The Eternal Palace",
"enUS",
},
[170419] = {
"Lost Dredger",
"Torghast, Tower of the Damned",
"enUS",
},
[8908] = {
"Molten War Golem",
"Blackrock Depths",
"enUS",
},
[71414] = {
"Large Illusionary Banana-Tosser",
"Proving Grounds",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[160182] = {
"Void Initiate",
"Ny'alotha, the Waking City",
"enUS",
},
[185665] = {
"Bloated Mawroach",
"Torghast, Tower of the Damned",
"enUS",
},
[3640] = {
"Evolving Ectoplasm",
"Wailing Caverns",
"enUS",
},
[80875] = {
"Bombsquad",
"Iron Docks",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
},
[154552] = {
"Amathet Zealot",
"Halls of Origination",
"enUS",
},
[130087] = {
"Irontide Raider",
"Tol Dagor",
"enUS",
},
[61242] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
},
[160183] = {
"Void Fanatic",
"Ny'alotha, the Waking City",
"enUS",
},
[159309] = {
"Leeching Parasite",
"Ny'alotha, the Waking City",
"enUS",
},
[29874] = {
"Drakkari Inciter",
"Gundrak",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
},
[158136] = {
"Inquisitor Darkspeak",
"Horrific Vision of Stormwind",
"enUS",
},
[151798] = {
"Vexiona",
"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario",
"enUS",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
"enUS",
},
[79852] = {
"Oshir",
"Iron Docks",
},
[20035] = {
"Bloodwarder Marshal",
"Tempest Keep",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[157442] = {
"Gaze of Madness",
"Ny'alotha, the Waking City",
"enUS",
},
[77037] = {
"Black Iron Elite",
"Upper Blackrock Spire",
"enUS",
},
[154554] = {
"Amathet Guardian",
"Halls of Origination",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[75191] = {
"Bloodmaul Slaver",
"Bloodmaul Slag Mines",
"enUS",
},
[61945] = {
"Gurthan Iron Maw",
"Stormstout Brewery",
},
[33699] = {
"Storm Tempered Keeper",
"Ulduar",
"enUS",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[76179] = {
"Black Iron Grunt",
"Upper Blackrock Spire",
"enUS",
},
[71075] = {
"Small Illusionary Banshee",
"Proving Grounds",
"enUS",
},
[107435] = {
"Suspicious Noble",
"Court of Stars",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[153532] = {
"Aqir Mindhunter",
"Horrific Vision of Orgrimmar",
"enUS",
},
[130273] = {
"Celebrian Dryad",
"Maraudon",
},
[161335] = {
"Void Horror",
"Ny'alotha, the Waking City",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[151881] = {
"Abyssal Commander Sivara",
"The Eternal Palace",
"enUS",
},
[73967] = {
"Niuzao",
"Dawn of the Infinite",
"enUS",
},
[160699] = {
"Angry Mailemental",
"Horrific Vision of Stormwind",
"enUS",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[201832] = {
"Drained Djaradin",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[158140] = {
"Frenzied Rat",
"Horrific Vision of Stormwind",
"enUS",
},
[8900] = {
"Doomforge Arcanasmith",
"Blackrock Depths",
"enUS",
},
[16529] = {
"Magical Horror",
"Karazhan",
"enUS",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[91789] = {
"Lady Hatecoil",
"Eye of Azshara",
"enUS",
},
[48351] = {
"Mine Bunny",
"Deadmines",
"enUS",
},
[153022] = {
"Snang",
"Horrific Vision of Orgrimmar",
"enUS",
},
[7272] = {
"Theka the Martyr",
"Zul'Farrak",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[9156] = {
"Ambassador Flamelash",
"Blackrock Depths",
"enUS",
},
[44926] = {
"Oathsworn Wanderer",
"Lost City of the Tol'vir",
"enUS",
},
[77096] = {
"Vilemaw Hatchling",
"Upper Blackrock Spire",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[185271] = {
"Stellar Mote",
"Sepulcher of the First Ones",
},
[157118] = {
"Royal Advisor",
"Torghast, Tower of the Damned",
"enUS",
},
[61946] = {
"Harthak Stormcaller",
"Stormstout Brewery",
},
[9265] = {
"Smolderthorn Shadow Hunter",
"Lower Blackrock Spire",
"enUS",
},
[134084] = {
"7th Legion Sharpshooter",
"Stormwind Escape from Stockades",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[9476] = {
"Watchman Doomgrip",
"Blackrock Depths",
"enUS",
},
[81305] = {
"Fleshrender Nok'gar",
"Iron Docks",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
},
[23235] = {
"Bonechewer Blade Fury",
"Black Temple",
"enUS",
},
[97259] = {
"Blazing Hydra Spawn",
"Eye of Azshara",
"enUS",
},
[130275] = {
"Sister of Celebras",
"Maraudon",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
},
[61339] = {
"Glintrok Oracle",
"Mogu'shan Palace",
},
[137892] = {
"Crier Goodman",
"Stormwind Escape from Stockades",
"enUS",
},
[83616] = {
"Zoggosh",
"Iron Docks",
},
[159764] = {
"Jesh'ra",
"Ny'alotha, the Waking City",
"enUS",
},
[183931] = {
"Dominated Guardian",
"Torghast, Tower of the Damned",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[9956] = {
"Shadowforge Flame Keeper",
"Blackrock Depths",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
},
[20036] = {
"Bloodwarder Squire",
"Tempest Keep",
"enUS",
},
[185274] = {
"Astral Particle",
"Sepulcher of the First Ones",
},
[29064] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[60447] = {
"Krik'thik Saboteur",
"Gate of the Setting Sun",
"enUS",
},
[28546] = {
"Ionar",
"Halls of Lightning",
"enUS",
},
[65402] = {
"Gurthan Swiftblade",
"Mogu'shan Palace",
},
[74356] = {
"Captured Miner",
"Bloodmaul Slag Mines",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
"enUS",
},
[185275] = {
"Kelmortos",
"Sepulcher of the First Ones",
},
[161217] = {
"Aqir Skitterer",
"Ny'alotha, the Waking City",
"enUS",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[158146] = {
"Fallen Riftwalker",
"Horrific Vision of Stormwind",
"enUS",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[134091] = {
"7th Legion Battlemage",
"Stormwind Escape from Stockades",
"enUS",
},
[176574] = {
"Mawsworn Soulkeeper",
"Torghast, Tower of the Damned",
"enUS",
},
[5283] = {
"Nightmare Wanderer",
"Sunken Temple",
},
[161218] = {
"Aqir Crusher",
"Ny'alotha, the Waking City",
"enUS",
},
[58876] = {
"Starving Hound",
"Scarlet Halls",
"enUS",
},
[77042] = {
"Sargerei Defender",
"Auchindoun",
"enUS",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[22962] = {
"Mistress of Woe",
"Black Temple",
"enUS",
},
[86000] = {
"Gentle Clefthoof",
"FW Horde Garrison Level 1",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[44577] = {
"General Husam",
"Lost City of the Tol'vir",
"enUS",
},
[153541] = {
"Slavemaster Ul'rok",
"Horrific Vision of Stormwind",
"enUS",
},
[76057] = {
"Carrion Worm",
"Shadowmoon Burial Grounds",
},
[179135] = {
"Mawsworn Soulkeeper",
"Torghast, Tower of the Damned",
"enUS",
},
[83697] = {
"Grom'kar Deckhand",
"Iron Docks",
},
[157486] = {
"Horrific Hemorrhage",
"Ny'alotha, the Waking City",
"enUS",
},
[176576] = {
"Mawsworn Pyremancer",
"Torghast, Tower of the Damned",
"enUS",
},
[30338] = {
"Ahn'kahar Swarmer",
"Ahn'kahet: The Old Kingdom",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
},
[179136] = {
"Imperial Archivist",
"Torghast, Tower of the Damned",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[82418] = {
"Black Iron Rageguard",
"Upper Blackrock Spire",
"enUS",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
"enUS",
},
[74545] = {
"Razorfen Geomagus",
"Razorfen Kraul",
},
[5763] = {
"Nightmare Ectoplasm",
"Wailing Caverns",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[23172] = {
"Hand of Gorefiend",
"Black Temple",
"enUS",
},
[23236] = {
"Bonechewer Shield Disciple",
"Black Temple",
"enUS",
},
[84978] = {
"Bloodmaul Enforcer",
"Bloodmaul Slag Mines",
"enUS",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
"enUS",
},
[183745] = {
"Guardian Automa",
"Sepulcher of the First Ones",
},
[77812] = {
"Sargerei Soulbinder",
"Auchindoun",
"enUS",
},
[152009] = {
"Malfunctioning Scrapbot",
"Operation: Mechagon",
"enUS",
},
[76694] = {
"Emberscale Whelpling",
"Upper Blackrock Spire",
"enUS",
},
[94960] = {
"Hymdall",
"Halls of Valor",
},
[155272] = {
"Blackwater Oracle",
"The Eternal Palace",
"enUS",
},
[19781] = {
"Astral Flare",
"Karazhan",
"enUS",
},
[16411] = {
"Spectral Chef",
"Karazhan",
},
[95984] = {
"Mo'arg Brutalizer",
"Broken Shore",
"enUS",
},
[204262] = {
"Necrofrost",
"Dawn of the Infinite",
"enUS",
},
[20037] = {
"Tempest Falconer",
"Tempest Keep",
"enUS",
},
[24560] = {
"Priestess Delrissa",
"Magisters' Terrace",
"enUS",
},
[180990] = {
"The Jailer",
"Sepulcher of the First Ones",
},
[97264] = {
"Hatecoil Shellbreaker",
"Eye of Azshara",
"enUS",
},
[95885] = {
"Tirathon Saltheril",
"Vault of the Wardens",
"enUS",
},
[28547] = {
"Storming Vortex",
"Halls of Lightning",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[100876] = {
"Val'kyr Battlemaiden",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[99922] = {
"Ebonclaw Packmate",
"Halls of Valor",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[6211] = {
"Caverndeep Reaver",
"Gnomeregan",
},
[79093] = {
"Skyreach Sun Talon",
"Skyreach",
"enUS",
},
[91634] = {
"Wrathguard Cleaver",
"Broken Shore",
"enUS",
},
[71415] = {
"Small Illusionary Banana-Tosser",
"Proving Grounds",
"enUS",
},
[61389] = {
"Kargesh Highguard",
"Mogu'shan Palace",
},
[28231] = {
"Crystalline Tender",
"The Nexus",
},
[205759] = {
"Whirling Torrent",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
},
[130025] = {
"Irontide Thug",
"Tol Dagor",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
"enUS",
},
[193558] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
},
[17414] = {
"Shadowmoon Technician",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59518] = {
"Bloated Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[127381] = {
"Silt Crab",
"Tol Dagor",
"enUS",
},
[137351] = {
"Stormwind City Guard",
"Stormwind Escape from Stockades",
"enUS",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[17734] = {
"Underbog Lord",
"Coilfang: The Underbog",
"enUS",
},
[8901] = {
"Anvilrage Reservist",
"Blackrock Depths",
"enUS",
},
[29098] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
},
[17990] = {
"Underbog Mushroom",
"Coilfang: The Underbog",
"enUS",
},
[132051] = {
"Blood Tick",
"The Underrot",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
},
[40579] = {
"Deep Murloc Hunter",
"Throne of the Tides",
},
[81398] = {
"Frostwall Goren Hatchling",
"FW Horde Garrison Level 2",
"enUS",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[161229] = {
"Aqir Venomweaver",
"Ny'alotha, the Waking City",
"enUS",
},
[190406] = {
"Aqualing",
"Halls of Infusion",
},
[22853] = {
"Illidari Defiler",
"Black Temple",
"enUS",
},
[22917] = {
"Illidan Stormrage",
"Black Temple",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Freehold",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23237] = {
"Bonechewer Blood Prophet",
"Black Temple",
"enUS",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
},
[24686] = {
"Sunblade Warlock",
"Magisters' Terrace",
"enUS",
},
[417] = {
"Phuutom",
"Sepulcher of the First Ones",
},
[98035] = {
"Dreadstalker",
"Shadowmoon Burial Grounds",
},
[77816] = {
"Borka the Brute",
"Grimrail Depot",
"enUS",
},
[59519] = {
"Stout Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[169421] = {
"Felguard",
"Brackenhide Hollow",
"enUS",
},
[9098] = {
"Scarshield Spellbinder",
"Lower Blackrock Spire",
"enUS",
},
[75001] = {
"Hunter Bonetusk",
"Razorfen Kraul",
},
[48447] = {
"Monstrous Parrot",
"Deadmines",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[24069] = {
"Dragonflayer Bonecrusher",
"Utgarde Keep",
},
[20038] = {
"Phoenix-Hawk Hatchling",
"Tempest Keep",
"enUS",
},
[185103] = {
"Adjutant Felipos",
"Torghast, Tower of the Damned",
"enUS",
},
[157137] = {
"Terror Tendril",
"Halls of Origination",
"enUS",
},
[130028] = {
"Ashvane Priest",
"Tol Dagor",
"enUS",
},
[30625] = {
"Neõs",
"Ahn'kahet: The Old Kingdom",
},
[8912] = {
"Twilight's Hammer Torturer",
"Blackrock Depths",
"enUS",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[150249] = {
"Pistonhead Scrapper",
"Operation: Mechagon",
"enUS",
},
[43934] = {
"Soul Fragment",
"Lost City of the Tol'vir",
"enUS",
},
[98963] = {
"Blazing Imp",
"Vault of the Wardens",
"enUS",
},
[161745] = {
"Hepthys",
"Ny'alotha, the Waking City",
"enUS",
},
[24685] = {
"Sunblade Magister",
"Magisters' Terrace",
"enUS",
},
[7267] = {
"Chief Ukorz Sandscalp",
"Zul'Farrak",
},
[33670] = {
"Aerial Command Unit",
"Ulduar",
"enUS",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
},
[129517] = {
"Reanimated Raptor",
"Atal'Dazar",
"enUS",
},
[3674] = {
"Skum",
"Wailing Caverns",
"enUS",
},
[97269] = {
"Hatecoil Crestrider",
"Eye of Azshara",
"enUS",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
},
[54544] = {
"Echo of Tyrande",
"End Time",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[98293] = {
"Saltsea Globule",
"Eye of Azshara",
"enUS",
},
[59520] = {
"Fizzy Brew Alemental",
"Stormstout Brewery",
},
[74366] = {
"Forgemaster Gog'duh",
"Bloodmaul Slag Mines",
"enUS",
},
[169425] = {
"Felhound",
"Brackenhide Hollow",
"enUS",
},
[17671] = {
"Shattered Hand Champion",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[17735] = {
"Wrathfin Warrior",
"Coilfang: The Underbog",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
},
[24684] = {
"Sunblade Blood Knight",
"Magisters' Terrace",
"enUS",
},
[30276] = {
"Ahn'kahar Web Winder",
"Ahn'kahet: The Old Kingdom",
},
[99728] = {
"Grimguard",
"Vault of the Wardens",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
},
[84985] = {
"Spore Image",
"The Everbloom",
"enUS",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[18311] = {
"Ethereal Crypt Raider",
"Auchindoun: Mana-Tombs",
"enUS",
},
[44932] = {
"Oathsworn Pathfinder",
"Lost City of the Tol'vir",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[95887] = {
"Glazer",
"Vault of the Wardens",
"enUS",
},
[153244] = {
"Oblivion Elemental",
"Horrific Vision of Orgrimmar",
"enUS",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
},
[61445] = {
"Haiyan the Unstoppable",
"Mogu'shan Palace",
},
[17626] = {
"Laughing Skull Legionnaire",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[96247] = {
"Vileshard Crawler",
"Neltharion's Lair",
"enUS",
},
[81297] = {
"Dreadfang",
"Iron Docks",
},
[95843] = {
"King Haldor",
"Halls of Valor",
},
[169428] = {
"Wrathguard",
"Brackenhide Hollow",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
},
[152835] = {
"Crystalized Azerite",
"The Maelstrom - Heart of Azeroth",
"enUS",
},
[157441] = {
"Void Wraith",
"Blackwing Descent Scenario",
"enUS",
},
[178427] = {
"Deadsoul Wraith",
"Torghast, Tower of the Damned",
"enUS",
},
[59521] = {
"Bubbling Brew Alemental",
"Stormstout Brewery",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[169429] = {
"Shivarra",
"Brackenhide Hollow",
},
[23403] = {
"Illidari Assassin",
"Black Temple",
"enUS",
},
[158168] = {
"Dark Disciple",
"Halls of Origination",
"enUS",
},
[8035] = {
"Dark Iron Land Mine",
"Gnomeregan",
},
[23083] = {
"Shadowmoon Riding Hound",
"Black Temple",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
},
[20039] = {
"Phoenix-Hawk",
"Tempest Keep",
"enUS",
},
[203763] = {
"Alliance Footman",
"Dawn of the Infinite",
"enUS",
},
[56706] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
"enUS",
},
[162534] = {
"Anubisath Sentinel",
"Ny'alotha, the Waking City",
"enUS",
},
[158169] = {
"Devout Disciple",
"Halls of Origination",
"enUS",
},
[159768] = {
"Deresh of the Nothingness",
"Ny'alotha, the Waking City",
"enUS",
},
[155098] = {
"Rexxar",
"Horrific Vision of Orgrimmar",
"enUS",
},
[29774] = {
"Spitting Cobra",
"Gundrak",
"enUS",
},
[155273] = {
"Garval the Vanquisher",
"The Eternal Palace",
"enUS",
},
[82428] = {
"Emberscale Ironflight",
"Upper Blackrock Spire",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[33288] = {
"Yogg-Saron",
"Ulduar",
"enUS",
},
[155275] = {
"Tideshaper Korvess",
"The Eternal Palace",
"enUS",
},
[20050] = {
"Crimson Hand Inquisitor",
"Tempest Keep",
"enUS",
},
[134624] = {
"Town Crier",
"Stormwind Escape from Stockades",
"enUS",
},
[28684] = {
"Krik'thir the Gatewatcher",
"Azjol-Nerub",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
"enUS",
},
[21127] = {
"Coilfang Tempest",
"Coilfang: The Slave Pens",
},
[17096] = {
"Astral Flare",
"Karazhan",
"enUS",
},
[4292] = {
"Scarlet Protector",
"Scarlet Monastery of Old",
"enUS",
},
[158171] = {
"Faceless Destroyer",
"Halls of Origination",
"enUS",
},
[29573] = {
"Drakkari Elemental",
"Gundrak",
"enUS",
},
[29637] = {
"Crafty Snake",
"Gundrak",
"enUS",
},
[155612] = {
"Azsh'ari Channeler",
"The Eternal Palace",
"enUS",
},
[59522] = {
"Sudsy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[29829] = {
"Drakkari Earthshaker",
"Gundrak",
"enUS",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
"enUS",
},
[74751] = {
"Solarshard Totem",
"Razorfen Kraul",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[8902] = {
"Shadowforge Citizen",
"Blackrock Depths",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[62858] = {
"Beast",
"Shadowmoon Burial Grounds",
},
[205265] = {
"Time-Displaced Trooper",
"Dawn of the Infinite",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[113398] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
},
[105720] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[18312] = {
"Ethereal Spellbinder",
"Auchindoun: Mana-Tombs",
"enUS",
},
[160404] = {
"Angry Bear Rug Spirit",
"Horrific Vision of Stormwind",
"enUS",
},
[45062] = {
"Oathsworn Scorpid Keeper",
"Lost City of the Tol'vir",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[24553] = {
"Apoko",
"Magisters' Terrace",
"enUS",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[22855] = {
"Illidari Nightlord",
"Black Temple",
"enUS",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[23047] = {
"Shadowmoon Soldier",
"Black Temple",
"enUS",
},
[23111] = {
"Shadowy Construct",
"Black Temple",
"enUS",
},
[34057] = {
"Assault Bot",
"Ulduar",
"enUS",
},
[23239] = {
"Bonechewer Combatant",
"Black Temple",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[81407] = {
"Grimrail Bombardier",
"Grimrail Depot",
"enUS",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[155616] = {
"Zanj'ir Brute",
"The Eternal Palace",
"enUS",
},
[47238] = {
"Whipping Wind",
"The Vortex Pinnacle",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[8983] = {
"Golem Lord Argelmach",
"Blackrock Depths",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[99664] = {
"Restless Soul",
"Black Rook Hold",
"enUS",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
},
[24071] = {
"Dragonflayer Heartsplitter",
"Utgarde Keep",
},
[48262] = {
"Ogre Bodyguard",
"Deadmines",
"enUS",
},
[156641] = {
"Enthralled Weaponsmith",
"Horrific Vision of Stormwind",
"enUS",
},
[155656] = {
"Misha",
"Horrific Vision of Orgrimmar",
"enUS",
},
[76801] = {
"Ragewing Whelp",
"Upper Blackrock Spire",
"enUS",
},
[40584] = {
"Naz'jar Invader",
"Throne of the Tides",
},
[97788] = {
"Storm Drake",
"Halls of Valor",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
},
[45063] = {
"Bonesnapper Scorpid",
"Lost City of the Tol'vir",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
},
[156642] = {
"Enthralled Laborer",
"Horrific Vision of Stormwind",
"enUS",
},
[30622] = {
"Neõs",
"Ahn'kahet: The Old Kingdom",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[158690] = {
"Cultist Tormenter",
"Horrific Vision of Stormwind",
"enUS",
},
[208521] = {
"Pumpkin Soldier",
"Scarlet Monastery",
"enUS",
},
[155619] = {
"Zanj'ir Honor Guard",
"The Eternal Palace",
"enUS",
},
[49045] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[21128] = {
"Coilfang Ray",
"Coilfang: The Slave Pens",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[139269] = {
"Gloom Horror",
"Waycrest Manor",
},
[29340] = {
"Anub'ar Brood Keeper",
"Azjol-Nerub",
"enUS",
},
[29830] = {
"Living Mojo",
"Gundrak",
"enUS",
},
[161251] = {
"Cultist Sycophant",
"Ny'alotha, the Waking City",
"enUS",
},
[183496] = {
"Foul Gorger",
"Sepulcher of the First Ones",
},
[26716] = {
"Azure Warder",
"The Nexus",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
"enUS",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[129526] = {
"Bilge Rat Swabby",
"Freehold",
"enUS",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[4294] = {
"Scarlet Sorcerer",
"Scarlet Monastery of Old",
"enUS",
},
[99655] = {
"Void-Touched Juggernaut",
"Vault of the Wardens",
"enUS",
},
[18313] = {
"Ethereal Sorcerer",
"Auchindoun: Mana-Tombs",
"enUS",
},
[134701] = {
"Blood Effigy",
"The Underrot",
"enUS",
},
[61444] = {
"Ming the Cunning",
"Mogu'shan Palace",
},
[8911] = {
"Fireguard Destroyer",
"Blackrock Depths",
"enUS",
},
[127479] = {
"The Sand Queen",
"Tol Dagor",
"enUS",
},
[157158] = {
"Cultist Slavedriver",
"Horrific Vision of Stormwind",
"enUS",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
},
[17429] = {
"Fel Orc Neophyte",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59458] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[16406] = {
"Phantom Attendant",
"Karazhan",
},
[46251] = {
"Riverpaw Looter",
"Stormwind Stockade",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[212681] = {
"Vicious Snap Dragon",
"Throne of the Tides",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[77180] = {
"Emberscale Ironflight",
"Upper Blackrock Spire",
"enUS",
},
[127480] = {
"Stinging Parasite",
"Tol Dagor",
"enUS",
},
[153065] = {
"Voidbound Ravager",
"Horrific Vision of Orgrimmar",
"enUS",
},
[153119] = {
"Lesser Void Elemental",
"Horrific Vision of Orgrimmar",
"enUS",
},
[22950] = {
"High Nethermancer Zerevor",
"Black Temple",
"enUS",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[28167] = {
"Risen Zombie",
"The Culling of Stratholme",
},
[20041] = {
"Crystalcore Sentinel",
"Tempest Keep",
"enUS",
},
[24200] = {
"Skarvald the Constructor",
"Utgarde Keep",
},
[214075] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22299] = {
"Spore Strider",
"Coilfang: The Underbog",
"enUS",
},
[98677] = {
"Rook Spiderling",
"Black Rook Hold",
"enUS",
},
[45065] = {
"Tol'vir Merchant",
"Lost City of the Tol'vir",
"enUS",
},
[213576] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[156650] = {
"Dark Manifestation",
"Ny'alotha, the Waking City",
"enUS",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
},
[29063] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[213607] = {
"Deep Sea Murloc",
"Throne of the Tides",
"enUS",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
},
[210437] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
"enUS",
},
[17826] = {
"Swamplord Musel'ek",
"Coilfang: The Underbog",
"enUS",
},
[210910] = {
"Doomfiend",
"Waycrest Manor",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[46375] = {
"Rowdy Troublemaker",
"Stormwind Stockade",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[155628] = {
"Azsh'ari Oracle",
"The Eternal Palace",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[127482] = {
"Sewer Vicejaw",
"Tol Dagor",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[46381] = {
"Shifty Thief",
"Stormwind Stockade",
"enUS",
},
[43658] = {
"Frenzied Crocolisk",
"Lost City of the Tol'vir",
"enUS",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[46379] = {
"Vicious Thug",
"Stormwind Stockade",
"enUS",
},
[155629] = {
"Azsh'ari Stormbinder",
"The Eternal Palace",
"enUS",
},
[30279] = {
"Deep Crawler",
"Ahn'kahet: The Old Kingdom",
},
[156653] = {
"Coagulated Horror",
"Horrific Vision of Orgrimmar",
"enUS",
},
[46249] = {
"Riverpaw Slayer",
"Stormwind Stockade",
"enUS",
},
[61338] = {
"Glintrok Skulker",
"Mogu'shan Palace",
},
[174569] = {
"Training Dummy",
"The Shadowlands",
},
[36620] = {
"Soulguard Adept",
"The Forge of Souls",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[22929] = {
"Greater Shadowfiend",
"Black Temple",
"enUS",
},
[181224] = {
"Dausegne",
"Sepulcher of the First Ones",
},
[9319] = {
"Houndmaster Grebmar",
"Blackrock Depths",
"enUS",
},
[18341] = {
"Pandemonius",
"Auchindoun: Mana-Tombs",
"enUS",
},
[30418] = {
"Bound Air Elemental",
"Ahn'kahet: The Old Kingdom",
},
[75272] = {
"Bloodmaul Ogre Mage",
"Bloodmaul Slag Mines",
"enUS",
},
[27729] = {
"Enraging Ghoul",
"The Culling of Stratholme",
},
[23049] = {
"Shadowmoon Weapon Master",
"Black Temple",
"enUS",
},
[156143] = {
"Voidcrazed Hulk",
"Horrific Vision of Orgrimmar",
"enUS",
},
[23523] = {
"Ashtongue Elementalist",
"Black Temple",
"enUS",
},
[22880] = {
"Shadowmoon Champion",
"Black Temple",
"enUS",
},
[62982] = {
"Mindbender",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[137716] = {
"Bottom Feeder",
"The MOTHERLODE!!",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[155688] = {
"Azsh'ari Frostbinder",
"The Eternal Palace",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[63508] = {
"Xuen",
"Sepulcher of the First Ones",
},
[127484] = {
"Jes Howlis",
"Tol Dagor",
"enUS",
},
[48284] = {
"Mining Powder",
"Deadmines",
"enUS",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[23436] = {
"Image of Dementia",
"Black Temple",
"enUS",
},
[23371] = {
"Shadowmoon Fallen",
"Black Temple",
"enUS",
},
[23498] = {
"Parasitic Shadowfiend",
"Black Temple",
"enUS",
},
[22997] = {
"Flame of Azzinoth",
"Black Temple",
"enUS",
},
[48266] = {
"Defias Cannon",
"Deadmines",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
"enUS",
},
[48441] = {
"Mining Monkey",
"Deadmines",
"enUS",
},
[48279] = {
"Goblin Overseer",
"Deadmines",
"enUS",
},
[48906] = {
"Blaze of the Heavens",
"Lost City of the Tol'vir",
"enUS",
},
[48442] = {
"Mining Monkey",
"Deadmines",
"enUS",
},
},
["aggro_modifies"] = {
["actor_name_color"] = true,
},
["minor_height_scale"] = 0.94999998807907,
["aura_width2"] = 22,
["aura_height2"] = 18,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["range_check_alpha"] = 1,
["semver"] = "1.0.0",
["aura_alpha"] = 0.84999996423721,
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["transparency_behavior"] = 4,
["spell_animations"] = false,
["aura_consolidate"] = true,
["health_statusbar_texture"] = "Clean",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Execute Range"] = 1,
["Aura Reorder"] = 3,
},
["minor_width_scale"] = 0.89999997615814,
["castbar_target_text_size"] = 8,
["honor_blizzard_plate_alpha"] = true,
["aura_timer_text_font"] = "PT Sans Narrow",
["aura_height"] = 18,
["cast_statusbar_bgtexture"] = "Solid",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["castbar_target_notank"] = true,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.1499999761581",
["nameplateLargeTopInset"] = "-1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateTargetRadialPosition"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["clampTargetNameplateToScreen"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "0",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.51",
["nameplateMotionSpeed"] = "0.050608683377504",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplateOtherTopInset"] = "-1",
["nameplateOtherAtBase"] = "0",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.40999999642372",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["NamePlateHorizontalScale"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["SoftTargetIconGameObject"] = "0",
},
["login_counter"] = 17185,
["aura_stack_font"] = "PT Sans Narrow",
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.2000000476837,
},
},
["cast_color_settings"] = {
["enabled"] = true,
["width"] = 12,
},
["usePlaterWidget"] = false,
["plate_config"] = {
["global_health_height"] = 13,
["friendlyplayer"] = {
["actorname_use_class_color"] = true,
["cast"] = {
121,
},
["cast_incombat"] = {
121,
},
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
},
["friendlynpc"] = {
["cast"] = {
121,
},
["actorname_text_spacing"] = 9,
["cast_incombat"] = {
121,
},
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
},
["global_health_width"] = 121,
["enemyplayer"] = {
["spellpercent_text_font"] = "PT Sans Narrow",
["level_text_size"] = 8,
["cast"] = {
121,
},
["big_actortitle_text_size"] = 10,
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "PT Sans Narrow",
["actorname_text_font"] = "PT Sans Narrow",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 11,
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
121,
14,
},
["health_incombat"] = {
121,
13,
},
["spellname_text_font"] = "PT Sans Narrow",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["big_actorname_text_font"] = "PT Sans Narrow",
["big_actorname_text_size"] = 10,
["percent_text_size"] = 10,
["percent_text_font"] = "PT Sans Narrow",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["spellname_text_size"] = 11,
["health"] = {
121,
13,
},
},
["enemynpc"] = {
["spellpercent_text_font"] = "Bebas Neue Cyrillic Regular",
["cast"] = {
124,
},
["level_text_font"] = "PT Sans Narrow",
["actorname_text_font"] = "Bebas Neue Cyrillic Regular",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
124,
10,
},
["health_incombat"] = {
121,
13,
},
["percent_text_anchor"] = {
["y"] = -0.2400054931640625,
["x"] = 0.8799972534179688,
["side"] = 11,
},
["spellname_text_font"] = "Bebas Neue Cyrillic Regular",
["big_actorname_text_font"] = "PT Sans Narrow",
["castbar_offset"] = -0.2400054931640625,
["spellpercent_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0,
["percent_text_size"] = 10,
["percent_text_font"] = "Bebas Neue Cyrillic Regular",
["spellname_text_size"] = 10,
["health"] = {
121,
13,
},
["actorname_text_size"] = 10,
["actorname_text_anchor"] = {
["y"] = 0.5799942016601562,
["x"] = -3.75,
["side"] = 1,
},
},
},
["aura_y_offset"] = 5,
["cast_statusbar_bgcolor"] = {
0,
0,
0,
0.8900000005960464,
},
["border_thickness"] = 1.165429830551148,
["resources_settings"] = {
["chr"] = {
["Player-3209-0B4EDE3D"] = "HolyPower",
["Player-3682-0B236980"] = "ArcaneCharges",
["Player-1329-09D764A3"] = "ArcaneCharges",
["Player-3682-0B241018"] = "Essence",
["Player-1403-0A1C79B6"] = "ArcaneCharges",
["Player-3682-0B038C9A"] = "ArcaneCharges",
["Player-3682-0B20292A"] = "HolyPower",
["Player-3209-0B2C0A65"] = "Chi",
["Player-1329-09D6C555"] = "ComboPoints",
["Player-1403-0A6909FE"] = "ComboPoints",
["Player-3209-0B29D149"] = "ArcaneCharges",
["Player-1307-0BE359D3"] = "ArcaneCharges",
["Player-3682-0B310D76"] = "HolyPower",
["Player-3682-0B19EC37"] = "Chi",
["Player-3682-0B2A13DE"] = "ComboPoints",
["Player-1403-0A70E106"] = "ComboPoints",
["Player-3682-0B155119"] = "SoulShards",
},
},
["npc_colors"] = {
[190404] = {
true,
false,
"mediumpurple",
},
[196798] = {
true,
false,
"blue",
},
[186696] = {
true,
false,
"fuchsia",
},
[109908] = {
true,
false,
"fuchsia",
},
[213806] = {
true,
false,
"fuchsia",
},
[190405] = {
true,
false,
"mediumpurple",
},
[196671] = {
true,
false,
"mediumpurple",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"fuchsia",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[190407] = {
true,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[131585] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[131009] = {
true,
false,
"fuchsia",
},
[99360] = {
true,
false,
"blue",
},
[197697] = {
true,
false,
"mediumpurple",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"blue",
},
[134144] = {
true,
false,
"lightgreen",
},
[81522] = {
true,
false,
"mediumpurple",
},
[40825] = {
true,
false,
"mediumpurple",
},
[131587] = {
true,
false,
"deepskyblue",
},
[208440] = {
true,
false,
"mediumpurple",
},
[164707] = {
true,
false,
"mediumpurple",
},
[196548] = {
true,
false,
"fuchsia",
},
[135552] = {
true,
false,
"fuchsia",
},
[84400] = {
true,
false,
"fuchsia",
},
[186191] = {
true,
false,
"deepskyblue",
},
[135169] = {
true,
false,
"fuchsia",
},
[201792] = {
true,
false,
"mediumpurple",
},
[206140] = {
true,
false,
"mediumpurple",
},
[83761] = {
true,
false,
"mediumpurple",
},
[184018] = {
true,
false,
"DRUID",
},
[178008] = {
true,
false,
"yellow",
},
[126983] = {
true,
false,
"DRUID",
},
[127111] = {
true,
false,
"deepskyblue",
},
[168418] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[213942] = {
true,
false,
"deepskyblue",
},
[199748] = {
true,
false,
"fuchsia",
},
[165222] = {
true,
false,
"blue",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[170850] = {
true,
true,
"fuchsia",
},
[134150] = {
true,
false,
"navajowhite",
},
[75451] = {
true,
false,
"fuchsia",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[128967] = {
true,
false,
"palegreen",
},
[75899] = {
true,
false,
"fuchsia",
},
[196043] = {
true,
false,
"fuchsia",
},
[131850] = {
true,
false,
"fuchsia",
},
[134024] = {
true,
false,
"fuchsia",
},
[178141] = {
true,
false,
"blue",
},
[196044] = {
true,
false,
"fuchsia",
},
[40923] = {
true,
false,
"DEATHKNIGHT",
},
[83892] = {
true,
false,
"fuchsia",
},
[135048] = {
true,
false,
"DEATHKNIGHT",
},
[178142] = {
true,
false,
"deepskyblue",
},
[98406] = {
false,
false,
"fuchsia",
},
[137478] = {
true,
false,
"gold",
},
[194894] = {
true,
false,
"deepskyblue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[135049] = {
true,
false,
"fuchsia",
},
[139269] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[168681] = {
true,
true,
"fuchsia",
},
[128969] = {
true,
false,
"goldenrod",
},
[99366] = {
true,
false,
"deepskyblue",
},
[82039] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"deepskyblue",
},
[136330] = {
true,
false,
"fuchsia",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[83894] = {
true,
false,
"blue",
},
[98280] = {
true,
false,
"blue",
},
[134157] = {
true,
false,
"peru",
},
[75966] = {
true,
false,
"fuchsia",
},
[205384] = {
true,
false,
"fuchsia",
},
[212673] = {
true,
false,
"mediumpurple",
},
[136076] = {
true,
false,
"lightcoral",
},
[134158] = {
true,
false,
"navajowhite",
},
[172265] = {
true,
false,
"deepskyblue",
},
[208198] = {
true,
false,
"fuchsia",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[137484] = {
true,
false,
"gold",
},
[131858] = {
true,
false,
"blue",
},
[40765] = {
true,
false,
"mediumpurple",
},
[45912] = {
true,
false,
"deepskyblue",
},
[207177] = {
true,
false,
"mediumpurple",
},
[174569] = {
false,
false,
"fuchsia",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"fuchsia",
},
[137486] = {
true,
false,
"gold",
},
[98538] = {
true,
false,
"mediumpurple",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[101991] = {
true,
false,
"mediumpurple",
},
[165108] = {
true,
true,
"fuchsia",
},
[82682] = {
true,
false,
"mediumpurple",
},
[156157] = {
true,
false,
"blue",
},
[75713] = {
true,
false,
"fuchsia",
},
[186208] = {
true,
false,
"fuchsia",
},
[138255] = {
true,
false,
"maroon",
},
[122963] = {
true,
false,
"mediumpurple",
},
[162040] = {
true,
false,
"fuchsia",
},
[198996] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[181861] = {
true,
false,
"mediumpurple",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[171376] = {
true,
false,
"blue",
},
[131863] = {
true,
false,
"mediumpurple",
},
[203857] = {
true,
false,
"fuchsia",
},
[195929] = {
true,
false,
"mediumpurple",
},
[207438] = {
true,
false,
"mediumpurple",
},
[131864] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"fuchsia",
},
[198999] = {
true,
false,
"mediumpurple",
},
[205265] = {
true,
false,
"DEATHKNIGHT",
},
[193373] = {
true,
false,
"blue",
},
[184422] = {
true,
false,
"DRUID",
},
[199000] = {
true,
false,
"mediumpurple",
},
[39616] = {
true,
false,
"DEATHKNIGHT",
},
[133912] = {
true,
false,
"fuchsia",
},
[136214] = {
true,
false,
"plum",
},
[136470] = {
true,
false,
"honeydew",
},
[75652] = {
true,
false,
"mediumpurple",
},
[134041] = {
true,
false,
"DEATHKNIGHT",
},
[197595] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[98542] = {
true,
false,
"mediumpurple",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[173044] = {
true,
false,
"deepskyblue",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[122967] = {
true,
false,
"mediumpurple",
},
[105704] = {
true,
false,
"deepskyblue",
},
[166396] = {
true,
false,
"blue",
},
[127315] = {
true,
false,
"fuchsia",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[132126] = {
true,
false,
"fuchsia",
},
[45915] = {
true,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[122968] = {
true,
false,
"mediumpurple",
},
[101549] = {
true,
false,
"blue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[184301] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[84990] = {
true,
false,
"blue",
},
[81985] = {
true,
false,
"fuchsia",
},
[122969] = {
true,
false,
"deepskyblue",
},
[100527] = {
true,
false,
"fuchsia",
},
[197985] = {
true,
false,
"fuchsia",
},
[150160] = {
true,
false,
"mediumpurple",
},
[178165] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[165762] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"blue",
},
[131492] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"mediumpurple",
},
[165763] = {
true,
false,
"deepskyblue",
},
[135329] = {
true,
false,
"mediumpurple",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[91002] = {
true,
false,
"fuchsia",
},
[174843] = {
true,
false,
"mediumpurple",
},
[136353] = {
true,
false,
"royalblue",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[205790] = {
true,
false,
"DEATHKNIGHT",
},
[45917] = {
true,
false,
"DRUID",
},
[162057] = {
true,
false,
"mediumpurple",
},
[205151] = {
true,
false,
"DEATHKNIGHT",
},
[91003] = {
true,
false,
"DRUID",
},
[186226] = {
true,
false,
"fuchsia",
},
[135204] = {
true,
false,
"honeydew",
},
[196712] = {
true,
false,
"fuchsia",
},
[205152] = {
true,
false,
"mediumpurple",
},
[92538] = {
true,
false,
"fuchsia",
},
[170882] = {
true,
false,
"blue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[200137] = {
true,
false,
"deepskyblue",
},
[180473] = {
true,
false,
"blue",
},
[80816] = {
true,
false,
"deepskyblue",
},
[129547] = {
true,
false,
"deepskyblue",
},
[196202] = {
true,
false,
"blue",
},
[103344] = {
true,
false,
"mediumpurple",
},
[126919] = {
true,
false,
"blue",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"fuchsia",
},
[75979] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[168153] = {
true,
false,
"fuchsia",
},
[129367] = {
true,
false,
"honeydew",
},
[180429] = {
true,
false,
"mediumpurple",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"blue",
},
[175576] = {
true,
false,
"fuchsia",
},
[189266] = {
true,
false,
"deepskyblue",
},
[186741] = {
true,
false,
"fuchsia",
},
[98792] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[150297] = {
true,
false,
"deepskyblue",
},
[185032] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[174210] = {
true,
false,
"deepskyblue",
},
[199124] = {
true,
false,
"deepskyblue",
},
[111068] = {
true,
false,
"mediumpurple",
},
[182778] = {
true,
false,
"fuchsia",
},
[178392] = {
true,
false,
"fuchsia",
},
[170480] = {
true,
false,
"mediumpurple",
},
[199233] = {
true,
false,
"mediumpurple",
},
[102962] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[163086] = {
true,
false,
"blue",
},
[196576] = {
true,
false,
"fuchsia",
},
[204262] = {
true,
false,
"fuchsia",
},
[91006] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[201788] = {
true,
false,
"fuchsia",
},
[129553] = {
true,
false,
"mediumpurple",
},
[173189] = {
true,
false,
"deepskyblue",
},
[86526] = {
true,
false,
"blue",
},
[205158] = {
true,
false,
"mediumpurple",
},
[205366] = {
true,
false,
"DEATHKNIGHT",
},
[129369] = {
true,
false,
"lightsalmon",
},
[97720] = {
true,
false,
"fuchsia",
},
[180336] = {
true,
false,
"deepskyblue",
},
[43873] = {
true,
false,
"DRUID",
},
[195696] = {
true,
false,
"mediumpurple",
},
[173190] = {
true,
false,
"deepskyblue",
},
[187768] = {
true,
false,
"deepskyblue",
},
[83846] = {
true,
false,
"mediumpurple",
},
[91007] = {
true,
false,
"DRUID",
},
[81864] = {
true,
false,
"blue",
},
[97197] = {
true,
false,
"deepskyblue",
},
[138281] = {
true,
false,
"mediumpurple",
},
[187897] = {
true,
false,
"mediumpurple",
},
[153882] = {
true,
false,
"deepskyblue",
},
[186107] = {
true,
false,
"fuchsia",
},
[134701] = {
true,
false,
"fuchsia",
},
[179841] = {
true,
false,
"deepskyblue",
},
[151325] = {
true,
false,
"fuchsia",
},
[129552] = {
true,
false,
"deepskyblue",
},
[84550] = {
true,
false,
"mediumpurple",
},
[169861] = {
true,
false,
"blue",
},
[154744] = {
true,
false,
"fuchsia",
},
[189816] = {
true,
false,
"deepskyblue",
},
[179842] = {
true,
false,
"fuchsia",
},
[188026] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[165137] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[137516] = {
true,
false,
"lightsalmon",
},
[187771] = {
true,
false,
"blue",
},
[175992] = {
true,
false,
"fuchsia",
},
[98681] = {
true,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"fuchsia",
},
[165010] = {
true,
false,
"mediumpurple",
},
[137517] = {
true,
false,
"peru",
},
[83893] = {
true,
false,
"deepskyblue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[174197] = {
true,
false,
"deepskyblue",
},
[122972] = {
true,
false,
"deepskyblue",
},
[122965] = {
true,
false,
"mediumpurple",
},
[95779] = {
true,
false,
"mediumpurple",
},
[183425] = {
true,
false,
"blue",
},
[187969] = {
true,
false,
"deepskyblue",
},
[105715] = {
true,
false,
"blue",
},
[134012] = {
true,
false,
"lightsalmon",
},
[150165] = {
true,
false,
"deepskyblue",
},
[132532] = {
true,
false,
"palegreen",
},
[98810] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[191739] = {
true,
false,
"mediumpurple",
},
[176521] = {
true,
false,
"blue",
},
[133685] = {
true,
false,
"deepskyblue",
},
[139949] = {
true,
false,
"honeydew",
},
[186242] = {
true,
false,
"blue",
},
[130012] = {
true,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[214117] = {
true,
false,
"fuchsia",
},
[135474] = {
true,
false,
"blue",
},
[164567] = {
true,
false,
"deepskyblue",
},
[104278] = {
true,
false,
"fuchsia",
},
[179847] = {
true,
false,
"fuchsia",
},
[137713] = {
true,
false,
"paleturquoise",
},
[144298] = {
true,
false,
"blue",
},
[133430] = {
true,
false,
"cornflowerblue",
},
[43875] = {
true,
false,
"DRUID",
},
[137521] = {
true,
false,
"cornflowerblue",
},
[176523] = {
true,
false,
"mediumpurple",
},
[104246] = {
true,
false,
"blue",
},
[213607] = {
true,
false,
"DEATHKNIGHT",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[114316] = {
true,
false,
"deepskyblue",
},
[114796] = {
true,
false,
"blue",
},
[184580] = {
true,
false,
"blue",
},
[190207] = {
true,
false,
"fuchsia",
},
[96574] = {
true,
false,
"mediumpurple",
},
[184581] = {
true,
false,
"fuchsia",
},
[191230] = {
true,
false,
"fuchsia",
},
[184131] = {
true,
false,
"deepskyblue",
},
[165911] = {
true,
false,
"fuchsia",
},
[191164] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"deepskyblue",
},
[129758] = {
true,
false,
"fuchsia",
},
[104247] = {
true,
false,
"fuchsia",
},
[135052] = {
true,
false,
"DEATHKNIGHT",
},
[186116] = {
true,
false,
"DRUID",
},
[178139] = {
true,
false,
"mediumpurple",
},
[206065] = {
true,
false,
"fuchsia",
},
[184582] = {
true,
false,
"deepskyblue",
},
[133432] = {
true,
false,
"gold",
},
[154020] = {
true,
false,
"deepskyblue",
},
[180474] = {
true,
false,
"fuchsia",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"fuchsia",
},
[206066] = {
true,
false,
"fuchsia",
},
[175861] = {
true,
false,
"fuchsia",
},
[179852] = {
true,
false,
"blue",
},
[114542] = {
true,
false,
"blue",
},
[169426] = {
true,
false,
"gold",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[100539] = {
true,
false,
"blue",
},
[96512] = {
true,
false,
"mediumpurple",
},
[204206] = {
true,
false,
"mediumpurple",
},
[180864] = {
true,
false,
"fuchsia",
},
[98970] = {
true,
false,
"mediumpurple",
},
[197698] = {
true,
false,
"mediumpurple",
},
[194487] = {
true,
false,
"deepskyblue",
},
[92610] = {
true,
false,
"fuchsia",
},
[206068] = {
true,
false,
"DEATHKNIGHT",
},
[166299] = {
true,
false,
"fuchsia",
},
[136249] = {
true,
false,
"plum",
},
[177808] = {
true,
false,
"mediumpurple",
},
[186120] = {
true,
false,
"DRUID",
},
[190340] = {
true,
false,
"deepskyblue",
},
[167962] = {
true,
true,
"fuchsia",
},
[134331] = {
true,
false,
"gold",
},
[133436] = {
true,
false,
"gold",
},
[171799] = {
true,
false,
"fuchsia",
},
[178630] = {
true,
false,
"deepskyblue",
},
[164510] = {
true,
false,
"fuchsia",
},
[186121] = {
true,
false,
"DRUID",
},
[184331] = {
true,
false,
"mediumpurple",
},
[167963] = {
true,
false,
"blue",
},
[180495] = {
true,
false,
"fuchsia",
},
[206070] = {
true,
false,
"mediumpurple",
},
[166301] = {
true,
false,
"fuchsia",
},
[40936] = {
true,
false,
"mediumpurple",
},
[114544] = {
true,
false,
"fuchsia",
},
[186122] = {
true,
false,
"blue",
},
[190342] = {
true,
false,
"fuchsia",
},
[101437] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"mediumpurple",
},
[41096] = {
true,
false,
"fuchsia",
},
[166302] = {
true,
false,
"deepskyblue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[134418] = {
true,
false,
"deepskyblue",
},
[144296] = {
true,
false,
"mediumpurple",
},
[204918] = {
true,
false,
"fuchsia",
},
[167965] = {
true,
false,
"blue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[195842] = {
true,
false,
"deepskyblue",
},
[127879] = {
true,
false,
"blue",
},
[104251] = {
true,
false,
"fuchsia",
},
[45572] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"blue",
},
[139422] = {
true,
false,
"gold",
},
[101438] = {
true,
false,
"blue",
},
[165919] = {
true,
false,
"mediumpurple",
},
[162691] = {
true,
false,
"fuchsia",
},
[167967] = {
true,
false,
"blue",
},
[45924] = {
true,
false,
"MAGE",
},
[189706] = {
true,
false,
"yellow",
},
[186125] = {
true,
false,
"fuchsia",
},
[190345] = {
true,
false,
"blue",
},
[184335] = {
true,
false,
"fuchsia",
},
[100991] = {
true,
false,
"fuchsia",
},
[129699] = {
true,
false,
"DRUID",
},
[98370] = {
true,
false,
"fuchsia",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[83025] = {
true,
false,
"blue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[193799] = {
true,
false,
"fuchsia",
},
[98691] = {
true,
false,
"blue",
},
[179733] = {
true,
false,
"fuchsia",
},
[135234] = {
true,
false,
"DEATHKNIGHT",
},
[171805] = {
true,
false,
"blue",
},
[130404] = {
true,
false,
"fuchsia",
},
[168992] = {
true,
false,
"deepskyblue",
},
[134338] = {
true,
false,
"navajowhite",
},
[204030] = {
true,
false,
"DEATHKNIGHT",
},
[45477] = {
true,
false,
"blue",
},
[196102] = {
true,
false,
"blue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[40586] = {
true,
false,
"mediumpurple",
},
[131825] = {
true,
false,
"mediumpurple",
},
[81236] = {
true,
false,
"deepskyblue",
},
[177817] = {
true,
false,
"blue",
},
[189901] = {
true,
false,
"mediumpurple",
},
[163458] = {
true,
false,
"deepskyblue",
},
[135235] = {
true,
false,
"goldenrod",
},
[82579] = {
true,
false,
"deepskyblue",
},
[198997] = {
true,
false,
"mediumpurple",
},
[131527] = {
true,
false,
"mediumpurple",
},
[165414] = {
true,
false,
"deepskyblue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[207969] = {
true,
false,
"fuchsia",
},
[114804] = {
true,
false,
"blue",
},
[187154] = {
true,
false,
"deepskyblue",
},
[175517] = {
true,
false,
"blue",
},
[184125] = {
true,
false,
"DRUID",
},
[133870] = {
true,
false,
"fuchsia",
},
[194315] = {
true,
false,
"mediumpurple",
},
[104300] = {
true,
false,
"fuchsia",
},
[135365] = {
true,
false,
"mediumpurple",
},
[130661] = {
true,
false,
"lightgreen",
},
[192781] = {
true,
false,
"MAGE",
},
[192767] = {
true,
false,
"mediumpurple",
},
[194316] = {
true,
false,
"mediumpurple",
},
[193293] = {
true,
false,
"mediumpurple",
},
[187155] = {
true,
false,
"deepskyblue",
},
[192481] = {
true,
false,
"fuchsia",
},
[163882] = {
true,
false,
"mediumpurple",
},
[184124] = {
true,
false,
"DRUID",
},
[195851] = {
true,
false,
"blue",
},
[134599] = {
true,
false,
"gold",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[168310] = {
true,
false,
"fuchsia",
},
[135239] = {
true,
false,
"paleturquoise",
},
[98949] = {
true,
false,
"mediumpurple",
},
[196203] = {
true,
false,
"deepskyblue",
},
[134600] = {
true,
false,
"peru",
},
[201223] = {
true,
false,
"blue",
},
[125977] = {
true,
false,
"fuchsia",
},
[198326] = {
true,
false,
"mediumpurple",
},
[115765] = {
true,
false,
"fuchsia",
},
[135240] = {
true,
false,
"blue",
},
[95834] = {
true,
false,
"fuchsia",
},
[141285] = {
true,
false,
"lightgreen",
},
[187192] = {
true,
false,
"mediumpurple",
},
[156212] = {
true,
false,
"deepskyblue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[114266] = {
true,
false,
"deepskyblue",
},
[134284] = {
true,
false,
"deepskyblue",
},
[135241] = {
true,
false,
"peru",
},
[102019] = {
true,
false,
"fuchsia",
},
[189265] = {
true,
false,
"fuchsia",
},
[100485] = {
true,
false,
"deepskyblue",
},
[116549] = {
true,
false,
"deepskyblue",
},
[133835] = {
true,
false,
"deepskyblue",
},
[80936] = {
true,
false,
"blue",
},
[81432] = {
true,
false,
"deepskyblue",
},
[59873] = {
true,
false,
"mediumpurple",
},
[155830] = {
true,
false,
"deepskyblue",
},
[192786] = {
true,
false,
"blue",
},
[183707] = {
true,
false,
"deepskyblue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[133836] = {
true,
false,
"blue",
},
[182045] = {
true,
false,
"fuchsia",
},
[165805] = {
true,
false,
"mediumpurple",
},
[189719] = {
true,
false,
"DRUID",
},
[155831] = {
true,
false,
"fuchsia",
},
[192787] = {
false,
false,
"fuchsia",
},
[206214] = {
true,
false,
"mediumpurple",
},
[102788] = {
true,
false,
"mediumpurple",
},
[187033] = {
true,
false,
"fuchsia",
},
[168747] = {
true,
false,
"fuchsia",
},
[136139] = {
true,
false,
"peru",
},
[141283] = {
true,
false,
"navajowhite",
},
[100486] = {
true,
false,
"fuchsia",
},
[192788] = {
true,
false,
"fuchsia",
},
[101637] = {
true,
false,
"mediumpurple",
},
[168109] = {
true,
false,
"deepskyblue",
},
[98696] = {
true,
false,
"mediumpurple",
},
[169927] = {
true,
false,
"fuchsia",
},
[190359] = {
true,
false,
"blue",
},
[189464] = {
true,
false,
"fuchsia",
},
[76446] = {
true,
false,
"blue",
},
[162099] = {
true,
false,
"fuchsia",
},
[196115] = {
true,
false,
"fuchsia",
},
[96587] = {
true,
false,
"deepskyblue",
},
[156244] = {
true,
false,
"mediumpurple",
},
[115640] = {
true,
false,
"fuchsia",
},
[138187] = {
true,
false,
"deepskyblue",
},
[59553] = {
true,
false,
"mediumpurple",
},
[133482] = {
true,
false,
"maroon",
},
[87252] = {
true,
false,
"mediumpurple",
},
[167113] = {
true,
false,
"blue",
},
[131666] = {
true,
false,
"deepskyblue",
},
[164506] = {
true,
false,
"blue",
},
[170483] = {
true,
false,
"fuchsia",
},
[176959] = {
true,
false,
"deepskyblue",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"blue",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176551] = {
true,
false,
"deepskyblue",
},
[131667] = {
true,
false,
"mediumpurple",
},
[144071] = {
true,
false,
"gold",
},
[137830] = {
true,
false,
"deepskyblue",
},
[190362] = {
true,
false,
"fuchsia",
},
[189467] = {
true,
false,
"blue",
},
[196198] = {
true,
false,
"blue",
},
[82597] = {
true,
false,
"fuchsia",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[208521] = {
true,
false,
"deepskyblue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[189340] = {
true,
false,
"mediumpurple",
},
[130400] = {
true,
false,
"deepskyblue",
},
[163459] = {
true,
false,
"blue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"deepskyblue",
},
[131669] = {
true,
false,
"DEATHKNIGHT",
},
[165556] = {
true,
false,
"fuchsia",
},
[115642] = {
true,
false,
"blue",
},
[95842] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"blue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[168882] = {
true,
false,
"fuchsia",
},
[131670] = {
true,
false,
"palegreen",
},
[198933] = {
true,
false,
"mediumpurple",
},
[169924] = {
true,
false,
"mediumpurple",
},
[129517] = {
true,
false,
"fuchsia",
},
[81820] = {
true,
false,
"fuchsia",
},
[171184] = {
true,
false,
"mediumpurple",
},
[163128] = {
true,
false,
"deepskyblue",
},
[162763] = {
true,
true,
"fuchsia",
},
[186658] = {
true,
false,
"deepskyblue",
},
[168627] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"fuchsia",
},
[94224] = {
true,
false,
"fuchsia",
},
[189471] = {
true,
false,
"deepskyblue",
},
[189727] = {
true,
false,
"DRUID",
},
[192796] = {
true,
false,
"fuchsia",
},
[99358] = {
true,
false,
"deepskyblue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[184023] = {
true,
false,
"blue",
},
[175550] = {
true,
false,
"fuchsia",
},
[86552] = {
true,
false,
"deepskyblue",
},
[189472] = {
true,
false,
"deepskyblue",
},
[185508] = {
true,
false,
"red",
},
[115388] = {
true,
false,
"fuchsia",
},
[131545] = {
true,
false,
"mediumpurple",
},
[150142] = {
true,
false,
"deepskyblue",
},
[152898] = {
true,
false,
"fuchsia",
},
[168942] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"fuchsia",
},
[164921] = {
true,
false,
"deepskyblue",
},
[198311] = {
true,
false,
"mediumpurple",
},
[189729] = {
true,
false,
"DRUID",
},
[188703] = {
true,
false,
"yellow",
},
[156226] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"mediumpurple",
},
[213770] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
true,
false,
"goldenrod",
},
[45930] = {
true,
false,
"deepskyblue",
},
[134629] = {
true,
false,
"navajowhite",
},
[133593] = {
true,
false,
"honeydew",
},
[98275] = {
true,
false,
"fuchsia",
},
[40943] = {
true,
false,
"fuchsia",
},
[157634] = {
true,
false,
"blue",
},
[190370] = {
true,
false,
"deepskyblue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[197671] = {
true,
false,
"blue",
},
[192800] = {
true,
false,
"blue",
},
[205727] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumpurple",
},
[81819] = {
true,
false,
"deepskyblue",
},
[104270] = {
true,
false,
"mediumpurple",
},
[190371] = {
true,
false,
"blue",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[206074] = {
true,
false,
"DEATHKNIGHT",
},
[166971] = {
true,
false,
"fuchsia",
},
[131677] = {
true,
false,
"deepskyblue",
},
[180015] = {
true,
false,
"blue",
},
[164926] = {
true,
false,
"fuchsia",
},
[172981] = {
true,
false,
"blue",
},
[203799] = {
true,
false,
"deepskyblue",
},
[95766] = {
true,
false,
"blue",
},
[186664] = {
true,
false,
"deepskyblue",
},
[167612] = {
true,
false,
"blue",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
true,
false,
"blue",
},
[128434] = {
true,
false,
"fuchsia",
},
[190373] = {
true,
false,
"deepskyblue",
},
[189478] = {
true,
false,
"mediumpurple",
},
[134364] = {
true,
false,
"honeydew",
},
[163520] = {
true,
false,
"mediumpurple",
},
[206230] = {
true,
false,
"fuchsia",
},
[199325] = {
true,
false,
"deepskyblue",
},
[166589] = {
true,
false,
"fuchsia",
},
[84957] = {
true,
false,
"fuchsia",
},
[197535] = {
true,
false,
"mediumpurple",
},
[180070] = {
true,
false,
"fuchsia",
},
[132491] = {
true,
false,
"palegreen",
},
[150168] = {
true,
false,
"fuchsia",
},
[198047] = {
true,
false,
"mediumpurple",
},
[177716] = {
true,
false,
"deepskyblue",
},
[186284] = {
true,
false,
"mediumpurple",
},
[128435] = {
true,
false,
"maroon",
},
[194467] = {
true,
false,
"blue",
},
[201756] = {
true,
false,
"fuchsia",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[205337] = {
true,
false,
"fuchsia",
},
[190377] = {
true,
false,
"fuchsia",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[167998] = {
true,
false,
"mediumpurple",
},
[102287] = {
true,
false,
"mediumpurple",
},
[136541] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[99664] = {
true,
false,
"fuchsia",
},
[133345] = {
true,
false,
"goldenrod",
},
[135007] = {
true,
false,
"gold",
},
[194469] = {
true,
false,
"blue",
},
[135263] = {
true,
false,
"maroon",
},
[45932] = {
true,
false,
"fuchsia",
},
[102094] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"mediumpurple",
},
[169905] = {
true,
false,
"blue",
},
[163524] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[131586] = {
true,
false,
"mediumpurple",
},
[168384] = {
true,
false,
"blue",
},
[192680] = {
true,
false,
"mediumpurple",
},
[195877] = {
true,
false,
"fuchsia",
},
[205212] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"mediumpurple",
},
[131812] = {
true,
false,
"fuchsia",
},
[212681] = {
true,
false,
"deepskyblue",
},
[203678] = {
true,
false,
"mediumpurple",
},
[188244] = {
true,
false,
"mediumpurple",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"fuchsia",
},
[189227] = {
true,
false,
"fuchsia",
},
[131685] = {
true,
false,
"deepskyblue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[164929] = {
true,
false,
"blue",
},
[195928] = {
true,
false,
"mediumpurple",
},
[204536] = {
true,
false,
"blue",
},
[113537] = {
true,
false,
"mediumpurple",
},
[192333] = {
true,
false,
"mediumpurple",
},
[114624] = {
true,
false,
"mediumpurple",
},
[196263] = {
true,
false,
"deepskyblue",
},
[184107] = {
true,
false,
"mediumpurple",
},
[190381] = {
true,
false,
"fuchsia",
},
[197406] = {
true,
false,
"fuchsia",
},
[152905] = {
true,
false,
"fuchsia",
},
[115395] = {
true,
false,
"mediumpurple",
},
[131849] = {
true,
false,
"blue",
},
[127799] = {
true,
false,
"blue",
},
[80805] = {
true,
false,
"mediumpurple",
},
[129366] = {
true,
false,
"goldenrod",
},
[167876] = {
true,
false,
"fuchsia",
},
[199717] = {
true,
false,
"mediumpurple",
},
[138465] = {
true,
false,
"lightcoral",
},
[167964] = {
true,
false,
"fuchsia",
},
[59552] = {
true,
false,
"fuchsia",
},
[188067] = {
true,
false,
"blue",
},
[170690] = {
true,
false,
"blue",
},
[130485] = {
true,
false,
"peru",
},
[186124] = {
true,
false,
"deepskyblue",
},
[200126] = {
true,
false,
"fuchsia",
},
[99192] = {
true,
false,
"mediumpurple",
},
[86547] = {
true,
false,
"blue",
},
[176573] = {
true,
false,
"fuchsia",
},
[137511] = {
true,
false,
"navajowhite",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[187315] = {
true,
false,
"blue",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
true,
false,
"lightcoral",
},
[190174] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[177891] = {
true,
false,
"mediumpurple",
},
[189234] = {
true,
false,
"mediumpurple",
},
[129527] = {
true,
false,
"deepskyblue",
},
[168007] = {
true,
false,
"blue",
},
[98965] = {
true,
false,
"mediumpurple",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[201790] = {
true,
false,
"deepskyblue",
},
[136934] = {
true,
false,
"navajowhite",
},
[189235] = {
true,
false,
"fuchsia",
},
[80935] = {
true,
false,
"deepskyblue",
},
[136295] = {
true,
false,
"peru",
},
[169159] = {
true,
false,
"gold",
},
[131436] = {
true,
false,
"mediumpurple",
},
[41139] = {
true,
false,
"aqua",
},
[155221] = {
true,
false,
"deepskyblue",
},
[96664] = {
true,
false,
"blue",
},
[197905] = {
true,
false,
"deepskyblue",
},
[95769] = {
true,
false,
"fuchsia",
},
[134990] = {
true,
false,
"honeydew",
},
[185528] = {
true,
false,
"blue",
},
[185656] = {
true,
false,
"fuchsia",
},
[59546] = {
true,
false,
"deepskyblue",
},
[104273] = {
true,
false,
"mediumpurple",
},
[164557] = {
true,
false,
"mediumpurple",
},
[163121] = {
true,
false,
"blue",
},
[141284] = {
true,
false,
"gold",
},
[134251] = {
true,
false,
"honeydew",
},
[185529] = {
true,
false,
"fuchsia",
},
[199595] = {
true,
false,
"mediumpurple",
},
[168932] = {
true,
false,
"gold",
},
[194816] = {
true,
false,
"mediumpurple",
},
[131847] = {
true,
false,
"DEATHKNIGHT",
},
[130488] = {
true,
false,
"lightsalmon",
},
[129529] = {
true,
false,
"fuchsia",
},
[40788] = {
true,
false,
"mediumpurple",
},
[45935] = {
true,
false,
"fuchsia",
},
[162038] = {
true,
false,
"mediumpurple",
},
[189878] = {
true,
false,
"yellow",
},
[104274] = {
true,
false,
"mediumpurple",
},
[131823] = {
true,
false,
"mediumpurple",
},
[114632] = {
true,
false,
"deepskyblue",
},
[111563] = {
true,
false,
"blue",
},
[134139] = {
true,
false,
"gold",
},
[186220] = {
true,
false,
"deepskyblue",
},
[134417] = {
true,
false,
"gold",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"blue",
},
[131824] = {
true,
false,
"mediumpurple",
},
[179010] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"deepskyblue",
},
[155824] = {
true,
false,
"blue",
},
[151773] = {
true,
false,
"blue",
},
[178171] = {
true,
false,
"fuchsia",
},
[195930] = {
true,
false,
"mediumpurple",
},
[104275] = {
true,
false,
"mediumpurple",
},
[126845] = {
true,
false,
"fuchsia",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[118489] = {
true,
false,
"fuchsia",
},
[157017] = {
true,
false,
"blue",
},
[169421] = {
true,
false,
"gold",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[40633] = {
true,
false,
"deepskyblue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[107288] = {
true,
false,
"deepskyblue",
},
[133361] = {
true,
false,
"fuchsia",
},
[162133] = {
true,
false,
"fuchsia",
},
[189555] = {
true,
false,
"blue",
},
[199037] = {
true,
false,
"deepskyblue",
},
[164563] = {
true,
false,
"blue",
},
[206063] = {
true,
false,
"DEATHKNIGHT",
},
[44566] = {
true,
false,
"mediumpurple",
},
[179269] = {
true,
false,
"fuchsia",
},
[164737] = {
true,
false,
"fuchsia",
},
[171341] = {
true,
false,
"deepskyblue",
},
[59555] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[56792] = {
true,
false,
"fuchsia",
},
[135167] = {
true,
false,
"peru",
},
[84520] = {
true,
false,
"mediumpurple",
},
[134174] = {
true,
false,
"honeydew",
},
[165076] = {
true,
false,
"blue",
},
[134514] = {
true,
false,
"lightgreen",
},
[129788] = {
true,
false,
"fuchsia",
},
[180323] = {
true,
false,
"fuchsia",
},
[126847] = {
true,
false,
"DRUID",
},
[40935] = {
true,
false,
"deepskyblue",
},
[198995] = {
true,
false,
"mediumpurple",
},
[128455] = {
true,
false,
"fuchsia",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[169425] = {
true,
false,
"gold",
},
[115019] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[84554] = {
true,
false,
"fuchsia",
},
[160495] = {
true,
false,
"deepskyblue",
},
[194745] = {
true,
false,
"fuchsia",
},
[75506] = {
true,
false,
"deepskyblue",
},
[192955] = {
true,
false,
"fuchsia",
},
[102232] = {
true,
false,
"fuchsia",
},
[126848] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"fuchsia",
},
[189886] = {
true,
false,
"gold",
},
[168594] = {
true,
false,
"mediumpurple",
},
[137458] = {
true,
false,
"deepskyblue",
},
[168318] = {
true,
false,
"mediumpurple",
},
[192464] = {
true,
false,
"fuchsia",
},
[115020] = {
true,
false,
"mediumpurple",
},
[198998] = {
true,
false,
"mediumpurple",
},
[97068] = {
true,
false,
"mediumpurple",
},
[81984] = {
true,
false,
"mediumpurple",
},
[157810] = {
true,
false,
"deepskyblue",
},
[114317] = {
true,
false,
"deepskyblue",
},
[180335] = {
true,
false,
"deepskyblue",
},
[169428] = {
true,
false,
"gold",
},
[127757] = {
true,
false,
"mediumpurple",
},
[91008] = {
true,
false,
"deepskyblue",
},
[212778] = {
true,
false,
"fuchsia",
},
[101476] = {
true,
false,
"fuchsia",
},
[65317] = {
true,
false,
"mediumpurple",
},
[183495] = {
true,
false,
"mediumpurple",
},
[129370] = {
true,
false,
"gold",
},
[169429] = {
true,
false,
"gold",
},
[173016] = {
true,
false,
"deepskyblue",
},
[180348] = {
true,
false,
"blue",
},
[176974] = {
true,
false,
"fuchsia",
},
[190401] = {
true,
false,
"mediumpurple",
},
[136186] = {
true,
false,
"honeydew",
},
[208698] = {
true,
false,
"fuchsia",
},
[191847] = {
true,
false,
"deepskyblue",
},
[169430] = {
true,
false,
"gold",
},
[205363] = {
true,
false,
"deepskyblue",
},
[205408] = {
true,
false,
"deepskyblue",
},
[39960] = {
true,
false,
"DEATHKNIGHT",
},
[134137] = {
true,
false,
"deepskyblue",
},
[197857] = {
true,
false,
"deepskyblue",
},
[183497] = {
true,
false,
"blue",
},
[195399] = {
true,
false,
"fuchsia",
},
[40634] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"deepskyblue",
},
[150250] = {
true,
false,
"deepskyblue",
},
[44404] = {
true,
false,
"fuchsia",
},
[190403] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"fuchsia",
},
[114319] = {
true,
false,
"blue",
},
[115406] = {
true,
false,
"deepskyblue",
},
[168934] = {
true,
false,
"fuchsia",
},
[195135] = {
true,
false,
"fuchsia",
},
[150251] = {
true,
false,
"blue",
},
[162039] = {
true,
false,
"deepskyblue",
},
},
["hook_data"] = {
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Name"] = "Use Big Icon",
["Value"] = false,
["Key"] = "useFullSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Name"] = "Icon Size Offset",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Name"] = "Texture Width",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Name"] = "Texture Position",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Name"] = "Texture Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["version"] = -1,
["HooksTemp"] = {
},
["semver"] = "",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["Time"] = 1688802814,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = false,
["Revision"] = 51,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Color Automation [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1614608917,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 85,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Execute Range [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1684153114,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 369,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Key"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Bar Color",
["Value"] = true,
["Key"] = "changeBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Border Color",
["Value"] = false,
["Key"] = "changeBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Reset Colors",
["Value"] = true,
["Key"] = "resetColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "Attacking Specific Unit [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1541606242,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Hide Neutral Units [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Combo Points [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Extra Border [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["HooksTemp"] = {
},
["semver"] = "",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["Time"] = 1554138845,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Don't Have Aura [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Players Targeting a Target [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614606781,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 358,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Initialization",
["Name"] = "Aura Reorder [Plater]",
},
{
["OptionsValues"] = {
["targetcolor"] = {
0,
0.47450980392157,
1,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1654562266,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/_GSmNC31z/1",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 168,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "targetcolor",
["Value"] = {
0.46274509803922,
1,
0.48235294117647,
1,
},
["Key"] = "targetcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "targetcolor",
},
},
["LastHookEdited"] = "",
["Name"] = "Current Target Color [Plater]",
},
{
["OptionsValues"] = {
["glowColor"] = {
1,
0,
0.01568627543747425,
1,
},
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1688802822,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = true,
["Revision"] = 288,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "@scriptname Options:",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
1,
0,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Name"] = "Ants Amount",
["Value"] = 6,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "antsAmount",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Name"] = "Speed",
["Value"] = 0.25,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "frequency",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Ants length",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "antsLength",
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Ants Thickness",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "antsThickness",
},
{
["Type"] = 4,
["Name"] = "Ants Border",
["Value"] = false,
["Key"] = "antsBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Outer Glow",
["Value"] = false,
["Key"] = "outerGlow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["semver"] = "1.0.6",
["Name"] = "Steal/Purge Aura Glow",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame)\n    \n    local healthBar = unitFrame.healthBar\n    local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n    -- change the value to whatever, for fire mages its 30% so 0.30\n    local useScorch = 0.30\n    \n    if (percent <= useScorch) then\n        -- from here the customizing is optional\n        -- for a list of commands look at the plater api\n        -- https://www.curseforge.com/wow/addons/plater-nameplates/pages/scripts/list-of-api-functions\n        \n        -- below is an example which will set the color & bordercolor to orange, \n        -- change the size of the frame and add a flash to it\n        \n        Plater.SetNameplateColor (unitFrame, \"#ff8c00\")\n        Plater.SetBorderColor (unitFrame, \"#ff8c00\")\n        Plater.SetNameplateSize (unitFrame, 120, 20)\n        Plater.FlashNameplateBorder (unitFrame, 1)\n    end\n    \n    \nend",
},
["Time"] = 1625007755,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/pc7PK_czd/1",
["Icon"] = 135827,
["Enabled"] = false,
["Revision"] = 102,
["semver"] = "1.0.0",
["Author"] = "Sphyre-Tarren Mill",
["Desc"] = "distinguish the mob for scorching",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Scorch",
},
{
["OptionsValues"] = {
["colorHealthbar"] = true,
["targetEnabled"] = false,
["raidMarkColors"] = false,
["targetColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["UseDefaultColor"] = false,
["IMobs"] = {
1,
0.97254901960784,
0,
1,
},
["threatColors"] = true,
["DefaultColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["EnMobs"] = {
1,
0,
0.10196078431373,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"]\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    modTable.UseDefaultColor = modTable.config[\"UseDefaultColor\"]\n    modTable.DefaultColor = modTable.config[\"DefaultColor\"]\n    \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    --Bosses - Greenyblue - \"Boss\"\n    --Mini Boss - DarkMagenta - \"MiniBoss\"\n    \n    --Focus mobs - Blue - \"FMobs\"\n    --Deadly mobs - Light Blue - \"DMobs\"\n    --Dodge Mobs - Purple - \"DoMobs\"\n    \n    --Healer mobs - White - HMobs\n    --Interruptable damage mobs - Orange - InMobs\n    --Enrage mobs - Light Orange - \"EnMobs\"\n    \n    --Expolsives mobs - Dark Pink - \"ExMobs\"\n    \n    modTable.NpcColors = {       \n        \n        -- De Other Side\n        [166473] = modTable.config[\"Boss\"],     --Hakkar the Soulflayer\n        [164555] = modTable.config[\"Boss\"],     --Milificent Manastorm\n        [164556] = modTable.config[\"Boss\"],     --Millhouse Manastorm\n        [169769] = modTable.config[\"Boss\"],     --Mueh'zala\n        \n        [170486] = modTable.config[\"FMobs\"],    --Atal'ia Devoted\n        [168992] = modTable.config[\"FMobs\"],    --Risen Cultist\n        [168934] = modTable.config[\"FMobs\"],    --Enraged Spirit\n        [167962] = modTable.config[\"FMobs\"],    --Defunct Dental Drill\n        [171184] = modTable.config[\"FMobs\"],    --Mythresh, Sky's Talon\n        \n        [167964] = modTable.config[\"DMobs\"],    --4.RF-4.RF\n        [164862] = modTable.config[\"DMobs\"],    --Weald Shimmermoth\n        \n        [167965] = modTable.config[\"IMobs\"],    --Lubricator\n        \n        [170490] = modTable.config[\"HMobs\"],    --Atal'ai High Priest\n        [170572] = modTable.config[\"HMobs\"],    --Atal'ai Hoodoo Hexxer\n        \n        [169905] = modTable.config[\"EnMobs\"],   --Risen Warlord\n        [171343] = modTable.config[\"EnMobs\"],   --Bladebeak Matriarch\n        \n        [168942] = modTable.config[\"DoMobs\"],    --DeathSpeaker\n        [167963] = modTable.config[\"DoMobs\"],    --Headless Client\n        [170480] = modTable.config[\"DoMobs\"],    --Atal'ia Deathwalker\n        \n        [170147] = modTable.config[\"ExMobs\"],   --Volatile Memory\n        \n        --Theater Of Pain\n        [164451] = modTable.config[\"Boss\"],     --Dessia the Decapitator\n        [164463] = modTable.config[\"Boss\"],     --Paceran the virulent\n        [164461] = modTable.config[\"Boss\"],     --Sathel the Accursed\n        [162317] = modTable.config[\"Boss\"],     --Gorechop\n        [162309] = modTable.config[\"Boss\"],     --Kul'tharok\n        [162329] = modTable.config[\"Boss\"],     --Xav the Unfallen\n        [165946] = modTable.config[\"Boss\"],     --Mordretha the Endless Empress\n        \n        [167536] = modTable.config[\"MiniBoss\"], --Harugia the Bloodthirsty\n        [162744] = modTable.config[\"MiniBoss\"], --Nekthara the Mangler\n        \n        [174210] = modTable.config[\"FMobs\"],    --Blighted Sludge-Spewer\n        [170882] = modTable.config[\"FMobs\"],    --Bone Magus\n        [160495] = modTable.config[\"FMobs\"],    --Maniacal Soulbinder\n        \n        [174197] = modTable.config[\"DMobs\"],    --Battlefield Ritualist\n        [163086] = modTable.config[\"DMobs\"],    --Rancid Gasbag\n        [170690] = modTable.config[\"DMobs\"],    --Diseased Horror\n        [167998] = modTable.config[\"DMobs\"],    --Portal Guardian\n        [164506] = modTable.config[\"DMobs\"],    --Ancient Captain\n        \n        [170850] = modTable.config[\"EnMobs\"],   --Raging BloodHorn\n        \n        [169893] = modTable.config[\"DoMobs\"],   --Hefarious Darkspeaker\n        [162763] = modTable.config[\"DoMobs\"],    --Soulforged Bonereaver\n        \n        --Necrotic Wake\n        [162691] = modTable.config[\"Boss\"],     --BlightBone\n        [162692] = modTable.config[\"Boss\"],     --Amarth\n        [166882] = modTable.config[\"Boss\"],     --Surgeon Stitchflesh\n        [166945] = modTable.config[\"Boss\"],     --Nalthor the Rimebinder\n        \n        [165824] = modTable.config[\"MiniBoss\"], --Nar'zudah\n        [165197] = modTable.config[\"MiniBoss\"], --Skeletal Monostrosity\n        \n        [163121] = modTable.config[\"FMobs\"],    --Stiched Vanguard\n        [165137] = modTable.config[\"FMobs\"],    --Zolramus GateKeeper\n        [163618] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        [168443] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        \n        [163128] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [168357] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [173044] = modTable.config[\"DMobs\"],    --Stitching Assistant\n        [167731] = modTable.config[\"DMobs\"],    --Separation Assistant\n        [163126] = modTable.config[\"DMobs\"],    --Brittlebone Mage\n        [163621] = modTable.config[\"DMobs\"],    --Goregrind\n        [163620] = modTable.config[\"DMobs\"],    --Rotspew\n        [172981] = modTable.config[\"DMobs\"],    --Kyrian Stitchwerk\n        \n        [173016] = modTable.config[\"IMobs\"],    --Corpse Collector\n        [166302] = modTable.config[\"IMobs\"],    --Corpse Harvester\n        [165919] = modTable.config[\"IMobs\"],    --Skeletal Marauder\n        \n        [165222] = modTable.config[\"HMobs\"],    --Zolramus Bonemender\n        [165872] = modTable.config[\"HMobs\"],    --Flesh Crafter\n        \n        --Halls Of Atonment\n        [165408] = modTable.config[\"Boss\"],     --Halkias\n        [156827] = modTable.config[\"Boss\"],     --Echelon  \n        [165410] = modTable.config[\"Boss\"],     --High Adjudicator Aleez\n        [164218] = modTable.config[\"Boss\"],     --Lord Chamberlain\n        \n        [167876] = modTable.config[\"MiniBoss\"], --Inquisitor Sigar\n        \n        [164562] = modTable.config[\"FMobs\"],    --Depraved Houndmaster\n        [165414] = modTable.config[\"FMobs\"],    --Depraved Obliterator\n        \n        [164563] = modTable.config[\"DMobs\"],    --Vicious Gargon\n        [165515] = modTable.config[\"DMobs\"],    --Depraved Darkblade\n        [167607] = modTable.config[\"DMobs\"],    --Stoneborn Slasher\n        [164557] = modTable.config[\"DMobs\"],    --Shard of Halkias\n        \n        [165529] = modTable.config[\"IMobs\"],    --Depraved Collector\n        [167612] = modTable.config[\"IMobs\"],    --Stoneborn Reaver\n        \n        [167611] = modTable.config[\"DoMobs\"],    --Stoneborn Eviscerator\n        \n        --Spires Of Ascension\n        [162059] = modTable.config[\"Boss\"],     --Kin-Tara\n        [163077] = modTable.config[\"Boss\"],     --Azules\n        [162058] = modTable.config[\"Boss\"],     --Ventunax\n        [162060] = modTable.config[\"Boss\"],     --Oryphrino\n        [167410] = modTable.config[\"Boss\"],     --Devos\n        \n        [168844] = modTable.config[\"MiniBoss\"],  --Lakesis\n        [168843] = modTable.config[\"MiniBoss\"],  --Klotos\n        [168845] = modTable.config[\"MiniBoss\"],  --Astronos\n        \n        [163458] = modTable.config[\"TMobs\"],   --Forsworn Castigator\n        [168418] = modTable.config[\"TMobs\"],   --Forsworn Inquisitor\n        [163520] = modTable.config[\"TMobs\"],   --Forsworn Squad-Leader\n        [168681] = modTable.config[\"TMobs\"],   --Forsworn Helion\n        \n        [163503] = modTable.config[\"DMobs\"],   --EtherDiver\n        [168658] = modTable.config[\"DMobs\"],   --Forsworn Devastator\n        [168717] = modTable.config[\"DMobs\"],   --Forsworn Justicar\n        \n        [168318] = modTable.config[\"IMobs\"],   --Forsworn Goliath\n        \n        [168420] = modTable.config[\"HMobs\"],   --Forsworn Champion\n        [163459] = modTable.config[\"HMobs\"],   --Forsworn Mender\n        [168718] = modTable.config[\"HMobs\"],   --Forsworn Warden\n        \n        --Sanguine Depths\n        [162103] = modTable.config[\"Boss\"],     --Executor Tarvold\n        [165318] = modTable.config[\"Boss\"],     --General Kaal\n        [162102] = modTable.config[\"Boss\"],     --Grand Proctor Beryllia\n        [162100] = modTable.config[\"Boss\"],     --Kryxis the Voracious\n        \n        [171376] = modTable.config[\"MiniBoss\"],    --Head Custodian Javlin\n        \n        [165076] = modTable.config[\"FMobs\"],    --Gluttonous Tick\n        [162040] = modTable.config[\"FMobs\"],    --Grand Overseer\n        [172265] = modTable.config[\"FMobs\"],   --Remnant of Fury\n        [168882] = modTable.config[\"FMobs\"],    --Fleeting Manifestation\n        \n        [162049] = modTable.config[\"DMobs\"],   --Vestige of Doubt\n        [171448] = modTable.config[\"DMobs\"],    --Dreadful Huntmaster\n        [166396] = modTable.config[\"DMobs\"],   --Noble Skirmisher\n        [166589] = modTable.config[\"DMobs\"],    --Animated Weapon\n        [171799] = modTable.config[\"DMobs\"],    --Depths Warden\n        [162047] = modTable.config[\"DMobs\"],    --Instiable Brute\n        \n        [162039] = modTable.config[\"IMobs\"],   --Wicked Oppressor\n        \n        [162057] = modTable.config[\"DoMobs\"],    --Chamber Sentinel\n        [162038] = modTable.config[\"DoMobs\"],   --Regal Mistdancer\n        \n        --Mist of Trina Scithe      \n        [164567] = modTable.config[\"Boss\"],     --ingra-maloch\n        [170217] = modTable.config[\"Boss\"],     --Mistcaller\n        [164517] = modTable.config[\"Boss\"],     --Tred'ova \n        \n        [164929] = modTable.config[\"FMobs\"],   --Tirnenn Villager\n        [164926] = modTable.config[\"FMobs\"],   --Drust Boughbreaker\n        \n        [166275] = modTable.config[\"DMobs\"],   --Mistveil Shaper\n        \n        [164920] = modTable.config[\"DMobs\"],   --Drust Soulcleaver\n        [166304] = modTable.config[\"DMobs\"],   --Mistveil Stinger\n        \n        [166299] = modTable.config[\"HMobs\"],   --Mistveil Tender\n        \n        [164921] = modTable.config[\"IMobs\"],   --Drust Harvester\n        [167111] = modTable.config[\"IMobs\"],   --Spinemaw Staghorn\n        \n        [167113] = modTable.config[\"DoMobs\"],   --Spinemaw Acidgullet \n        [166276] = modTable.config[\"DoMobs\"],   --Mistveil Guardian\n        \n        --Plaguefall    \n        [164967] = modTable.config[\"Boss\"],     --Doctor Ickus\n        [164266] = modTable.config[\"Boss\"],     --Domina Venomblade\n        [164255] = modTable.config[\"Boss\"],     --Globgrog\n        [164267] = modTable.config[\"Boss\"],     --Margrave Stradama\n        \n        [168886] = modTable.config[\"MiniBoss\"],  --Virulax Blightweaver\n        [169861] = modTable.config[\"MiniBoss\"],  --Ickor Bileflesh\n        \n        [164737] = modTable.config[\"FMobs\"],    --Brood Ambusher\n        [163915] = modTable.config[\"FMobs\"],    --Hatchling Nest\n        [168572] = modTable.config[\"FMobs\"],    --Fungi Stormer\n        [163891] = modTable.config[\"FMobs\"],    --Rotmarrow Slime\n        [168837] = modTable.config[\"FMobs\"],    --Stealthling\n        \n        [168578] = modTable.config[\"DMobs\"],    --FungalMancer\n        [168627] = modTable.config[\"DMobs\"],    --Plaguebinder\n        [167493] = modTable.config[\"DMobs\"],    --Venomous Sniper\n        [163882] = modTable.config[\"DMobs\"],    --Decaying Flesh Giant\n        [168310] = modTable.config[\"DMobs\"],    --Plagueroc\n        [165430] = modTable.config[\"DMobs\"],    --Malignant Spawn\n        \n        [168393] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [168396] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [163894] = modTable.config[\"DoMobs\"],   --Blighted Spinebreaker\n        \n        [169159] = modTable.config[\"ExMobs\"],   --Unstable Canister\n        [168878] = modTable.config[\"ExMobs\"],   --Rigged Plagueborer        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            elseif modTable.UseDefaultColor and not (unitFrame.namePlateUnitReaction == 4) and not unitIsPlayer and not unitFrame.namePlateIsQuestObjective then\n                Plater.SetNameplateColor(unitFrame, modTable.DefaultColor)\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n",
},
["Time"] = 1628712779,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/ocXXJPJZ7/6",
["Enabled"] = false,
["Revision"] = 236,
["semver"] = "1.0.5",
["Author"] = "Yummyyummy-Ravencrest",
["Desc"] = "Colours the Nameplates according to the type of M+ mob. This is my version of M+ Colored Mobs, https://wago.io/UKpo0_GbE",
["Prio"] = 98,
["version"] = 6,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Colors Header",
["Value"] = "Mythic+ Colours:",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Boss",
["Value"] = {
0,
1,
0.5843137254902,
1,
},
["Key"] = "Boss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "MiniBoss",
["Value"] = {
0.37647058823529,
0,
0.37647058823529,
1,
},
["Key"] = "MiniBoss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mini bosses",
},
{
["Type"] = 1,
["Name"] = "Focus Mobs",
["Value"] = {
0,
0,
1,
1,
},
["Key"] = "FMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that need to be focus.",
},
{
["Type"] = 1,
["Name"] = "Deadly Mobs",
["Value"] = {
0,
1,
1,
1,
},
["Key"] = "DMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are considered Deadly.",
},
{
["Type"] = 1,
["Name"] = "Dodge Mobs",
["Value"] = {
0.81176470588235,
0,
1,
1,
},
["Key"] = "DoMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are not considered deadly, but have ability's that need to be dogded.",
},
{
["Type"] = 1,
["Name"] = "Healer Mobs",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "HMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have healing ability's that should be kicked,",
},
{
["Type"] = 1,
["Name"] = "Interruptable Mobs",
["Value"] = {
1,
0.49803921568627,
0,
1,
},
["Key"] = "IMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have Interruptable spell that should be kicked.",
},
{
["Type"] = 1,
["Name"] = "Enrage Mobs",
["Value"] = {
1,
0.63921568627451,
0,
1,
},
["Key"] = "EnMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that enrage and should be calmed if possible.",
},
{
["Type"] = 1,
["Name"] = "Expolsives Mobs",
["Value"] = {
1,
0,
0.38039215686275,
1,
},
["Key"] = "ExMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that explode before or after death. WATCH OUT!!!",
},
{
["Type"] = 1,
["Name"] = "DefaultColor",
["Value"] = {
0.43921568627451,
0.43921568627451,
0.43921568627451,
1,
},
["Key"] = "DefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Target Color",
["Value"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["Key"] = "targetColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 9",
["Value"] = 0,
["Key"] = "option9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Addictional Options",
["Value"] = "Addictional Options",
["Key"] = "option22",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Target Color",
["Value"] = false,
["Key"] = "targetEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Raid Mark Colors",
["Value"] = true,
["Key"] = "raidMarkColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Color Healthbar",
["Value"] = false,
["Key"] = "colorHealthbar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "ThreatColors",
["Value"] = false,
["Key"] = "threatColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 4,
["Name"] = "Use Default Color",
["Value"] = true,
["Key"] = "UseDefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "M+ Colouring",
},
{
["OptionsValues"] = {
["cooldownColor"] = {
1,
0.01960784383118153,
0,
1,
},
["interruptedColor"] = {
1,
0.2823529541492462,
0.3568627536296845,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x610c5b685dc84cc7",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1688802826,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 481,
["semver"] = "",
["Author"] = "Verlijke-Mal'Ganis",
["Desc"] = "Changes the color of the nameplate castbar based on the current cooldown of the player's interrupt.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Interrupt CD Indicator",
["Options"] = {
{
["Type"] = 1,
["Name"] = "Kick Ready Color",
["Value"] = {
0,
1,
0,
1,
},
["Key"] = "readyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is ready to be used.",
},
{
["Type"] = 1,
["Name"] = "Kick Will Be Ready Color",
["Value"] = {
1,
0.5921568627451,
0.031372549019608,
1,
},
["Key"] = "semiCooldownColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, but will be ready before the cast ends.",
},
{
["Type"] = 1,
["Name"] = "Kick Will NOT Be Ready",
["Value"] = {
1,
0,
0.007843137254902,
1,
},
["Key"] = "cooldownColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, and will NOT be ready before the cast ends.",
},
{
["Type"] = 2,
["Max"] = 1000,
["Desc"] = "Time in milliseconds that your kick should be off cooldown before cast end to count as \"kick will be ready\" (recommended to set to a few hundred ms above your latency).",
["Min"] = 0,
["Name"] = "Kick CD Tolerance (ms)",
["Value"] = 500,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "cooldownTolerance",
},
{
["Type"] = 1,
["Name"] = "Protected Cast Color",
["Value"] = {
0.74117647058824,
0.74901960784314,
0.73725490196078,
1,
},
["Key"] = "protectedColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for protected casts.",
},
{
["Type"] = 1,
["Name"] = "Interrupted Color",
["Value"] = {
1,
0,
0,
1,
},
["Key"] = "interruptedColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for interrupted casts.",
},
{
["Type"] = 4,
["Name"] = "Castbar CD Line",
["Value"] = true,
["Key"] = "cooldownLine",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Draw a line on castbars indicating when your interrupt will be off-cooldown.",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62229f65202d123",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
},
["Time"] = 1688801832,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/CignDPWs3/8",
["Icon"] = 4224736,
["Enabled"] = false,
["Revision"] = 497,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Set Bar Color",
["Value"] = true,
["Key"] = "setColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust health bar colors?",
},
{
["Type"] = 4,
["Name"] = "Set Name Color",
["Value"] = false,
["Key"] = "setNameColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 4,
["Name"] = "Set Border Color",
["Value"] = false,
["Key"] = "setBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 1,
["Name"] = "Vy Color",
["Value"] = {
0,
0.9921568627451,
1,
1,
},
["Key"] = "vyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Urh Color",
["Value"] = {
0.63137254901961,
0.34901960784314,
1,
1,
},
["Key"] = "urhColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Wo Color",
["Value"] = {
0.33725490196078,
1,
0.42352941176471,
1,
},
["Key"] = "woColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider",
["Value"] = 0,
["Key"] = "pog",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Name",
["Value"] = true,
["Key"] = "setName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's Name?",
},
{
["Type"] = 3,
["Name"] = "Vy Name",
["Value"] = "Vy (Haste)",
["Key"] = "vyName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Urh Name",
["Value"] = "Urh (CDR)",
["Key"] = "urhName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Wo Name",
["Value"] = "Wo (Stealth)",
["Key"] = "woName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Height",
["Value"] = false,
["Key"] = "setHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar height?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Bar Height",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "barHeight",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Font Size",
["Value"] = false,
["Key"] = "setFontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's font size?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Font Size",
["Value"] = 20,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Texture",
["Value"] = false,
["Key"] = "setTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar texture?",
},
{
["Type"] = 5,
["Name"] = "Bar Warning",
["Value"] = "*set texture path in \"Nameplate Updated\" hook. Default custom texture is PlaterFocus",
["Key"] = "barWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Background Color",
["Value"] = false,
["Key"] = "setBackgroundColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Some bar textures (like PlaterFocus) Also show the background color, which you can set here.",
},
{
["Type"] = 1,
["Name"] = "Vy Background Color",
["Value"] = {
0,
0.098039215686275,
0.098039215686275,
1,
},
["Key"] = "vyBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Urh Background Color",
["Value"] = {
0.043137254901961,
0,
0.098039215686275,
1,
},
["Key"] = "urhBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Wo Background Color",
["Value"] = {
0,
0.098039215686275,
0.011764705882353,
1,
},
["Key"] = "woBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Reload Warning",
["Value"] = "Moving the sliders around too much can cause some temporary lag. To fix this simply reload your game after applying changes!",
["Key"] = "reloadWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Ilrieth-Argent Dawn",
["Desc"] = "modify Encrypted mobs' names and healthbar colors with custom values",
["Prio"] = 99,
["version"] = 8,
["PlaterCore"] = 1,
["semver"] = "1.0.7",
["LastHookEdited"] = "",
["Name"] = "Encrypted Names & Colors",
},
{
["OptionsValues"] = {
["color"] = {
0.8352941870689392,
0.04313725605607033,
0.07058823853731155,
1,
},
["wrap"] = true,
["size"] = 2.279999971389771,
},
["LastHookEdited"] = "",
["Hooks"] = {
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.TargetBorder) then\n        unitFrame.TargetBorder:Hide()\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local size = modTable.config.size\n    local color = modTable.config.color\n    \n    \n    if (not unitFrame.TargetBorder) then\n        unitFrame.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")    \n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            --ViragDevTool_AddData(unitFrame, 'frame')\n            --ViragDevTool_AddData(Plater.db.profile, \"db\")\n            local r, g, b, a = DetailsFramework:ParseColors (color)\n            unitFrame.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            \n            unitFrame.TargetBorder:SetBorderSizes (size, size, size, size)\n            \n            if modTable.config.wrap then\n                envTable.UpdateSize(unitFrame.TargetBorder)    \n            else    \n                unitFrame.TargetBorder:UpdateSizes()\n            end\n            \n            unitFrame.TargetBorder:Show()\n        else\n            unitFrame.TargetBorder:Hide()\n        end\n    end\n    \n    function envTable.UpdateSize(b)\n        local offset = Plater.db.profile.border_thickness\n        local borderSize = b.borderSize or 1\n        local minPixels = b.borderSizeMinPixels or 2\n        local upwardExtendHeightPixels = b.upwardExtendHeightPixels or borderSize\n        local upwardExtendHeightMinPixels = b.upwardExtendHeightMinPixels or minPixels\n        \n        PixelUtil.SetWidth(b.Left, size, minPixels)\n        PixelUtil.SetPoint(b.Left, \"TOPRIGHT\", b, \"TOPLEFT\", -offset, upwardExtendHeightPixels + offset, -offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Left, \"BOTTOMRIGHT\", b, \"BOTTOMLEFT\", -offset, -size - offset, -offset, minPixels - offset)\n        \n        PixelUtil.SetWidth(b.Right, size, minPixels)\n        PixelUtil.SetPoint(b.Right, \"TOPLEFT\", b, \"TOPRIGHT\", offset, upwardExtendHeightPixels + offset, offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Right, \"BOTTOMLEFT\", b, \"BOTTOMRIGHT\", offset, -size - offset, offset, minPixels - offset)\n        \n        PixelUtil.SetHeight(b.Bottom, size, minPixels)\n        PixelUtil.SetPoint(b.Bottom, \"TOPLEFT\", b, \"BOTTOMLEFT\", -offset, -offset)\n        PixelUtil.SetPoint(b.Bottom, \"TOPRIGHT\", b, \"BOTTOMRIGHT\", offset, -offset)\n        \n        if b.Top then\n            PixelUtil.SetHeight(b.Top, size, minPixels)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMLEFT\", b, \"TOPLEFT\", -offset, offset)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMRIGHT\", b, \"TOPRIGHT\", offset, -offset)\n        end\n    end\nend",
},
["Time"] = 1688802817,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/XR0IX1Suj/1",
["Icon"] = 3573824,
["Enabled"] = true,
["Revision"] = 329,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Add an extra border to your current target. Options included to wrap the border on top of the already existing border.",
["Prio"] = 99,
["Name"] = "Wrapping Target Border",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Color",
["Value"] = "Border",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 2,
["Key"] = "size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "size",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Wrap border",
["Value"] = true,
["Key"] = "wrap",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Check this to place the border AROUND the default nameplate border instead of on top of it",
},
},
["HooksTemp"] = {
},
["version"] = 1,
},
},
["disable_omnicc_on_auras"] = true,
["aura_width"] = 22,
["range_check_enabled"] = false,
["quick_hide"] = true,
["target_highlight_color"] = {
0.02745098248124123,
0.2745098173618317,
},
["click_space"] = {
125,
},
["castbar_target_font"] = "PT Sans Narrow",
["ui_parent_cast_level"] = 108,
["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Tank Interrupt"] = 12,
["Unit - Important"] = 11,
["Cast - Very Important"] = 15,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Unit - Show Energy"] = 11,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Circular Swipe"] = 4,
["Cast - Shield Interrupt"] = 2,
["Cast - Important Target [P]"] = 2,
["Add - Explode on Die [P]"] = 1,
["Auto Set Skull"] = 11,
["Relics 9.2 M Dungeons"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Countdown"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Cast - Stop Casting"] = 4,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Spiteful Affix"] = 3,
["Cast - Quick Flash"] = 2,
["Cast - Glowing [P]"] = 10,
["Fixate On You"] = 11,
},
["cast_statusbar_spark_color"] = {
nil,
0.13333333333333,
0.8,
},
["pet_height_scale"] = 0.8499999642372131,
["aura_x_offset"] = 0,
["range_check_alpha_friendlies"] = 1,
["hover_highlight_alpha"] = 0.2999999821186066,
["ui_parent_scale_tune"] = 1.4099998474121,
["health_statusbar_bgtexture"] = "Clean",
["tank"] = {
["colors"] = {
["aggro"] = {
1,
0.03529411926865578,
0,
},
["noaggro"] = {
0,
0.5058823823928833,
1,
},
["nocombat"] = {
0.05882353335618973,
1,
},
["pulling"] = {
nil,
0.4196078777313232,
},
},
},
["global_offset_x"] = -0.6000003814697266,
["aura_tracker"] = {
["buff_tracked"] = {
["209859"] = true,
},
["debuff_banned"] = {
["356329"] = false,
["228354"] = false,
["113724"] = false,
["289308"] = false,
["331934"] = false,
["205708"] = false,
["352939"] = false,
["354050"] = false,
["236299"] = true,
["12486"] = false,
},
["buff_banned"] = {
["206150"] = true,
["333553"] = true,
["61574"] = true,
["61573"] = true,
},
},
["castbar_target_show"] = true,
["update_throttle"] = 0.1499999910593033,
["castbar_icon_show"] = false,
["global_offset_y"] = 4.430000305175781,
["not_affecting_combat_alpha"] = 1,
["indicator_raidmark_scale"] = 0.99999994039536,
["target_shady_alpha"] = 0.3199999928474426,
["target_highlight_height"] = 22,
["aggro_can_check_notank"] = true,
["version"] = 1,
["target_highlight"] = false,
["target_shady_enabled"] = false,
["patch_version"] = 35,
["range_check_in_range_or_target_alpha"] = 0.7999999523162842,
["aura_timer_text_size"] = 12,
["number_region_first_run"] = true,
["use_ui_parent"] = true,
["hide_blizzard_castbar"] = true,
["border_color"] = {
nil,
nil,
nil,
1,
},
["health_selection_overlay_alpha"] = 0,
["health_statusbar_bgcolor"] = {
0,
0,
0,
1,
},
["pet_width_scale"] = 0.8499999642372131,
["dps"] = {
["colors"] = {
["solo"] = {
0,
1,
0.011764705882353,
},
["notontank"] = {
0.960784375667572,
0.501960813999176,
},
["aggro"] = {
0.8666667342185974,
0.08627451211214066,
0.08627451211214066,
},
["noaggro"] = {
0,
0.250980406999588,
},
["pulling"] = {
nil,
0.2980392277240753,
0.168627455830574,
},
},
},
["castbar_target_anchor"] = {
["y"] = -8.94000244140625,
["x"] = -3.170005798339844,
["side"] = 10,
},
["cast_statusbar_texture"] = "Wglass",
["first_run3"] = true,
["aura_show_enrage"] = true,
},
["Qubit"] = {
["target_highlight"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1688802706,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Revision"] = 633,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["SpellIds"] = {
398151,
377738,
378149,
},
["Prio"] = 99,
["Name"] = "Aura - Buff Alert [Plater]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1614608904,
["NpcNames"] = {
"174773",
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["Icon"] = 135945,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Time to Die",
["Value"] = "Time to Die",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Key"] = "bgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Targeting",
["Value"] = "Targeting",
["Key"] = "option11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 11",
["Value"] = 0,
["Key"] = "option11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Revision"] = 188,
["semver"] = "",
["Desc"] = "Time to die Spiteful affix",
["version"] = -1,
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Name"] = "M+ Spiteful",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1688802707,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 369,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["Enabled"] = true,
["Author"] = "Tercioo-Sylvanas",
["NpcNames"] = {
},
["Desc"] = "Add the debuff name in the trigger box.",
["Prio"] = 99,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a special animation showing the explosion time.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Name"] = "Color List by SpellId",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
415437,
264050,
267824,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1622577650,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Only in Combat",
["Value"] = false,
["Key"] = "onlyInCombat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Revision"] = 64,
["semver"] = "",
["Desc"] = "Auto set skull marker",
["version"] = -1,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Auto Set Skull",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802694,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["Revision"] = 210,
["semver"] = "",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["version"] = -1,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Countdown",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1688802690,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["Icon"] = 1029718,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Revision"] = 271,
["semver"] = "",
["Desc"] = "Show above the nameplate who is the player fixated",
["version"] = -1,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Enabled"] = true,
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802689,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["Icon"] = 136048,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "script desc",
["Value"] = "Show the power of the unit above the nameplate.",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show at 80% of Energy",
["Value"] = true,
["Key"] = "showLater",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Name"] = "Font Color",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Key"] = "fontColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Name"] = "Enable Text Outline",
["Value"] = true,
["Key"] = "outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 235,
["semver"] = "",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Unit - Show Energy [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["url"] = "",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802691,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 268,
["semver"] = "",
["NpcNames"] = {
},
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Prio"] = 99,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["OptionsValues"] = {
["NameplateSizeOffset"] = 1.3500000238419,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Time"] = 1648170127,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["Icon"] = 2065634,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "ShowArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "ArrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "GlowAlpha",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 1,
["Key"] = "NameplateSizeOffset",
["Value"] = 1.25,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Height Scale",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["Revision"] = 2918,
["semver"] = "1.0.74",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["version"] = 75,
["Author"] = "Bombad£o-Azralon",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["Name"] = "M+ Explosive [Fixed]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["SpellIds"] = {
240446,
347363,
339415,
318406,
331223,
326607,
327885,
334625,
328016,
324527,
344005,
321999,
340219,
328986,
320576,
322358,
341445,
336451,
332672,
331398,
331379,
334664,
334967,
320230,
328146,
320631,
322493,
324372,
327240,
322939,
328756,
331745,
340304,
319685,
326827,
342481,
356548,
356537,
356407,
349987,
349663,
350090,
355782,
350922,
355438,
357404,
357189,
347150,
355057,
355139,
355429,
355584,
358131,
350517,
357260,
351119,
351646,
350180,
335783,
294533,
353782,
347855,
353769,
331935,
336383,
342160,
353742,
353444,
277039,
278192,
329909,
358328,
325632,
81008,
296355,
355224,
296839,
310392,
367380,
297966,
332002,
329904,
294517,
329423,
329905,
353124,
358270,
295985,
184381,
318995,
260344,
301952,
362820,
329930,
355212,
332165,
358327,
359770,
364040,
361644,
363088,
361989,
363024,
365008,
365805,
365958,
360717,
361923,
363533,
364386,
364114,
362028,
362617,
365385,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
["Enabled"] = true,
["url"] = "https://wago.io/1TlaFYtDO/75",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["OptionsValues"] = {
["customSize"] = {
{
"17",
"120, 16",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775232,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
["Options"] = {
{
["Type"] = 7,
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Value"] = {
{
"17",
"120, 16",
},
},
["Key"] = "customSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Key"] = "width",
["Value"] = 120,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Key"] = "height",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Key"] = "timerFontSize",
["Value"] = 12,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Timer Size",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 7",
["Value"] = "Time Separators",
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Key"] = "separatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Key"] = "separatorWidth",
["Value"] = 1,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["Revision"] = 283,
["semver"] = "",
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["version"] = -1,
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["Name"] = "Cast - Castbar is Timer [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
354080,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Shows the target name in a separate box",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Key"] = "option27",
["Value"] = 0,
["Name"] = "Option 27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Target Options",
["Name"] = "Option 28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "colorByClass",
["Value"] = true,
["Name"] = "Use Class Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgColor",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1688802705,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Blink Enabled",
["Value"] = true,
["Key"] = "blinkEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = true,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Name"] = "Change NamePlate Color",
["Value"] = false,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Key"] = "timeleftToBlink",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Key"] = "blinkSpeed",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Key"] = "blinkMaxAlpha",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Timer Color Enabled",
["Value"] = true,
["Key"] = "timerColorEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftWarning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Warning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftCritical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Critical",
},
{
["Type"] = 1,
["Name"] = "Warning Color",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Key"] = "warningColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Name"] = "Critical Color",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Key"] = "criticalColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["Revision"] = 379,
["semver"] = "",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Name"] = "Aura - Blink by Time Left [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1688802692,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["url"] = "",
["Icon"] = 2175503,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 534,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 18",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Nameplate Color",
["Value"] = "Nameplate Color",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
},
["Prio"] = 99,
["Name"] = "Explosion Affix M+ [Plater]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802696,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 148,
["semver"] = "",
["Enabled"] = true,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["SpellIds"] = {
},
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Add - Health Markers [P]",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802697,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 574,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Extra Texture",
["Value"] = "Extra Texture",
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Key"] = "showExtraTexture",
["Value"] = false,
["Name"] = "Show Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Key"] = "skullColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Name"] = "Npc Color By NpcID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["Enabled"] = true,
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Important [P]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["SpellIds"] = {
376644,
373017,
386781,
384823,
372735,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Name"] = "Cast Color by SpellID",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["Desc"] = "Show a different animation for the cast bar.",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
200630,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["Desc"] = "Play a very fast flash when the cast start",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1688802924,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = 610472,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 69,
["Options"] = {
},
["Enabled"] = true,
["NpcNames"] = {
},
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802703,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 164,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useFlash",
["Value"] = true,
["Name"] = "Flash Nameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Name"] = "NpcID to Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["Enabled"] = true,
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
190426,
186696,
101075,
100818,
98081,
52019,
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Warning [P]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1688802707,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Icon"] = 236209,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["Revision"] = 20,
["Options"] = {
},
["Enabled"] = true,
["NpcNames"] = {
},
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["SpellIds"] = {
372743,
372749,
384933,
},
["Prio"] = 99,
["Name"] = "Aura While Casting [P]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802700,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/duck_64",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["Revision"] = 113,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateScale",
["Value"] = true,
["Name"] = "Change Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["Enabled"] = true,
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Non Elite Trash [P]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["NpcNames"] = {
},
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["NpcNames"] = {
},
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Desc"] = "Just stop casting",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802690,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Revision"] = 34,
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["SpellIds"] = {
426662,
426663,
},
["Prio"] = 99,
["Name"] = "Fixate by Unit Buff [P]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802694,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 108,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Reverse Health Bar",
["Value"] = false,
["Key"] = "useReverse",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable Shake",
["Value"] = false,
["Key"] = "useShake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Red Background",
["Value"] = true,
["Key"] = "useBackground",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Explode on Die [P]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["NpcNames"] = {
},
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
},
},
["pet_height_scale"] = 0.8499999642372131,
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["ShowNamePlateLoseAggroFlash"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["NamePlateClassificationScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/FrameXML/SettingDefinitions/InterfaceOverrides.lua\"]:16: in function <...e/FrameXML/SettingDefinitions/InterfaceOverrides.lua:12>\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:262: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:376: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:372>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:178: in function <Interface/SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:325: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:324>\n",
["nameplateShowFriendlyTotems"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplatePersonalHideDelaySeconds"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateTargetRadialPosition"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateResourceOnTarget"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["clampTargetNameplateToScreen"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateShowAll"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateMaxDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:376: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:372>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:178: in function <Interface/SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:325: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:324>\n",
["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["SoftTargetInteract"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"ALLNAMEPLATES\"]:4: in function <[string \"ALLNAMEPLATES\"]:1>\n",
["NamePlateVerticalScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/FrameXML/SettingDefinitions/InterfaceOverrides.lua\"]:15: in function <...e/FrameXML/SettingDefinitions/InterfaceOverrides.lua:12>\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:262: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:376: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:372>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:178: in function <Interface/SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:325: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:324>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateShowSelf"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateSelfTopInset"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateMotionSpeed"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateShowEnemyMinions"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateSelectedScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateMotion"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateMinScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateOtherTopInset"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateOtherAtBase"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["NamePlateHorizontalScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/FrameXML/SettingDefinitions/InterfaceOverrides.lua\"]:14: in function <...e/FrameXML/SettingDefinitions/InterfaceOverrides.lua:12>\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:262: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:376: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:372>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:178: in function <Interface/SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:325: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:324>\n",
["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:5882: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:5880>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Details/Libs/DF/slider.lua:762>\n",
["SoftTargetIconGameObject"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
["nameplateLargeTopInset"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:3932: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:724: in function <Interface/AddOns/Details/Libs/DF/button.lua:660>\n",
},
["url"] = "https://wago.io/RPHjubTGI/1",
["transparency_behavior"] = 4,
["spell_animations"] = false,
["ui_parent_scale_tune"] = 1.406249965948519,
["target_shady_enabled"] = false,
["cast_statusbar_spark_alpha"] = 0.8299999833107,
["aura2_y_offset"] = 5,
["health_statusbar_bgtexture"] = "Clean",
["plate_config"] = {
["global_health_height"] = 13,
["friendlyplayer"] = {
["cast"] = {
121,
},
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
["cast_incombat"] = {
121,
},
["actorname_use_class_color"] = true,
},
["friendlynpc"] = {
["cast"] = {
121,
},
["actorname_text_spacing"] = 9,
["health"] = {
121,
13,
},
["cast_incombat"] = {
121,
},
["health_incombat"] = {
121,
13,
},
},
["enemynpc"] = {
["actorname_text_font"] = "Bebas Neue Cyrillic Regular",
["castbar_offset"] = -0.2400054931640625,
["spellpercent_text_font"] = "Bebas Neue Cyrillic Regular",
["actorname_text_size"] = 10,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast"] = {
124,
},
["spellpercent_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0,
["percent_text_size"] = 10,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Bebas Neue Cyrillic Regular",
["cast_incombat"] = {
124,
10,
},
["actorname_text_anchor"] = {
["y"] = 0.5799942016601562,
["x"] = -3.75,
["side"] = 1,
},
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
["spellname_text_size"] = 10,
["big_actorname_text_font"] = "PT Sans Narrow",
["percent_text_anchor"] = {
["y"] = -0.2400054931640625,
["x"] = 0.8799972534179688,
["side"] = 11,
},
["level_text_font"] = "PT Sans Narrow",
["spellname_text_font"] = "Bebas Neue Cyrillic Regular",
},
["enemyplayer"] = {
["actorname_text_font"] = "PT Sans Narrow",
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["spellpercent_text_font"] = "PT Sans Narrow",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["level_text_size"] = 8,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast"] = {
121,
},
["all_names"] = true,
["big_actortitle_text_size"] = 10,
["actorname_text_outline"] = "OUTLINE",
["percent_text_size"] = 10,
["actorname_text_spacing"] = 11,
["percent_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
121,
14,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_size"] = 11,
["quest_color_enabled"] = true,
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
["quest_enabled"] = true,
["big_actorname_text_size"] = 10,
["big_actorname_text_font"] = "PT Sans Narrow",
["level_text_font"] = "PT Sans Narrow",
["spellname_text_font"] = "PT Sans Narrow",
},
["global_health_width"] = 121,
},
["health_selection_overlay"] = "Wglass",
["aura_y_offset"] = 5,
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.5764706134796143,
0,
1,
},
["anothertank"] = {
0.1333333402872086,
0.9372549653053284,
},
["aggro"] = {
0.0470588281750679,
0,
},
["nocombat"] = {
0.05882353335618973,
1,
},
["noaggro"] = {
nil,
0.01960784383118153,
},
["pulling"] = {
0,
0.501960813999176,
1,
},
},
},
["global_offset_x"] = -0.6000003814697266,
["health_statusbar_texture"] = "ToxiUI Tx Right",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Aura Reorder"] = 3,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Extra Border"] = 2,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.19607843137255,
0.050980392156863,
0.062745098039216,
1,
},
["update_throttle"] = 0.1499999910593033,
["color_override_colors"] = {
[3] = {
1,
0.0941176563501358,
0.1372549086809158,
},
},
["extra_icon_cooldown_reverse"] = false,
["resources_settings"] = {
["chr"] = {
["Player-3209-0B4EDE3D"] = "HolyPower",
["Player-3682-0B236980"] = "ArcaneCharges",
["Player-1403-0A6909FE"] = "ComboPoints",
["Player-3682-0B310D76"] = "HolyPower",
["Player-3209-0B29D149"] = "ArcaneCharges",
["Player-3682-0B19EC37"] = "Chi",
["Player-3682-0B241018"] = "Essence",
["Player-1307-0BE359D3"] = "ArcaneCharges",
["Player-3682-0B155119"] = "SoulShards",
["Player-3682-0B038C9A"] = "ArcaneCharges",
["Player-3682-0B20292A"] = "HolyPower",
["Player-3209-0B2C0A65"] = "Chi",
["Player-3682-0B2A13DE"] = "ComboPoints",
["Player-1403-0A70E106"] = "ComboPoints",
["Player-1403-0A1C79B6"] = "ArcaneCharges",
},
},
["castbar_target_text_size"] = 8,
["npc_cache"] = {
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[169421] = {
"Felguard",
"Brackenhide Hollow",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[148441] = {
"Gnomish Gyro-Engineer",
"Battle of Dazar'alor",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
"enUS",
},
[148442] = {
"Gnomish Commando",
"Battle of Dazar'alor",
"enUS",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[56717] = {
"Hoptallus",
"Stormstout Brewery",
"enUS",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[183498] = {
"Illicit Collector",
"Sepulcher of the First Ones",
"enUS",
},
[169425] = {
"Felhound",
"Brackenhide Hollow",
"enUS",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
},
[184522] = {
"Vigilant Custodian",
"Sepulcher of the First Ones",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[169426] = {
"Infernal",
"Brackenhide Hollow",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[169428] = {
"Wrathguard",
"Brackenhide Hollow",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[169429] = {
"Shivarra",
"Brackenhide Hollow",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[169430] = {
"Ur'zul",
"Brackenhide Hollow",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[148962] = {
"Ravenous Stalker",
"Battle of Dazar'alor",
"enUS",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[59982] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
"enUS",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[146409] = {
"Lady Jaina Proudmoore",
"Battle of Dazar'alor",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
},
[184535] = {
"Overthrown Artisan",
"Sepulcher of the First Ones",
"enUS",
},
[184791] = {
"Inner Hatred",
"Sepulcher of the First Ones",
"enUS",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[133361] = {
"Wasting Servant",
"Waycrest Manor",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[145644] = {
"Bwonsamdi",
"Battle of Dazar'alor",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
"enUS",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
"enUS",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[137458] = {
"Rotting Spore",
"The Underrot",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
},
[126845] = {
"Captain Jolly",
"Freehold",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
"enUS",
},
[168932] = {
"Doomguard",
"Brackenhide Hollow",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
"enUS",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[11262] = {
"Onyxian Whelp",
"Onyxia's Lair",
"enUS",
},
[147440] = {
"Blazing Fireguard",
"Battle of Dazar'alor",
"enUS",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[126847] = {
"Captain Raoul",
"Freehold",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
"enUS",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[126848] = {
"Captain Eudora",
"Freehold",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
"enUS",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[174569] = {
"Training Dummy",
"The Shadowlands",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[142587] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
"enUS",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
"enUS",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[69791] = {
"Скамими",
"Sepulcher of the First Ones",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[205790] = {
"Time-Lost Smack-o-Tron",
"Dawn of the Infinite",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[125828] = {
"Totter",
"Atal'Dazar",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
"enUS",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[69792] = {
"Скамими",
"Sepulcher of the First Ones",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[86552] = {
"Gorged Burster",
"The Everbloom",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[147967] = {
"7th Legion Marine",
"Battle of Dazar'alor",
"enUS",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
"enUS",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
"enUS",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[59605] = {
"Sodden Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[185582] = {
"Eternal Assembler",
"Sepulcher of the First Ones",
"enUS",
},
[139269] = {
"Gloom Horror",
"Waycrest Manor",
"enUS",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[204262] = {
"Necrofrost",
"Dawn of the Infinite",
"enUS",
},
[126983] = {
"Harlan Sweete",
"Freehold",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
"enUS",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[213219] = {
"Congealed Ooze",
"Throne of the Tides",
"enUS",
},
[148483] = {
"Ancestral Avenger",
"Battle of Dazar'alor",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[186357] = {
"Stellar Mote",
"Sepulcher of the First Ones",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
"enUS",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
"enUS",
},
[182777] = {
"Rygelon",
"Sepulcher of the First Ones",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
"enUS",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
},
[180990] = {
"The Jailer",
"Sepulcher of the First Ones",
"enUS",
},
[203763] = {
"Alliance Footman",
"Dawn of the Infinite",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
"enUS",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
"enUS",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[147218] = {
"Spirit of Gold",
"Battle of Dazar'alor",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
"enUS",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
},
[204536] = {
"Blight Chunk",
"Dawn of the Infinite",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[185346] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
},
[205305] = {
"The Lich King",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
},
[185347] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
"enUS",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[204030] = {
"Goblin Sapper",
"Dawn of the Infinite",
"enUS",
},
[208380] = {
"Val'kyr Shadowguard",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
"enUS",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
},
[185610] = {
"Unmade Steward",
"Sepulcher of the First Ones",
"enUS",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[148254] = {
"Frost Shard",
"Battle of Dazar'alor",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
},
[147745] = {
"The Indomitable",
"Battle of Dazar'alor",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[99365] = {
"Taintheart Stalker",
"Darkheart Thicket",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[167962] = {
"Defunct Dental Drill",
"De Other Side",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
"enUS",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[187154] = {
"Arcane Curator",
"The Azure Vault",
},
[185363] = {
"Manifestor Krugan",
"Sepulcher of the First Ones",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[12129] = {
"Onyxian Warder",
"Onyxia's Lair",
"enUS",
},
[134701] = {
"Blood Effigy",
"The Underrot",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[146731] = {
"Zombie Dust Totem",
"Battle of Dazar'alor",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
},
[56865] = {
"Aqua Dancer",
"Stormstout Brewery",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Freehold",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[163366] = {
"Magus of the Dead",
"Sepulcher of the First Ones",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
"enUS",
},
[198933] = {
"Iridikron",
"Dawn of the Infinite",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[144690] = {
"Mestrah",
"Battle of Dazar'alor",
"enUS",
},
[202262] = {
"Blazing Dreadsquall",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[56867] = {
"Fiery Trickster",
"Stormstout Brewery",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
},
[149556] = {
"Eternal Enforcer",
"Battle of Dazar'alor",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
},
[201756] = {
"Whiiskeyz",
"Dawn of the Infinite",
"enUS",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[182311] = {
"Pre-Fabricated Sentry",
"Sepulcher of the First Ones",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
"enUS",
},
[101679] = {
"Dreadsoul Poisoner",
"Darkheart Thicket",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[146491] = {
"Phantom of Retribution",
"Battle of Dazar'alor",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
},
[146492] = {
"Phantom of Rage",
"Battle of Dazar'alor",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[208670] = {
"Glorious Vanguard",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[100529] = {
"Hatespawn Slime",
"Darkheart Thicket",
"enUS",
},
[146493] = {
"Phantom of Slaughter",
"Battle of Dazar'alor",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[202789] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[184623] = {
"Ancient Avian",
"Sepulcher of the First Ones",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[144963] = {
"Kimbul's Aspect",
"Battle of Dazar'alor",
"enUS",
},
[149569] = {
"Dazari Worshipper",
"Battle of Dazar'alor",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[184880] = {
"Dominated Disrupter",
"Sepulcher of the First Ones",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[184627] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[59751] = {
"Shado-Pan Warden",
"Shado-Pan Monastery",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[146251] = {
"Sister Katherine",
"Battle of Dazar'alor",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[147787] = {
"7th Legion Battlemage",
"Battle of Dazar'alor",
"enUS",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[98362] = {
"Troubled Soul",
"Black Rook Hold",
"enUS",
},
[146253] = {
"Brother Joseph",
"Battle of Dazar'alor",
"enUS",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
"enUS",
},
[131669] = {
"Jagged Hound",
"Waycrest Manor",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[146256] = {
"Laminaria",
"Battle of Dazar'alor",
"enUS",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[89] = {
"Infernal",
"Sepulcher of the First Ones",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[205366] = {
"Time-Lost Wakethrasher",
"Dawn of the Infinite",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
"enUS",
},
[41139] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
},
[101437] = {
"Burning Geode",
"UNKNOWN",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
"enUS",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[149591] = {
"Rastari Marksman",
"Battle of Dazar'alor",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
"enUS",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[148569] = {
"Breakwater Elemental",
"Battle of Dazar'alor",
"enUS",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[201792] = {
"Ahnzon",
"Dawn of the Infinite",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[59820] = {
"Pandaren Cannoneer",
"Gate of the Setting Sun",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[184651] = {
"Subjugator Zeltoth",
"Sepulcher of the First Ones",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[208198] = {
"Whiiskeyz",
"Scarlet Monastery",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
},
[148582] = {
"Stormbound Guardian",
"Battle of Dazar'alor",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[144747] = {
"Pa'ku's Aspect",
"Battle of Dazar'alor",
"enUS",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208461] = {
"Scorching Brambles",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[207438] = {
"Headless Horseman",
"Scarlet Monastery",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[198997] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[181856] = {
"Point Defense Drone",
"Sepulcher of the First Ones",
"enUS",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[147827] = {
"7th Legion Marine",
"Battle of Dazar'alor",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[147828] = {
"7th Legion Cavalier",
"Battle of Dazar'alor",
"enUS",
},
[210518] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[183396] = {
"Eternal Forger",
"Sepulcher of the First Ones",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
"enUS",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[146552] = {
"Kul Tiran Tideweaver",
"Battle of Dazar'alor",
"enUS",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
},
[146553] = {
"Kul Tiran Strongarm",
"Battle of Dazar'alor",
"enUS",
},
[206172] = {
"Nymue",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[99664] = {
"Restless Soul",
"Black Rook Hold",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
"enUS",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[183404] = {
"Eternal Assembler",
"Sepulcher of the First Ones",
"enUS",
},
[144767] = {
"Gonk's Aspect",
"Battle of Dazar'alor",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[101074] = {
"Hatespawn Whelpling",
"Darkheart Thicket",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
},
[65522] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[183407] = {
"Eternal Artisan",
"Sepulcher of the First Ones",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
"enUS",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[196203] = {
"Algeth'ar Nurse",
"Algeth'ar Academy",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
"enUS",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[148611] = {
"Yoru'cha",
"Battle of Dazar'alor",
"enUS",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[136330] = {
"Soul Thorns",
"Waycrest Manor",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[62005] = {
"Beast",
"Sepulcher of the First Ones",
"enUS",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[148614] = {
"Kul Tiran Cannoneer",
"Battle of Dazar'alor",
"enUS",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[213607] = {
"Deep Sea Murloc",
"Throne of the Tides",
"enUS",
},
[10184] = {
"Onyxia",
"Onyxia's Lair",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
"enUS",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[148621] = {
"Jek'kwa",
"Battle of Dazar'alor",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
"enUS",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
"enUS",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
[59487] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[81638] = {
"Aqueous Globule",
"The Everbloom",
"enUS",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
"enUS",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
"enUS",
},
[122963] = {
"Rezan",
"Atal'Dazar",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
"enUS",
},
[133852] = {
"Living Rot",
"The Underrot",
"enUS",
},
[183429] = {
"Ebon Chainguard",
"Sepulcher of the First Ones",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[58198] = {
"Shado-Pan Disciple",
"Shado-Pan Monastery",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
},
[148120] = {
"Kul Tiran Marine",
"Battle of Dazar'alor",
"enUS",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
"enUS",
},
[56912] = {
"Krik'thik Engulfer",
"Gate of the Setting Sun",
"enUS",
},
[59819] = {
"Artillery",
"Gate of the Setting Sun",
"enUS",
},
[59835] = {
"Krik'thik Swarmer",
"Gate of the Setting Sun",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
},
[56929] = {
"Krik'thik Protectorate",
"Gate of the Setting Sun",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
"enUS",
},
[56589] = {
"Striker Ga'dok",
"Gate of the Setting Sun",
"enUS",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
"enUS",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[212681] = {
"Vicious Snap Dragon",
"Throne of the Tides",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
"enUS",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
"enUS",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
"enUS",
},
[144796] = {
"High Tinker Mekkatorque",
"Battle of Dazar'alor",
"enUS",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
"enUS",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[182071] = {
"Guardian Automa",
"Sepulcher of the First Ones",
"enUS",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[180773] = {
"Vigilant Guardian",
"Sepulcher of the First Ones",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[183432] = {
"Ebon Dominator",
"Sepulcher of the First Ones",
"enUS",
},
[183745] = {
"Degeneration Automa",
"Sepulcher of the First Ones",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
"enUS",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[111068] = {
"Archmage Galeorn",
"Black Rook Hold",
},
[185574] = {
"Dominated Saboteur",
"Sepulcher of the First Ones",
"enUS",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[181546] = {
"Prototype of Renewal",
"Sepulcher of the First Ones",
"enUS",
},
[56890] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[184659] = {
"Dominated Sentinel",
"Sepulcher of the First Ones",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[147614] = {
"Dark Iron Primalist",
"Battle of Dazar'alor",
"enUS",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[73967] = {
"Niuzao",
"Sepulcher of the First Ones",
"enUS",
},
[148613] = {
"Commander Broadside",
"Battle of Dazar'alor",
"enUS",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
"enUS",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[98900] = {
"Wyrmtongue Trickster",
"Black Rook Hold",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[183413] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
"enUS",
},
[183438] = {
"Chainbound Construct",
"Sepulcher of the First Ones",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[122968] = {
"Yazma",
"Atal'Dazar",
"enUS",
},
[181850] = {
"Pre-Fabricated Sentry",
"Sepulcher of the First Ones",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[184539] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
"enUS",
},
[183439] = {
"Mawsworn Annihilator",
"Sepulcher of the First Ones",
"enUS",
},
[184530] = {
"Eternal Sentry",
"Sepulcher of the First Ones",
"enUS",
},
[165189] = {
"Core Hound",
"Sepulcher of the First Ones",
"enUS",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[56906] = {
"Saboteur Kip'tilak",
"Gate of the Setting Sun",
"enUS",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
"enUS",
},
[24207] = {
"Army of the Dead",
"Sepulcher of the First Ones",
"enUS",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
"enUS",
},
[181244] = {
"Domination Core",
"Sepulcher of the First Ones",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
"enUS",
},
[146831] = {
"Kul Tiran Stormbringer",
"Battle of Dazar'alor",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[84554] = {
"Venom-Crazed Pale One",
"The Everbloom",
},
[181859] = {
"Volatile Materium",
"Sepulcher of the First Ones",
"enUS",
},
[147621] = {
"Dark Iron Vanguard",
"Battle of Dazar'alor",
"enUS",
},
[147825] = {
"7th Legion Medic",
"Battle of Dazar'alor",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[212981] = {
"Hapless Assistant",
"The Everbloom",
"enUS",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
"enUS",
},
[181398] = {
"Mal'Ganis",
"Sepulcher of the First Ones",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[208521] = {
"Pumpkin Soldier",
"Scarlet Monastery",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[183398] = {
"Ancient Sentinel",
"Sepulcher of the First Ones",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[181399] = {
"Kin'tessa",
"Sepulcher of the First Ones",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[59519] = {
"Stout Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[183412] = {
"Dominated Saboteur",
"Sepulcher of the First Ones",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
"enUS",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[196117] = {
"Crystal Construct",
"The Azure Vault",
},
[56713] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[182169] = {
"Lihuvim",
"Sepulcher of the First Ones",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
"enUS",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[81522] = {
"Witherbark",
"The Everbloom",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[59520] = {
"Fizzy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[135052] = {
"Blight Toad",
"Waycrest Manor",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[205308] = {
"Varian Wrynn",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[148488] = {
"Unliving Augur",
"Battle of Dazar'alor",
"enUS",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[184733] = {
"Dominated Grunt",
"Sepulcher of the First Ones",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[91003] = {
"Rokmora",
"Neltharion's Lair",
"enUS",
},
[144693] = {
"Manceroy Flamefist",
"Battle of Dazar'alor",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[184734] = {
"Sacred Matrix Automa",
"Sepulcher of the First Ones",
"enUS",
},
[59521] = {
"Bubbling Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
},
[147439] = {
"Molten Hound",
"Battle of Dazar'alor",
"enUS",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
"enUS",
},
[184735] = {
"Degeneration Automa",
"Sepulcher of the First Ones",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
"enUS",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
"enUS",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
"enUS",
},
[148625] = {
"Echo of Krag'wa",
"Battle of Dazar'alor",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[144942] = {
"Spark Bot",
"Battle of Dazar'alor",
"enUS",
},
[184737] = {
"Acquisitions Automa",
"Sepulcher of the First Ones",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
"enUS",
},
[185268] = {
"Ebonsteel Construct",
"Sepulcher of the First Ones",
"enUS",
},
[184738] = {
"Guardian Automa",
"Sepulcher of the First Ones",
"enUS",
},
[59458] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
"enUS",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
"enUS",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
"enUS",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
},
[185008] = {
"Volatile Sentry",
"Sepulcher of the First Ones",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[146103] = {
"Living Bomb",
"Battle of Dazar'alor",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[148673] = {
"Vessel of Bwonsamdi",
"Battle of Dazar'alor",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[130400] = {
"Irontide Crusher",
"Freehold",
"enUS",
},
[146104] = {
"Living Bomb",
"Battle of Dazar'alor",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[184742] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
"enUS",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[178601] = {
"Kevin's Oozeling",
"Sepulcher of the First Ones",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
"enUS",
},
[98677] = {
"Rook Spiderling",
"Black Rook Hold",
"enUS",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
"enUS",
},
[201788] = {
"Dazhak",
"Dawn of the Infinite",
"enUS",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
"enUS",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[148665] = {
"Rastari Royal Guard",
"Battle of Dazar'alor",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
"enUS",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[203679] = {
"Anduin Lothar",
"Dawn of the Infinite",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
"enUS",
},
[130012] = {
"Irontide Ravager",
"Freehold",
"enUS",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[146365] = {
"Blazing Fireguard",
"Battle of Dazar'alor",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
"enUS",
},
[148262] = {
"Tidewater Elemental",
"Battle of Dazar'alor",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[146366] = {
"Molten Hound",
"Battle of Dazar'alor",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[148667] = {
"Rastari Punisher",
"Battle of Dazar'alor",
"enUS",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[146367] = {
"Char'golm",
"Battle of Dazar'alor",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[205265] = {
"Time-Displaced Trooper",
"Dawn of the Infinite",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
"enUS",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[146370] = {
"Dark Iron Vanguard",
"Battle of Dazar'alor",
"enUS",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[144941] = {
"Akunda's Aspect",
"Battle of Dazar'alor",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[146371] = {
"Dark Iron Primalist",
"Battle of Dazar'alor",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
"enUS",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
"enUS",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
"enUS",
},
[91002] = {
"Rotdrool Grabber",
"UNKNOWN",
"enUS",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[26125] = {
"Pillecrâne",
"Sepulcher of the First Ones",
"enUS",
},
[183138] = {
"Corporeal Shadow",
"Sepulcher of the First Ones",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[56706] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
"enUS",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[184533] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
"enUS",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
},
[189555] = {
"Arcane Attendant",
"The Azure Vault",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[185271] = {
"Stellar Mote",
"Sepulcher of the First Ones",
"enUS",
},
[184954] = {
"Ancient Shaper",
"Sepulcher of the First Ones",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[98681] = {
"Rook Spinner",
"Black Rook Hold",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
"enUS",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[185274] = {
"Astral Particle",
"Sepulcher of the First Ones",
"enUS",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[184603] = {
"Ancient Bufonid",
"Sepulcher of the First Ones",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[56895] = {
"Weak Spot",
"Gate of the Setting Sun",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[91007] = {
"Dargrul",
"Neltharion's Lair",
"enUS",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[145616] = {
"King Rastakhan",
"Battle of Dazar'alor",
"enUS",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
},
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
"enUS",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
"enUS",
},
[192337] = {
"Void Tendril",
"Sepulcher of the First Ones",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[129517] = {
"Reanimated Raptor",
"Atal'Dazar",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
"enUS",
},
[181551] = {
"Prototype of Duty",
"Sepulcher of the First Ones",
"enUS",
},
[181548] = {
"Prototype of Absolution",
"Sepulcher of the First Ones",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[185581] = {
"Eternal Forger",
"Sepulcher of the First Ones",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[183499] = {
"Hired Muscle",
"Sepulcher of the First Ones",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[181954] = {
"Anduin Wrynn",
"Sepulcher of the First Ones",
"enUS",
},
[181549] = {
"Prototype of War",
"Sepulcher of the First Ones",
"enUS",
},
[181224] = {
"Dausegne",
"Sepulcher of the First Ones",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[147495] = {
"Rastari Enforcer",
"Battle of Dazar'alor",
"enUS",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[416] = {
"Гелкви",
"Sepulcher of the First Ones",
"enUS",
},
[186127] = {
"Ebonsteel Construct",
"Sepulcher of the First Ones",
"enUS",
},
[198489] = {
"Denizen of the Dream",
"Sepulcher of the First Ones",
"enUS",
},
[417] = {
"Fzuumyn",
"Sepulcher of the First Ones",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
},
[102277] = {
"Deadeye Decoy",
"Darkheart Thicket",
"enUS",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[56884] = {
"Corrupted Taran Zhu",
"Shado-Pan Monastery",
"enUS",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[56863] = {
"Sleepy Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
"enUS",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205611] = {
"Molten Hound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[183416] = {
"Bound Realmbreaker",
"Sepulcher of the First Ones",
"enUS",
},
[205629] = {
"Crazed Experiment",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
},
["tocversion"] = 100200,
["castbar_icon_show"] = false,
["global_offset_y"] = 4.430000305175781,
["honor_blizzard_plate_alpha"] = true,
["aggro_modifies"] = {
["actor_name_color"] = true,
},
["minor_height_scale"] = 0.94999998807907,
["not_affecting_combat_alpha"] = 1,
["cast_statusbar_spark_color"] = {
nil,
0.13333333333333,
0.8,
},
["health_selection_overlay_alpha"] = 0,
["aura_height"] = 18,
["aura_show_enrage"] = true,
["npc_colors"] = {
[134139] = {
true,
false,
"gold",
},
[196798] = {
true,
false,
"blue",
},
[186696] = {
true,
false,
"fuchsia",
},
[109908] = {
true,
false,
"fuchsia",
},
[213806] = {
true,
false,
"fuchsia",
},
[190405] = {
true,
false,
"mediumpurple",
},
[196671] = {
true,
false,
"mediumpurple",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"fuchsia",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[173016] = {
true,
false,
"deepskyblue",
},
[201788] = {
true,
false,
"fuchsia",
},
[180433] = {
true,
false,
"fuchsia",
},
[131585] = {
true,
false,
"blue",
},
[208438] = {
true,
false,
"deepskyblue",
},
[131009] = {
true,
false,
"fuchsia",
},
[99360] = {
true,
false,
"blue",
},
[197697] = {
true,
false,
"mediumpurple",
},
[40633] = {
true,
false,
"deepskyblue",
},
[164578] = {
true,
false,
"blue",
},
[135167] = {
true,
false,
"peru",
},
[197698] = {
true,
false,
"mediumpurple",
},
[40825] = {
true,
false,
"mediumpurple",
},
[175576] = {
true,
false,
"fuchsia",
},
[199233] = {
true,
false,
"mediumpurple",
},
[164707] = {
true,
false,
"mediumpurple",
},
[196548] = {
true,
false,
"fuchsia",
},
[135552] = {
true,
false,
"fuchsia",
},
[84400] = {
true,
false,
"fuchsia",
},
[186191] = {
true,
false,
"deepskyblue",
},
[135169] = {
true,
false,
"fuchsia",
},
[201792] = {
true,
false,
"mediumpurple",
},
[206140] = {
true,
false,
"mediumpurple",
},
[83761] = {
true,
false,
"mediumpurple",
},
[184018] = {
true,
false,
"DRUID",
},
[178008] = {
true,
false,
"yellow",
},
[126983] = {
true,
false,
"DRUID",
},
[178392] = {
true,
false,
"fuchsia",
},
[168418] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[213942] = {
true,
false,
"deepskyblue",
},
[199748] = {
true,
false,
"fuchsia",
},
[165222] = {
true,
false,
"blue",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[170850] = {
true,
true,
"fuchsia",
},
[168932] = {
true,
false,
"gold",
},
[75451] = {
true,
false,
"fuchsia",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[189265] = {
true,
false,
"fuchsia",
},
[75899] = {
true,
false,
"fuchsia",
},
[196043] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[134024] = {
true,
false,
"fuchsia",
},
[168934] = {
true,
false,
"fuchsia",
},
[196044] = {
true,
false,
"fuchsia",
},
[40923] = {
true,
false,
"DEATHKNIGHT",
},
[83892] = {
true,
false,
"fuchsia",
},
[135048] = {
true,
false,
"DEATHKNIGHT",
},
[192464] = {
true,
false,
"fuchsia",
},
[157810] = {
true,
false,
"deepskyblue",
},
[137478] = {
true,
false,
"gold",
},
[194894] = {
true,
false,
"deepskyblue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[135049] = {
true,
false,
"fuchsia",
},
[139269] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[168681] = {
true,
true,
"fuchsia",
},
[128969] = {
true,
false,
"goldenrod",
},
[99366] = {
true,
false,
"deepskyblue",
},
[82039] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"deepskyblue",
},
[136330] = {
true,
false,
"fuchsia",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[83894] = {
true,
false,
"blue",
},
[135052] = {
true,
false,
"DEATHKNIGHT",
},
[134157] = {
true,
false,
"peru",
},
[75966] = {
true,
false,
"fuchsia",
},
[205384] = {
true,
false,
"fuchsia",
},
[212673] = {
true,
false,
"mediumpurple",
},
[111068] = {
true,
false,
"mediumpurple",
},
[134158] = {
true,
false,
"navajowhite",
},
[172265] = {
true,
false,
"deepskyblue",
},
[208198] = {
true,
false,
"fuchsia",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[137484] = {
true,
false,
"gold",
},
[131858] = {
true,
false,
"blue",
},
[65317] = {
true,
false,
"mediumpurple",
},
[114266] = {
true,
false,
"deepskyblue",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"fuchsia",
},
[137486] = {
true,
false,
"gold",
},
[98538] = {
true,
false,
"mediumpurple",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[101991] = {
true,
false,
"mediumpurple",
},
[165108] = {
true,
true,
"fuchsia",
},
[82682] = {
true,
false,
"mediumpurple",
},
[156157] = {
true,
false,
"blue",
},
[75713] = {
true,
false,
"fuchsia",
},
[186208] = {
true,
false,
"fuchsia",
},
[138255] = {
true,
false,
"maroon",
},
[122963] = {
true,
false,
"mediumpurple",
},
[162040] = {
true,
false,
"fuchsia",
},
[198996] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[181861] = {
true,
false,
"mediumpurple",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[198997] = {
true,
false,
"mediumpurple",
},
[131863] = {
true,
false,
"mediumpurple",
},
[203857] = {
true,
false,
"fuchsia",
},
[195929] = {
true,
false,
"mediumpurple",
},
[207438] = {
true,
false,
"mediumpurple",
},
[131864] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"fuchsia",
},
[198999] = {
true,
false,
"mediumpurple",
},
[205265] = {
true,
false,
"DEATHKNIGHT",
},
[193373] = {
true,
false,
"blue",
},
[184422] = {
true,
false,
"DRUID",
},
[199000] = {
true,
false,
"mediumpurple",
},
[39616] = {
true,
false,
"DEATHKNIGHT",
},
[133912] = {
true,
false,
"fuchsia",
},
[136214] = {
true,
false,
"plum",
},
[136470] = {
true,
false,
"honeydew",
},
[75652] = {
true,
false,
"mediumpurple",
},
[134041] = {
true,
false,
"DEATHKNIGHT",
},
[197595] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[98542] = {
true,
false,
"mediumpurple",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[129552] = {
true,
false,
"deepskyblue",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[122967] = {
true,
false,
"mediumpurple",
},
[105704] = {
true,
false,
"deepskyblue",
},
[166396] = {
true,
false,
"blue",
},
[127315] = {
true,
false,
"fuchsia",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[132126] = {
true,
false,
"fuchsia",
},
[180335] = {
true,
false,
"deepskyblue",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[81984] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[101549] = {
true,
false,
"blue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[175861] = {
true,
false,
"fuchsia",
},
[184301] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[84990] = {
true,
false,
"blue",
},
[81985] = {
true,
false,
"fuchsia",
},
[122969] = {
true,
false,
"deepskyblue",
},
[100527] = {
true,
false,
"fuchsia",
},
[191847] = {
true,
false,
"deepskyblue",
},
[150160] = {
true,
false,
"mediumpurple",
},
[178165] = {
true,
false,
"fuchsia",
},
[104300] = {
true,
false,
"fuchsia",
},
[165762] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"blue",
},
[131492] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"mediumpurple",
},
[86526] = {
true,
false,
"blue",
},
[135329] = {
true,
false,
"mediumpurple",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[91002] = {
true,
false,
"fuchsia",
},
[174843] = {
true,
false,
"mediumpurple",
},
[136353] = {
true,
false,
"royalblue",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[205790] = {
true,
false,
"DEATHKNIGHT",
},
[45917] = {
true,
false,
"DRUID",
},
[162057] = {
true,
false,
"mediumpurple",
},
[205151] = {
true,
false,
"DEATHKNIGHT",
},
[91003] = {
true,
false,
"DRUID",
},
[186226] = {
true,
false,
"fuchsia",
},
[135204] = {
true,
false,
"honeydew",
},
[196712] = {
true,
false,
"fuchsia",
},
[205152] = {
true,
false,
"mediumpurple",
},
[205408] = {
true,
false,
"deepskyblue",
},
[170882] = {
true,
false,
"blue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[162039] = {
true,
false,
"deepskyblue",
},
[180473] = {
true,
false,
"blue",
},
[150251] = {
true,
false,
"blue",
},
[208698] = {
true,
false,
"fuchsia",
},
[196202] = {
true,
false,
"blue",
},
[103344] = {
true,
false,
"mediumpurple",
},
[120651] = {
true,
false,
"gold",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"fuchsia",
},
[75979] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[134012] = {
true,
false,
"lightsalmon",
},
[196203] = {
true,
false,
"deepskyblue",
},
[44404] = {
true,
false,
"fuchsia",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"blue",
},
[154744] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[186741] = {
true,
false,
"fuchsia",
},
[168318] = {
true,
false,
"mediumpurple",
},
[150169] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[150250] = {
true,
false,
"deepskyblue",
},
[134174] = {
true,
false,
"honeydew",
},
[180348] = {
true,
false,
"blue",
},
[197985] = {
true,
false,
"fuchsia",
},
[197857] = {
true,
false,
"deepskyblue",
},
[182778] = {
true,
false,
"fuchsia",
},
[191206] = {
true,
false,
"deepskyblue",
},
[92538] = {
true,
false,
"fuchsia",
},
[134417] = {
true,
false,
"gold",
},
[102962] = {
true,
false,
"fuchsia",
},
[122972] = {
true,
false,
"deepskyblue",
},
[163086] = {
true,
false,
"blue",
},
[81522] = {
true,
false,
"mediumpurple",
},
[204262] = {
true,
false,
"fuchsia",
},
[91006] = {
true,
false,
"blue",
},
[136076] = {
true,
false,
"lightcoral",
},
[180323] = {
true,
false,
"fuchsia",
},
[45912] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[198995] = {
true,
false,
"mediumpurple",
},
[205158] = {
true,
false,
"mediumpurple",
},
[174210] = {
true,
false,
"deepskyblue",
},
[129369] = {
true,
false,
"lightsalmon",
},
[97720] = {
true,
false,
"fuchsia",
},
[173190] = {
true,
false,
"deepskyblue",
},
[43873] = {
true,
false,
"DRUID",
},
[195696] = {
true,
false,
"mediumpurple",
},
[98792] = {
true,
false,
"deepskyblue",
},
[187768] = {
true,
false,
"deepskyblue",
},
[190034] = {
true,
false,
"mediumpurple",
},
[83846] = {
true,
false,
"mediumpurple",
},
[81864] = {
true,
false,
"blue",
},
[97197] = {
true,
false,
"deepskyblue",
},
[138281] = {
true,
false,
"mediumpurple",
},
[129370] = {
true,
false,
"gold",
},
[153882] = {
true,
false,
"deepskyblue",
},
[180864] = {
true,
false,
"fuchsia",
},
[187897] = {
true,
false,
"mediumpurple",
},
[179841] = {
true,
false,
"deepskyblue",
},
[186107] = {
true,
false,
"fuchsia",
},
[97068] = {
true,
false,
"mediumpurple",
},
[84550] = {
true,
false,
"mediumpurple",
},
[139422] = {
true,
false,
"gold",
},
[131587] = {
true,
false,
"deepskyblue",
},
[189816] = {
true,
false,
"deepskyblue",
},
[91008] = {
true,
false,
"deepskyblue",
},
[188026] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[45915] = {
true,
false,
"fuchsia",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[98681] = {
true,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"fuchsia",
},
[165010] = {
true,
false,
"mediumpurple",
},
[137517] = {
true,
false,
"peru",
},
[189555] = {
true,
false,
"blue",
},
[122968] = {
true,
false,
"mediumpurple",
},
[200137] = {
true,
false,
"deepskyblue",
},
[198998] = {
true,
false,
"mediumpurple",
},
[134150] = {
true,
false,
"navajowhite",
},
[154014] = {
true,
false,
"deepskyblue",
},
[183425] = {
true,
false,
"blue",
},
[115020] = {
true,
false,
"mediumpurple",
},
[105715] = {
true,
false,
"blue",
},
[192481] = {
true,
false,
"fuchsia",
},
[40577] = {
true,
false,
"mediumpurple",
},
[132532] = {
true,
false,
"palegreen",
},
[98810] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[184580] = {
true,
false,
"blue",
},
[176521] = {
true,
false,
"blue",
},
[133685] = {
true,
false,
"deepskyblue",
},
[139949] = {
true,
false,
"honeydew",
},
[180104] = {
true,
false,
"deepskyblue",
},
[130012] = {
true,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[214117] = {
true,
false,
"fuchsia",
},
[191739] = {
true,
false,
"mediumpurple",
},
[126848] = {
true,
false,
"deepskyblue",
},
[102232] = {
true,
false,
"fuchsia",
},
[168594] = {
true,
false,
"mediumpurple",
},
[189886] = {
true,
false,
"gold",
},
[144298] = {
true,
false,
"blue",
},
[133430] = {
true,
false,
"cornflowerblue",
},
[43875] = {
true,
false,
"DRUID",
},
[137521] = {
true,
false,
"cornflowerblue",
},
[176523] = {
true,
false,
"mediumpurple",
},
[104246] = {
true,
false,
"blue",
},
[213607] = {
true,
false,
"DEATHKNIGHT",
},
[190206] = {
true,
false,
"blue",
},
[186242] = {
true,
false,
"blue",
},
[194745] = {
true,
false,
"fuchsia",
},
[114796] = {
true,
false,
"blue",
},
[206063] = {
true,
false,
"DEATHKNIGHT",
},
[98406] = {
false,
false,
"fuchsia",
},
[96574] = {
true,
false,
"mediumpurple",
},
[191230] = {
true,
false,
"fuchsia",
},
[190207] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[84554] = {
true,
false,
"fuchsia",
},
[168658] = {
true,
false,
"fuchsia",
},
[184581] = {
true,
false,
"fuchsia",
},
[129758] = {
true,
false,
"fuchsia",
},
[104247] = {
true,
false,
"fuchsia",
},
[205366] = {
true,
false,
"DEATHKNIGHT",
},
[186116] = {
true,
false,
"DRUID",
},
[163458] = {
true,
false,
"deepskyblue",
},
[118489] = {
true,
false,
"fuchsia",
},
[133432] = {
true,
false,
"gold",
},
[184582] = {
true,
false,
"deepskyblue",
},
[154020] = {
true,
false,
"deepskyblue",
},
[176598] = {
true,
false,
"blue",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"fuchsia",
},
[206066] = {
true,
false,
"fuchsia",
},
[171376] = {
true,
false,
"blue",
},
[114542] = {
true,
false,
"blue",
},
[179852] = {
true,
false,
"blue",
},
[122965] = {
true,
false,
"mediumpurple",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[151325] = {
true,
false,
"fuchsia",
},
[96512] = {
true,
false,
"mediumpurple",
},
[129788] = {
true,
false,
"fuchsia",
},
[206065] = {
true,
false,
"fuchsia",
},
[165076] = {
true,
false,
"blue",
},
[40765] = {
true,
false,
"mediumpurple",
},
[84520] = {
true,
false,
"mediumpurple",
},
[178171] = {
true,
false,
"fuchsia",
},
[206068] = {
true,
false,
"DEATHKNIGHT",
},
[166299] = {
true,
false,
"fuchsia",
},
[134331] = {
true,
false,
"gold",
},
[56792] = {
true,
false,
"fuchsia",
},
[186120] = {
true,
false,
"DRUID",
},
[190340] = {
true,
false,
"deepskyblue",
},
[136249] = {
true,
false,
"plum",
},
[204918] = {
true,
false,
"fuchsia",
},
[133436] = {
true,
false,
"gold",
},
[127111] = {
true,
false,
"deepskyblue",
},
[59555] = {
true,
false,
"fuchsia",
},
[164510] = {
true,
false,
"fuchsia",
},
[186121] = {
true,
false,
"DRUID",
},
[184331] = {
true,
false,
"mediumpurple",
},
[167963] = {
true,
false,
"blue",
},
[199037] = {
true,
false,
"deepskyblue",
},
[180495] = {
true,
false,
"fuchsia",
},
[166301] = {
true,
false,
"fuchsia",
},
[40936] = {
true,
false,
"mediumpurple",
},
[114544] = {
true,
false,
"fuchsia",
},
[186122] = {
true,
false,
"blue",
},
[190342] = {
true,
false,
"fuchsia",
},
[101437] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"mediumpurple",
},
[41096] = {
true,
false,
"fuchsia",
},
[166302] = {
true,
false,
"deepskyblue",
},
[206070] = {
true,
false,
"mediumpurple",
},
[195930] = {
true,
false,
"mediumpurple",
},
[189266] = {
true,
false,
"deepskyblue",
},
[195399] = {
true,
false,
"fuchsia",
},
[167965] = {
true,
false,
"blue",
},
[199124] = {
true,
false,
"deepskyblue",
},
[195842] = {
true,
false,
"deepskyblue",
},
[175992] = {
true,
false,
"fuchsia",
},
[104251] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"blue",
},
[45572] = {
true,
false,
"fuchsia",
},
[164737] = {
true,
false,
"fuchsia",
},
[101438] = {
true,
false,
"blue",
},
[189901] = {
true,
false,
"mediumpurple",
},
[177808] = {
true,
false,
"mediumpurple",
},
[198326] = {
true,
false,
"mediumpurple",
},
[174569] = {
false,
false,
"fuchsia",
},
[100991] = {
true,
false,
"fuchsia",
},
[186125] = {
true,
false,
"fuchsia",
},
[190345] = {
true,
false,
"blue",
},
[167967] = {
true,
false,
"blue",
},
[45924] = {
true,
false,
"MAGE",
},
[129699] = {
true,
false,
"DRUID",
},
[98370] = {
true,
false,
"fuchsia",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[83025] = {
true,
false,
"blue",
},
[126919] = {
true,
false,
"blue",
},
[193799] = {
true,
false,
"fuchsia",
},
[98691] = {
true,
false,
"blue",
},
[179733] = {
true,
false,
"fuchsia",
},
[135234] = {
true,
false,
"DEATHKNIGHT",
},
[171805] = {
true,
false,
"blue",
},
[177817] = {
true,
false,
"blue",
},
[168992] = {
true,
false,
"deepskyblue",
},
[134338] = {
true,
false,
"navajowhite",
},
[204030] = {
true,
false,
"DEATHKNIGHT",
},
[45477] = {
true,
false,
"blue",
},
[196102] = {
true,
false,
"blue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[40586] = {
true,
false,
"mediumpurple",
},
[126845] = {
true,
false,
"fuchsia",
},
[81236] = {
true,
false,
"deepskyblue",
},
[130404] = {
true,
false,
"fuchsia",
},
[170480] = {
true,
false,
"mediumpurple",
},
[186220] = {
true,
false,
"deepskyblue",
},
[135235] = {
true,
false,
"goldenrod",
},
[82579] = {
true,
false,
"deepskyblue",
},
[100539] = {
true,
false,
"blue",
},
[131527] = {
true,
false,
"mediumpurple",
},
[165414] = {
true,
false,
"deepskyblue",
},
[134284] = {
true,
false,
"deepskyblue",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[155824] = {
true,
false,
"blue",
},
[114804] = {
true,
false,
"blue",
},
[187154] = {
true,
false,
"deepskyblue",
},
[175517] = {
true,
false,
"blue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[131824] = {
true,
false,
"mediumpurple",
},
[194315] = {
true,
false,
"mediumpurple",
},
[129367] = {
true,
false,
"honeydew",
},
[195265] = {
true,
false,
"mediumpurple",
},
[130661] = {
true,
false,
"lightgreen",
},
[192781] = {
true,
false,
"MAGE",
},
[95779] = {
true,
false,
"mediumpurple",
},
[162038] = {
true,
false,
"mediumpurple",
},
[135365] = {
true,
false,
"mediumpurple",
},
[187155] = {
true,
false,
"deepskyblue",
},
[135474] = {
true,
false,
"blue",
},
[163882] = {
true,
false,
"mediumpurple",
},
[114632] = {
true,
false,
"deepskyblue",
},
[195851] = {
true,
false,
"blue",
},
[134599] = {
true,
false,
"gold",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[114334] = {
true,
false,
"mediumpurple",
},
[135239] = {
true,
false,
"paleturquoise",
},
[98949] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[134600] = {
true,
false,
"peru",
},
[201223] = {
true,
false,
"blue",
},
[131847] = {
true,
false,
"DEATHKNIGHT",
},
[194816] = {
true,
false,
"mediumpurple",
},
[115765] = {
true,
false,
"fuchsia",
},
[135240] = {
true,
false,
"blue",
},
[40788] = {
true,
false,
"mediumpurple",
},
[129529] = {
true,
false,
"fuchsia",
},
[130488] = {
true,
false,
"lightsalmon",
},
[156212] = {
true,
false,
"deepskyblue",
},
[178141] = {
true,
false,
"blue",
},
[190404] = {
true,
false,
"mediumpurple",
},
[184335] = {
true,
false,
"fuchsia",
},
[135241] = {
true,
false,
"peru",
},
[102019] = {
true,
false,
"fuchsia",
},
[199595] = {
true,
false,
"mediumpurple",
},
[100485] = {
true,
false,
"deepskyblue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[133835] = {
true,
false,
"deepskyblue",
},
[141284] = {
true,
false,
"gold",
},
[163121] = {
true,
false,
"blue",
},
[164557] = {
true,
false,
"mediumpurple",
},
[155830] = {
true,
false,
"deepskyblue",
},
[192786] = {
true,
false,
"blue",
},
[183707] = {
true,
false,
"deepskyblue",
},
[104273] = {
true,
false,
"mediumpurple",
},
[133836] = {
true,
false,
"blue",
},
[182045] = {
true,
false,
"fuchsia",
},
[81432] = {
true,
false,
"deepskyblue",
},
[59546] = {
true,
false,
"deepskyblue",
},
[155831] = {
true,
false,
"fuchsia",
},
[192787] = {
false,
false,
"fuchsia",
},
[206214] = {
true,
false,
"mediumpurple",
},
[98696] = {
true,
false,
"mediumpurple",
},
[187033] = {
true,
false,
"fuchsia",
},
[168747] = {
true,
false,
"fuchsia",
},
[136139] = {
true,
false,
"peru",
},
[169927] = {
true,
false,
"fuchsia",
},
[100486] = {
true,
false,
"fuchsia",
},
[189719] = {
true,
false,
"DRUID",
},
[101637] = {
true,
false,
"mediumpurple",
},
[134990] = {
true,
false,
"honeydew",
},
[102788] = {
true,
false,
"mediumpurple",
},
[95769] = {
true,
false,
"fuchsia",
},
[190359] = {
true,
false,
"blue",
},
[189464] = {
true,
false,
"fuchsia",
},
[168109] = {
true,
false,
"deepskyblue",
},
[162099] = {
true,
false,
"fuchsia",
},
[197905] = {
true,
false,
"deepskyblue",
},
[131666] = {
true,
false,
"deepskyblue",
},
[155221] = {
true,
false,
"deepskyblue",
},
[115640] = {
true,
false,
"fuchsia",
},
[138187] = {
true,
false,
"deepskyblue",
},
[41139] = {
true,
false,
"aqua",
},
[131436] = {
true,
false,
"mediumpurple",
},
[87252] = {
true,
false,
"mediumpurple",
},
[169159] = {
true,
false,
"gold",
},
[196115] = {
true,
false,
"fuchsia",
},
[164506] = {
true,
false,
"blue",
},
[170483] = {
true,
false,
"fuchsia",
},
[189235] = {
true,
false,
"fuchsia",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"blue",
},
[136934] = {
true,
false,
"navajowhite",
},
[176551] = {
true,
false,
"deepskyblue",
},
[131667] = {
true,
false,
"mediumpurple",
},
[144071] = {
true,
false,
"gold",
},
[201790] = {
true,
false,
"deepskyblue",
},
[190362] = {
true,
false,
"fuchsia",
},
[189467] = {
true,
false,
"blue",
},
[196198] = {
true,
false,
"blue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[208521] = {
true,
false,
"deepskyblue",
},
[98965] = {
true,
false,
"mediumpurple",
},
[189340] = {
true,
false,
"mediumpurple",
},
[130400] = {
true,
false,
"deepskyblue",
},
[163459] = {
true,
false,
"blue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"deepskyblue",
},
[131669] = {
true,
false,
"DEATHKNIGHT",
},
[165556] = {
true,
false,
"fuchsia",
},
[115642] = {
true,
false,
"blue",
},
[95842] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"blue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[190174] = {
true,
false,
"fuchsia",
},
[131670] = {
true,
false,
"palegreen",
},
[163128] = {
true,
false,
"deepskyblue",
},
[162763] = {
true,
true,
"fuchsia",
},
[168882] = {
true,
false,
"fuchsia",
},
[168627] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[198933] = {
true,
false,
"mediumpurple",
},
[187315] = {
true,
false,
"blue",
},
[189727] = {
true,
false,
"DRUID",
},
[81820] = {
true,
false,
"fuchsia",
},
[204560] = {
true,
false,
"fuchsia",
},
[94224] = {
true,
false,
"fuchsia",
},
[189471] = {
true,
false,
"deepskyblue",
},
[192796] = {
true,
false,
"fuchsia",
},
[186658] = {
true,
false,
"deepskyblue",
},
[137511] = {
true,
false,
"navajowhite",
},
[176573] = {
true,
false,
"fuchsia",
},
[86547] = {
true,
false,
"blue",
},
[99192] = {
true,
false,
"mediumpurple",
},
[86552] = {
true,
false,
"deepskyblue",
},
[189472] = {
true,
false,
"deepskyblue",
},
[185508] = {
true,
false,
"red",
},
[115388] = {
true,
false,
"fuchsia",
},
[131545] = {
true,
false,
"mediumpurple",
},
[200126] = {
true,
false,
"fuchsia",
},
[186124] = {
true,
false,
"deepskyblue",
},
[168942] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"fuchsia",
},
[164921] = {
true,
false,
"deepskyblue",
},
[170690] = {
true,
false,
"blue",
},
[189729] = {
true,
false,
"DRUID",
},
[188067] = {
true,
false,
"blue",
},
[156226] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"mediumpurple",
},
[213770] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
true,
false,
"goldenrod",
},
[45930] = {
true,
false,
"deepskyblue",
},
[59552] = {
true,
false,
"fuchsia",
},
[133593] = {
true,
false,
"honeydew",
},
[167964] = {
true,
false,
"fuchsia",
},
[40943] = {
true,
false,
"fuchsia",
},
[190370] = {
true,
false,
"deepskyblue",
},
[157634] = {
true,
false,
"blue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[199717] = {
true,
false,
"mediumpurple",
},
[192800] = {
true,
false,
"blue",
},
[167876] = {
true,
false,
"fuchsia",
},
[129366] = {
true,
false,
"goldenrod",
},
[81819] = {
true,
false,
"deepskyblue",
},
[127799] = {
true,
false,
"blue",
},
[190371] = {
true,
false,
"blue",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[131849] = {
true,
false,
"blue",
},
[203799] = {
true,
false,
"deepskyblue",
},
[131677] = {
true,
false,
"deepskyblue",
},
[152905] = {
true,
false,
"fuchsia",
},
[197406] = {
true,
false,
"fuchsia",
},
[172981] = {
true,
false,
"blue",
},
[166971] = {
true,
false,
"fuchsia",
},
[190381] = {
true,
false,
"fuchsia",
},
[186664] = {
true,
false,
"deepskyblue",
},
[184107] = {
true,
false,
"mediumpurple",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
true,
false,
"blue",
},
[180015] = {
true,
false,
"blue",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[134364] = {
true,
false,
"honeydew",
},
[199325] = {
true,
false,
"deepskyblue",
},
[206230] = {
true,
false,
"fuchsia",
},
[114624] = {
true,
false,
"mediumpurple",
},
[167612] = {
true,
false,
"blue",
},
[84957] = {
true,
false,
"fuchsia",
},
[197535] = {
true,
false,
"mediumpurple",
},
[192333] = {
true,
false,
"mediumpurple",
},
[113537] = {
true,
false,
"mediumpurple",
},
[204536] = {
true,
false,
"blue",
},
[198047] = {
true,
false,
"mediumpurple",
},
[195928] = {
true,
false,
"mediumpurple",
},
[164929] = {
true,
false,
"blue",
},
[128435] = {
true,
false,
"maroon",
},
[194467] = {
true,
false,
"blue",
},
[201756] = {
true,
false,
"fuchsia",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[177716] = {
true,
false,
"deepskyblue",
},
[194469] = {
true,
false,
"blue",
},
[101326] = {
true,
false,
"fuchsia",
},
[186284] = {
true,
false,
"mediumpurple",
},
[167998] = {
true,
false,
"mediumpurple",
},
[198308] = {
true,
false,
"mediumpurple",
},
[136541] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[99664] = {
true,
false,
"fuchsia",
},
[45932] = {
true,
false,
"fuchsia",
},
[135007] = {
true,
false,
"gold",
},
[190377] = {
true,
false,
"fuchsia",
},
[135263] = {
true,
false,
"maroon",
},
[133345] = {
true,
false,
"goldenrod",
},
[102094] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"mediumpurple",
},
[189227] = {
true,
false,
"fuchsia",
},
[163524] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[131586] = {
true,
false,
"mediumpurple",
},
[205212] = {
true,
false,
"fuchsia",
},
[192680] = {
true,
false,
"mediumpurple",
},
[195877] = {
true,
false,
"fuchsia",
},
[168384] = {
true,
false,
"blue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[98706] = {
true,
false,
"mediumpurple",
},
[212681] = {
true,
false,
"deepskyblue",
},
[203678] = {
true,
false,
"mediumpurple",
},
[131812] = {
true,
false,
"fuchsia",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"fuchsia",
},
[169905] = {
true,
false,
"blue",
},
[131685] = {
true,
false,
"deepskyblue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[165824] = {
true,
false,
"fuchsia",
},
[205337] = {
true,
false,
"fuchsia",
},
[150168] = {
true,
false,
"fuchsia",
},
[132491] = {
true,
false,
"palegreen",
},
[180070] = {
true,
false,
"fuchsia",
},
[166589] = {
true,
false,
"fuchsia",
},
[196263] = {
true,
false,
"deepskyblue",
},
[163520] = {
true,
false,
"mediumpurple",
},
[95766] = {
true,
false,
"blue",
},
[189478] = {
true,
false,
"mediumpurple",
},
[128434] = {
true,
false,
"fuchsia",
},
[115395] = {
true,
false,
"mediumpurple",
},
[206074] = {
true,
false,
"DEATHKNIGHT",
},
[104270] = {
true,
false,
"mediumpurple",
},
[80805] = {
true,
false,
"mediumpurple",
},
[195927] = {
true,
false,
"mediumpurple",
},
[205727] = {
true,
false,
"deepskyblue",
},
[197671] = {
true,
false,
"blue",
},
[138465] = {
true,
false,
"lightcoral",
},
[98275] = {
true,
false,
"fuchsia",
},
[134629] = {
true,
false,
"navajowhite",
},
[188703] = {
true,
false,
"yellow",
},
[198311] = {
true,
false,
"mediumpurple",
},
[130485] = {
true,
false,
"peru",
},
[152898] = {
true,
false,
"fuchsia",
},
[150142] = {
true,
false,
"deepskyblue",
},
[175550] = {
true,
false,
"fuchsia",
},
[184023] = {
true,
false,
"blue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[99358] = {
true,
false,
"deepskyblue",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[169924] = {
true,
false,
"mediumpurple",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
true,
false,
"lightcoral",
},
[129517] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[45919] = {
true,
false,
"mediumpurple",
},
[189234] = {
true,
false,
"mediumpurple",
},
[129527] = {
true,
false,
"deepskyblue",
},
[168007] = {
true,
false,
"blue",
},
[82597] = {
true,
false,
"fuchsia",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[137830] = {
true,
false,
"deepskyblue",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176959] = {
true,
false,
"deepskyblue",
},
[80935] = {
true,
false,
"deepskyblue",
},
[136295] = {
true,
false,
"peru",
},
[167113] = {
true,
false,
"blue",
},
[133482] = {
true,
false,
"maroon",
},
[59553] = {
true,
false,
"mediumpurple",
},
[156244] = {
true,
false,
"mediumpurple",
},
[96664] = {
true,
false,
"blue",
},
[96587] = {
true,
false,
"deepskyblue",
},
[141283] = {
true,
false,
"navajowhite",
},
[76446] = {
true,
false,
"blue",
},
[185528] = {
true,
false,
"blue",
},
[185656] = {
true,
false,
"fuchsia",
},
[192788] = {
true,
false,
"fuchsia",
},
[116549] = {
true,
false,
"deepskyblue",
},
[59873] = {
true,
false,
"mediumpurple",
},
[165805] = {
true,
false,
"mediumpurple",
},
[80936] = {
true,
false,
"blue",
},
[134251] = {
true,
false,
"honeydew",
},
[185529] = {
true,
false,
"fuchsia",
},
[178139] = {
true,
false,
"mediumpurple",
},
[207969] = {
true,
false,
"fuchsia",
},
[192767] = {
true,
false,
"mediumpurple",
},
[137516] = {
true,
false,
"lightsalmon",
},
[187192] = {
true,
false,
"mediumpurple",
},
[141285] = {
true,
false,
"lightgreen",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"fuchsia",
},
[150165] = {
true,
false,
"deepskyblue",
},
[189878] = {
true,
false,
"yellow",
},
[104274] = {
true,
false,
"mediumpurple",
},
[131823] = {
true,
false,
"mediumpurple",
},
[184124] = {
true,
false,
"DRUID",
},
[111563] = {
true,
false,
"blue",
},
[194316] = {
true,
false,
"mediumpurple",
},
[193293] = {
true,
false,
"mediumpurple",
},
[190407] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"blue",
},
[133870] = {
true,
false,
"fuchsia",
},
[184125] = {
true,
false,
"DRUID",
},
[95771] = {
true,
false,
"deepskyblue",
},
[134701] = {
true,
false,
"fuchsia",
},
[151773] = {
true,
false,
"blue",
},
[189706] = {
true,
false,
"yellow",
},
[107288] = {
true,
false,
"deepskyblue",
},
[104275] = {
true,
false,
"mediumpurple",
},
[131825] = {
true,
false,
"mediumpurple",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[125977] = {
true,
false,
"fuchsia",
},
[157017] = {
true,
false,
"blue",
},
[169421] = {
true,
false,
"gold",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[114783] = {
true,
false,
"deepskyblue",
},
[127879] = {
true,
false,
"blue",
},
[162691] = {
true,
false,
"fuchsia",
},
[133361] = {
true,
false,
"fuchsia",
},
[162133] = {
true,
false,
"fuchsia",
},
[128455] = {
true,
false,
"fuchsia",
},
[165919] = {
true,
false,
"mediumpurple",
},
[164563] = {
true,
false,
"blue",
},
[206064] = {
true,
false,
"deepskyblue",
},
[136186] = {
true,
false,
"honeydew",
},
[179269] = {
true,
false,
"fuchsia",
},
[134144] = {
true,
false,
"lightgreen",
},
[171341] = {
true,
false,
"deepskyblue",
},
[178630] = {
true,
false,
"deepskyblue",
},
[171799] = {
true,
false,
"fuchsia",
},
[167962] = {
true,
true,
"fuchsia",
},
[137713] = {
true,
false,
"paleturquoise",
},
[194487] = {
true,
false,
"deepskyblue",
},
[128967] = {
true,
false,
"palegreen",
},
[98970] = {
true,
false,
"mediumpurple",
},
[134514] = {
true,
false,
"lightgreen",
},
[204206] = {
true,
false,
"mediumpurple",
},
[173044] = {
true,
false,
"deepskyblue",
},
[126847] = {
true,
false,
"DRUID",
},
[40935] = {
true,
false,
"deepskyblue",
},
[150297] = {
true,
false,
"deepskyblue",
},
[174197] = {
true,
false,
"deepskyblue",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[169425] = {
true,
false,
"gold",
},
[115019] = {
true,
false,
"deepskyblue",
},
[191164] = {
true,
false,
"fuchsia",
},
[184131] = {
true,
false,
"deepskyblue",
},
[165911] = {
true,
false,
"fuchsia",
},
[92610] = {
true,
false,
"fuchsia",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[169426] = {
true,
false,
"gold",
},
[104278] = {
true,
false,
"fuchsia",
},
[164567] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"fuchsia",
},
[192955] = {
true,
false,
"fuchsia",
},
[179847] = {
true,
false,
"fuchsia",
},
[137458] = {
true,
false,
"deepskyblue",
},
[144296] = {
true,
false,
"mediumpurple",
},
[131850] = {
true,
false,
"fuchsia",
},
[187969] = {
true,
false,
"deepskyblue",
},
[168310] = {
true,
false,
"fuchsia",
},
[208440] = {
true,
false,
"mediumpurple",
},
[40634] = {
true,
false,
"deepskyblue",
},
[98280] = {
true,
false,
"blue",
},
[114317] = {
true,
false,
"deepskyblue",
},
[129547] = {
true,
false,
"deepskyblue",
},
[169428] = {
true,
false,
"gold",
},
[180091] = {
true,
false,
"mediumpurple",
},
[179842] = {
true,
false,
"fuchsia",
},
[212778] = {
true,
false,
"fuchsia",
},
[44566] = {
true,
false,
"mediumpurple",
},
[184300] = {
true,
false,
"mediumpurple",
},
[183495] = {
true,
false,
"mediumpurple",
},
[169861] = {
true,
false,
"blue",
},
[169429] = {
true,
false,
"gold",
},
[91007] = {
true,
false,
"DRUID",
},
[122971] = {
true,
false,
"mediumpurple",
},
[176974] = {
true,
false,
"fuchsia",
},
[190401] = {
true,
false,
"mediumpurple",
},
[134418] = {
true,
false,
"deepskyblue",
},
[165763] = {
true,
false,
"deepskyblue",
},
[101476] = {
true,
false,
"fuchsia",
},
[169430] = {
true,
false,
"gold",
},
[205363] = {
true,
false,
"deepskyblue",
},
[180474] = {
true,
false,
"fuchsia",
},
[39960] = {
true,
false,
"DEATHKNIGHT",
},
[134137] = {
true,
false,
"deepskyblue",
},
[83893] = {
true,
false,
"deepskyblue",
},
[183497] = {
true,
false,
"blue",
},
[129553] = {
true,
false,
"mediumpurple",
},
[114319] = {
true,
false,
"blue",
},
[196576] = {
true,
false,
"fuchsia",
},
[185032] = {
true,
false,
"mediumpurple",
},
[168153] = {
true,
false,
"fuchsia",
},
[190403] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"fuchsia",
},
[180429] = {
true,
false,
"mediumpurple",
},
[115406] = {
true,
false,
"deepskyblue",
},
[160495] = {
true,
false,
"deepskyblue",
},
[195135] = {
true,
false,
"fuchsia",
},
[80816] = {
true,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"mediumpurple",
},
},
["cast_statusbar_bgtexture"] = "Solid",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["hook_data"] = {
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Name"] = "Use Big Icon",
["Value"] = false,
["Key"] = "useFullSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Key"] = "iconSizeOffset",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Key"] = "iconPadding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Padding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Key"] = "textureWidth",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Key"] = "textureHeightMod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Height Mod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Key"] = "texturePosition",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["semver"] = "",
["HooksTemp"] = {
},
["version"] = -1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1688802814,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = false,
["Revision"] = 51,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Color Automation [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614608917,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 85,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Execute Range [Plater]",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1684153114,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 369,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Attacking Specific Unit [Plater]",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Name"] = "Color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Key"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Bar Color",
["Value"] = true,
["Key"] = "changeBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Border Color",
["Value"] = false,
["Key"] = "changeBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Reset Colors",
["Value"] = true,
["Key"] = "resetColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1541606242,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Hide Neutral Units [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Combo Points [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Extra Border [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["HooksTemp"] = {
},
["version"] = -1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Time"] = 1554138845,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Don't Have Aura [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Players Targeting a Target [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614606781,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 358,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder [Plater]",
["LastHookEdited"] = "Initialization",
["Options"] = {
},
},
{
["OptionsValues"] = {
["targetcolor"] = {
0,
0.47450980392157,
1,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1654562266,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/_GSmNC31z/1",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 168,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Current Target Color [Plater]",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Name"] = "targetcolor",
["Value"] = {
0.46274509803922,
1,
0.48235294117647,
1,
},
["Key"] = "targetcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "targetcolor",
},
},
},
{
["OptionsValues"] = {
["glowColor"] = {
1,
0,
0.01568627543747425,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1703731894,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = true,
["Revision"] = 290,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "@scriptname Options:",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
1,
0,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Key"] = "antsAmount",
["Value"] = 6,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Amount",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Key"] = "frequency",
["Value"] = 0.25,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Speed",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsLength",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants length",
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsThickness",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Thickness",
},
{
["Type"] = 4,
["Name"] = "Ants Border",
["Value"] = false,
["Key"] = "antsBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Outer Glow",
["Value"] = false,
["Key"] = "outerGlow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Name"] = "Steal/Purge Aura Glow",
["semver"] = "1.0.6",
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame)\n    \n    local healthBar = unitFrame.healthBar\n    local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n    -- change the value to whatever, for fire mages its 30% so 0.30\n    local useScorch = 0.30\n    \n    if (percent <= useScorch) then\n        -- from here the customizing is optional\n        -- for a list of commands look at the plater api\n        -- https://www.curseforge.com/wow/addons/plater-nameplates/pages/scripts/list-of-api-functions\n        \n        -- below is an example which will set the color & bordercolor to orange, \n        -- change the size of the frame and add a flash to it\n        \n        Plater.SetNameplateColor (unitFrame, \"#ff8c00\")\n        Plater.SetBorderColor (unitFrame, \"#ff8c00\")\n        Plater.SetNameplateSize (unitFrame, 120, 20)\n        Plater.FlashNameplateBorder (unitFrame, 1)\n    end\n    \n    \nend",
},
["Time"] = 1625007755,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/pc7PK_czd/1",
["Icon"] = 135827,
["Enabled"] = false,
["Revision"] = 102,
["semver"] = "1.0.0",
["Author"] = "Sphyre-Tarren Mill",
["Desc"] = "distinguish the mob for scorching",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Scorch",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["colorHealthbar"] = true,
["targetEnabled"] = false,
["raidMarkColors"] = false,
["targetColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["UseDefaultColor"] = false,
["IMobs"] = {
1,
0.97254901960784,
0,
1,
},
["threatColors"] = true,
["DefaultColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["EnMobs"] = {
1,
0,
0.10196078431373,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"]\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    modTable.UseDefaultColor = modTable.config[\"UseDefaultColor\"]\n    modTable.DefaultColor = modTable.config[\"DefaultColor\"]\n    \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    --Bosses - Greenyblue - \"Boss\"\n    --Mini Boss - DarkMagenta - \"MiniBoss\"\n    \n    --Focus mobs - Blue - \"FMobs\"\n    --Deadly mobs - Light Blue - \"DMobs\"\n    --Dodge Mobs - Purple - \"DoMobs\"\n    \n    --Healer mobs - White - HMobs\n    --Interruptable damage mobs - Orange - InMobs\n    --Enrage mobs - Light Orange - \"EnMobs\"\n    \n    --Expolsives mobs - Dark Pink - \"ExMobs\"\n    \n    modTable.NpcColors = {       \n        \n        -- De Other Side\n        [166473] = modTable.config[\"Boss\"],     --Hakkar the Soulflayer\n        [164555] = modTable.config[\"Boss\"],     --Milificent Manastorm\n        [164556] = modTable.config[\"Boss\"],     --Millhouse Manastorm\n        [169769] = modTable.config[\"Boss\"],     --Mueh'zala\n        \n        [170486] = modTable.config[\"FMobs\"],    --Atal'ia Devoted\n        [168992] = modTable.config[\"FMobs\"],    --Risen Cultist\n        [168934] = modTable.config[\"FMobs\"],    --Enraged Spirit\n        [167962] = modTable.config[\"FMobs\"],    --Defunct Dental Drill\n        [171184] = modTable.config[\"FMobs\"],    --Mythresh, Sky's Talon\n        \n        [167964] = modTable.config[\"DMobs\"],    --4.RF-4.RF\n        [164862] = modTable.config[\"DMobs\"],    --Weald Shimmermoth\n        \n        [167965] = modTable.config[\"IMobs\"],    --Lubricator\n        \n        [170490] = modTable.config[\"HMobs\"],    --Atal'ai High Priest\n        [170572] = modTable.config[\"HMobs\"],    --Atal'ai Hoodoo Hexxer\n        \n        [169905] = modTable.config[\"EnMobs\"],   --Risen Warlord\n        [171343] = modTable.config[\"EnMobs\"],   --Bladebeak Matriarch\n        \n        [168942] = modTable.config[\"DoMobs\"],    --DeathSpeaker\n        [167963] = modTable.config[\"DoMobs\"],    --Headless Client\n        [170480] = modTable.config[\"DoMobs\"],    --Atal'ia Deathwalker\n        \n        [170147] = modTable.config[\"ExMobs\"],   --Volatile Memory\n        \n        --Theater Of Pain\n        [164451] = modTable.config[\"Boss\"],     --Dessia the Decapitator\n        [164463] = modTable.config[\"Boss\"],     --Paceran the virulent\n        [164461] = modTable.config[\"Boss\"],     --Sathel the Accursed\n        [162317] = modTable.config[\"Boss\"],     --Gorechop\n        [162309] = modTable.config[\"Boss\"],     --Kul'tharok\n        [162329] = modTable.config[\"Boss\"],     --Xav the Unfallen\n        [165946] = modTable.config[\"Boss\"],     --Mordretha the Endless Empress\n        \n        [167536] = modTable.config[\"MiniBoss\"], --Harugia the Bloodthirsty\n        [162744] = modTable.config[\"MiniBoss\"], --Nekthara the Mangler\n        \n        [174210] = modTable.config[\"FMobs\"],    --Blighted Sludge-Spewer\n        [170882] = modTable.config[\"FMobs\"],    --Bone Magus\n        [160495] = modTable.config[\"FMobs\"],    --Maniacal Soulbinder\n        \n        [174197] = modTable.config[\"DMobs\"],    --Battlefield Ritualist\n        [163086] = modTable.config[\"DMobs\"],    --Rancid Gasbag\n        [170690] = modTable.config[\"DMobs\"],    --Diseased Horror\n        [167998] = modTable.config[\"DMobs\"],    --Portal Guardian\n        [164506] = modTable.config[\"DMobs\"],    --Ancient Captain\n        \n        [170850] = modTable.config[\"EnMobs\"],   --Raging BloodHorn\n        \n        [169893] = modTable.config[\"DoMobs\"],   --Hefarious Darkspeaker\n        [162763] = modTable.config[\"DoMobs\"],    --Soulforged Bonereaver\n        \n        --Necrotic Wake\n        [162691] = modTable.config[\"Boss\"],     --BlightBone\n        [162692] = modTable.config[\"Boss\"],     --Amarth\n        [166882] = modTable.config[\"Boss\"],     --Surgeon Stitchflesh\n        [166945] = modTable.config[\"Boss\"],     --Nalthor the Rimebinder\n        \n        [165824] = modTable.config[\"MiniBoss\"], --Nar'zudah\n        [165197] = modTable.config[\"MiniBoss\"], --Skeletal Monostrosity\n        \n        [163121] = modTable.config[\"FMobs\"],    --Stiched Vanguard\n        [165137] = modTable.config[\"FMobs\"],    --Zolramus GateKeeper\n        [163618] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        [168443] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        \n        [163128] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [168357] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [173044] = modTable.config[\"DMobs\"],    --Stitching Assistant\n        [167731] = modTable.config[\"DMobs\"],    --Separation Assistant\n        [163126] = modTable.config[\"DMobs\"],    --Brittlebone Mage\n        [163621] = modTable.config[\"DMobs\"],    --Goregrind\n        [163620] = modTable.config[\"DMobs\"],    --Rotspew\n        [172981] = modTable.config[\"DMobs\"],    --Kyrian Stitchwerk\n        \n        [173016] = modTable.config[\"IMobs\"],    --Corpse Collector\n        [166302] = modTable.config[\"IMobs\"],    --Corpse Harvester\n        [165919] = modTable.config[\"IMobs\"],    --Skeletal Marauder\n        \n        [165222] = modTable.config[\"HMobs\"],    --Zolramus Bonemender\n        [165872] = modTable.config[\"HMobs\"],    --Flesh Crafter\n        \n        --Halls Of Atonment\n        [165408] = modTable.config[\"Boss\"],     --Halkias\n        [156827] = modTable.config[\"Boss\"],     --Echelon  \n        [165410] = modTable.config[\"Boss\"],     --High Adjudicator Aleez\n        [164218] = modTable.config[\"Boss\"],     --Lord Chamberlain\n        \n        [167876] = modTable.config[\"MiniBoss\"], --Inquisitor Sigar\n        \n        [164562] = modTable.config[\"FMobs\"],    --Depraved Houndmaster\n        [165414] = modTable.config[\"FMobs\"],    --Depraved Obliterator\n        \n        [164563] = modTable.config[\"DMobs\"],    --Vicious Gargon\n        [165515] = modTable.config[\"DMobs\"],    --Depraved Darkblade\n        [167607] = modTable.config[\"DMobs\"],    --Stoneborn Slasher\n        [164557] = modTable.config[\"DMobs\"],    --Shard of Halkias\n        \n        [165529] = modTable.config[\"IMobs\"],    --Depraved Collector\n        [167612] = modTable.config[\"IMobs\"],    --Stoneborn Reaver\n        \n        [167611] = modTable.config[\"DoMobs\"],    --Stoneborn Eviscerator\n        \n        --Spires Of Ascension\n        [162059] = modTable.config[\"Boss\"],     --Kin-Tara\n        [163077] = modTable.config[\"Boss\"],     --Azules\n        [162058] = modTable.config[\"Boss\"],     --Ventunax\n        [162060] = modTable.config[\"Boss\"],     --Oryphrino\n        [167410] = modTable.config[\"Boss\"],     --Devos\n        \n        [168844] = modTable.config[\"MiniBoss\"],  --Lakesis\n        [168843] = modTable.config[\"MiniBoss\"],  --Klotos\n        [168845] = modTable.config[\"MiniBoss\"],  --Astronos\n        \n        [163458] = modTable.config[\"TMobs\"],   --Forsworn Castigator\n        [168418] = modTable.config[\"TMobs\"],   --Forsworn Inquisitor\n        [163520] = modTable.config[\"TMobs\"],   --Forsworn Squad-Leader\n        [168681] = modTable.config[\"TMobs\"],   --Forsworn Helion\n        \n        [163503] = modTable.config[\"DMobs\"],   --EtherDiver\n        [168658] = modTable.config[\"DMobs\"],   --Forsworn Devastator\n        [168717] = modTable.config[\"DMobs\"],   --Forsworn Justicar\n        \n        [168318] = modTable.config[\"IMobs\"],   --Forsworn Goliath\n        \n        [168420] = modTable.config[\"HMobs\"],   --Forsworn Champion\n        [163459] = modTable.config[\"HMobs\"],   --Forsworn Mender\n        [168718] = modTable.config[\"HMobs\"],   --Forsworn Warden\n        \n        --Sanguine Depths\n        [162103] = modTable.config[\"Boss\"],     --Executor Tarvold\n        [165318] = modTable.config[\"Boss\"],     --General Kaal\n        [162102] = modTable.config[\"Boss\"],     --Grand Proctor Beryllia\n        [162100] = modTable.config[\"Boss\"],     --Kryxis the Voracious\n        \n        [171376] = modTable.config[\"MiniBoss\"],    --Head Custodian Javlin\n        \n        [165076] = modTable.config[\"FMobs\"],    --Gluttonous Tick\n        [162040] = modTable.config[\"FMobs\"],    --Grand Overseer\n        [172265] = modTable.config[\"FMobs\"],   --Remnant of Fury\n        [168882] = modTable.config[\"FMobs\"],    --Fleeting Manifestation\n        \n        [162049] = modTable.config[\"DMobs\"],   --Vestige of Doubt\n        [171448] = modTable.config[\"DMobs\"],    --Dreadful Huntmaster\n        [166396] = modTable.config[\"DMobs\"],   --Noble Skirmisher\n        [166589] = modTable.config[\"DMobs\"],    --Animated Weapon\n        [171799] = modTable.config[\"DMobs\"],    --Depths Warden\n        [162047] = modTable.config[\"DMobs\"],    --Instiable Brute\n        \n        [162039] = modTable.config[\"IMobs\"],   --Wicked Oppressor\n        \n        [162057] = modTable.config[\"DoMobs\"],    --Chamber Sentinel\n        [162038] = modTable.config[\"DoMobs\"],   --Regal Mistdancer\n        \n        --Mist of Trina Scithe      \n        [164567] = modTable.config[\"Boss\"],     --ingra-maloch\n        [170217] = modTable.config[\"Boss\"],     --Mistcaller\n        [164517] = modTable.config[\"Boss\"],     --Tred'ova \n        \n        [164929] = modTable.config[\"FMobs\"],   --Tirnenn Villager\n        [164926] = modTable.config[\"FMobs\"],   --Drust Boughbreaker\n        \n        [166275] = modTable.config[\"DMobs\"],   --Mistveil Shaper\n        \n        [164920] = modTable.config[\"DMobs\"],   --Drust Soulcleaver\n        [166304] = modTable.config[\"DMobs\"],   --Mistveil Stinger\n        \n        [166299] = modTable.config[\"HMobs\"],   --Mistveil Tender\n        \n        [164921] = modTable.config[\"IMobs\"],   --Drust Harvester\n        [167111] = modTable.config[\"IMobs\"],   --Spinemaw Staghorn\n        \n        [167113] = modTable.config[\"DoMobs\"],   --Spinemaw Acidgullet \n        [166276] = modTable.config[\"DoMobs\"],   --Mistveil Guardian\n        \n        --Plaguefall    \n        [164967] = modTable.config[\"Boss\"],     --Doctor Ickus\n        [164266] = modTable.config[\"Boss\"],     --Domina Venomblade\n        [164255] = modTable.config[\"Boss\"],     --Globgrog\n        [164267] = modTable.config[\"Boss\"],     --Margrave Stradama\n        \n        [168886] = modTable.config[\"MiniBoss\"],  --Virulax Blightweaver\n        [169861] = modTable.config[\"MiniBoss\"],  --Ickor Bileflesh\n        \n        [164737] = modTable.config[\"FMobs\"],    --Brood Ambusher\n        [163915] = modTable.config[\"FMobs\"],    --Hatchling Nest\n        [168572] = modTable.config[\"FMobs\"],    --Fungi Stormer\n        [163891] = modTable.config[\"FMobs\"],    --Rotmarrow Slime\n        [168837] = modTable.config[\"FMobs\"],    --Stealthling\n        \n        [168578] = modTable.config[\"DMobs\"],    --FungalMancer\n        [168627] = modTable.config[\"DMobs\"],    --Plaguebinder\n        [167493] = modTable.config[\"DMobs\"],    --Venomous Sniper\n        [163882] = modTable.config[\"DMobs\"],    --Decaying Flesh Giant\n        [168310] = modTable.config[\"DMobs\"],    --Plagueroc\n        [165430] = modTable.config[\"DMobs\"],    --Malignant Spawn\n        \n        [168393] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [168396] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [163894] = modTable.config[\"DoMobs\"],   --Blighted Spinebreaker\n        \n        [169159] = modTable.config[\"ExMobs\"],   --Unstable Canister\n        [168878] = modTable.config[\"ExMobs\"],   --Rigged Plagueborer        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            elseif modTable.UseDefaultColor and not (unitFrame.namePlateUnitReaction == 4) and not unitIsPlayer and not unitFrame.namePlateIsQuestObjective then\n                Plater.SetNameplateColor(unitFrame, modTable.DefaultColor)\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n",
},
["Time"] = 1628712779,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/ocXXJPJZ7/6",
["Enabled"] = false,
["Revision"] = 236,
["semver"] = "1.0.5",
["Author"] = "Yummyyummy-Ravencrest",
["Desc"] = "Colours the Nameplates according to the type of M+ mob. This is my version of M+ Colored Mobs, https://wago.io/UKpo0_GbE",
["Prio"] = 98,
["version"] = 6,
["PlaterCore"] = 1,
["Name"] = "M+ Colouring",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Colors Header",
["Value"] = "Mythic+ Colours:",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Boss",
["Value"] = {
0,
1,
0.5843137254902,
1,
},
["Key"] = "Boss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "MiniBoss",
["Value"] = {
0.37647058823529,
0,
0.37647058823529,
1,
},
["Key"] = "MiniBoss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mini bosses",
},
{
["Type"] = 1,
["Name"] = "Focus Mobs",
["Value"] = {
0,
0,
1,
1,
},
["Key"] = "FMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that need to be focus.",
},
{
["Type"] = 1,
["Name"] = "Deadly Mobs",
["Value"] = {
0,
1,
1,
1,
},
["Key"] = "DMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are considered Deadly.",
},
{
["Type"] = 1,
["Name"] = "Dodge Mobs",
["Value"] = {
0.81176470588235,
0,
1,
1,
},
["Key"] = "DoMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are not considered deadly, but have ability's that need to be dogded.",
},
{
["Type"] = 1,
["Name"] = "Healer Mobs",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "HMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have healing ability's that should be kicked,",
},
{
["Type"] = 1,
["Name"] = "Interruptable Mobs",
["Value"] = {
1,
0.49803921568627,
0,
1,
},
["Key"] = "IMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have Interruptable spell that should be kicked.",
},
{
["Type"] = 1,
["Name"] = "Enrage Mobs",
["Value"] = {
1,
0.63921568627451,
0,
1,
},
["Key"] = "EnMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that enrage and should be calmed if possible.",
},
{
["Type"] = 1,
["Name"] = "Expolsives Mobs",
["Value"] = {
1,
0,
0.38039215686275,
1,
},
["Key"] = "ExMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that explode before or after death. WATCH OUT!!!",
},
{
["Type"] = 1,
["Name"] = "DefaultColor",
["Value"] = {
0.43921568627451,
0.43921568627451,
0.43921568627451,
1,
},
["Key"] = "DefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Target Color",
["Value"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["Key"] = "targetColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 9",
["Value"] = 0,
["Key"] = "option9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Addictional Options",
["Value"] = "Addictional Options",
["Key"] = "option22",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Target Color",
["Value"] = false,
["Key"] = "targetEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Raid Mark Colors",
["Value"] = true,
["Key"] = "raidMarkColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Color Healthbar",
["Value"] = false,
["Key"] = "colorHealthbar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "ThreatColors",
["Value"] = false,
["Key"] = "threatColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 4,
["Name"] = "Use Default Color",
["Value"] = true,
["Key"] = "UseDefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
["cooldownColor"] = {
1,
0.01960784383118153,
0,
1,
},
["interruptedColor"] = {
1,
0.2823529541492462,
0.3568627536296845,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x610c5b685dc84cc7",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1703700395,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 485,
["semver"] = "",
["Author"] = "Verlijke-Mal'Ganis",
["Desc"] = "Changes the color of the nameplate castbar based on the current cooldown of the player's interrupt.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Name"] = "Kick Ready Color",
["Value"] = {
0,
1,
0,
1,
},
["Key"] = "readyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is ready to be used.",
},
{
["Type"] = 1,
["Name"] = "Kick Will Be Ready Color",
["Value"] = {
1,
0.5921568627451,
0.031372549019608,
1,
},
["Key"] = "semiCooldownColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, but will be ready before the cast ends.",
},
{
["Type"] = 1,
["Name"] = "Kick Will NOT Be Ready",
["Value"] = {
1,
0,
0.007843137254902,
1,
},
["Key"] = "cooldownColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, and will NOT be ready before the cast ends.",
},
{
["Type"] = 2,
["Max"] = 1000,
["Desc"] = "Time in milliseconds that your kick should be off cooldown before cast end to count as \"kick will be ready\" (recommended to set to a few hundred ms above your latency).",
["Min"] = 0,
["Key"] = "cooldownTolerance",
["Value"] = 500,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Kick CD Tolerance (ms)",
},
{
["Type"] = 1,
["Name"] = "Protected Cast Color",
["Value"] = {
0.74117647058824,
0.74901960784314,
0.73725490196078,
1,
},
["Key"] = "protectedColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for protected casts.",
},
{
["Type"] = 1,
["Name"] = "Interrupted Color",
["Value"] = {
1,
0,
0,
1,
},
["Key"] = "interruptedColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for interrupted casts.",
},
{
["Type"] = 4,
["Name"] = "Castbar CD Line",
["Value"] = true,
["Key"] = "cooldownLine",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Draw a line on castbars indicating when your interrupt will be off-cooldown.",
},
},
["Name"] = "Interrupt CD Indicator",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62229f65202d123",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1688801832,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/CignDPWs3/8",
["Icon"] = 4224736,
["Enabled"] = false,
["Revision"] = 497,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Set Bar Color",
["Value"] = true,
["Key"] = "setColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust health bar colors?",
},
{
["Type"] = 4,
["Name"] = "Set Name Color",
["Value"] = false,
["Key"] = "setNameColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 4,
["Name"] = "Set Border Color",
["Value"] = false,
["Key"] = "setBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 1,
["Name"] = "Vy Color",
["Value"] = {
0,
0.9921568627451,
1,
1,
},
["Key"] = "vyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Urh Color",
["Value"] = {
0.63137254901961,
0.34901960784314,
1,
1,
},
["Key"] = "urhColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Wo Color",
["Value"] = {
0.33725490196078,
1,
0.42352941176471,
1,
},
["Key"] = "woColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider",
["Value"] = 0,
["Key"] = "pog",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Name",
["Value"] = true,
["Key"] = "setName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's Name?",
},
{
["Type"] = 3,
["Name"] = "Vy Name",
["Value"] = "Vy (Haste)",
["Key"] = "vyName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Urh Name",
["Value"] = "Urh (CDR)",
["Key"] = "urhName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Wo Name",
["Value"] = "Wo (Stealth)",
["Key"] = "woName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Height",
["Value"] = false,
["Key"] = "setHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar height?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Key"] = "barHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Bar Height",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Font Size",
["Value"] = false,
["Key"] = "setFontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's font size?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Key"] = "fontSize",
["Value"] = 20,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Font Size",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Texture",
["Value"] = false,
["Key"] = "setTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar texture?",
},
{
["Type"] = 5,
["Name"] = "Bar Warning",
["Value"] = "*set texture path in \"Nameplate Updated\" hook. Default custom texture is PlaterFocus",
["Key"] = "barWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Background Color",
["Value"] = false,
["Key"] = "setBackgroundColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Some bar textures (like PlaterFocus) Also show the background color, which you can set here.",
},
{
["Type"] = 1,
["Name"] = "Vy Background Color",
["Value"] = {
0,
0.098039215686275,
0.098039215686275,
1,
},
["Key"] = "vyBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Urh Background Color",
["Value"] = {
0.043137254901961,
0,
0.098039215686275,
1,
},
["Key"] = "urhBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Wo Background Color",
["Value"] = {
0,
0.098039215686275,
0.011764705882353,
1,
},
["Key"] = "woBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Reload Warning",
["Value"] = "Moving the sliders around too much can cause some temporary lag. To fix this simply reload your game after applying changes!",
["Key"] = "reloadWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Ilrieth-Argent Dawn",
["Desc"] = "modify Encrypted mobs' names and healthbar colors with custom values",
["Prio"] = 99,
["version"] = 8,
["PlaterCore"] = 1,
["Name"] = "Encrypted Names & Colors",
["LastHookEdited"] = "",
["semver"] = "1.0.7",
},
{
["OptionsValues"] = {
["color"] = {
0.686274528503418,
0,
0.2784313857555389,
1,
},
["wrap"] = true,
["size"] = 2.079999923706055,
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.TargetBorder) then\n        unitFrame.TargetBorder:Hide()\n    end\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local size = modTable.config.size\n    local color = modTable.config.color\n    \n    \n    if (not unitFrame.TargetBorder) then\n        unitFrame.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")    \n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            --ViragDevTool_AddData(unitFrame, 'frame')\n            --ViragDevTool_AddData(Plater.db.profile, \"db\")\n            local r, g, b, a = DetailsFramework:ParseColors (color)\n            unitFrame.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            \n            unitFrame.TargetBorder:SetBorderSizes (size, size, size, size)\n            \n            if modTable.config.wrap then\n                envTable.UpdateSize(unitFrame.TargetBorder)    \n            else    \n                unitFrame.TargetBorder:UpdateSizes()\n            end\n            \n            unitFrame.TargetBorder:Show()\n        else\n            unitFrame.TargetBorder:Hide()\n        end\n    end\n    \n    function envTable.UpdateSize(b)\n        local offset = Plater.db.profile.border_thickness\n        local borderSize = b.borderSize or 1\n        local minPixels = b.borderSizeMinPixels or 2\n        local upwardExtendHeightPixels = b.upwardExtendHeightPixels or borderSize\n        local upwardExtendHeightMinPixels = b.upwardExtendHeightMinPixels or minPixels\n        \n        PixelUtil.SetWidth(b.Left, size, minPixels)\n        PixelUtil.SetPoint(b.Left, \"TOPRIGHT\", b, \"TOPLEFT\", -offset, upwardExtendHeightPixels + offset, -offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Left, \"BOTTOMRIGHT\", b, \"BOTTOMLEFT\", -offset, -size - offset, -offset, minPixels - offset)\n        \n        PixelUtil.SetWidth(b.Right, size, minPixels)\n        PixelUtil.SetPoint(b.Right, \"TOPLEFT\", b, \"TOPRIGHT\", offset, upwardExtendHeightPixels + offset, offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Right, \"BOTTOMLEFT\", b, \"BOTTOMRIGHT\", offset, -size - offset, offset, minPixels - offset)\n        \n        PixelUtil.SetHeight(b.Bottom, size, minPixels)\n        PixelUtil.SetPoint(b.Bottom, \"TOPLEFT\", b, \"BOTTOMLEFT\", -offset, -offset)\n        PixelUtil.SetPoint(b.Bottom, \"TOPRIGHT\", b, \"BOTTOMRIGHT\", offset, -offset)\n        \n        if b.Top then\n            PixelUtil.SetHeight(b.Top, size, minPixels)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMLEFT\", b, \"TOPLEFT\", -offset, offset)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMRIGHT\", b, \"TOPRIGHT\", offset, -offset)\n        end\n    end\nend",
},
["Time"] = 1703732429,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/XR0IX1Suj/1",
["Icon"] = 3573824,
["Enabled"] = true,
["Revision"] = 335,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Add an extra border to your current target. Options included to wrap the border on top of the already existing border.",
["Prio"] = 99,
["Name"] = "Wrapping Target Border",
["PlaterCore"] = 1,
["version"] = 1,
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 5,
["Name"] = "Color",
["Value"] = "Border",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0.5,
["Name"] = "size",
["Value"] = 2,
["Key"] = "size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Wrap border",
["Value"] = true,
["Key"] = "wrap",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Check this to place the border AROUND the default nameplate border instead of on top of it",
},
},
},
},
["target_shady_combat_only"] = false,
["cast_statusbar_texture"] = "Wglass",
["aura_width2"] = 22,
["border_color"] = {
nil,
nil,
nil,
1,
},
["health_animation_time_dilatation"] = 2.6199998855591,
["health_statusbar_bgcolor"] = {
0,
0,
0,
1,
},
["target_shady_alpha"] = 0.3199999928474426,
["disable_omnicc_on_auras"] = true,
["border_thickness"] = 1.484683036804199,
["aura_width"] = 22,
["aura_height2"] = 18,
["castbar_target_notank"] = true,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "0.94601118564606",
["nameplateLargeTopInset"] = "-1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1.25",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateTargetRadialPosition"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["clampTargetNameplateToScreen"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "0",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "2.7",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.51",
["nameplateMotionSpeed"] = "0.050608683377504",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplateOtherTopInset"] = "-1",
["nameplateOtherAtBase"] = "0",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.29999998211861",
["SoftTargetIconGameObject"] = "0",
["ShowNamePlateLoseAggroFlash"] = "1",
["NamePlateHorizontalScale"] = "1.4",
["nameplateMinAlphaDistance"] = "-158489.31924611",
},
["range_check_alpha_friendlies"] = 1,
["aggro_can_check_notank"] = true,
["login_counter"] = 17438,
["version"] = 1,
["range_check_enabled"] = false,
["pet_width_scale"] = 0.8499999642372131,
["castbar_target_show"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.2000000476837,
},
},
["castbar_target_anchor"] = {
["y"] = -8.94000244140625,
["x"] = -3.170005798339844,
["side"] = 10,
},
["quick_hide"] = true,
["script_auto_imported"] = {
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Tank Interrupt"] = 12,
["Unit - Important"] = 11,
["Cast - Quick Flash"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Fixate On You"] = 11,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Glowing [P]"] = 10,
["Cast - Shield Interrupt"] = 2,
["Spiteful Affix"] = 3,
["Fixate"] = 11,
["Auto Set Skull"] = 11,
["Cast - Important Target [P]"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - On Going Cast [P]"] = 2,
["Cast - Stop Casting"] = 4,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Add - Explode on Die [P]"] = 1,
["Aura - Buff Alert"] = 15,
["Cast - Very Important"] = 15,
["Explosion Affix M+"] = 14,
["Unit - Show Energy"] = 11,
},
["aura_stack_font"] = "PT Sans Narrow",
["patch_version"] = 35,
["target_highlight_color"] = {
0.02745098248124123,
0.2745098173618317,
},
["range_check_in_range_or_target_alpha"] = 0.7999999523162842,
["aura_timer_text_size"] = 12,
["indicator_raidmark_scale"] = 0.99999994039536,
["color_override"] = false,
["number_region_first_run"] = true,
["aura_tracker"] = {
["debuff_banned"] = {
["356329"] = false,
["228354"] = false,
["113724"] = false,
["289308"] = false,
["331934"] = false,
["205708"] = false,
["352939"] = false,
["354050"] = false,
["12486"] = false,
["236299"] = true,
},
["buff_tracked"] = {
["209859"] = true,
},
["buff_banned"] = {
["206150"] = true,
["61573"] = true,
["61574"] = true,
["333553"] = true,
},
},
["first_run3"] = true,
["range_check_alpha"] = 1,
["click_space"] = {
125,
},
["hide_blizzard_castbar"] = true,
["castbar_target_font"] = "PT Sans Narrow",
["ui_parent_cast_level"] = 108,
["semver"] = "1.0.0",
["hover_highlight_alpha"] = 0.2999999821186066,
["target_highlight_height"] = 22,
["dps"] = {
["colors"] = {
["solo"] = {
0,
1,
0.011764705882353,
},
["notontank"] = {
1,
0.03921568766236305,
0,
},
["aggro"] = {
0.8666667342185974,
0.08627451211214066,
0.08627451211214066,
},
["noaggro"] = {
0,
0.250980406999588,
},
["pulling"] = {
nil,
0.2980392277240753,
0.168627455830574,
},
},
["use_aggro_solo"] = true,
},
["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
["use_ui_parent"] = true,
["cast_statusbar_bgcolor"] = {
0,
0,
0,
0.8900000005960464,
},
["usePlaterWidget"] = false,
["cast_color_settings"] = {
["enabled"] = true,
["width"] = 12,
},
["aura_alpha"] = 0.84999996423721,
["aura_timer_text_font"] = "PT Sans Narrow",
["minor_width_scale"] = 0.89999997615814,
["aura_consolidate"] = true,
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
},
["Mage-MOD"] = {
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["SpellIds"] = {
398151,
377738,
378149,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Name"] = "Arrow Height",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 18",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Nameplate Color",
["Value"] = "Nameplate Color",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Desc"] = "Add the debuff name in the trigger box.",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["semver"] = "",
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a special animation showing the explosion time.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Name"] = "Color List by SpellId",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 146,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
415437,
264050,
267824,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.6,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Key"] = "nameplateSizeOffset",
["Value"] = 3,
["Name"] = "Nameplate Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Extra Texture",
["Value"] = "Extra Texture",
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Key"] = "showExtraTexture",
["Value"] = false,
["Name"] = "Show Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Key"] = "skullColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Key"] = "skullAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Name"] = "Npc Color By NpcID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["version"] = -1,
["Name"] = "Add - Important [P]",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Blink Enabled",
["Value"] = true,
["Key"] = "blinkEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = true,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Name"] = "Change NamePlate Color",
["Value"] = false,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Name"] = "Timeleft to Blink",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Name"] = "Blink Speed",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Name"] = "Blink Max Alpha",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Timer Color Enabled",
["Value"] = true,
["Key"] = "timerColorEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 8,
["Name"] = "Time Left Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Time Left Critical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Name"] = "Warning Color",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Key"] = "warningColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Name"] = "Critical Color",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Key"] = "criticalColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Name"] = "Amount of Segments",
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Name"] = "Cast Color by SpellID",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Highlight the target name",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Shows the target name in a separate box",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Key"] = "option27",
["Value"] = 0,
["Name"] = "Option 27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Target Options",
["Name"] = "Option 28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetNameSize",
["Value"] = 14,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "colorByClass",
["Value"] = true,
["Name"] = "Use Class Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgColor",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Key"] = "targetFrameWidth",
["Value"] = 90,
["Name"] = "Frame Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "targetFrameHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "Play a very fast flash when the cast start",
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
200630,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Fraction"] = false,
["Value"] = 25,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 30,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "Change the color of  add",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useFlash",
["Value"] = true,
["Name"] = "Flash Nameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Name"] = "NpcID to Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Add - Warning [P]",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
190426,
186696,
101075,
100818,
98081,
52019,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura While Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
"165560",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "Auto set skull marker",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Only in Combat",
["Value"] = false,
["Key"] = "onlyInCombat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["version"] = -1,
["Name"] = "Auto Set Skull",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Time to Die",
["Value"] = "Time to Die",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Name"] = "Width",
["Value"] = 27,
["Key"] = "bgWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Key"] = "bgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Name"] = "Text Size",
["Value"] = 8,
["Key"] = "textSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Targeting",
["Value"] = "Targeting",
["Key"] = "option11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 11",
["Value"] = 0,
["Key"] = "option11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["Desc"] = "",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateScale",
["Value"] = true,
["Name"] = "Change Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Name"] = "Nameplate Scale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["version"] = -1,
["Name"] = "Add - Non Elite Trash [P]",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.3,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["Desc"] = "Just stop casting",
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["SpellIds"] = {
426662,
426663,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
352833,
330403,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 0.73,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Name"] = "Animation Speed",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Desc"] = "",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Reverse Health Bar",
["Value"] = false,
["Key"] = "useReverse",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable Shake",
["Value"] = false,
["Key"] = "useShake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 70,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Red Background",
["Value"] = true,
["Key"] = "useBackground",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["version"] = -1,
["Name"] = "Add - Explode on Die [P]",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "script desc",
["Value"] = "Show the power of the unit above the nameplate.",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show at 80% of Energy",
["Value"] = true,
["Key"] = "showLater",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Name"] = "Font Color",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Key"] = "fontColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Name"] = "Enable Text Outline",
["Value"] = true,
["Key"] = "outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["semver"] = "",
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Color Automation [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Time"] = 1547392935,
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Hide Neutral Units [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Time"] = 1541606242,
},
{
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["LastHookEdited"] = "",
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Name"] = "Reorder Nameplate [Plater]",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["version"] = -1,
["Name"] = "Don't Have Aura [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Time"] = 1554138845,
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Tecno-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["Name"] = "Extra Border [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Time"] = 1547409079,
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Current Target Color [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Time"] = 1552354619,
},
{
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Icon Settings:",
["Name"] = "Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showIcon",
["Value"] = true,
["Name"] = "Show Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Key"] = "iconOnLeftSide",
["Value"] = true,
["Name"] = "Icon on Left Side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Name"] = "Use Big Icon",
["Value"] = false,
["Key"] = "useFullSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Key"] = "iconSizeOffset",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Icon Padding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option5",
["Value"] = "Can't Interrupt Texture:",
["Name"] = "Interrupt Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTexture",
["Value"] = true,
["Name"] = "Show Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Key"] = "iconTexturePath",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Name"] = "Texture Path",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Key"] = "desaturatedTexture",
["Value"] = true,
["Name"] = "Texture Desaturated",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Key"] = "textureWidth",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Texture Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Key"] = "texturePosition",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Name"] = "Texture Alpha",
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["LastHookEdited"] = "",
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Name"] = "Cast Bar Icon Settings [P]",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Ahwa-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["version"] = -1,
["Name"] = "Execute Range [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Time"] = 1547406548,
},
{
["Enabled"] = false,
["Revision"] = 363,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Key"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Bar Color",
["Value"] = true,
["Key"] = "changeBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Border Color",
["Value"] = false,
["Key"] = "changeBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Reset Colors",
["Value"] = true,
["Key"] = "resetColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Name"] = "Attacking Specific Unit [Plater]",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1620377377,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 284,
["Options"] = {
},
["LastHookEdited"] = "",
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Combo Points [Plater]",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["Name"] = "Players Targeting a Target [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Time"] = 1548278227,
},
{
["Enabled"] = false,
["Revision"] = 356,
["Options"] = {
},
["LastHookEdited"] = "",
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Name"] = "Aura Reorder [Plater]",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["HooksTemp"] = {
},
},
},
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4025: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4023: in function <Interface/AddOns/Plater/Plater.lua:4023>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4026: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4023: in function <Interface/AddOns/Plater/Plater.lua:4023>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4027: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4023: in function <Interface/AddOns/Plater/Plater.lua:4023>\n",
},
["ui_parent_scale_tune"] = 1.406249965948519,
["saved_cvars"] = {
["nameplateMinAlpha"] = "0.90135484",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateSelectedAlpha"] = "1",
},
["aura2_y_offset"] = 5,
["login_counter"] = 27,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["__TrashAt"] = 1675712003,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Alert + Timer [P]",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["SpellIds"] = {
350421,
355787,
348513,
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1669340967,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 137,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["__TrashAt"] = 1703892928,
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"197697",
"59544",
},
},
},
["pet_width_scale"] = 0.949999988079071,
["plate_config"] = {
["global_health_height"] = 12,
["global_health_width"] = 112,
},
["aura_y_offset"] = 5,
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Hide Neutral Units"] = 1,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Execute Range"] = 1,
["Extra Border"] = 2,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["range_check_in_range_or_target_alpha"] = 0.8999999761581421,
["update_throttle"] = 0.1200000047683716,
["number_region_first_run"] = true,
["range_check_alpha"] = 0.6499999761581421,
["resources_settings"] = {
["chr"] = {
["Player-3682-0B038C9A"] = "ArcaneCharges",
["Player-3682-0B19EC37"] = "Chi",
},
},
["npc_cache"] = {
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208380] = {
"Val'kyr Shadowguard",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208461] = {
"Scorching Roots",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205305] = {
"The Lich King",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210231] = {
"Tainted Lasher",
"UNKNOWN",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[209333] = {
"Gnarlroot",
"UNKNOWN",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Cast - Quick Flash"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Fixate On You"] = 11,
["Cast - Very Important"] = 15,
["Auto Set Skull"] = 11,
["Cast - Shield Interrupt"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Add - Explode on Die [P]"] = 1,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Spiteful Affix"] = 3,
["Unit - Show Energy"] = 11,
},
["first_run3"] = true,
["health_selection_overlay_alpha"] = 0.09999999403953552,
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["pet_height_scale"] = 0.949999988079071,
["patch_version"] = 35,
["not_affecting_combat_alpha"] = 0.5999999642372131,
["range_check_alpha_friendlies"] = 0.6499999761581421,
},
},
["InterruptableSpells"] = {
[416256] = true,
[187707] = true,
[411994] = true,
[96231] = true,
[32747] = true,
[6552] = true,
[57994] = true,
[59638] = true,
[415770] = true,
[116705] = true,
[183752] = true,
[381516] = true,
[351338] = true,
[97547] = true,
[47528] = true,
[2139] = true,
[415773] = true,
[1766] = true,
[31935] = true,
[347008] = true,
[147362] = true,
[220543] = true,
[93985] = true,
[415437] = true,
[411958] = true,
[19647] = true,
[415435] = true,
},
["captured_casts"] = {
[386509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ezrigeth",
["npcID"] = 187666,
},
[37319] = {
["encounterName"] = "Al'ar",
["source"] = "Phoenix-Hawk Hatchling",
["npcID"] = 20038,
["event"] = "SPELL_CAST_START",
["encounterID"] = 730,
},
[124800] = {
["source"] = "Sra'thik Warcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61502,
},
[394701] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Great Shellkhan",
["npcID"] = 191305,
},
[413131] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[15795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smolderthorn Axe Thrower",
["npcID"] = 9267,
},
[376272] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[361938] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["encounterID"] = 2544,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181549,
},
[413133] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[421325] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[316890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Brute",
["npcID"] = 153239,
},
[257777] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[413135] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[196345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeprock Scrapper",
["npcID"] = 98003,
},
[394706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Frost",
["npcID"] = 198702,
},
[404945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Iyazael",
["npcID"] = 199401,
},
[275937] = {
["source"] = "Frigidus",
["event"] = "SPELL_CAST_START",
["npcID"] = 204425,
},
[409041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[269795] = {
["source"] = "Jungo, Herald of G'huun",
["event"] = "SPELL_CAST_START",
["npcID"] = 128184,
},
[320989] = {
["source"] = "Altered Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 168244,
},
[390613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snarglebone",
["npcID"] = 197344,
},
[376279] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[306656] = {
["encounterName"] = "Vez'okk the Lightless",
["source"] = "Vez'okk the Lightless",
["encounterID"] = 2373,
["event"] = "SPELL_CAST_START",
["npcID"] = 152874,
},
[384471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Skitter",
["npcID"] = 196758,
},
[398806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[260852] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[40904] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[404951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[392665] = {
["source"] = "Time-Lost Thunderhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 187258,
},
[34761] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[119684] = {
["encounterName"] = "Xin the Weaponmaster",
["source"] = "Xin the Weaponmaster",
["encounterID"] = 1441,
["event"] = "SPELL_CAST_START",
["npcID"] = 61398,
},
[384476] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[413145] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[400859] = {
["source"] = "Skornak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203643,
},
[386526] = {
["source"] = "Nullmagic Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 187246,
},
[413147] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[54983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Handler",
["npcID"] = 24082,
},
[417243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Lieutenant",
["npcID"] = 207581,
},
[353763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sath'zuul",
["npcID"] = 179135,
},
[392671] = {
["source"] = "Icebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199279,
},
[394719] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Stormwrought Despoiler",
["npcID"] = 198326,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[56775] = {
["source"] = "Azure Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 26722,
},
[390624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snarglebone",
["npcID"] = 197344,
},
[392672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Scalecommander Elarthresh",
["npcID"] = 201820,
},
[314858] = {
["source"] = "Scoutmaster Moswen",
["event"] = "SPELL_CAST_START",
["npcID"] = 152040,
},
[382434] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[425437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Lasher",
["npcID"] = 210111,
},
[413151] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[382435] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[421343] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[407009] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignara",
["npcID"] = 202791,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[310766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Depths",
["npcID"] = 159510,
},
[353769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karthazel",
["npcID"] = 179136,
},
[282098] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Pa'ku's Aspect",
["npcID"] = 144747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2268,
},
[13748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Emissary",
["npcID"] = 8913,
},
[164615] = {
["encounterName"] = "Gug'rokk",
["source"] = "Bloodmaul Flamespeaker",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 81767,
},
[396774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshaper",
["npcID"] = 190996,
},
[396775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshaper",
["npcID"] = 190996,
},
[423396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethka",
["npcID"] = 208740,
},
[312818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shoth the Darkened",
["npcID"] = 160532,
},
[255741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fangcaller Sraka",
["npcID"] = 130466,
},
[167688] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 82721,
},
[265721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terrorachna",
["npcID"] = 200349,
},
[34763] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[164617] = {
["encounterName"] = "Gug'rokk",
["source"] = "Bloodmaul Flamespeaker",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 81767,
},
[29926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spell Shade",
["npcID"] = 16525,
},
[366062] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181551,
},
[384492] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[394731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Earth",
["npcID"] = 198709,
},
[384493] = {
["source"] = "Shikaar Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 184657,
},
[396780] = {
["source"] = "Rimebound Subjugator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195837,
},
[22887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Spearman",
["npcID"] = 17729,
},
[257791] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[392686] = {
["source"] = "Tevgai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195132,
},
[172810] = {
["source"] = "Champion Druna",
["event"] = "SPELL_CAST_START",
["npcID"] = 81603,
},
[421355] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Anvil",
["npcID"] = 206478,
},
[32358] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["npcID"] = 18341,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1900,
},
[298491] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 151660,
},
[188169] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[282110] = {
["source"] = "Vindictive Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 146616,
},
[150286] = {
["source"] = "Razorfen Geomagus",
["event"] = "SPELL_CAST_START",
["npcID"] = 74545,
},
[257793] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[386546] = {
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 186741,
},
[251650] = {
["source"] = "Loti's Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 126790,
},
[415215] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[269825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nisha",
["npcID"] = 130455,
},
[386547] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[396786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chillwind Yeti",
["npcID"] = 215141,
},
[199433] = {
["source"] = "Stormfang Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 187931,
},
[425455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Lasher",
["npcID"] = 210111,
},
[400883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 199828,
},
[151312] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Warlord Ramtusk",
["encounterID"] = 1659,
["event"] = "SPELL_CAST_START",
["npcID"] = 74462,
},
[404980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[316927] = {
["source"] = "Barrow Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 160394,
},
[310784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Depths",
["npcID"] = 159510,
},
[404982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[300547] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 150142,
},
[214794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Deathguard",
["npcID"] = 135886,
},
[150290] = {
["encounterName"] = "Magmolatus",
["source"] = "Calamity",
["encounterID"] = 1655,
["event"] = "SPELL_CAST_START",
["npcID"] = 74571,
},
[21096] = {
["encounterName"] = "Mennu the Betrayer",
["source"] = "Coilfang Technician",
["npcID"] = 17940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1939,
},
[310788] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Organ of Corruption",
["npcID"] = 158343,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2345,
},
[394746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskron the Dazzling",
["npcID"] = 193273,
},
[298502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Bonecrusher",
["npcID"] = 153531,
},
[417272] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[209676] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[30695] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["npcID"] = 17308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1891,
},
[372223] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[392701] = {
["source"] = "Stormshroud Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 192536,
},
[394749] = {
["source"] = "Unstable Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 198716,
},
[265741] = {
["source"] = "Matron Bryndle",
["event"] = "SPELL_CAST_START",
["npcID"] = 135329,
},
[269837] = {
["source"] = "Amani Thug",
["event"] = "SPELL_CAST_START",
["npcID"] = 120843,
},
[386559] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[372225] = {
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[166675] = {
["source"] = "Grom'kar Gunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 80937,
},
[372226] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[114062] = {
["encounterName"] = "Jandice Barov",
["source"] = "Jandice Barov",
["encounterID"] = 1427,
["event"] = "SPELL_CAST_START",
["npcID"] = 59184,
},
[57547] = {
["source"] = "Brynja",
["event"] = "SPELL_CAST_START",
["npcID"] = 146447,
},
[275983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Flametender",
["npcID"] = 185227,
},
[400896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[361989] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[34254] = {
["source"] = "Sunseeker Botanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 18422,
},
[275984] = {
["source"] = "Vigil Hill Marine",
["event"] = "SPELL_CAST_START",
["npcID"] = 130695,
},
[419327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 133007,
},
[300560] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 150142,
},
[46029] = {
["source"] = "Sunblade Blood Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 24684,
},
[396805] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[407045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[409093] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[396807] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[366091] = {
["source"] = "Ancient Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181011,
},
[372235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Shaman",
["npcID"] = 207583,
},
[382474] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[265754] = {
["source"] = "Rastakhan's Might Mutineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 133136,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[419336] = {
["source"] = "Fel-Watcher Mara",
["event"] = "SPELL_CAST_START",
["npcID"] = 206925,
},
[252687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowblade Stalker",
["npcID"] = 122970,
},
[419337] = {
["source"] = "Fel-Watcher Mara",
["event"] = "SPELL_CAST_START",
["npcID"] = 206925,
},
[7739] = {
["source"] = "Magistrate Burnside",
["event"] = "SPELL_CAST_START",
["npcID"] = 47790,
},
[400908] = {
["source"] = "Suffocating Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 201644,
},
[394765] = {
["source"] = "Igneous Stonemauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 210043,
},
[314903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khateph",
["npcID"] = 159321,
},
[154396] = {
["encounterName"] = "High Sage Viryx",
["source"] = "High Sage Viryx",
["encounterID"] = 1701,
["event"] = "SPELL_CAST_START",
["npcID"] = 76266,
},
[278044] = {
["source"] = "Wrathful Orchid",
["event"] = "SPELL_CAST_START",
["npcID"] = 186321,
},
[396814] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[325143] = {
["source"] = "Strategist Palladia",
["event"] = "SPELL_CAST_START",
["npcID"] = 162613,
},
[185113] = {
["source"] = "Thistleleaf Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 91472,
},
[265759] = {
["source"] = "Matron Bryndle",
["event"] = "SPELL_CAST_START",
["npcID"] = 135329,
},
[265760] = {
["source"] = "Matron Bryndle",
["event"] = "SPELL_CAST_START",
["npcID"] = 135329,
},
[407055] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Seer Jhatal",
["npcID"] = 199842,
},
[267809] = {
["source"] = "Forgotten Denizen",
["event"] = "SPELL_CAST_START",
["npcID"] = 136297,
},
[384531] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[419343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208445,
},
[366102] = {
["source"] = "Ancient Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181011,
},
[392724] = {
["source"] = "Jadzigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188447,
},
[372247] = {
["source"] = "Duskpaw Hidestitcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187941,
},
[407060] = {
["source"] = "High Seer Jhatal",
["event"] = "SPELL_CAST_START",
["npcID"] = 199842,
},
[394775] = {
["source"] = "Eldoren the Reborn",
["event"] = "SPELL_CAST_START",
["npcID"] = 193234,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[198428] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[319010] = {
["source"] = "Cloudtail",
["event"] = "SPELL_CAST_START",
["npcID"] = 161530,
},
[68506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Agmar",
["npcID"] = 34922,
},
[417303] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[419351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Saboteur",
["npcID"] = 208438,
},
[388635] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Volatile Spark",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 194999,
},
[267818] = {
["encounterName"] = "Tidesage Council",
["source"] = "Galecaller Faye",
["encounterID"] = 2131,
["event"] = "SPELL_CAST_START",
["npcID"] = 134058,
},
[257814] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[378397] = {
["source"] = "Primal Earthshard",
["event"] = "SPELL_CAST_START",
["npcID"] = 185647,
},
[306726] = {
["encounterName"] = "Vez'okk the Lightless",
["source"] = "Vez'okk the Lightless",
["encounterID"] = 2373,
["event"] = "SPELL_CAST_START",
["npcID"] = 152874,
},
[204573] = {
["source"] = "Wrathguard Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 97566,
},
[255767] = {
["source"] = "Jungo",
["event"] = "SPELL_CAST_START",
["npcID"] = 127929,
},
[392733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sleepless Fickleshell",
["npcID"] = 191329,
},
[405020] = {
["source"] = "Enraged Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200407,
},
[392734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Pillager",
["npcID"] = 199374,
},
[70043] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[407069] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[192288] = {
["source"] = "Olmyr the Enlightened",
["event"] = "SPELL_CAST_START",
["npcID"] = 97202,
},
[405022] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[253721] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shieldbearer of Zul",
["npcID"] = 127879,
},
[296492] = {
["source"] = "Void Globule",
["event"] = "SPELL_CAST_START",
["npcID"] = 152669,
},
[364068] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 183666,
},
[12470] = {
["source"] = "Gold Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 32340,
},
[417310] = {
["source"] = "Unknown",
["event"] = "SPELL_CAST_START",
["npcID"] = 208380,
},
[370212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Wallcrasher",
["npcID"] = 187813,
},
[392738] = {
["source"] = "Kargpaw the Fetid",
["event"] = "SPELL_CAST_START",
["npcID"] = 186660,
},
[388643] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[359975] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["encounterID"] = 2542,
["event"] = "SPELL_CAST_START",
["npcID"] = 181395,
},
[372262] = {
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[396836] = {
["source"] = "Colossal Glacier",
["event"] = "SPELL_CAST_START",
["npcID"] = 194798,
},
[62415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jormungar Behemoth",
["npcID"] = 32882,
},
[364073] = {
["source"] = "Degeneration Automa",
["event"] = "SPELL_CAST_START",
["npcID"] = 184735,
},
[13878] = {
["source"] = "Ambermill Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 1914,
},
[423459] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Flowering Lasher",
["encounterID"] = 2708,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209800,
},
[359979] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["encounterID"] = 2542,
["event"] = "SPELL_CAST_START",
["npcID"] = 181395,
},
[310834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Demented Knife-Twister",
["npcID"] = 159417,
},
[402983] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[41426] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["npcID"] = 23419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[161577] = {
["source"] = "Lernaea Vilescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 85693,
},
[402985] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[355887] = {
["source"] = "Ebon Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 185313,
},
[158506] = {
["source"] = "Windroc",
["event"] = "SPELL_CAST_START",
["npcID"] = 79398,
},
[394795] = {
["source"] = "Molka The Grinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 193443,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[310838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Depths",
["npcID"] = 159510,
},
[197414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brood Queen Tyranna",
["npcID"] = 93802,
},
[165674] = {
["source"] = "Taskmaster Gurran",
["event"] = "SPELL_CAST_START",
["npcID"] = 79585,
},
[310839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Occult Shadowmender",
["npcID"] = 159425,
},
[170794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doombringer",
["npcID"] = 79503,
},
[400941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dampened Bones",
["npcID"] = 203470,
},
[402989] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[183081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kirin Tor Guardian",
["npcID"] = 104091,
},
[310842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Occult Shadowmender",
["npcID"] = 159425,
},
[394800] = {
["source"] = "Council Earthcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198500,
},
[423469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mosa Umbramane",
["npcID"] = 210070,
},
[394802] = {
["source"] = "Council Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198502,
},
[269890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Ruffian",
["npcID"] = 126720,
},
[405042] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[154415] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["encounterID"] = 1685,
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[189227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawliac Cinderwitch",
["npcID"] = 95174,
},
[372279] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[46035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Magister",
["npcID"] = 24685,
},
[9591] = {
["source"] = "Burrowing Leyworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 106630,
},
[77216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dun Morogh Rifleman",
["npcID"] = 41898,
},
[394806] = {
["source"] = "Phleep",
["event"] = "SPELL_CAST_START",
["npcID"] = 193210,
},
[396854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[396856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firava the Rekindler",
["npcID"] = 195915,
},
[327233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Experimental Misstep",
["npcID"] = 199859,
},
[59346] = {
["source"] = "Anub'ar Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 28922,
},
[378428] = {
["source"] = "Primal Stonekin",
["event"] = "SPELL_CAST_START",
["npcID"] = 194291,
},
[407097] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[351808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Cremator",
["npcID"] = 176577,
},
[396859] = {
["source"] = "Gargantuan Vessel",
["event"] = "SPELL_CAST_START",
["npcID"] = 202835,
},
[366143] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[197422] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["npcID"] = 95888,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[183088] = {
["source"] = "Mightstone Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 113998,
},
[417338] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[396861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Arcanogolem",
["npcID"] = 201554,
},
[170802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doombringer",
["npcID"] = 79503,
},
[269901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfurous Fury",
["npcID"] = 133434,
},
[172850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arachnis",
["npcID"] = 96323,
},
[11895] = {
["encounterName"] = "Antu'sul",
["source"] = "Antu'sul",
["encounterID"] = 595,
["event"] = "SPELL_CAST_START",
["npcID"] = 8127,
},
[174898] = {
["source"] = "Acidtooth Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 79416,
},
[296523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Seeker",
["npcID"] = 152708,
},
[384577] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[394816] = {
["source"] = "Shardwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 201562,
},
[374339] = {
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 190340,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[427581] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[360006] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181398,
},
[59603] = {
["source"] = "Dragonflayer Heartsplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 24071,
},
[165685] = {
["source"] = "Taskmaster Gurran",
["event"] = "SPELL_CAST_START",
["npcID"] = 79585,
},
[415296] = {
["source"] = "Larodar, Keeper of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 205136,
},
[201521] = {
["source"] = "Dormant Wisp",
["event"] = "SPELL_CAST_START",
["npcID"] = 102422,
},
[212784] = {
["source"] = "Watchful Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 105715,
},
[362056] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Guardian Sphere",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 181447,
},
[407107] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[192307] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["encounterID"] = 1806,
["event"] = "SPELL_CAST_START",
["npcID"] = 95833,
},
[427585] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[380487] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[407108] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[327246] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valinor",
["npcID"] = 167524,
},
[156472] = {
["source"] = "Gorg the Host",
["event"] = "SPELL_CAST_START",
["npcID"] = 76496,
},
[191284] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 94960,
},
[260908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ji'arak",
["npcID"] = 132253,
},
[212786] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[199476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sledge",
["npcID"] = 92990,
},
[162617] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77816,
},
[415304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Paladin",
["npcID"] = 207579,
},
[15095] = {
["encounterName"] = "Pyromancer Loregrain",
["source"] = "Pyromancer Loregrain",
["npcID"] = 9024,
["event"] = "SPELL_CAST_START",
["encounterID"] = 231,
},
[400971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfuric Rager",
["npcID"] = 202622,
},
[382542] = {
["source"] = "Ice Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 190319,
},
[376399] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 192188,
},
[394829] = {
["source"] = "Osseous Broodmother",
["event"] = "SPELL_CAST_START",
["npcID"] = 203348,
},
[117665] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Sha of Doubt",
["npcID"] = 56439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1439,
},
[39127] = {
["source"] = "Sunseeker Chemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 19486,
},
[400974] = {
["source"] = "Flamebringer Elementalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 203705,
},
[386640] = {
["source"] = "Tarasek Looter",
["event"] = "SPELL_CAST_START",
["npcID"] = 187242,
},
[396879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Air Elemental",
["npcID"] = 196155,
},
[415309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Paladin",
["npcID"] = 207579,
},
[370259] = {
["source"] = "Primal Earth Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 187322,
},
[8376] = {
["encounterName"] = "Jammal'an the Prophet",
["source"] = "Jammal'an the Prophet",
["encounterID"] = 488,
["event"] = "SPELL_CAST_START",
["npcID"] = 5710,
},
[294493] = {
["source"] = "Timeless Causality",
["event"] = "SPELL_CAST_START",
["npcID"] = 186464,
},
[394833] = {
["source"] = "Plainswalker Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 187937,
},
[407120] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[400977] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[172860] = {
["source"] = "Grom'kar Battlemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 83025,
},
[396882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Air Elemental",
["npcID"] = 196155,
},
[191290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crashin' Thrashin' Mortar",
["npcID"] = 76642,
},
[372310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Reaver",
["npcID"] = 200756,
},
[162622] = {
["source"] = "Huezeki Windsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 205497,
},
[384597] = {
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[378454] = {
["source"] = "Primal Stonekin",
["event"] = "SPELL_CAST_START",
["npcID"] = 194291,
},
[372311] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[407124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Knight",
["npcID"] = 208165,
},
[327262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valinor",
["npcID"] = 167524,
},
[419411] = {
["source"] = "Ursoc the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 206834,
},
[407125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Knight",
["npcID"] = 208165,
},
[388696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'raxes",
["npcID"] = 200537,
},
[57046] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[409174] = {
["source"] = "Incarnation of Entropy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203811,
},
[372315] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[258869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Flamecaster",
["npcID"] = 127488,
},
[374364] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[374365] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[409177] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[403034] = {
["source"] = "Fyrakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200832,
},
[44504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wretched Husk",
["npcID"] = 24690,
},
[92072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Or'Kalar",
["npcID"] = 2773,
},
[300650] = {
["source"] = "Toxic Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 150169,
},
[382561] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[32749] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "Scarlet Wizard",
["encounterID"] = 450,
["event"] = "SPELL_CAST_START",
["npcID"] = 4300,
},
[386658] = {
["source"] = "Molkeej",
["event"] = "SPELL_CAST_START",
["npcID"] = 195430,
},
[388706] = {
["source"] = "Invading Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 191235,
},
[382563] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[327274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valinor",
["npcID"] = 167524,
},
[329322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Soulbinder",
["npcID"] = 155831,
},
[366182] = {
["source"] = "Illicit Collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 183498,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[366183] = {
["source"] = "Illicit Collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 183498,
},
[106920] = {
["source"] = "Regenerating Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 56763,
},
[421473] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206172,
},
[183108] = {
["source"] = "Larivi",
["event"] = "SPELL_CAST_START",
["npcID"] = 192747,
},
[366185] = {
["source"] = "Hired Muscle",
["event"] = "SPELL_CAST_START",
["npcID"] = 183499,
},
[329326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Soulbinder",
["npcID"] = 155831,
},
[166727] = {
["source"] = "Fireblade Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 77047,
},
[390760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Grrlgllmesh",
["npcID"] = 186678,
},
[400999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[425573] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[366189] = {
["source"] = "Thieveing Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 183500,
},
[366190] = {
["source"] = "Twisted Worldeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 183495,
},
[384620] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[22127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nordrassil Druid",
["npcID"] = 38952,
},
[396907] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Yu'lon",
["npcID"] = 56762,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[267899] = {
["encounterName"] = "Tidesage Council",
["source"] = "Brother Ironhull",
["encounterID"] = 2131,
["event"] = "SPELL_CAST_START",
["npcID"] = 134063,
},
[314998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Shadowcrafter",
["npcID"] = 161416,
},
[423529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[417386] = {
["source"] = "Valhalas Vargul",
["event"] = "SPELL_CAST_START",
["npcID"] = 207804,
},
[394861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henlare",
["npcID"] = 193229,
},
[390766] = {
["source"] = "Blitztusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 190907,
},
[384623] = {
["source"] = "Qalashi Blacksmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[315000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Shadowcrafter",
["npcID"] = 161416,
},
[423531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[170827] = {
["source"] = "Khargax the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81537,
},
[16496] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Master Engineer Telonicus",
["npcID"] = 20063,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[382578] = {
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184131,
},
[366197] = {
["source"] = "Thieveing Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 183500,
},
[403057] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[366199] = {
["source"] = "Twisted Worldeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 183495,
},
[174925] = {
["source"] = "Vined Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 77226,
},
[46043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Warlock",
["npcID"] = 24686,
},
[394869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneshaper Jardak",
["npcID"] = 188693,
},
[335485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stygian Behemoth",
["npcID"] = 181064,
},
[87471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trained Brineshell Snapper",
["npcID"] = 65330,
},
[384633] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[306819] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["npcID"] = 156866,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2331,
},
[407159] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[315011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Shadowcrafter",
["npcID"] = 161416,
},
[163665] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Makogg Emberblade",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80805,
},
[312964] = {
["source"] = "Amathet Devoted",
["event"] = "SPELL_CAST_START",
["npcID"] = 152649,
},
[298630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbound Shieldbearer",
["npcID"] = 156146,
},
[390780] = {
["source"] = "Blitztusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 190907,
},
[394876] = {
["source"] = "Phenran",
["event"] = "SPELL_CAST_START",
["npcID"] = 193688,
},
[46044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Imp",
["npcID"] = 24815,
},
[209741] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Image of Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 105754,
},
[396925] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197149,
},
[171858] = {
["source"] = "Clarice Chapmann",
["event"] = "SPELL_CAST_START",
["npcID"] = 159210,
},
[39133] = {
["encounterName"] = "Warp Splinter",
["source"] = "Warp Splinter",
["encounterID"] = 1929,
["event"] = "SPELL_CAST_START",
["npcID"] = 17977,
},
[405117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[401022] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[382593] = {
["source"] = "Cruel Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 186206,
},
[370307] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[421501] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[174931] = {
["source"] = "Bloom Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 81575,
},
[417406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankura Bloodhewer",
["npcID"] = 207589,
},
[272016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imprisoned Cabalist",
["npcID"] = 154014,
},
[17137] = {
["source"] = "Master Apothecary Lydon",
["event"] = "SPELL_CAST_START",
["npcID"] = 48020,
},
[409216] = {
["source"] = "Sundered Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198872,
},
[165717] = {
["source"] = "Alya",
["event"] = "SPELL_CAST_START",
["npcID"] = 82002,
},
[398978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Caster",
["npcID"] = 200824,
},
[409217] = {
["source"] = "Sundered Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198872,
},
[6685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dun Morogh Rifleman",
["npcID"] = 41898,
},
[388741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Researcher",
["npcID"] = 203013,
},
[386694] = {
["source"] = "Stormsurge Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 194897,
},
[398981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[163671] = {
["source"] = "Nar'thalas Nightwatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 88782,
},
[355979] = {
["source"] = "Ebon Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 185313,
},
[174934] = {
["source"] = "Bloom Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 81575,
},
[384648] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[360076] = {
["source"] = "Subjugated Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 184767,
},
[388745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icy Blue Crab",
["npcID"] = 197862,
},
[337552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[265881] = {
["source"] = "Matron Alma",
["event"] = "SPELL_CAST_START",
["npcID"] = 135365,
},
[398985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[116] = {
["npcID"] = 188027,
},
[388747] = {
["source"] = "Boggy Bullfrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 193699,
},
[174936] = {
["source"] = "Voice of Iyu",
["event"] = "SPELL_CAST_START",
["npcID"] = 81634,
},
[257870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Buccaneer",
["npcID"] = 130011,
},
[394891] = {
["source"] = "Braekkas",
["event"] = "SPELL_CAST_START",
["npcID"] = 196855,
},
[317077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harpy Snatcher",
["npcID"] = 152571,
},
[331412] = {
["source"] = "Deepscar",
["event"] = "SPELL_CAST_START",
["npcID"] = 162797,
},
[46046] = {
["source"] = "Sunblade Physician",
["event"] = "SPELL_CAST_START",
["npcID"] = 24687,
},
[394893] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[15801] = {
["source"] = "Smolderthorn Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 9269,
},
[319127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goldenback Grazer",
["npcID"] = 169123,
},
[372369] = {
["source"] = "Shadepaw Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 186490,
},
[142174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Small Illusionary Guardian",
["npcID"] = 71079,
},
[394895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phenran",
["npcID"] = 193688,
},
[366227] = {
["source"] = "Foul Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 183496,
},
[172891] = {
["source"] = "Commander Gar",
["event"] = "SPELL_CAST_START",
["npcID"] = 85571,
},
[256849] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[409231] = {
["source"] = "Colossal Draconic Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 203826,
},
[59357] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Shadowcaster",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 28733,
},
[405137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[337562] = {
["source"] = "Devmorta",
["event"] = "SPELL_CAST_START",
["npcID"] = 162875,
},
[227158] = {
["source"] = "Darkspear Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 113034,
},
[392854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Scythid Queen",
["npcID"] = 184853,
},
[394903] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[388760] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[106421] = {
["source"] = "Shado-Pan Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 59741,
},
[427668] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[274087] = {
["source"] = "Zekhan",
["event"] = "SPELL_CAST_START",
["npcID"] = 153789,
},
[191325] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99200,
},
[169824] = {
["encounterName"] = "Archmage Sol",
["source"] = "Spore Image",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 84984,
},
[85944] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 46028,
},
[205660] = {
["source"] = "Observant Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 107449,
},
[382620] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[321188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilboar Geomancer",
["npcID"] = 150238,
},
[169825] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[374430] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[368287] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[156515] = {
["source"] = "Whirling Dervish",
["event"] = "SPELL_CAST_START",
["npcID"] = 77605,
},
[308903] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[193375] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[11642] = {
["source"] = "Murta Grimgut",
["event"] = "SPELL_CAST_START",
["npcID"] = 7608,
},
[69051] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[403101] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[11962] = {
["source"] = "Oro Eyegouge",
["event"] = "SPELL_CAST_START",
["npcID"] = 7606,
},
[48096] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["npcID"] = 26723,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2011,
},
[272046] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Sharkbait",
["npcID"] = 126841,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[407198] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[198496] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[407199] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[386722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Striker",
["npcID"] = 199800,
},
[407200] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[69564] = {
["source"] = "Soulguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 36620,
},
[3263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of Ravenclaw",
["npcID"] = 1870,
},
[343722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huwerath",
["npcID"] = 162965,
},
[388773] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[317102] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[302768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spawn of Wekemara",
["npcID"] = 155702,
},
[394917] = {
["encounterName"] = "Eranog",
["source"] = "Flamescale Captain",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 199233,
},
[392870] = {
["source"] = "Uurhilt",
["event"] = "SPELL_CAST_START",
["npcID"] = 194760,
},
[411300] = {
["source"] = "Time-Lost Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205363,
},
[306865] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 156866,
},
[407205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Destroyer",
["npcID"] = 208208,
},
[258908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sethrak Invader",
["npcID"] = 130411,
},
[372394] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[278198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Defender",
["npcID"] = 148393,
},
[41186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 22847,
},
[407207] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[162665] = {
["source"] = "Grom'kar Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 75749,
},
[278200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Defender",
["npcID"] = 148393,
},
[59616] = {
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[372397] = {
["source"] = "Brackenhide Scrapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186359,
},
[152427] = {
["source"] = "Magma Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 75211,
},
[337587] = {
["source"] = "Mistress Dyrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 162880,
},
[142189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Large Illusionary Amber-Weaver",
["npcID"] = 71068,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[407212] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[204646] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[256864] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[409261] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[32370] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Apprentice",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18430,
},
[396975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firava the Rekindler",
["npcID"] = 195915,
},
[162668] = {
["source"] = "Grom'kar Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 75749,
},
[41187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 22847,
},
[165740] = {
["source"] = "Bonesaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 82010,
},
[399024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Brute",
["npcID"] = 200486,
},
[17140] = {
["source"] = "Ambermill Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 1888,
},
[399025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Revenant",
["npcID"] = 200720,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[59617] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[165741] = {
["source"] = "Challe Tebrilinde",
["event"] = "SPELL_CAST_START",
["npcID"] = 82005,
},
[96189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Sun Marksman",
["npcID"] = 24938,
},
[415409] = {
["source"] = "Rupturing Firevine",
["event"] = "SPELL_CAST_START",
["npcID"] = 207699,
},
[392884] = {
["source"] = "Tevgai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195132,
},
[116155] = {
["source"] = "Bubbling Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59521,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[421554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elisande",
["npcID"] = 208668,
},
[267973] = {
["source"] = "Temple Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 134137,
},
[351931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torment Golem",
["npcID"] = 176598,
},
[306881] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Void Hunter",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 157366,
},
[270022] = {
["source"] = "Silverback Thumpknuckle",
["event"] = "SPELL_CAST_START",
["npcID"] = 130543,
},
[169839] = {
["source"] = "Putrid Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84957,
},
[366267] = {
["source"] = "Volatile Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 185008,
},
[155505] = {
["source"] = "Black Iron Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 76101,
},
[386745] = {
["source"] = "Prozela Galeshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 193669,
},
[409271] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[258917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Priest",
["npcID"] = 130028,
},
[169840] = {
["source"] = "Infested Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 84989,
},
[399033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weyrn Spellslinger",
["npcID"] = 200736,
},
[59362] = {
["source"] = "Anub'ar Webspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 29335,
},
[419511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[315076] = {
["source"] = "Stitchyard Surgeon",
["event"] = "SPELL_CAST_START",
["npcID"] = 159679,
},
[423607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elisande",
["npcID"] = 208668,
},
[135029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 78116,
},
[52451] = {
["encounterName"] = "Salram the Fleshcrafter",
["source"] = "Salramm the Fleshcrafter",
["npcID"] = 26530,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2004,
},
[169841] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[30707] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["npcID"] = 17308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1891,
},
[197486] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brood Queen Tyranna",
["npcID"] = 93802,
},
[366272] = {
["source"] = "Taskmaster Xy'pro",
["event"] = "SPELL_CAST_START",
["npcID"] = 185032,
},
[267981] = {
["source"] = "Shrine Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 134139,
},
[126908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Fist",
["npcID"] = 58927,
},
[11899] = {
["source"] = "Sandfury Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 5650,
},
[419516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[169843] = {
["source"] = "Putrid Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84957,
},
[278222] = {
["source"] = "Grimscowl the Harebrained",
["event"] = "SPELL_CAST_START",
["npcID"] = 141059,
},
[427708] = {
["source"] = "Reefbreaker Moruud",
["event"] = "SPELL_CAST_START",
["npcID"] = 209898,
},
[388801] = {
["source"] = "Risen Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 195855,
},
[6270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muyoh",
["npcID"] = 3678,
},
[243563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crusty Sean",
["npcID"] = 139647,
},
[411328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[366278] = {
["source"] = "Taskmaster Xy'pro",
["event"] = "SPELL_CAST_START",
["npcID"] = 185032,
},
[388804] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[362184] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[423617] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elisande",
["npcID"] = 208668,
},
[257899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Ravager",
["npcID"] = 130012,
},
[218992] = {
["source"] = "Risen Legionnaire",
["event"] = "SPELL_CAST_START",
["npcID"] = 108830,
},
[407236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[304849] = {
["source"] = "Frenzied Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 152164,
},
[165751] = {
["source"] = "Etubrute",
["event"] = "SPELL_CAST_START",
["npcID"] = 82187,
},
[419524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loose Time",
["npcID"] = 209170,
},
[169847] = {
["source"] = "Infested Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 84989,
},
[252781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[34791] = {
["source"] = "Tempest-Forge Peacekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 18405,
},
[413385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[366287] = {
["source"] = "Taskmaster Xy'pro",
["event"] = "SPELL_CAST_START",
["npcID"] = 185032,
},
[417481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[364240] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181549,
},
[382670] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[360145] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181399,
},
[364241] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Renewal",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181546,
},
[267997] = {
["encounterName"] = "The Primal Council",
["source"] = "Vilefiend",
["npcID"] = 135816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[415436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[257904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ludwig Von Tortollan",
["npcID"] = 129699,
},
[321240] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["npcID"] = 157300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2325,
},
[315097] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Il'gynoth",
["npcID"] = 158328,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2345,
},
[415437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Leech",
["npcID"] = 206066,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[116162] = {
["source"] = "Fizzy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59520,
},
[397010] = {
["source"] = "Qalashi Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 197147,
},
[256882] = {
["source"] = "Monzumi",
["event"] = "SPELL_CAST_START",
["npcID"] = 129552,
},
[272098] = {
["source"] = "Blacktooth Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 131307,
},
[397011] = {
["source"] = "Qalashi Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 197147,
},
[205689] = {
["source"] = "Zanj'ir Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 155618,
},
[190331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 167664,
},
[401108] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignara",
["npcID"] = 202791,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[9532] = {
["source"] = "Muckgill",
["event"] = "SPELL_CAST_START",
["npcID"] = 47759,
},
[388822] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[399061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[401109] = {
["source"] = "Crimson Oldblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 201054,
},
[372441] = {
["source"] = "Hyenamaster Durgun",
["event"] = "SPELL_CAST_START",
["npcID"] = 186515,
},
[399062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[257908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Officer",
["npcID"] = 127106,
},
[419540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten General",
["npcID"] = 207941,
},
[204667] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[115652] = {
["source"] = "Stout Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59519,
},
[243575] = {
["source"] = "Jambani Chosen",
["event"] = "SPELL_CAST_START",
["npcID"] = 130221,
},
[399065] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[59366] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Watcher Silthik",
["npcID"] = 28731,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1971,
},
[284393] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Brother Joseph",
["npcID"] = 146253,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[392924] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[386781] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[409307] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[258935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Priest",
["npcID"] = 130028,
},
[399069] = {
["source"] = "Farscale Tidelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200488,
},
[360162] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 180773,
},
[11836] = {
["encounterName"] = "Ghaz'rilla",
["source"] = "Gahz'rilla",
["encounterID"] = 594,
["event"] = "SPELL_CAST_START",
["npcID"] = 7273,
},
[372449] = {
["source"] = "Stormfang Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 187931,
},
[106439] = {
["source"] = "Fragrant Lotus",
["event"] = "SPELL_CAST_START",
["npcID"] = 56472,
},
[83914] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["npcID"] = 44715,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[394977] = {
["source"] = "Frigidpelt Den Mother",
["event"] = "SPELL_CAST_START",
["npcID"] = 193698,
},
[372452] = {
["source"] = "Snowstorm Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 194158,
},
[399073] = {
["source"] = "Farscale Tidelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200488,
},
[403169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishyra",
["npcID"] = 200579,
},
[409313] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[60903] = {
["source"] = "Indigos",
["event"] = "SPELL_CAST_START",
["npcID"] = 47010,
},
[288497] = {
["source"] = "Huezeki Windsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 205497,
},
[311023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Willing Sacrifice",
["npcID"] = 162647,
},
[372456] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[85963] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 46028,
},
[421603] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[382696] = {
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184131,
},
[167815] = {
["source"] = "Thunderlord Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 83390,
},
[399079] = {
["source"] = "Farscale Tidelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200488,
},
[40938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
},
[200580] = {
["source"] = "Festerhide Grizzly",
["event"] = "SPELL_CAST_START",
["npcID"] = 95779,
},
[372460] = {
["source"] = "Bakra the Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 186517,
},
[85964] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 46028,
},
[268027] = {
["source"] = "Living Current",
["event"] = "SPELL_CAST_START",
["npcID"] = 134144,
},
[360176] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Point Defense Drone",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 181856,
},
[341747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wailing Soul",
["npcID"] = 174158,
},
[425706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Astromancer's Guard",
["npcID"] = 208729,
},
[382704] = {
["source"] = "Grand Artificer Zeerak",
["event"] = "SPELL_CAST_START",
["npcID"] = 201553,
},
[386800] = {
["source"] = "Galzuda",
["event"] = "SPELL_CAST_START",
["npcID"] = 193330,
},
[405230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[40683] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[417517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankura Bloodhewer",
["npcID"] = 207589,
},
[386801] = {
["source"] = "Cragsworn Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195838,
},
[390897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalepiercer",
["npcID"] = 186632,
},
[135056] = {
["source"] = "Darkmoon Rabbit",
["event"] = "SPELL_CAST_START",
["npcID"] = 58336,
},
[258945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fangcaller Sraka",
["npcID"] = 130466,
},
[427758] = {
["source"] = "Envoy of Winter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209929,
},
[382708] = {
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[397043] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[172941] = {
["source"] = "Sor the Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 80691,
},
[360185] = {
["source"] = "Lured Smasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 183580,
},
[413427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pendule",
["npcID"] = 206074,
},
[407285] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Skullcrusher",
["npcID"] = 202258,
},
[311041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Seer",
["npcID"] = 159219,
},
[263943] = {
["source"] = "Heartsbane Runeweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 131677,
},
[372474] = {
["source"] = "Shikaar Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 180393,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[388857] = {
["source"] = "Rampaging Forest Giant",
["event"] = "SPELL_CAST_START",
["npcID"] = 194741,
},
[78801] = {
["encounterName"] = "Hydromancer Velratha",
["source"] = "Hydromancer Velratha",
["encounterID"] = 593,
["event"] = "SPELL_CAST_START",
["npcID"] = 7795,
},
[311045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Initiate",
["npcID"] = 160182,
},
[397051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[308998] = {
["source"] = "Fallen Taskmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 158437,
},
[311046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Seer",
["npcID"] = 159219,
},
[392957] = {
["source"] = "Azure Vorquin",
["event"] = "SPELL_CAST_START",
["npcID"] = 190216,
},
[388862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[407292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Shadowflame",
["npcID"] = 199838,
},
[388863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[150421] = {
["source"] = "Pale Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 76465,
},
[427771] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[390912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Lasher",
["npcID"] = 197219,
},
[106447] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[413438] = {
["source"] = "Void Lord Aurvizk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200865,
},
[178067] = {
["source"] = "Sea Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 88094,
},
[179091] = {
["source"] = "Nar'thalas Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 88783,
},
[311052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Conscript",
["npcID"] = 159305,
},
[296718] = {
["source"] = "Faceless Willbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 152987,
},
[374533] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[151447] = {
["source"] = "Bloodmaul Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84978,
},
[411393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[372486] = {
["source"] = "Waste Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 187497,
},
[390916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melkhop",
["npcID"] = 193311,
},
[411394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[169878] = {
["encounterName"] = "Yalnu",
["source"] = "Vicious Mandragora",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 84399,
},
[300818] = {
["source"] = "Gnome-Eating Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 154663,
},
[263959] = {
["source"] = "Heartsbane Soulcharmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 131812,
},
[421636] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[411399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[409352] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
},
[172952] = {
["source"] = "Siegemaster Olugar",
["event"] = "SPELL_CAST_START",
["npcID"] = 83026,
},
[352016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Sentinel",
["npcID"] = 185027,
},
[372494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormshackler Rynea",
["npcID"] = 189391,
},
[372495] = {
["source"] = "Ensnaring Current",
["event"] = "SPELL_CAST_START",
["npcID"] = 191328,
},
[390926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Gastrinax",
["npcID"] = 203521,
},
[15869] = {
["source"] = "Drakkari Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 27555,
},
[411404] = {
["source"] = "Shade of Skytalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 204430,
},
[142238] = {
["event"] = "SPELL_CAST_START",
["source"] = "Large Illusionary Mystic",
["npcID"] = 71069,
},
[306971] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[116178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sudsy Brew Alemental",
["npcID"] = 59522,
},
[151454] = {
["encounterName"] = "Groyat, the Blind Hunter",
["source"] = "Groyat, the Blind Hunter",
["encounterID"] = 1660,
["event"] = "SPELL_CAST_START",
["npcID"] = 75247,
},
[411407] = {
["source"] = "Time-Lost Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205363,
},
[388882] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[69080] = {
["source"] = "Soulguard Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 36564,
},
[44271] = {
["source"] = "Garaxxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 24555,
},
[154527] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 77812,
},
[413458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osthilde",
["npcID"] = 200867,
},
[309023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shith'rus the Manipulator",
["npcID"] = 154727,
},
[395029] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infused Whelp",
["npcID"] = 195119,
},
[274212] = {
["source"] = "Drowned Depthbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 134418,
},
[390934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melkhop",
["npcID"] = 193311,
},
[274213] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[166815] = {
["source"] = "Warsong Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75745,
},
[186269] = {
["source"] = "Blightshard Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 90998,
},
[401175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebyssian",
["npcID"] = 201707,
},
[272167] = {
["encounterName"] = "The Primal Council",
["source"] = "Bilescourge",
["npcID"] = 136404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[319266] = {
["source"] = "Steelskin Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 157669,
},
[390938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggravated Skitterfly",
["npcID"] = 197406,
},
[282408] = {
["encounterName"] = "Mekkatorque",
["source"] = "Spark Bot",
["npcID"] = 144942,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2276,
},
[176032] = {
["source"] = "Grom'kar Cinderseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 88163,
},
[395035] = {
["source"] = "Soulharvester Galtmaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[382749] = {
["source"] = "Bossy Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 190998,
},
[300840] = {
["source"] = "Inhuman Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 202147,
},
[266029] = {
["source"] = "Windcaller Ula'jan",
["event"] = "SPELL_CAST_START",
["npcID"] = 133140,
},
[276268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Despoiler",
["npcID"] = 156568,
},
[31865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seductress",
["npcID"] = 17399,
},
[270126] = {
["source"] = "Necropolis Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 135253,
},
[362275] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[360228] = {
["source"] = "Subjugated Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 184767,
},
[386849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unleashed Storm",
["npcID"] = 195846,
},
[405279] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[374563] = {
["source"] = "Dazzling Dragonfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 190362,
},
[360229] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181399,
},
[306988] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[311084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Conscript",
["npcID"] = 159305,
},
[366374] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[327467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodian Thonar",
["npcID"] = 185011,
},
[413473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Deviation",
["npcID"] = 206063,
},
[266036] = {
["source"] = "Thistle Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 135474,
},
[374567] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[272180] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[202658] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Malignant Defiler",
["npcID"] = 102584,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[407332] = {
["source"] = "Agitated Dustmoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 202316,
},
[196515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Binder Ashioi",
["npcID"] = 100250,
},
[364330] = {
["source"] = "Acquisitions Automa",
["event"] = "SPELL_CAST_START",
["npcID"] = 184737,
},
[374569] = {
["source"] = "Monstrous Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 186227,
},
[160680] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79548,
},
[366379] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[294708] = {
["source"] = "Telur",
["event"] = "SPELL_CAST_START",
["npcID"] = 151909,
},
[274231] = {
["source"] = "Quid",
["event"] = "SPELL_CAST_START",
["npcID"] = 154106,
},
[300852] = {
["source"] = "Inhuman Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 202147,
},
[401192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quicksmack Magk",
["npcID"] = 204651,
},
[160681] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79548,
},
[401193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nevroll's Drogbar",
["npcID"] = 203041,
},
[409385] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[411433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Violetwing Stagbeetle",
["npcID"] = 205384,
},
[52721] = {
["encounterName"] = "Mal'ganis",
["source"] = "Mal'Ganis",
["npcID"] = 26533,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2005,
},
[203685] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 99676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[397100] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[22907] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["npcID"] = 17826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1947,
},
[319286] = {
["source"] = "Manifestation of Rage",
["event"] = "SPELL_CAST_START",
["npcID"] = 164084,
},
[218020] = {
["source"] = "Agitated Stonewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 108856,
},
[413483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apiazhus",
["npcID"] = 200981,
},
[372529] = {
["source"] = "Shadepaw Thief",
["event"] = "SPELL_CAST_START",
["npcID"] = 192748,
},
[200615] = {
["source"] = "Eredar Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 102726,
},
[411437] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[191401] = {
["source"] = "Valarjar Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 96640,
},
[411439] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[413487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Fusion",
["npcID"] = 206068,
},
[319292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Overseer",
["npcID"] = 156676,
},
[419632] = {
["isChanneled"] = true,
["source"] = "Pendule",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208945,
},
[52722] = {
["encounterName"] = "Mal'ganis",
["source"] = "Mal'Ganis",
["npcID"] = 26533,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2005,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[309055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baruk Stoneshaper",
["npcID"] = 155957,
},
[302912] = {
["source"] = "Zanj'ir Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 153962,
},
[397109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Air Revenant",
["npcID"] = 203743,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[397110] = {
["source"] = "Entropic Diruption",
["event"] = "SPELL_CAST_START",
["npcID"] = 201598,
},
[270150] = {
["source"] = "Feathered Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 132409,
},
[264007] = {
["source"] = "Vol'jamba",
["event"] = "SPELL_CAST_START",
["npcID"] = 131241,
},
[372538] = {
["source"] = "Lava Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 189470,
},
[374586] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[409398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Guardian",
["npcID"] = 203831,
},
[397112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Proto-Dragon",
["npcID"] = 189798,
},
[335680] = {
["source"] = "Mawsworn Converter",
["event"] = "SPELL_CAST_START",
["npcID"] = 181782,
},
[42740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[401209] = {
["source"] = "Deepbed Longwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 203917,
},
[388923] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[309061] = {
["source"] = "Baruk Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 153099,
},
[88032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[44276] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["npcID"] = 24556,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[113629] = {
["source"] = "Boneweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 59193,
},
[407354] = {
["source"] = "Slaghide Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 202303,
},
[388925] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[309063] = {
["source"] = "Baruk Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 153099,
},
[401212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goopal",
["npcID"] = 203477,
},
[153524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plagued Bat",
["npcID"] = 75459,
},
[382783] = {
["source"] = "Obsidian Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202483,
},
[39413] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[401214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Honeypelt",
["npcID"] = 202451,
},
[153525] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["encounterID"] = 438,
["event"] = "SPELL_CAST_START",
["npcID"] = 74948,
},
[407359] = {
["source"] = "Slaghide Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 202303,
},
[401216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nevroll",
["npcID"] = 203039,
},
[307020] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["npcID"] = 157354,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[382787] = {
["source"] = "Disease Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187315,
},
[376644] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[390979] = {
["source"] = "Lurgan",
["event"] = "SPELL_CAST_START",
["npcID"] = 201540,
},
[168885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[266067] = {
["source"] = "Loa-Speaker Kihara",
["event"] = "SPELL_CAST_START",
["npcID"] = 132979,
},
[343883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 167664,
},
[304976] = {
["encounterName"] = "Inquisitor Gnshal",
["source"] = "Inquisitor Gnshal",
["npcID"] = 156161,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2371,
},
[405316] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[390982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Huntmaster",
["npcID"] = 185353,
},
[172982] = {
["source"] = "Siegemaster Olugar",
["event"] = "SPELL_CAST_START",
["npcID"] = 83026,
},
[372553] = {
["source"] = "Darktooth Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195273,
},
[390983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalbound Water Spirit",
["npcID"] = 190739,
},
[335694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Endbringer",
["npcID"] = 157810,
},
[390984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshaper",
["npcID"] = 190996,
},
[425796] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[362316] = {
["source"] = "Miru Jasyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 183448,
},
[199604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sledge",
["npcID"] = 92990,
},
[403272] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[382795] = {
["isChanneled"] = true,
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193944,
},
[372557] = {
["source"] = "Darktooth Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195273,
},
[390987] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 185168,
},
[390988] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[45046] = {
["source"] = "Eredar Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 25033,
},
[197558] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[388941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Wave",
["npcID"] = 187793,
},
[200630] = {
["source"] = "Mindshattered Screecher",
["event"] = "SPELL_CAST_START",
["npcID"] = 95769,
},
[388942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[276316] = {
["source"] = "Risen Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 145120,
},
[419659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ignit the Firebranded",
["npcID"] = 209620,
},
[372561] = {
["source"] = "Qalashi Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189227,
},
[39671] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[311129] = {
["source"] = "Overwhelming Confusion",
["event"] = "SPELL_CAST_START",
["npcID"] = 161829,
},
[388944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Wave",
["npcID"] = 187793,
},
[114658] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[382802] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187224,
},
[25085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Syndicate Conjuror",
["npcID"] = 2590,
},
[372565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 188067,
},
[372566] = {
["source"] = "Qalashi Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189227,
},
[317277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magni Bronzebeard",
["npcID"] = 154533,
},
[302943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Trapper",
["npcID"] = 153962,
},
[325469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decrepit Bilespawn",
["npcID"] = 166928,
},
[401236] = {
["source"] = "Nidharr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201310,
},
[405332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'raxes",
["npcID"] = 200537,
},
[417619] = {
["isChanneled"] = true,
["source"] = "Gill'dan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204808,
},
[427858] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[87527] = {
["source"] = "Dustbelcher Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 46694,
},
[388952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echoed Lurker",
["npcID"] = 202636,
},
[360284] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181399,
},
[254901] = {
["source"] = "Atal'Shadra Bloodletter",
["event"] = "SPELL_CAST_START",
["npcID"] = 122872,
},
[395097] = {
["source"] = "Emberdusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 203664,
},
[210875] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 96574,
},
[59638] = {
["encounterName"] = "Terros",
["source"] = "Mirror Image",
["npcID"] = 31216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[391003] = {
["source"] = "High Shaman Rotknuckle",
["event"] = "SPELL_CAST_START",
["npcID"] = 197356,
},
[200637] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[427863] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[413529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[374622] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["npcID"] = 190690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[37113] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[374623] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[319334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jugnug",
["npcID"] = 153583,
},
[391006] = {
["source"] = "Blisterhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 197353,
},
[196543] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[407389] = {
["source"] = "Brimstone Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 202272,
},
[409437] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[12160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Druid",
["npcID"] = 68486,
},
[32637] = {
["source"] = "Doomwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 167749,
},
[124389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slitherscale Ripper",
["npcID"] = 58212,
},
[401248] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[193473] = {
["encounterName"] = "The Jailer",
["source"] = "Void Tendril",
["npcID"] = 192337,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2537,
},
[155590] = {
["source"] = "Black Iron Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 77036,
},
[264050] = {
["source"] = "Thistle Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 135474,
},
[317292] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 162480,
},
[360295] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181549,
},
[18431] = {
["encounterName"] = "Onyxia",
["source"] = "Onyxia",
["encounterID"] = 1084,
["event"] = "SPELL_CAST_START",
["npcID"] = 10184,
},
[106984] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56747,
},
[256955] = {
["encounterName"] = "Knight Captain Valyri",
["event"] = "SPELL_CAST_START",
["source"] = "Knight Captain Valyri",
["npcID"] = 127490,
},
[200642] = {
["source"] = "Dreadsoul Ruiner",
["event"] = "SPELL_CAST_START",
["npcID"] = 95771,
},
[153544] = {
["source"] = "Soaring Chakram Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 76132,
},
[198595] = {
["source"] = "Valarjar Thundercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 95842,
},
[39674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[409445] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[305010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidemistress Ethendriss",
["npcID"] = 153934,
},
[374634] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[360300] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181398,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 194367,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[378731] = {
["source"] = "Frigellus",
["event"] = "SPELL_CAST_START",
["npcID"] = 189217,
},
[274296] = {
["source"] = "Rotting Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 139709,
},
[127463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Antiquator",
["npcID"] = 58928,
},
[413544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[391019] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[401258] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[395115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smogswog the Firebreather",
["npcID"] = 193120,
},
[15232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Keeper",
["npcID"] = 24762,
},
[360304] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181399,
},
[256959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[403309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expulsion Drone",
["npcID"] = 202592,
},
[16000] = {
["source"] = "Celebrian Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 130273,
},
[79854] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 45878,
},
[388976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[195528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Storm",
["npcID"] = 95920,
},
[41467] = {
["encounterName"] = "The Illidari Council",
["source"] = "Gathios the Shatterer",
["npcID"] = 22949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[207815] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[411503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[391026] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[409456] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[405361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[313213] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 156866,
},
[36604] = {
["source"] = "Verdant Emerald Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208750,
},
[372600] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[102381] = {
["encounterName"] = "Murozond",
["source"] = "Murozond",
["encounterID"] = 1271,
["event"] = "SPELL_CAST_START",
["npcID"] = 54432,
},
[127466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Antiquator",
["npcID"] = 58928,
},
[79856] = {
["source"] = "Ambermill Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 1914,
},
[405366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[302979] = {
["source"] = "The Scrap King",
["event"] = "SPELL_CAST_START",
["npcID"] = 151625,
},
[290694] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Spawn of Laminaria",
["npcID"] = 148633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[43516] = {
["source"] = "Dragonflayer Prisoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 24255,
},
[51963] = {
["encounterName"] = "Terros",
["source"] = "Ebon Gargoyle",
["npcID"] = 27829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[79857] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 45878,
},
[22272] = {
["isChanneled"] = true,
["source"] = "Ethereal Sorcerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18313,
},
[360320] = {
["source"] = "Chrysalis Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 181942,
},
[413562] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Lurking Tempest",
["npcID"] = 204337,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[421754] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Moltenbinder",
["npcID"] = 206477,
},
[407420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Runestone",
["npcID"] = 204001,
},
[311176] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[157652] = {
["source"] = "Auchenai Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 77694,
},
[11969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magistrate Burnside",
["npcID"] = 47790,
},
[79858] = {
["source"] = "Dalaran Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 2358,
},
[403326] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[376706] = {
["source"] = "Nokhud Stormcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[329608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runecarved Colossus",
["npcID"] = 155828,
},
[405375] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[329609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runecarved Colossus",
["npcID"] = 155828,
},
[266129] = {
["source"] = "Gahz'ragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 120850,
},
[268177] = {
["source"] = "Windspeaker Heldis",
["event"] = "SPELL_CAST_START",
["npcID"] = 136214,
},
[384899] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[111599] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[256970] = {
["encounterName"] = "Knight Captain Valyri",
["event"] = "SPELL_CAST_START",
["source"] = "Knight Captain Valyri",
["npcID"] = 127490,
},
[409473] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[372615] = {
["source"] = "Tamed Phoenix",
["event"] = "SPELL_CAST_START",
["npcID"] = 189247,
},
[200658] = {
["source"] = "Dreadsoul Ruiner",
["event"] = "SPELL_CAST_START",
["npcID"] = 95771,
},
[298897] = {
["encounterName"] = "Trixie & Naeno",
["source"] = "Trixie Tazer",
["encounterID"] = 2312,
["event"] = "SPELL_CAST_START",
["npcID"] = 150712,
},
[196563] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[111600] = {
["encounterName"] = "Raigonn",
["source"] = "Krik'thik Swarm Bringer",
["npcID"] = 56930,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[423811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Chardryn",
["npcID"] = 210912,
},
[409477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[113136] = {
["source"] = "Darkmaster Gandling",
["event"] = "SPELL_CAST_START",
["npcID"] = 59080,
},
[268184] = {
["source"] = "Windspeaker Heldis",
["event"] = "SPELL_CAST_START",
["npcID"] = 136214,
},
[391050] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[360334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Attendant",
["npcID"] = 183983,
},
[22273] = {
["isChanneled"] = true,
["source"] = "Ethereal Sorcerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18313,
},
[268187] = {
["source"] = "Windspeaker Heldis",
["event"] = "SPELL_CAST_START",
["npcID"] = 136214,
},
[163802] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 74790,
},
[395148] = {
["source"] = "Mikrin of the Raging Winds",
["event"] = "SPELL_CAST_START",
["npcID"] = 193173,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[83445] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["npcID"] = 44577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1052,
},
[201686] = {
["source"] = "Anguished Spectre",
["event"] = "SPELL_CAST_START",
["npcID"] = 108815,
},
[76790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Invader",
["npcID"] = 39616,
},
[417675] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[255952] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["npcID"] = 126832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[391055] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[423820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Chardryn",
["npcID"] = 210912,
},
[360340] = {
["source"] = "Accelerated Helicid",
["event"] = "SPELL_CAST_START",
["npcID"] = 178831,
},
[405391] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[59389] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23953,
},
[362390] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[266146] = {
["source"] = "Disciple of Zul",
["event"] = "SPELL_CAST_START",
["npcID"] = 139543,
},
[376725] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[170973] = {
["source"] = "Dew Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 81553,
},
[256979] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Eudora",
["npcID"] = 126848,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[264101] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Aqu'sirr",
["encounterID"] = 2130,
["event"] = "SPELL_CAST_START",
["npcID"] = 134056,
},
[409492] = {
["source"] = "Afflicted Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 204773,
},
[270246] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Pyremancer",
["npcID"] = 176576,
},
[413590] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[256981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frightened Brutosaur",
["npcID"] = 129668,
},
[33793] = {
["encounterName"] = "Vazruden the Herald",
["source"] = "Nazan",
["npcID"] = 17307,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1892,
},
[395161] = {
["source"] = "Treasure-Mad Trambladd",
["event"] = "SPELL_CAST_START",
["npcID"] = 193146,
},
[429973] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[183263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gormling Spitter",
["npcID"] = 155219,
},
[113141] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["event"] = "SPELL_CAST_START",
["npcID"] = 59080,
},
[364447] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Custodian",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 184522,
},
[417689] = {
["source"] = "Meantron Prototype",
["event"] = "SPELL_CAST_START",
["npcID"] = 206132,
},
[164834] = {
["source"] = "Everbloom Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81819,
},
[421785] = {
["isChanneled"] = true,
["source"] = "Watchful Gladehind",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[368544] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 184597,
},
[417691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[111606] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[11970] = {
["source"] = "Subjugated Firestarter",
["event"] = "SPELL_CAST_START",
["npcID"] = 46838,
},
[395167] = {
["event"] = "SPELL_CAST_START",
["source"] = "O'nank Shorescour",
["npcID"] = 193118,
},
[374691] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[368548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uther the Lightbringer",
["npcID"] = 185145,
},
[193505] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[382883] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187224,
},
[25602] = {
["source"] = "Maelgwyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 81995,
},
[268211] = {
["source"] = "Runecarver Sorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 134150,
},
[368551] = {
["source"] = "Sylvanas Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 184605,
},
[401316] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[315311] = {
["encounterName"] = "The Hivemind",
["source"] = "Aqir Drone",
["npcID"] = 157255,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[395174] = {
["source"] = "Gethdazr",
["event"] = "SPELL_CAST_START",
["npcID"] = 196165,
},
[268214] = {
["source"] = "Runecarver Sorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 134150,
},
[79868] = {
["source"] = "Relios the Relic Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 45734,
},
[417701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Peeved",
["npcID"] = 205428,
},
[274359] = {
["source"] = "Lord Stormsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 139737,
},
[391081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tserasor the Preserver",
["npcID"] = 190598,
},
[270264] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[395177] = {
["source"] = "Massive Magmashell",
["event"] = "SPELL_CAST_START",
["npcID"] = 193152,
},
[413607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[164841] = {
["encounterName"] = "Teron'gor",
["source"] = "Teron'gor",
["encounterID"] = 1714,
["event"] = "SPELL_CAST_START",
["npcID"] = 77734,
},
[288696] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[15234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Enchantress",
["npcID"] = 17961,
},
[61184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Huntress",
["npcID"] = 58070,
},
[203750] = {
["source"] = "Arcane Chronomaton",
["event"] = "SPELL_CAST_START",
["npcID"] = 111622,
},
[401325] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[386991] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 191395,
},
[111610] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[88061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[386992] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 192636,
},
[178154] = {
["encounterName"] = "Oshir",
["source"] = "Rylak Skyterror",
["encounterID"] = 1750,
["event"] = "SPELL_CAST_START",
["npcID"] = 89011,
},
[374706] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[395184] = {
["source"] = "Volcanakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200911,
},
[150510] = {
["source"] = "Razorfen Kraulshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 74550,
},
[151534] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Charlga Razorflank",
["encounterID"] = 1661,
["event"] = "SPELL_CAST_START",
["npcID"] = 4421,
},
[168940] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 77020,
},
[202728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadlord Mendacius",
["npcID"] = 99649,
},
[44547] = {
["source"] = "Sister of Torment",
["event"] = "SPELL_CAST_START",
["npcID"] = 24697,
},
[370615] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[83455] = {
["encounterName"] = "Siamat",
["source"] = "Minion of Siamat",
["npcID"] = 44704,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[266181] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 131864,
},
[69633] = {
["source"] = "Spectral Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 36666,
},
[79872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Iceheart",
["npcID"] = 48880,
},
[413621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Infiltrator",
["npcID"] = 206214,
},
[405431] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[168944] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 77020,
},
[391098] = {
["source"] = "Galzuda",
["event"] = "SPELL_CAST_START",
["npcID"] = 193330,
},
[405433] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[268234] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Bile Oozeling",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 136541,
},
[401338] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[354240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Aegis",
["npcID"] = 185028,
},
[393148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maneet",
["npcID"] = 188704,
},
[30851] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[374719] = {
["source"] = "Stonejaw Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 188128,
},
[387006] = {
["source"] = "Rotting Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 186361,
},
[389054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Forager",
["npcID"] = 196694,
},
[317383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilboar Warrior",
["npcID"] = 150237,
},
[401341] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[405437] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[199663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Councilor",
["npcID"] = 98370,
},
[401342] = {
["source"] = "Magmaclaw Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203934,
},
[65026] = {
["encounterName"] = "Mimiron",
["source"] = "Leviathan Mk II",
["npcID"] = 34071,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[57091] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["encounterID"] = 2011,
["event"] = "SPELL_CAST_START",
["npcID"] = 26723,
},
[147446] = {
["source"] = "Foreboding Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 73162,
},
[378818] = {
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[274383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vermin Trapper",
["npcID"] = 130404,
},
[12675] = {
["encounterName"] = "Warder Stilgiss",
["source"] = "Warder Stilgiss",
["npcID"] = 9041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 233,
},
[12739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Darkcaster",
["npcID"] = 30319,
},
[59395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Torturer",
["npcID"] = 200529,
},
[198641] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Kur'talos Ravencrest",
["npcID"] = 98965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[200689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Soulmaster",
["npcID"] = 102724,
},
[411585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jalgon Stoutburn",
["npcID"] = 204426,
},
[166902] = {
["source"] = "Blademaster Bralok",
["event"] = "SPELL_CAST_START",
["npcID"] = 76981,
},
[226287] = {
["source"] = "Vileshard Chunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 101438,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "Storm Drake",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 97788,
},
[214001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Lancer",
["npcID"] = 102095,
},
[151545] = {
["source"] = "Bloodmaul Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 75210,
},
[56580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deep Crawler",
["npcID"] = 30279,
},
[372683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Whelp",
["npcID"] = 187894,
},
[384970] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Hyena",
["npcID"] = 185691,
},
[378827] = {
["source"] = "Qalashi Plunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 192786,
},
[407496] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[376780] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[214003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Swordsman",
["npcID"] = 102094,
},
[15043] = {
["source"] = "Green Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 32324,
},
[405450] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Rock Snail",
["npcID"] = 203260,
},
[203765] = {
["source"] = "Gilnean Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 102875,
},
[417737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Shadowcaster",
["npcID"] = 207893,
},
[387021] = {
["source"] = "Agitated Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 192238,
},
[374735] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[417738] = {
["source"] = "Peeved",
["event"] = "SPELL_CAST_START",
["npcID"] = 205428,
},
[356306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Annihilator",
["npcID"] = 182214,
},
[391118] = {
["encounterName"] = "Azureblade",
["source"] = "Scalebane Lieutenant",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 191739,
},
[319447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Imperial Curator",
["npcID"] = 168111,
},
[395214] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[325591] = {
["source"] = "Gracefallen Tactician",
["event"] = "SPELL_CAST_START",
["npcID"] = 163392,
},
[152573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coldsnout Boar",
["npcID"] = 75416,
},
[56837] = {
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 26727,
},
[292828] = {
["source"] = "Etruvis the Vassal",
["event"] = "SPELL_CAST_START",
["npcID"] = 151041,
},
[147454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Jadefire",
["npcID"] = 72769,
},
[175099] = {
["source"] = "Dew Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 81553,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[395217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverwalker Tamopo",
["npcID"] = 193240,
},
[266209] = {
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 134284,
},
[366549] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 185154,
},
[401361] = {
["source"] = "Towering Deepstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 205124,
},
[173052] = {
["encounterName"] = "Xeri'tac",
["source"] = "Venom Sprayer",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 86547,
},
[401362] = {
["source"] = "Zaqali Heatbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 200452,
},
[154623] = {
["source"] = "Sargerei Spirit-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 77131,
},
[199674] = {
["source"] = "King Bjorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 97081,
},
[372696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[197627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brood Queen Tyranna",
["npcID"] = 93802,
},
[417748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Blade Lord",
["npcID"] = 207922,
},
[226296] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[260084] = {
["source"] = "Wandering Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131852,
},
[360412] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 180773,
},
[401368] = {
["source"] = "Deepstrider Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 203727,
},
[419798] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[417751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Blade Lord",
["npcID"] = 207922,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[401370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Owlbeast",
["npcID"] = 205316,
},
[366559] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 185154,
},
[30853] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[378847] = {
["source"] = "Qalashi Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192787,
},
[298985] = {
["source"] = "Blackfin Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 148475,
},
[69131] = {
["source"] = "Soulguard Animator",
["event"] = "SPELL_CAST_START",
["npcID"] = 36516,
},
[401373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Owlbeast",
["npcID"] = 205316,
},
[387039] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 187299,
},
[307177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Ritualist",
["npcID"] = 162716,
},
[39945] = {
["encounterName"] = "Shade of Akama",
["event"] = "SPELL_CAST_START",
["source"] = "Akama",
["npcID"] = 23191,
},
[421852] = {
["source"] = "Shoreline Gladehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 210283,
},
[391136] = {
["source"] = "Drakonid Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[384993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horned Filcher",
["npcID"] = 194702,
},
[378850] = {
["source"] = "Destabilized Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 181536,
},
[41481] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["npcID"] = 22950,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[151558] = {
["source"] = "Bloodmaul Ogre Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 75272,
},
[266225] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 131864,
},
[268273] = {
["source"] = "Tidesage Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 134338,
},
[417759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Amber Shaper",
["npcID"] = 207918,
},
[329706] = {
["source"] = "Mawsworn Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 153878,
},
[268274] = {
["encounterName"] = "Ring of Booty",
["source"] = "Booty Fanatic",
["npcID"] = 136539,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[79883] = {
["source"] = "Admiral Hatchet",
["event"] = "SPELL_CAST_START",
["npcID"] = 46055,
},
[427999] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200927,
},
[252923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[387045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ezrigeth",
["npcID"] = 187666,
},
[204802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Lurker",
["npcID"] = 105069,
},
[268278] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131545,
},
[401382] = {
["encounterName"] = "Eranog",
["source"] = "Past Self",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 185800,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["npcID"] = 214608,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[401383] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[387049] = {
["source"] = "Wild Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 194089,
},
[284662] = {
["encounterName"] = "King Rastakhan",
["source"] = "Prelate Za'lan",
["npcID"] = 146320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[376811] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[395241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Voltweaver",
["npcID"] = 198868,
},
[76813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Spiritmender",
["npcID"] = 41096,
},
[366573] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 185154,
},
[401385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Wormling",
["npcID"] = 205613,
},
[374765] = {
["source"] = "Ravenous Bloodbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 185350,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[423912] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[385005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalsworn Furbolg",
["npcID"] = 190738,
},
[372719] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[150540] = {
["source"] = "Razorfen Kraulshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 74550,
},
[15620] = {
["source"] = "Doomforge Dragoon",
["event"] = "SPELL_CAST_START",
["npcID"] = 8899,
},
[387054] = {
["source"] = "Cliffdrip Snapstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 189812,
},
[166923] = {
["source"] = "Champion Druna",
["event"] = "SPELL_CAST_START",
["npcID"] = 81603,
},
[409581] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[272382] = {
["source"] = "Ankylodon Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 123093,
},
[41483] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["npcID"] = 22950,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[407535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Destroyer",
["npcID"] = 203861,
},
[262145] = {
["source"] = "Taskmaster Burlok",
["event"] = "SPELL_CAST_START",
["npcID"] = 138793,
},
[76815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Spiritmender",
["npcID"] = 41096,
},
[192522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ash'golm",
["npcID"] = 96681,
},
[405491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Riches",
["npcID"] = 201573,
},
[207881] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[405492] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[425970] = {
["source"] = "Verdant Boughwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 213576,
},
[395254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Tempestmaker",
["npcID"] = 198878,
},
[274437] = {
["source"] = "Galecaller Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 139800,
},
[257028] = {
["encounterName"] = "Knight Captain Valyri",
["event"] = "SPELL_CAST_START",
["source"] = "Knight Captain Valyri",
["npcID"] = 127490,
},
[417780] = {
["source"] = "Mechanized Mekgineer Hologram",
["event"] = "SPELL_CAST_START",
["npcID"] = 207539,
},
[372730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[417781] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[150546] = {
["source"] = "Razorfen Stonechanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 74549,
},
[376827] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[407544] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[34829] = {
["source"] = "Rangari Jonaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 86663,
},
[387067] = {
["source"] = "Arcane Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 186740,
},
[88080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whipping Wind",
["npcID"] = 47238,
},
[428023] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[31623] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["npcID"] = 17826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1947,
},
[411644] = {
["source"] = "Time-Lost Tidehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 205365,
},
[165907] = {
["source"] = "Groog",
["event"] = "SPELL_CAST_START",
["npcID"] = 80167,
},
[360451] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["encounterID"] = 2542,
["event"] = "SPELL_CAST_START",
["npcID"] = 181395,
},
[130060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monk Trainee",
["npcID"] = 66101,
},
[41229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Blood Prophet",
["npcID"] = 23237,
},
[165908] = {
["source"] = "Borogahn",
["event"] = "SPELL_CAST_START",
["npcID"] = 81043,
},
[284686] = {
["encounterName"] = "King Rastakhan",
["source"] = "Siegebreaker Roka",
["npcID"] = 146322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[393217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Inferno",
["npcID"] = 189043,
},
[407552] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[307213] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[374789] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[258058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silt Crab",
["npcID"] = 127381,
},
[272402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cutwater Knife Juggler",
["npcID"] = 129599,
},
[153623] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[385029] = {
["source"] = "Fleshripper Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 186246,
},
[403459] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[372743] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[76820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Spiritmender",
["npcID"] = 41096,
},
[268309] = {
["source"] = "Deepsea Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 134417,
},
[164887] = {
["source"] = "Everbloom Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81820,
},
[191508] = {
["source"] = "Valarjar Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 101637,
},
[313362] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[191509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hill Ettin",
["npcID"] = 102886,
},
[319506] = {
["source"] = "Manifestation of Hate",
["event"] = "SPELL_CAST_START",
["npcID"] = 164232,
},
[395273] = {
["source"] = "Primal Stormsentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 196856,
},
[59148] = {
["source"] = "Hardened Steel Skycaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 28580,
},
[387083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Briarback",
["npcID"] = 187264,
},
[266266] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 131864,
},
[374797] = {
["source"] = "Divebeak Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 189373,
},
[385036] = {
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 190373,
},
[268315] = {
["source"] = "Abyss Dweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 134423,
},
[421898] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[268317] = {
["source"] = "Drowned Depthbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 134418,
},
[409612] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[151581] = {
["source"] = "Bloodmaul Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75426,
},
[376851] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[288798] = {
["source"] = "Tormented Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 146809,
},
[17290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Worshipper",
["npcID"] = 30111,
},
[387091] = {
["source"] = "Time-Lost Sunseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187239,
},
[268322] = {
["source"] = "Drowned Depthbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 134418,
},
[151583] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Charlga Razorflank",
["encounterID"] = 1661,
["event"] = "SPELL_CAST_START",
["npcID"] = 4421,
},
[428047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlann Timbercrush",
["npcID"] = 207554,
},
[395284] = {
["source"] = "Rugren",
["event"] = "SPELL_CAST_START",
["npcID"] = 201563,
},
[385046] = {
["source"] = "Skulking Gutstabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 186242,
},
[272420] = {
["source"] = "Crawg Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 128267,
},
[307232] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[9734] = {
["source"] = "Lord Walden",
["event"] = "SPELL_CAST_START",
["npcID"] = 45879,
},
[259092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Stormcaller",
["npcID"] = 126919,
},
[189469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Vengeance",
["npcID"] = 100364,
},
[200732] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[428054] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[397338] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[391195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bisquius",
["npcID"] = 197557,
},
[331811] = {
["source"] = "Lightbound Scorcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 165687,
},
[415769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[147492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Flayer",
["npcID"] = 80430,
},
[415770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[177185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brine Lasher",
["npcID"] = 86267,
},
[397341] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[391198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tserasor the Preserver",
["npcID"] = 190598,
},
[376865] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[415773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Interval",
["npcID"] = 206065,
},
[288813] = {
["source"] = "Harbinger Il'koxik",
["event"] = "SPELL_CAST_START",
["npcID"] = 160810,
},
[395297] = {
["source"] = "Snee",
["event"] = "SPELL_CAST_START",
["npcID"] = 186203,
},
[171044] = {
["source"] = "Siege Cannon",
["event"] = "SPELL_CAST_START",
["npcID"] = 85587,
},
[165925] = {
["source"] = "Borogahn",
["event"] = "SPELL_CAST_START",
["npcID"] = 81043,
},
[395299] = {
["source"] = "Spellforged Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194402,
},
[374823] = {
["source"] = "Squallbringer Cyraz",
["event"] = "SPELL_CAST_START",
["npcID"] = 190370,
},
[409635] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[101401] = {
["encounterName"] = "Echo of Sylvanas",
["source"] = "Echo of Sylvanas",
["encounterID"] = 1882,
["event"] = "SPELL_CAST_START",
["npcID"] = 54123,
},
[366633] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 185155,
},
[385063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[389159] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[207906] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[385065] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[3650] = {
["source"] = "Mudsnout Gnoll",
["event"] = "SPELL_CAST_START",
["npcID"] = 2372,
},
[288822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rastari Marksman",
["npcID"] = 149591,
},
[153642] = {
["source"] = "Black Iron Warcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 76151,
},
[59152] = {
["source"] = "Stormforged Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 28835,
},
[385068] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 197145,
},
[290872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automated Flame Turret",
["npcID"] = 149879,
},
[268347] = {
["encounterName"] = "Lord Stormsong",
["source"] = "Lord Stormsong",
["encounterID"] = 2132,
["event"] = "SPELL_CAST_START",
["npcID"] = 134060,
},
[147500] = {
["source"] = "Eroded Cliffdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 72809,
},
[268348] = {
["source"] = "Colossal Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 136353,
},
[407596] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[303161] = {
["source"] = "Farscale Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 201301,
},
[214053] = {
["source"] = "Crimson Rockshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 113508,
},
[397358] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[323640] = {
["source"] = "Bloodtusk Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 165473,
},
[297020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Binder Baritas",
["npcID"] = 185015,
},
[393265] = {
["source"] = "Tombcaller Arban",
["event"] = "SPELL_CAST_START",
["npcID"] = 190047,
},
[387122] = {
["source"] = "Arcane Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 186740,
},
[292926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord of Torment",
["npcID"] = 151127,
},
[385075] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[156718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Corpse Spider",
["npcID"] = 76104,
},
[79903] = {
["source"] = "Turkina",
["event"] = "SPELL_CAST_START",
["npcID"] = 81996,
},
[52498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Necromancer",
["npcID"] = 28200,
},
[303167] = {
["source"] = "Zanj'ir Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 153697,
},
[387125] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[315454] = {
["source"] = "Pelagos",
["event"] = "SPELL_CAST_START",
["npcID"] = 184003,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[417843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Listless Nae'dra",
["npcID"] = 211164,
},
[387127] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[337982] = {
["source"] = "Xantuth the Blighted",
["event"] = "SPELL_CAST_START",
["npcID"] = 162872,
},
[372794] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[317506] = {
["source"] = "Depthsborn Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 154329,
},
[200748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Weaver",
["npcID"] = 97706,
},
[59154] = {
["source"] = "Stormforged Giant",
["event"] = "SPELL_CAST_START",
["npcID"] = 28920,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[272457] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[389179] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[175152] = {
["source"] = "Loup",
["event"] = "SPELL_CAST_START",
["npcID"] = 82209,
},
[106526] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[274507] = {
["encounterName"] = "Council o' Captains",
["source"] = "Bilge Rat Swabby",
["npcID"] = 129526,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[199726] = {
["source"] = "King Ranulf",
["event"] = "SPELL_CAST_START",
["npcID"] = 97083,
},
[226347] = {
["source"] = "Stoneclaw Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 91332,
},
[372800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187125,
},
[391230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bisquius",
["npcID"] = 197557,
},
[272461] = {
["source"] = "Reanimated Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 122684,
},
[32011] = {
["source"] = "Sulfurious",
["event"] = "SPELL_CAST_START",
["npcID"] = 80725,
},
[183345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrodark Defiler",
["npcID"] = 104888,
},
[319560] = {
["source"] = "Emaciated Etherwyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 172703,
},
[260136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mala'kili",
["npcID"] = 128935,
},
[196656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malace Shade",
["npcID"] = 97090,
},
[193585] = {
["source"] = "Rockbound Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 102232,
},
[292942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chainbound Construct",
["npcID"] = 181800,
},
[346186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Deadeye",
["npcID"] = 167323,
},
[192563] = {
["source"] = "Valarjar Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 97197,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[272469] = {
["source"] = "Abyssal Reach",
["event"] = "SPELL_CAST_START",
["npcID"] = 138538,
},
[417860] = {
["source"] = "Shoreline Gladehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 210283,
},
[227376] = {
["source"] = "Crown Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 114275,
},
[268375] = {
["source"] = "Abyssal Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 134514,
},
[311378] = {
["source"] = "Deresh of the Nothingness",
["event"] = "SPELL_CAST_START",
["npcID"] = 159768,
},
[387145] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[374859] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[75813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[370764] = {
["source"] = "Crystal Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[188470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Podling",
["npcID"] = 210210,
},
[173112] = {
["source"] = "Grom'kar Deckhand",
["event"] = "SPELL_CAST_START",
["npcID"] = 83762,
},
[397386] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[166969] = {
["source"] = "Olin Umberhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 79315,
},
[401482] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[370766] = {
["source"] = "Crystal Thrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 196117,
},
[311382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deresh of the Nothingness",
["npcID"] = 159768,
},
[101411] = {
["encounterName"] = "Echo of Sylvanas",
["source"] = "Echo of Sylvanas",
["encounterID"] = 1882,
["event"] = "SPELL_CAST_START",
["npcID"] = 54123,
},
[387151] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[391247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[393295] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[393296] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frostwrought Dominator",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198308,
},
[393298] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[173116] = {
["source"] = "Beremus the Overgrowth",
["event"] = "SPELL_CAST_START",
["npcID"] = 80700,
},
[397394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Thunderfist",
["npcID"] = 193373,
},
[366678] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[385108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Podling",
["npcID"] = 187317,
},
[152639] = {
["source"] = "Thunderlord Talon",
["event"] = "SPELL_CAST_START",
["npcID"] = 72232,
},
[411730] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Molten Hound",
["npcID"] = 205611,
},
[383062] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[9672] = {
["source"] = "Blackscale Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 45985,
},
[393302] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[198715] = {
["source"] = "Val'kyr Battlemaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 100876,
},
[184381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Synod",
["npcID"] = 159190,
},
[268391] = {
["source"] = "Abyssal Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 134514,
},
[393305] = {
["source"] = "Primalist Earthwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193709,
},
[193597] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[372828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[407640] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[393306] = {
["source"] = "Primalist Earthwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193709,
},
[346208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Deadeye",
["npcID"] = 167323,
},
[157762] = {
["source"] = "Auchenai Soulpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 77696,
},
[393307] = {
["source"] = "Primalist Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 193558,
},
[22414] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 78553,
},
[393308] = {
["source"] = "Primalist Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 193558,
},
[411738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rashok",
["npcID"] = 201320,
},
[389213] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[166978] = {
["source"] = "Exarch Maladaar",
["event"] = "SPELL_CAST_START",
["npcID"] = 79537,
},
[401500] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[125988] = {
["source"] = "Quid",
["event"] = "SPELL_CAST_START",
["npcID"] = 58771,
},
[366689] = {
["source"] = "Ebonsteel Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 185268,
},
[411740] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rashok",
["npcID"] = 201320,
},
[241722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ok'rok Icetouch",
["npcID"] = 121200,
},
[383073] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[123429] = {
["source"] = "Broketooth Sneaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 60195,
},
[323689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Rotted Flesh",
["npcID"] = 158642,
},
[317546] = {
["source"] = "King Phaoris",
["event"] = "SPELL_CAST_START",
["npcID"] = 161112,
},
[200768] = {
["source"] = "Crazed Razorbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 95766,
},
[317547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grunk",
["npcID"] = 153581,
},
[393314] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[374885] = {
["source"] = "Astral Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 189555,
},
[333931] = {
["source"] = "Feral Helhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 171245,
},
[376934] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[372839] = {
["source"] = "Nokhud Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 191227,
},
[301168] = {
["isChanneled"] = true,
["source"] = "Muck Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 145333,
},
[411747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Elementium",
["npcID"] = 205628,
},
[270453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geolord Grek'og",
["npcID"] = 151091,
},
[428130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlann Timbercrush",
["npcID"] = 207554,
},
[198723] = {
["source"] = "Rotheart Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 99358,
},
[64535] = {
["encounterName"] = "Mimiron",
["source"] = "Aerial Command Unit",
["npcID"] = 33670,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[417893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Walking Nightmare",
["npcID"] = 206627,
},
[197700] = {
["source"] = "Temple Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 100450,
},
[364652] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182169,
},
[200772] = {
["source"] = "High Explorer Dellorah",
["event"] = "SPELL_CAST_START",
["npcID"] = 161938,
},
[374892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plainswalker Calf",
["npcID"] = 190908,
},
[409704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[403561] = {
["source"] = "Fael'lin",
["event"] = "SPELL_CAST_START",
["npcID"] = 198916,
},
[87084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skitterweb Matriarch",
["npcID"] = 44906,
},
[383084] = {
["source"] = "Water Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 190066,
},
[286840] = {
["source"] = "Azerite Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 152098,
},
[411754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[415850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roiling Deathstalker",
["npcID"] = 211242,
},
[376943] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[411755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[413803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Mooncaller",
["npcID"] = 205851,
},
[317559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeak",
["npcID"] = 153964,
},
[360562] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[403565] = {
["source"] = "Fael'lin",
["event"] = "SPELL_CAST_START",
["npcID"] = 198916,
},
[413804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Mender",
["npcID"] = 205852,
},
[403566] = {
["source"] = "Flare Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202683,
},
[413805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Tideshifter",
["npcID"] = 204516,
},
[374898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grasslands Musken",
["npcID"] = 195172,
},
[385137] = {
["source"] = "Basrikron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193535,
},
[403567] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[372851] = {
["encounterName"] = "Melidrussa Chillworn",
["event"] = "SPELL_CAST_START",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
},
[395377] = {
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_START",
["npcID"] = 192769,
},
[317563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vil'raxx",
["npcID"] = 153326,
},
[147535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gu'chi the Swarmbringer",
["npcID"] = 72909,
},
[395378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[413808] = {
["source"] = "Cenrrrn Cirrgl Tideshifter",
["event"] = "SPELL_CAST_START",
["npcID"] = 204516,
},
[129577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korjan Slavemaster",
["npcID"] = 65638,
},
[260162] = {
["source"] = "Jambani Spirit Twister",
["event"] = "SPELL_CAST_START",
["npcID"] = 129513,
},
[385141] = {
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 190373,
},
[403571] = {
["source"] = "Fael'lin",
["event"] = "SPELL_CAST_START",
["npcID"] = 198916,
},
[9481] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 450,
["event"] = "SPELL_CAST_START",
["npcID"] = 209254,
},
[362617] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[153680] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[387191] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[257092] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["npcID"] = 127479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2101,
},
[403574] = {
["source"] = "Fael'lin",
["event"] = "SPELL_CAST_START",
["npcID"] = 198916,
},
[397431] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[385145] = {
["source"] = "Time-Lost Raptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 187256,
},
[173135] = {
["source"] = "Ogron Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 83578,
},
[256069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Snapclaw",
["npcID"] = 127526,
},
[366716] = {
["source"] = "Astral Particle",
["event"] = "SPELL_CAST_START",
["npcID"] = 185274,
},
[403576] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[68658] = {
["source"] = "Netgun Gnome",
["event"] = "SPELL_CAST_START",
["npcID"] = 36385,
},
[29583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Guest",
["npcID"] = 16409,
},
[409721] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 202610,
},
[372862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Churning Splash",
["npcID"] = 187318,
},
[244808] = {
["source"] = "Sandclaw Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 145337,
},
[389245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Ruinstalker",
["npcID"] = 199379,
},
[150612] = {
["source"] = "Nagrand Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 81902,
},
[200782] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fiendish Creeper",
["npcID"] = 99759,
},
[413819] = {
["isChanneled"] = true,
["source"] = "Stormforged Tactician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206059,
},
[409724] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[173138] = {
["source"] = "Beremus the Overgrowth",
["event"] = "SPELL_CAST_START",
["npcID"] = 80700,
},
[389247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Avenger",
["npcID"] = 187187,
},
[144470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[323720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[41245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Suffering Soul Fragment",
["npcID"] = 23399,
},
[200784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[125997] = {
["source"] = "Battleworn Paratrooper",
["event"] = "SPELL_CAST_START",
["npcID"] = 63764,
},
[317579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Dominator",
["npcID"] = 162164,
},
[270481] = {
["source"] = "Demonic Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 135002,
},
[389251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morlash",
["npcID"] = 201549,
},
[319628] = {
["source"] = "Larion Sire",
["event"] = "SPELL_CAST_START",
["npcID"] = 157761,
},
[393348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[387205] = {
["source"] = "Tyrhold Gryphon",
["event"] = "SPELL_CAST_START",
["npcID"] = 198417,
},
[346251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghastly Willbreaker",
["npcID"] = 178490,
},
[299153] = {
["encounterName"] = "Trixie & Naeno",
["source"] = "Trixie Tazer",
["encounterID"] = 2312,
["event"] = "SPELL_CAST_START",
["npcID"] = 150712,
},
[307345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hovok",
["npcID"] = 153241,
},
[87603] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bolgaff",
["npcID"] = 47003,
},
[56860] = {
["source"] = "Mage Hunter Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 26728,
},
[147546] = {
["source"] = "Golganarr",
["event"] = "SPELL_CAST_START",
["npcID"] = 72970,
},
[268440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 126918,
},
[417926] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[389258] = {
["source"] = "Piskato",
["event"] = "SPELL_CAST_START",
["npcID"] = 195973,
},
[403593] = {
["source"] = "Magma Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[405641] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[360591] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Necrotic Ritualist",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 182045,
},
[15241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bleeding Hollow Darkcaster",
["npcID"] = 17269,
},
[391308] = {
["source"] = "Boolk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191450,
},
[106546] = {
["source"] = "Bloated Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59518,
},
[15497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewalker Slave",
["npcID"] = 17963,
},
[379023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hillside Forager",
["npcID"] = 191240,
},
[422026] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[325782] = {
["source"] = "Darkwarren Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 164038,
},
[422027] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Spirit of the Kaldorei",
["npcID"] = 207800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[258128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Thug",
["npcID"] = 130025,
},
[106547] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[385170] = {
["source"] = "Wind Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 191645,
},
[260177] = {
["source"] = "Jambani Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 134156,
},
[317595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watcher Aum-ka",
["npcID"] = 154619,
},
[409744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[403601] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[389267] = {
["source"] = "Clearwater Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 192678,
},
[409745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[389268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187135,
},
[417937] = {
["source"] = "Rotted Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207808,
},
[389269] = {
["source"] = "Expedition Guarantor",
["event"] = "SPELL_CAST_START",
["npcID"] = 187061,
},
[317598] = {
["source"] = "Ishak of the Four Winds",
["event"] = "SPELL_CAST_START",
["npcID"] = 157134,
},
[262309] = {
["source"] = "Thalassian Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 145113,
},
[389270] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187123,
},
[325790] = {
["source"] = "Bitter Memory",
["event"] = "SPELL_CAST_START",
["npcID"] = 158629,
},
[389271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[407701] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pendule",
["npcID"] = 204030,
},
[379033] = {
["source"] = "Feral Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 193545,
},
[417941] = {
["source"] = "Rotted Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207808,
},
[411798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oozing Sludge",
["npcID"] = 205644,
},
[389273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmeater",
["npcID"] = 186612,
},
[317602] = {
["source"] = "Golden Lotus Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 162836,
},
[389274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[270505] = {
["source"] = "Fallen Heartpiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 158092,
},
[165985] = {
["source"] = "Ogron Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 81240,
},
[424087] = {
["source"] = "Zaqali Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207089,
},
[417944] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[11082] = {
["encounterName"] = "Electrocutioner 6000",
["source"] = "Electrocutioner 6000",
["encounterID"] = 380,
["event"] = "SPELL_CAST_START",
["npcID"] = 6235,
},
[385181] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[198750] = {
["encounterName"] = "Odyn",
["source"] = "Stormforged Obliterator",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 102019,
},
[409756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[409757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[387232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Preserver",
["npcID"] = 209202,
},
[389280] = {
["source"] = "Shiverweb Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 185814,
},
[157797] = {
["source"] = "Sargerei Arbiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 77080,
},
[167012] = {
["source"] = "Saberon Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 88813,
},
[193633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[59167] = {
["source"] = "Stormfury Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 28826,
},
[270513] = {
["source"] = "Infused Bedrock",
["event"] = "SPELL_CAST_START",
["npcID"] = 137906,
},
[164965] = {
["source"] = "Everbloom Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81820,
},
[376997] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[411809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pahi'rys",
["npcID"] = 205540,
},
[366759] = {
["source"] = "Illicit Collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 183498,
},
[270515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azerite-Infused Elemental",
["npcID"] = 137905,
},
[176229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vrok the Ancient",
["npcID"] = 87356,
},
[411811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Slime",
["npcID"] = 205651,
},
[405668] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Sundered Destroyer",
["npcID"] = 201753,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[383143] = {
["source"] = "Brackenhide Putrifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 192057,
},
[417955] = {
["isChanneled"] = true,
["source"] = "Wild Sproutling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205304,
},
[413860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chromie",
["npcID"] = 205707,
},
[79932] = {
["source"] = "Nevo",
["event"] = "SPELL_CAST_START",
["npcID"] = 81999,
},
[147562] = {
["source"] = "Ashleaf Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 72877,
},
[329904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Advisor",
["npcID"] = 157118,
},
[422053] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Lasher",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 210231,
},
[168040] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[329905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Advisor",
["npcID"] = 157118,
},
[377004] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[403625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[405673] = {
["source"] = "Overflowing Magma",
["event"] = "SPELL_CAST_START",
["npcID"] = 203277,
},
[168041] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[15242] = {
["source"] = "Hellfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 17477,
},
[329908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lithic Watcher",
["npcID"] = 157017,
},
[405675] = {
["source"] = "Volcanakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200911,
},
[192617] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[59169] = {
["source"] = "Storming Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 28547,
},
[270529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mareen Sherwood",
["npcID"] = 137551,
},
[164973] = {
["source"] = "Everbloom Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81985,
},
[299198] = {
["source"] = "Aerial Enforcer XZ-9",
["event"] = "SPELL_CAST_START",
["npcID"] = 154700,
},
[226406] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113537,
},
[52770] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["encounterID"] = 1984,
["event"] = "SPELL_CAST_START",
["npcID"] = 28546,
},
[244836] = {
["source"] = "Phantom Nightsaber",
["event"] = "SPELL_CAST_START",
["npcID"] = 154624,
},
[270531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thorn Sutton",
["npcID"] = 137548,
},
[256099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Ma'da Ateena",
["npcID"] = 121504,
},
[191595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Infester",
["npcID"] = 96587,
},
[303296] = {
["source"] = "Zanj'ir Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 155618,
},
[210025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightborne Eradicator",
["npcID"] = 106049,
},
[413875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apiazhus",
["npcID"] = 200981,
},
[9739] = {
["source"] = "Plainsmender Darragh",
["event"] = "SPELL_CAST_START",
["npcID"] = 82013,
},
[264390] = {
["source"] = "Runic Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 131685,
},
[374969] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[262343] = {
["source"] = "Reckless Cutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 121577,
},
[303299] = {
["source"] = "Tidemistress Ethendriss",
["event"] = "SPELL_CAST_START",
["npcID"] = 153934,
},
[256101] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[207979] = {
["source"] = "Jazshariu",
["event"] = "SPELL_CAST_START",
["npcID"] = 104273,
},
[192621] = {
["encounterName"] = "Ash'Golm",
["source"] = "Ash'Golm",
["npcID"] = 95886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1816,
},
[274633] = {
["source"] = "Ironhull Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 139799,
},
[207980] = {
["source"] = "Baalgar the Watchful",
["event"] = "SPELL_CAST_START",
["npcID"] = 104274,
},
[258150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Seaspeaker",
["npcID"] = 130026,
},
[201837] = {
["source"] = "Taintheart Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 99366,
},
[383165] = {
["source"] = "Brackenhide Putrifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 192057,
},
[387261] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[405691] = {
["source"] = "Volcanakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200911,
},
[297161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbound Ravager",
["npcID"] = 153065,
},
[407740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurantia",
["npcID"] = 203047,
},
[411837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Fire",
["npcID"] = 205971,
},
[360644] = {
["source"] = "Adrift Core",
["event"] = "SPELL_CAST_START",
["npcID"] = 184660,
},
[197744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 96503,
},
[307403] = {
["encounterName"] = "Vexiona",
["source"] = "Void Ascendant",
["npcID"] = 157467,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[12491] = {
["encounterName"] = "Witch Doctor Zum'rah",
["source"] = "Witch Doctor Zum'rah",
["encounterID"] = 597,
["event"] = "SPELL_CAST_START",
["npcID"] = 7271,
},
[258153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Seaspeaker",
["npcID"] = 130026,
},
[329929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonewing Ravager",
["npcID"] = 157083,
},
[405696] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[12747] = {
["source"] = "Verdant Emerald Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208750,
},
[163957] = {
["source"] = "Fungus Covered Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 80721,
},
[329930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonewing Ravager",
["npcID"] = 157083,
},
[256106] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["npcID"] = 126832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[377029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Scythid Queen",
["npcID"] = 184853,
},
[244844] = {
["source"] = "Brinescale Wavecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 131305,
},
[13323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Theurgist",
["npcID"] = 18315,
},
[194675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 98963,
},
[377033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[264407] = {
["source"] = "Faceless Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 131821,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[150650] = {
["source"] = "Kraulshaper Tukaar",
["event"] = "SPELL_CAST_START",
["npcID"] = 74900,
},
[311508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sanguimar",
["npcID"] = 159767,
},
[397514] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[393419] = {
["source"] = "Penumbrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 189289,
},
[303319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wekemara",
["npcID"] = 152671,
},
[387277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Revenant",
["npcID"] = 195917,
},
[176249] = {
["source"] = "Woodfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 83871,
},
[422090] = {
["source"] = "Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 54983,
},
[55077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savage Worg",
["npcID"] = 29735,
},
[305369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbound Honor Guard",
["npcID"] = 156406,
},
[178298] = {
["source"] = "Grom'kar Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 83763,
},
[424140] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[106563] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[171132] = {
["source"] = "Tailthrasher Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 85718,
},
[272609] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[224374] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 112668,
},
[418000] = {
["source"] = "Fel-Corrupted Kaldorei",
["event"] = "SPELL_CAST_START",
["npcID"] = 206146,
},
[194682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 98963,
},
[391380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Sorcerer",
["npcID"] = 201152,
},
[163966] = {
["isChanneled"] = true,
["source"] = "Grimrail Technician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81236,
},
[224375] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["npcID"] = 112668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[393429] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Stormwrought Despoiler",
["npcID"] = 198326,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[193659] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[235638] = {
["source"] = "Roottender Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 209280,
},
[171134] = {
["source"] = "Tailthrasher Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 85718,
},
[393430] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[200827] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Soul Fragment",
["npcID"] = 96279,
},
[305378] = {
["source"] = "Voidbound Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 156406,
},
[393432] = {
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 190340,
},
[411862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animation Fluid",
["npcID"] = 203939,
},
[391385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[303332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rijz'x the Devourer",
["npcID"] = 154490,
},
[387290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giant Lasher",
["npcID"] = 194588,
},
[393434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Supplyhand",
["npcID"] = 193790,
},
[35369] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["npcID"] = 21362,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[199805] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 96574,
},
[260214] = {
["source"] = "Mindslaved Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 130219,
},
[418009] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[83017] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 81749,
},
[272620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cutwater Striker",
["npcID"] = 131112,
},
[366818] = {
["source"] = "Kelmortos",
["event"] = "SPELL_CAST_START",
["npcID"] = 185275,
},
[393439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Mercenary",
["npcID"] = 193791,
},
[299243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sun Prophet Tenhamen",
["npcID"] = 154727,
},
[106055] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[387297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Runebinder",
["npcID"] = 186354,
},
[375011] = {
["source"] = "Seismic Force",
["event"] = "SPELL_CAST_START",
["npcID"] = 192745,
},
[368868] = {
["source"] = "Guardian Automa",
["event"] = "SPELL_CAST_START",
["npcID"] = 184738,
},
[395489] = {
["source"] = "Karantun",
["event"] = "SPELL_CAST_START",
["npcID"] = 193647,
},
[102472] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[418016] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[387300] = {
["source"] = "Feasting Wyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 192739,
},
[366823] = {
["source"] = "Kelmortos",
["event"] = "SPELL_CAST_START",
["npcID"] = 185275,
},
[201858] = {
["source"] = "Taintheart Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 100539,
},
[162951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Impaler",
["npcID"] = 154367,
},
[13900] = {
["encounterName"] = "Lord Incendius",
["source"] = "Lord Incendius",
["encounterID"] = 232,
["event"] = "SPELL_CAST_START",
["npcID"] = 9017,
},
[418020] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[193668] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[372971] = {
["source"] = "Qalashi Blacksmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[385258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coastal Eel",
["npcID"] = 198782,
},
[401642] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[428263] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[114249] = {
["source"] = "Broketooth Tosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 59416,
},
[418025] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[83021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacksmith Verringtan",
["npcID"] = 47792,
},
[393453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Defender",
["npcID"] = 199941,
},
[395501] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[358642] = {
["source"] = "Violetsail Cutthroat",
["event"] = "SPELL_CAST_START",
["npcID"] = 179606,
},
[393454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battlehorn Pyrhus",
["npcID"] = 190986,
},
[329975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjutant Felipos",
["npcID"] = 185103,
},
[389360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandana the Tempest",
["npcID"] = 193176,
},
[407790] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[358645] = {
["source"] = "Violetsail Swiftshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 179736,
},
[42027] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Spiritbinder",
["npcID"] = 23524,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[418031] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[307453] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["npcID"] = 157354,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[393459] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[389364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandana the Tempest",
["npcID"] = 193176,
},
[424176] = {
["source"] = "Ancient Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 210637,
},
[311550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jesh'ra",
["npcID"] = 159764,
},
[403699] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[311551] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["npcID"] = 156575,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[9613] = {
["encounterName"] = "Nekrum Gutchewer",
["source"] = "Sandfury Acolyte",
["encounterID"] = 598,
["event"] = "SPELL_CAST_START",
["npcID"] = 8876,
},
[407796] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[163983] = {
["source"] = "Khargax the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81537,
},
[151697] = {
["source"] = "Bloodmaul Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75426,
},
[284933] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["npcID"] = 145616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[297220] = {
["source"] = "Voidbound Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 153097,
},
[33325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Necromancer",
["npcID"] = 18702,
},
[258181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 130400,
},
[85584] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 45878,
},
[11085] = {
["encounterName"] = "Electrocutioner 6000",
["source"] = "Electrocutioner 6000",
["encounterID"] = 380,
["event"] = "SPELL_CAST_START",
["npcID"] = 6235,
},
[30615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bleeding Hollow Scryer",
["npcID"] = 17478,
},
[385277] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[379134] = {
["source"] = "Magmasworn Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190210,
},
[168082] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[383231] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[175250] = {
["source"] = "Beatface",
["event"] = "SPELL_CAST_START",
["npcID"] = 81264,
},
[171155] = {
["source"] = "Skull Thrash",
["event"] = "SPELL_CAST_START",
["npcID"] = 85733,
},
[274703] = {
["source"] = "Drowned Depthbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 134418,
},
[391425] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frostwrought Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198308,
},
[418046] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[411903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[59179] = {
["source"] = "Titanium Thunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 28965,
},
[418047] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[297230] = {
["source"] = "Fathom Ray",
["event"] = "SPELL_CAST_START",
["npcID"] = 145967,
},
[256138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Honor Guard",
["npcID"] = 127799,
},
[352520] = {
["encounterName"] = "The Jailer",
["source"] = "Kevin's Oozeling",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 178601,
},
[193682] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[383237] = {
["source"] = "Provoking Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 188697,
},
[418049] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[411906] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[418051] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[95826] = {
["source"] = "Orgrimmar Wind Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 51346,
},
[185493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Archivist",
["npcID"] = 157016,
},
[171159] = {
["source"] = "Tailthrasher Vinebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 85725,
},
[411910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[411912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[407817] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[418056] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[313621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Falconer Amenophis",
["npcID"] = 158491,
},
[15245] = {
["encounterName"] = "Witch Doctor Zum'rah",
["source"] = "Witch Doctor Zum'rah",
["encounterID"] = 597,
["event"] = "SPELL_CAST_START",
["npcID"] = 7271,
},
[7655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thule Ravenclaw",
["npcID"] = 47023,
},
[311574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jesh'ra",
["npcID"] = 159764,
},
[375056] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[311576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jesh'ra",
["npcID"] = 159764,
},
[387343] = {
["source"] = "Bouldron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193644,
},
[366866] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[377105] = {
["source"] = "Vault Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 190510,
},
[375058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grasslands Stomper",
["npcID"] = 195219,
},
[156829] = {
["source"] = "Gul'kosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 78437,
},
[8398] = {
["source"] = "Hakkari Frostwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 5291,
},
[168092] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[272672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Ma'da Ateena",
["npcID"] = 121504,
},
[366869] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[169117] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 77020,
},
[403731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[411923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[171166] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charl Doomwing",
["npcID"] = 81548,
},
[319775] = {
["source"] = "Swiftwing Larion",
["event"] = "SPELL_CAST_START",
["npcID"] = 160569,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[375065] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[405784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Boarder",
["npcID"] = 203307,
},
[59182] = {
["source"] = "Unbound Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 28584,
},
[35377] = {
["source"] = "Subjugated Firestarter",
["event"] = "SPELL_CAST_START",
["npcID"] = 46838,
},
[172193] = {
["source"] = "Jandvik Bonepiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 100948,
},
[22938] = {
["source"] = "Arcane Remnant",
["event"] = "SPELL_CAST_START",
["npcID"] = 45728,
},
[385310] = {
["source"] = "Primalist Shockcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[403740] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[373024] = {
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186220,
},
[403741] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[409885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201578,
},
[422172] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[171171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charl Doomwing",
["npcID"] = 81548,
},
[385313] = {
["source"] = "Primalist Shockcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[373027] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[176291] = {
["source"] = "Tarlna Thorncaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 83826,
},
[59183] = {
["source"] = "Unbound Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 28584,
},
[176292] = {
["source"] = "Tarlna Infested",
["event"] = "SPELL_CAST_START",
["npcID"] = 83824,
},
[389412] = {
["source"] = "Nezascar the Sightless",
["event"] = "SPELL_CAST_START",
["npcID"] = 196535,
},
[418081] = {
["source"] = "Felhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 206090,
},
[375079] = {
["source"] = "Squallbringer Cyraz",
["event"] = "SPELL_CAST_START",
["npcID"] = 190370,
},
[418082] = {
["source"] = "Felhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 206090,
},
[14030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Warden",
["npcID"] = 8890,
},
[393511] = {
["source"] = "Cauldronbearer Blakor",
["event"] = "SPELL_CAST_START",
["npcID"] = 186783,
},
[373034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Mudrunner",
["npcID"] = 186690,
},
[198820] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[399656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Darkness",
["npcID"] = 202866,
},
[313652] = {
["encounterName"] = "The Hivemind",
["source"] = "Ka'zir",
["npcID"] = 157253,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[168105] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[169129] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Backdraft",
["encounterID"] = 1754,
["event"] = "SPELL_CAST_START",
["npcID"] = 84464,
},
[162986] = {
["source"] = "Scavenging Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 83448,
},
[215204] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Vigilant Duskwatch",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104918,
},
[391470] = {
["source"] = "Clove",
["event"] = "SPELL_CAST_START",
["npcID"] = 194457,
},
[264510] = {
["source"] = "Crazed Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 131849,
},
[389423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thieving Conjurer",
["npcID"] = 196388,
},
[183465] = {
["source"] = "Tarspitter Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91001,
},
[395567] = {
["source"] = "Gravlion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193654,
},
[393520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ceeqa the Peacetaker",
["npcID"] = 188708,
},
[399664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Darkness",
["npcID"] = 202866,
},
[33844] = {
["source"] = "Kengtus Pranch the Patient",
["event"] = "SPELL_CAST_START",
["npcID"] = 82012,
},
[377140] = {
["source"] = "River Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 191618,
},
[411952] = {
["source"] = "Infinite Timebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205337,
},
[399666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[35892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Annihilator",
["npcID"] = 18856,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[375094] = {
["source"] = "Swiftfoot Tallstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 192641,
},
[188587] = {
["source"] = "Understone Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102253,
},
[411954] = {
["isChanneled"] = true,
["source"] = "Infinite Timeslicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[274755] = {
["source"] = "Seer Drannix",
["event"] = "SPELL_CAST_START",
["npcID"] = 146443,
},
[424241] = {
["source"] = "Amirdrassil Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207769,
},
[176301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Waterspeaker",
["npcID"] = 88261,
},
[160943] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Grom'kar Gunner",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 77483,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[389431] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[150705] = {
["source"] = "Grom'kar Siegesmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 80552,
},
[393527] = {
["source"] = "Cracktooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187528,
},
[411958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iridikron's Creation",
["npcID"] = 205691,
},
[389433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qiraji Prophet",
["npcID"] = 195641,
},
[150706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Bonerender",
["npcID"] = 96535,
},
[385339] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[389435] = {
["source"] = "Darktooth Spirit-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195267,
},
[360767] = {
["source"] = "Lured Mite",
["event"] = "SPELL_CAST_START",
["npcID"] = 181879,
},
[387388] = {
["source"] = "Worldbreaker Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 185595,
},
[260262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Effusion",
["npcID"] = 130139,
},
[403771] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[414010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goblin Shredder",
["npcID"] = 200964,
},
[217260] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[403772] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[405821] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[399678] = {
["source"] = "Rampant Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 203698,
},
[193712] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[340294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbleblood",
["npcID"] = 162727,
},
[317769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Tracker",
["npcID"] = 154461,
},
[377154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[297292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodian Thonar",
["npcID"] = 185011,
},
[373059] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[383298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[395586] = {
["source"] = "Spellforged Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194402,
},
[389443] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 196712,
},
[391491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootscale the Indomitable",
["npcID"] = 190307,
},
[409921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[303439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kelfin Scout",
["npcID"] = 156265,
},
[6728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daggerspine Siren",
["npcID"] = 2371,
},
[176309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Guardian",
["npcID"] = 88279,
},
[387398] = {
["source"] = "Worldbreaker Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 185589,
},
[389446] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 196712,
},
[385351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Arcanogolem",
["npcID"] = 201554,
},
[167095] = {
["source"] = "Thunderlord Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 83390,
},
[193716] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[193717] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[418119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Destroyer",
["npcID"] = 207912,
},
[297302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Endless Hunger Totem",
["npcID"] = 153141,
},
[334162] = {
["source"] = "Malifis",
["event"] = "SPELL_CAST_START",
["npcID"] = 166908,
},
[393547] = {
["source"] = "Kraunot",
["event"] = "SPELL_CAST_START",
["npcID"] = 186401,
},
[285017] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[377166] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[428360] = {
["source"] = "Firelands Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210293,
},
[15503] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Warlord Salaris",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24559,
},
[409931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[195767] = {
["source"] = "Slumber",
["event"] = "SPELL_CAST_START",
["npcID"] = 98890,
},
[385359] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[8040] = {
["encounterName"] = "Lady Anacondra",
["source"] = "Lady Anacondra",
["npcID"] = 3671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 585,
},
[418125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Varian Wrynn",
["npcID"] = 205308,
},
[287070] = {
["encounterName"] = "Opulence",
["source"] = "Opulence",
["npcID"] = 145261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2271,
},
[387410] = {
["source"] = "Scalesmith Mita",
["event"] = "SPELL_CAST_START",
["npcID"] = 191010,
},
[34360] = {
["isChanneled"] = true,
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18420,
},
[34616] = {
["source"] = "Nethervine Inciter",
["event"] = "SPELL_CAST_START",
["npcID"] = 19511,
},
[385363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverwalker Tamopo",
["npcID"] = 193240,
},
[387411] = {
["source"] = "Soulharvester Galtmaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[166077] = {
["source"] = "Blackrock Machinist",
["event"] = "SPELL_CAST_START",
["npcID"] = 80468,
},
[403794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[368983] = {
["source"] = "Raging Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 194095,
},
[407891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[368984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Firebinder",
["npcID"] = 186605,
},
[362841] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Fracturing Rift Blast Portal",
["encounterID"] = 2553,
["event"] = "SPELL_CAST_START",
["npcID"] = 183663,
},
[260275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutosaur",
["npcID"] = 122107,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swooping Flayer",
["npcID"] = 199809,
},
[147649] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[366938] = {
["source"] = "Taskmaster Xy'pro",
["event"] = "SPELL_CAST_START",
["npcID"] = 185032,
},
[393559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rhuzast the Tempest",
["npcID"] = 197409,
},
[297315] = {
["source"] = "Greater Void Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 153130,
},
[147650] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[354653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Troz'igal",
["npcID"] = 179560,
},
[414038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquifon",
["npcID"] = 203468,
},
[274792] = {
["source"] = "Released Crawg",
["event"] = "SPELL_CAST_START",
["npcID"] = 140149,
},
[319843] = {
["source"] = "Bonescarred Veteran",
["event"] = "SPELL_CAST_START",
["npcID"] = 168331,
},
[428374] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[166081] = {
["source"] = "Blackrock Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81063,
},
[191678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Belcher",
["npcID"] = 96480,
},
[368990] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[405850] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Sundered Destroyer",
["npcID"] = 201753,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[418137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Varian Wrynn",
["npcID"] = 205308,
},
[411994] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Chronoweaver",
["npcID"] = 205384,
},
[373087] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[37945] = {
["source"] = "Greater Felfire Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 21462,
},
[362849] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Artificer Xy'mox",
["encounterID"] = 2553,
["event"] = "SPELL_CAST_START",
["npcID"] = 183501,
},
[274796] = {
["source"] = "Necrotic Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 146459,
},
[86633] = {
["encounterName"] = "Lord Overheat",
["source"] = "Lord Overheat",
["npcID"] = 46264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1145,
},
[381280] = {
["source"] = "Uktulut Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 193203,
},
[301418] = {
["source"] = "Mechanized Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 154448,
},
[407902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[264560] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Aqu'sirr",
["encounterID"] = 2130,
["event"] = "SPELL_CAST_START",
["npcID"] = 134056,
},
[389474] = {
["source"] = "Frozion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193655,
},
[387427] = {
["source"] = "Uncontrolled Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181775,
},
[166085] = {
["source"] = "Burning Blade Saberguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 81129,
},
[167109] = {
["source"] = "Scavenger Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 83447,
},
[88170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turbulent Squall",
["npcID"] = 45924,
},
[260282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutosaur",
["npcID"] = 122107,
},
[389477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Sorcerer",
["npcID"] = 200758,
},
[92266] = {
["source"] = "Irradiated Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 6329,
},
[389478] = {
["source"] = "Darktooth Spirit-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195267,
},
[385383] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[307569] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[175302] = {
["source"] = "Char the Burning",
["event"] = "SPELL_CAST_START",
["npcID"] = 82311,
},
[56632] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ahn'kahar Web Winder",
["npcID"] = 30276,
},
[385386] = {
["source"] = "Overseer Stonetongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 201552,
},
[399721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[86636] = {
["encounterName"] = "Lord Overheat",
["source"] = "Lord Overheat",
["npcID"] = 46264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1145,
},
[200901] = {
["source"] = "Solsten",
["event"] = "SPELL_CAST_START",
["npcID"] = 97219,
},
[418153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderclaw Stalker",
["npcID"] = 207084,
},
[385390] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[405868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invoq",
["npcID"] = 203627,
},
[154828] = {
["source"] = "Primal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 81769,
},
[393582] = {
["source"] = "Cindershard Igniter",
["event"] = "SPELL_CAST_START",
["npcID"] = 198382,
},
[412012] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Timeslicer",
["npcID"] = 205408,
},
[389487] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[407917] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[387440] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[389488] = {
["source"] = "Srivantor",
["event"] = "SPELL_CAST_START",
["npcID"] = 201555,
},
[393584] = {
["source"] = "Horned Armoredon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190339,
},
[274815] = {
["source"] = "Seer Drannix",
["event"] = "SPELL_CAST_START",
["npcID"] = 146443,
},
[250050] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[418159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Varian Wrynn",
["npcID"] = 205308,
},
[111723] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["npcID"] = 56877,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[200905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["npcID"] = 96015,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1850,
},
[418161] = {
["source"] = "Kirkessen the Zealous",
["event"] = "SPELL_CAST_START",
["npcID"] = 207821,
},
[428400] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["npcID"] = 207796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[303488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wekemara",
["npcID"] = 152671,
},
[428401] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[260291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bladeguard Elite",
["npcID"] = 130451,
},
[195787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Selentia",
["npcID"] = 99524,
},
[389495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terillod the Devout",
["npcID"] = 193171,
},
[167119] = {
["source"] = "Scavenger Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 83447,
},
[395639] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[389496] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[32829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unliving Stalker",
["npcID"] = 18501,
},
[395640] = {
["isChanneled"] = true,
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194401,
},
[389497] = {
["source"] = "Eternal Sand",
["event"] = "SPELL_CAST_START",
["npcID"] = 187475,
},
[167120] = {
["source"] = "Grom'kar Flameslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 81279,
},
[409975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[59706] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[256198] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[387453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[256199] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[393597] = {
["source"] = "Kraunot",
["event"] = "SPELL_CAST_START",
["npcID"] = 186401,
},
[412027] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[332165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Howling Spectre",
["npcID"] = 170414,
},
[63802] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[11921] = {
["source"] = "Hellfire Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 19016,
},
[175314] = {
["source"] = "Vindicator Maraad",
["event"] = "SPELL_CAST_START",
["npcID"] = 78554,
},
[360835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Annelid",
["npcID"] = 180722,
},
[313737] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Abyssal Watcher",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 161173,
},
[395648] = {
["source"] = "Sogglmoggl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188859,
},
[399744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[407936] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[395650] = {
["source"] = "Conjured Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 199014,
},
[399746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warp Crystal",
["npcID"] = 201082,
},
[200913] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[251083] = {
["source"] = "Hanzabu",
["event"] = "SPELL_CAST_START",
["npcID"] = 124513,
},
[395652] = {
["source"] = "Sogglmoggl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188859,
},
[303504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Herald of the Queen",
["npcID"] = 154950,
},
[152792] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[309648] = {
["encounterName"] = "Magister Umbric",
["source"] = "Magister Umbric",
["encounterID"] = 2377,
["event"] = "SPELL_CAST_START",
["npcID"] = 158035,
},
[64059] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Brain of Yogg-Saron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33890,
},
[418180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glorious Vanguard",
["npcID"] = 208670,
},
[313746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Reaper",
["npcID"] = 163044,
},
[393609] = {
["source"] = "Krojek The Shoreprowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187645,
},
[210131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Killclaw the Terrible",
["npcID"] = 153266,
},
[389514] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[276888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Depthspeaker",
["npcID"] = 162887,
},
[385419] = {
["source"] = "Overseer Stonetongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 201552,
},
[418184] = {
["isChanneled"] = true,
["source"] = "Glorious Vanguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208670,
},
[264603] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[257231] = {
["source"] = "Necrotic Echo",
["event"] = "SPELL_CAST_START",
["npcID"] = 145121,
},
[200918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrath-Lord Lekos",
["npcID"] = 97069,
},
[313751] = {
["source"] = "Infused Amber Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 160930,
},
[389518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormshackler Rynea",
["npcID"] = 189391,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[418187] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[418188] = {
["source"] = "Shackled Flames of the Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207815,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[260304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qy'telek",
["npcID"] = 130726,
},
[412046] = {
["source"] = "Monstrous Magmaclaw Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 204214,
},
[151774] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Molten Inferno Crystal",
["encounterID"] = 1661,
["event"] = "SPELL_CAST_START",
["npcID"] = 75308,
},
[405905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amniotic Ooze",
["npcID"] = 203072,
},
[208088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrodark Greysworn",
["npcID"] = 104565,
},
[418192] = {
["source"] = "Shackled Flames of the Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207815,
},
[114291] = {
["source"] = "Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59464,
},
[360856] = {
["source"] = "Dominated Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 185314,
},
[305567] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["npcID"] = 156501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[405908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kartoros",
["npcID"] = 202977,
},
[309664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Onyx Warserpent",
["npcID"] = 153208,
},
[369049] = {
["encounterName"] = "Emberon",
["source"] = "Vault Keeper",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 186107,
},
[395670] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[276901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander I'juk",
["npcID"] = 157985,
},
[369050] = {
["source"] = "Primalist Stormsurger",
["event"] = "SPELL_CAST_START",
["npcID"] = 188343,
},
[152801] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[383385] = {
["source"] = "Filth Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185656,
},
[295332] = {
["encounterName"] = "Abyssal Commander Sivara",
["source"] = "Abyssal Commander Sivara",
["encounterID"] = 2298,
["event"] = "SPELL_CAST_START",
["npcID"] = 151881,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[313763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baruk Stoneshaper",
["npcID"] = 155957,
},
[59710] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[416152] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[418200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[395675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embar Firepath",
["npcID"] = 187767,
},
[405914] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[171233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Biolante",
["npcID"] = 75207,
},
[369055] = {
["source"] = "Djaradin Crustshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186110,
},
[299432] = {
["source"] = "Malfunctioning Scraphound",
["event"] = "SPELL_CAST_START",
["npcID"] = 151301,
},
[418202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[63038] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Guardian of Yogg-Saron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33136,
},
[395678] = {
["source"] = "Spellforged Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 184456,
},
[397726] = {
["source"] = "Shrieking Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187159,
},
[375201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Divebeak Ohuna",
["npcID"] = 189373,
},
[309674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torsheg",
["npcID"] = 157156,
},
[385442] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[412063] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Epoch Ripper",
["npcID"] = 205435,
},
[397729] = {
["source"] = "Glakis, Winter's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199502,
},
[393634] = {
["source"] = "Rakkesh of the Flow",
["event"] = "SPELL_CAST_START",
["npcID"] = 193849,
},
[165093] = {
["source"] = "Verdant Mandragora",
["event"] = "SPELL_CAST_START",
["npcID"] = 81983,
},
[150759] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["encounterID"] = 1653,
["event"] = "SPELL_CAST_START",
["npcID"] = 74787,
},
[418208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Prophet",
["npcID"] = 206474,
},
[405922] = {
["source"] = "Kartoros",
["event"] = "SPELL_CAST_START",
["npcID"] = 202977,
},
[301487] = {
["source"] = "OOX-Avenger/MG",
["event"] = "SPELL_CAST_START",
["npcID"] = 151296,
},
[395685] = {
["source"] = "Spellforged Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 184456,
},
[405924] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[118903] = {
["source"] = "Glintrok Hexxer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61216,
},
[14034] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[81020] = {
["source"] = "Blackscale Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 45984,
},
[387497] = {
["source"] = "Time-Lost Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187244,
},
[59712] = {
["source"] = "Lady Sylvanas Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 46026,
},
[405929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Crecheguard",
["npcID"] = 203368,
},
[399786] = {
["isChanneled"] = true,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201117,
},
[381357] = {
["source"] = "Hunting Ottuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 190267,
},
[407978] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Ahnzon",
["npcID"] = 201792,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[196838] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 99868,
},
[315830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anubisath Sentinel",
["npcID"] = 161571,
},
[309687] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Shredded Psyche",
["npcID"] = 158781,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2334,
},
[369072] = {
["source"] = "Plainswalker Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 187937,
},
[118905] = {
["source"] = "Capacitor Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 61245,
},
[395694] = {
["source"] = "Primalist Shocktrooper",
["event"] = "SPELL_CAST_START",
["npcID"] = 199037,
},
[364978] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 181047,
},
[395695] = {
["source"] = "Sleeping Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 196073,
},
[364979] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[198888] = {
["source"] = "Storm Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 97068,
},
[285118] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[418222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gillidan",
["npcID"] = 205036,
},
[152814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Bone-Mender",
["npcID"] = 75713,
},
[362934] = {
["source"] = "Creeping Brambles",
["event"] = "SPELL_CAST_START",
["npcID"] = 182215,
},
[295359] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 151660,
},
[412081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Draconic Golem",
["npcID"] = 203826,
},
[178412] = {
["source"] = "Ogron Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 83578,
},
[418225] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[403891] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[150768] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["encounterID"] = 438,
["event"] = "SPELL_CAST_START",
["npcID"] = 74948,
},
[418226] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[299457] = {
["source"] = "Malfunctioning Scrapboss",
["event"] = "SPELL_CAST_START",
["npcID"] = 151683,
},
[47939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xink's Shredder",
["npcID"] = 27061,
},
[389560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Reaver",
["npcID"] = 200756,
},
[309698] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158367,
},
[198892] = {
["source"] = "Storm Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 97068,
},
[287174] = {
["source"] = "Rustfeather",
["event"] = "SPELL_CAST_START",
["npcID"] = 152182,
},
[152818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Bone-Mender",
["npcID"] = 75713,
},
[389562] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Great Shellkhan",
["npcID"] = 191305,
},
[391610] = {
["source"] = "Gusting Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190401,
},
[225514] = {
["source"] = "Irontide Brinecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 131303,
},
[395707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[389564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steamgill",
["npcID"] = 193123,
},
[418233] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[313798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Watcher",
["npcID"] = 161173,
},
[391613] = {
["source"] = "Subterranean Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190404,
},
[412093] = {
["source"] = "Contaminated Titan Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 203834,
},
[418237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet Skitra",
["npcID"] = 208491,
},
[150774] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["encounterID"] = 438,
["event"] = "SPELL_CAST_START",
["npcID"] = 74948,
},
[75907] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[183539] = {
["source"] = "Rotdrool Grabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 91002,
},
[88194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[389572] = {
["source"] = "Time-Lost Devilsaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 187262,
},
[418241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet Skitra",
["npcID"] = 208491,
},
[420289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormchaser",
["npcID"] = 207276,
},
[150776] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 74790,
},
[221424] = {
["source"] = "Tormented Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 146809,
},
[289235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kal'ia Pa'kuaya",
["npcID"] = 148607,
},
[387528] = {
["source"] = "Earthbound Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 193795,
},
[373194] = {
["source"] = "Windyfin Windbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187432,
},
[140539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Defender",
["npcID"] = 200527,
},
[412104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lead Researcher Sytorian",
["npcID"] = 203067,
},
[174328] = {
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[405962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bronogg the Bully",
["npcID"] = 203386,
},
[401867] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[191735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Myrmidon",
["npcID"] = 98954,
},
[279003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Vanguard",
["npcID"] = 142082,
},
[7978] = {
["source"] = "Goblin Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 35333,
},
[389583] = {
["source"] = "Dragonspawn Spell Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 196119,
},
[375249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bluebill Waddler",
["npcID"] = 192947,
},
[369107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Construct",
["npcID"] = 200286,
},
[197880] = {
["source"] = "Bonespeaker Runeaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 93066,
},
[198904] = {
["source"] = "Rotheart Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 99358,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[391634] = {
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[369110] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[107140] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[183548] = {
["source"] = "Stoneclaw Grubmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 102404,
},
[418258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 208500,
},
[420306] = {
["source"] = "Primalist Chainmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 211058,
},
[393686] = {
["source"] = "Turboris",
["event"] = "SPELL_CAST_START",
["npcID"] = 187886,
},
[255220] = {
["source"] = "Hexbone Raiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 134816,
},
[412117] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[397783] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[410070] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[173311] = {
["source"] = "Thunderlord Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 83390,
},
[10452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vermillion Flamelash",
["npcID"] = 45569,
},
[58438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Trickster",
["npcID"] = 30856,
},
[34121] = {
["encounterName"] = "Al'ar",
["source"] = "Al'ar",
["npcID"] = 19514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 730,
},
[383452] = {
["source"] = "Rugren",
["event"] = "SPELL_CAST_START",
["npcID"] = 201563,
},
[80009] = {
["source"] = "Monishot",
["event"] = "SPELL_CAST_START",
["npcID"] = 82001,
},
[424408] = {
["source"] = "Bodwin",
["event"] = "SPELL_CAST_START",
["npcID"] = 209153,
},
[344546] = {
["source"] = "Mistress Dyrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 162880,
},
[165122] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Ahri'ok Dugru",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80816,
},
[342500] = {
["source"] = "Champion of Humility",
["event"] = "SPELL_CAST_START",
["npcID"] = 170836,
},
[408029] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Loszkeleth",
["npcID"] = 201790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[88201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[201983] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113537,
},
[393696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vadne Bleakheart",
["npcID"] = 195764,
},
[163077] = {
["source"] = "Grievous Depthworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 85942,
},
[299502] = {
["source"] = "Phleep",
["event"] = "SPELL_CAST_START",
["npcID"] = 193210,
},
[412129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[367079] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[164102] = {
["source"] = "Grimrail Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81235,
},
[257275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Briarwood Bulwark",
["npcID"] = 133072,
},
[46153] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["encounterID"] = 1897,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24723,
},
[369129] = {
["source"] = "Modak Flamespit",
["event"] = "SPELL_CAST_START",
["npcID"] = 186509,
},
[387559] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[111752] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[80012] = {
["source"] = "Forsaken Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 45376,
},
[346605] = {
["source"] = "Chained Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 182296,
},
[291316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 175313,
},
[65351] = {
["source"] = "Wolvar Orphan",
["event"] = "SPELL_CAST_START",
["npcID"] = 33532,
},
[403943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[365036] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Defense Matrix Automa",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 184126,
},
[420326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamesworn Ashwalker",
["npcID"] = 210504,
},
[397801] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[221442] = {
["source"] = "Spectral Mortar",
["event"] = "SPELL_CAST_START",
["npcID"] = 111212,
},
[412136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[414184] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[387564] = {
["source"] = "Conjured Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 196102,
},
[162058] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[385517] = {
["source"] = "Rotbow Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 187021,
},
[395756] = {
["source"] = "Qalashi Flameslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 196336,
},
[257279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Briarwood Bulwark",
["npcID"] = 133072,
},
[32422] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["npcID"] = 18373,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1889,
},
[414189] = {
["source"] = "Krrrn Trr Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205821,
},
[391665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ash Bugsbane",
["npcID"] = 197292,
},
[319994] = {
["source"] = "Satiated Sawtooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 164587,
},
[420334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Adranas",
["npcID"] = 209931,
},
[397809] = {
["source"] = "Glakis, Winter's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199502,
},
[268801] = {
["source"] = "Sandfury Axe Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 121017,
},
[387571] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[414192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krrrn Trr Cryomancer",
["npcID"] = 204451,
},
[276993] = {
["source"] = "Ruul Onestone",
["event"] = "SPELL_CAST_START",
["npcID"] = 142683,
},
[200969] = {
["source"] = "King Tor",
["event"] = "SPELL_CAST_START",
["npcID"] = 97084,
},
[395763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Flameslinger",
["npcID"] = 196336,
},
[81039] = {
["encounterName"] = "Viscous Fallout",
["source"] = "Irradiated Slime",
["encounterID"] = 378,
["event"] = "SPELL_CAST_START",
["npcID"] = 6218,
},
[305663] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[381430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Protector",
["npcID"] = 186849,
},
[377335] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[393718] = {
["source"] = "Huntmaster Amaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 188715,
},
[428530] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[249093] = {
["source"] = "Nokali the Scarred",
["event"] = "SPELL_CAST_START",
["npcID"] = 125485,
},
[161040] = {
["source"] = "Pack Boar",
["event"] = "SPELL_CAST_START",
["npcID"] = 80174,
},
[291332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 175313,
},
[377338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqualing",
["npcID"] = 190406,
},
[291334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 175313,
},
[34637] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Sunseeker Channeler",
["encounterID"] = 1928,
["event"] = "SPELL_CAST_START",
["npcID"] = 19505,
},
[385531] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[291335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 175313,
},
[377341] = {
["source"] = "Aqua Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190407,
},
[338434] = {
["source"] = "Devmorta",
["event"] = "SPELL_CAST_START",
["npcID"] = 162875,
},
[162066] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[154899] = {
["encounterName"] = "Orebender Gor'ashan",
["source"] = "Orebender Gor'ashan",
["encounterID"] = 1761,
["event"] = "SPELL_CAST_START",
["npcID"] = 76413,
},
[360960] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181224,
},
[381438] = {
["source"] = "Angered Steam",
["event"] = "SPELL_CAST_START",
["npcID"] = 190694,
},
[175377] = {
["source"] = "Limbflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 86652,
},
[37965] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[375296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Collier",
["npcID"] = 195605,
},
[377344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Eagle",
["npcID"] = 192329,
},
[412156] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[385536] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[259336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmange",
["npcID"] = 127794,
},
[387585] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[158997] = {
["source"] = "Acidtooth Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 79416,
},
[258313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Jailer",
["npcID"] = 135699,
},
[346631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Necrobinder",
["npcID"] = 175930,
},
[369157] = {
["source"] = "Embertooth Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 188948,
},
[428542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[307725] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["npcID"] = 157238,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2334,
},
[416256] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron's Creation",
["npcID"] = 204918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[61515] = {
["source"] = "Hardened Steel Skycaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 28580,
},
[309776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dokani Shadewalker",
["npcID"] = 153107,
},
[196883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Etheldrin Ravencrest",
["npcID"] = 98521,
},
[383496] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[426500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[395784] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[274968] = {
["source"] = "Grimscowl the Harebrained",
["event"] = "SPELL_CAST_START",
["npcID"] = 141059,
},
[34639] = {
["source"] = "Sunseeker Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 19509,
},
[416264] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[387596] = {
["source"] = "Risen Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 195877,
},
[162074] = {
["source"] = "Fireblade Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 77047,
},
[379406] = {
["source"] = "Qalashi Lavabearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 189472,
},
[274971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mala'kili",
["npcID"] = 128935,
},
[360977] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[23337] = {
["source"] = "Booty Bay Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 4624,
},
[385551] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[264734] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[32424] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["npcID"] = 18373,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1889,
},
[285213] = {
["encounterName"] = "King Rastakhan",
["source"] = "Bwonsamdi",
["npcID"] = 145644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[385553] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Stormseeker Acolyte",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 194990,
},
[418318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 206463,
},
[408080] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[315932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron-Willed Enforcer",
["npcID"] = 162718,
},
[320028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneshard Breacher",
["npcID"] = 167458,
},
[412177] = {
["source"] = "Carcaxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 202836,
},
[162078] = {
["source"] = "Blademaster Bralok",
["event"] = "SPELL_CAST_START",
["npcID"] = 76981,
},
[393748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krolkoth the Mountain",
["npcID"] = 197501,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[395797] = {
["source"] = "Primalist Frostsculptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 198424,
},
[387608] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ukhel Corruptor",
["npcID"] = 195842,
},
[393752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vadne Bleakheart",
["npcID"] = 195764,
},
[428564] = {
["isChanneled"] = true,
["source"] = "Firelands Flameguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[169248] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84550,
},
[225562] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Burster",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 100532,
},
[30633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Protector",
["npcID"] = 26792,
},
[418329] = {
["source"] = "Queen Angerboda",
["event"] = "SPELL_CAST_START",
["npcID"] = 207823,
},
[387613] = {
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 195842,
},
[373279] = {
["source"] = "Thing From Beyond",
["event"] = "SPELL_CAST_START",
["npcID"] = 189988,
},
[375327] = {
["source"] = "Subterranean Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190404,
},
[387614] = {
["source"] = "Ukhel Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 195851,
},
[47696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[277037] = {
["source"] = "Elven Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 146329,
},
[168227] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Skulloc",
["encounterID"] = 1754,
["event"] = "SPELL_CAST_START",
["npcID"] = 83612,
},
[418333] = {
["source"] = "Queen Angerboda",
["event"] = "SPELL_CAST_START",
["npcID"] = 207823,
},
[198944] = {
["source"] = "Valarjar Shieldmaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 95832,
},
[375331] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[200992] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Savage Felstalker",
["npcID"] = 92782,
},
[387618] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primalist Infuser",
["npcID"] = 196043,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[315947] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[418335] = {
["source"] = "Queen Angerboda",
["event"] = "SPELL_CAST_START",
["npcID"] = 207823,
},
[395811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Pillager",
["npcID"] = 190983,
},
[342570] = {
["source"] = "Champion of Loyalty",
["event"] = "SPELL_CAST_START",
["npcID"] = 170832,
},
[159015] = {
["source"] = "Voracious Stonemuncher",
["event"] = "SPELL_CAST_START",
["npcID"] = 84253,
},
[377383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[264757] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[85147] = {
["source"] = "Forsaken Catapult",
["event"] = "SPELL_CAST_START",
["npcID"] = 45601,
},
[377384] = {
["source"] = "Aqua Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190407,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[3606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Totem",
["npcID"] = 2523,
},
[159017] = {
["source"] = "Zipteq",
["event"] = "SPELL_CAST_START",
["npcID"] = 78734,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[309812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zror'um the Infinite",
["npcID"] = 154087,
},
[369197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Firebinder",
["npcID"] = 186599,
},
[412200] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[391723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[377389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[395819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187602,
},
[15254] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Beacon",
["npcID"] = 18431,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[393772] = {
["source"] = "Hihveer",
["event"] = "SPELL_CAST_START",
["npcID"] = 188717,
},
[387629] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[208165] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[391726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[387631] = {
["source"] = "Molkeej",
["event"] = "SPELL_CAST_START",
["npcID"] = 195430,
},
[422443] = {
["source"] = "Sickened Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207926,
},
[89757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Cannon",
["npcID"] = 48266,
},
[222501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Grub Redcut",
["npcID"] = 199351,
},
[159021] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[426541] = {
["source"] = "Runic Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 131685,
},
[375348] = {
["source"] = "Gusting Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190401,
},
[309821] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zror'um the Infinite",
["npcID"] = 154087,
},
[303678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lumbering Creation",
["npcID"] = 155824,
},
[338490] = {
["source"] = "Devmorta",
["event"] = "SPELL_CAST_START",
["npcID"] = 162875,
},
[393780] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[375351] = {
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[393781] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[389686] = {
["source"] = "Crystal Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[420403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decaymonger Rotpaw",
["npcID"] = 205995,
},
[397878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Living Water",
["npcID"] = 59873,
},
[393783] = {
["source"] = "Iskakx",
["event"] = "SPELL_CAST_START",
["npcID"] = 192761,
},
[153905] = {
["source"] = "Whirling Dervish",
["event"] = "SPELL_CAST_START",
["npcID"] = 77605,
},
[195884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feltotem Bloodsinger",
["npcID"] = 96423,
},
[377402] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[420405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Caller",
["npcID"] = 207041,
},
[412215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[397881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Living Water",
["npcID"] = 59873,
},
[285255] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Strongarm",
["npcID"] = 146553,
},
[118940] = {
["encounterName"] = "Gekkan",
["source"] = "Glintrok Oracle",
["encounterID"] = 2129,
["event"] = "SPELL_CAST_START",
["npcID"] = 61339,
},
[395834] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 197121,
},
[393787] = {
["source"] = "Iskakx",
["event"] = "SPELL_CAST_START",
["npcID"] = 192761,
},
[169265] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[303687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boggac Skullbash",
["npcID"] = 151308,
},
[404027] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[46164] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 24664,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[399933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tukkaraq's Boat",
["npcID"] = 201121,
},
[397886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Droplet",
["npcID"] = 62358,
},
[90273] = {
["source"] = "Captain Balinda Stonehearth",
["event"] = "SPELL_CAST_START",
["npcID"] = 48507,
},
[397888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[377411] = {
["source"] = "Mature Slyvern",
["event"] = "SPELL_CAST_START",
["npcID"] = 192169,
},
[395841] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197120,
},
[397889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[270929] = {
["source"] = "Harpy Boltcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 152843,
},
[111775] = {
["source"] = "Lilian Voss",
["event"] = "SPELL_CAST_START",
["npcID"] = 58722,
},
[159030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glut",
["npcID"] = 80868,
},
[387652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Revenant",
["npcID"] = 187203,
},
[397892] = {
["source"] = "Imacu'tya",
["event"] = "SPELL_CAST_START",
["npcID"] = 104275,
},
[420419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Caller",
["npcID"] = 207041,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[90275] = {
["source"] = "Captain Balinda Stonehearth",
["event"] = "SPELL_CAST_START",
["npcID"] = 48507,
},
[387657] = {
["source"] = "Earthbound Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 193795,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[397897] = {
["source"] = "Jazshariu",
["event"] = "SPELL_CAST_START",
["npcID"] = 104273,
},
[387659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melkhop",
["npcID"] = 193311,
},
[381516] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[393803] = {
["source"] = "Trakhan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193783,
},
[412233] = {
["source"] = "Time-Lost Rocketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205727,
},
[397899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[393804] = {
["source"] = "Whirglgurgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188860,
},
[363088] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182169,
},
[373327] = {
["encounterName"] = "Eranog",
["source"] = "Primal Flame",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 187593,
},
[159035] = {
["source"] = "Shaadum",
["event"] = "SPELL_CAST_START",
["npcID"] = 78728,
},
[381519] = {
["source"] = "Embertooth Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 187426,
},
[399949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Tempest",
["npcID"] = 200673,
},
[7948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deviate Shambler",
["npcID"] = 5761,
},
[373329] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[395855] = {
["source"] = "The Blue Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195976,
},
[381521] = {
["source"] = "Encroaching Downpour",
["event"] = "SPELL_CAST_START",
["npcID"] = 191324,
},
[279134] = {
["source"] = "Risen Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 145120,
},
[41303] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Suffering",
["npcID"] = 23418,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[397904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[395857] = {
["source"] = "Qalashi Stonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 187600,
},
[8600] = {
["encounterName"] = "Theka the Martyr",
["source"] = "Theka the Martyr",
["encounterID"] = 596,
["event"] = "SPELL_CAST_START",
["npcID"] = 7272,
},
[126625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Violence",
["npcID"] = 64656,
},
[307805] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[285280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Tideweaver",
["npcID"] = 146552,
},
[393811] = {
["source"] = "Maiden of Diligence",
["event"] = "SPELL_CAST_START",
["npcID"] = 192718,
},
[387668] = {
["source"] = "Awakened Crag",
["event"] = "SPELL_CAST_START",
["npcID"] = 195243,
},
[397907] = {
["source"] = "Baalgar the Watchful",
["event"] = "SPELL_CAST_START",
["npcID"] = 104274,
},
[393812] = {
["source"] = "Whirglgurgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188860,
},
[395860] = {
["source"] = "The Black Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195975,
},
[150848] = {
["source"] = "Blood-Branded Razorfen",
["event"] = "SPELL_CAST_START",
["npcID"] = 74553,
},
[387670] = {
["source"] = "Qu'ruk the Time-Lost",
["event"] = "SPELL_CAST_START",
["npcID"] = 195322,
},
[375384] = {
["source"] = "Primalist Earthshaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 190371,
},
[369241] = {
["source"] = "Searing Flame Harchek",
["event"] = "SPELL_CAST_START",
["npcID"] = 191476,
},
[307809] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[150849] = {
["source"] = "Razorfen Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 74552,
},
[328287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honored Duelist",
["npcID"] = 165265,
},
[40536] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Akama",
["npcID"] = 23089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[361052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Annelid",
["npcID"] = 180722,
},
[381530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Thunderfist",
["npcID"] = 193373,
},
[377435] = {
["source"] = "Time-Lost Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187265,
},
[58966] = {
["source"] = "Drakkari Battle Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 29836,
},
[375388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Watercaller",
["npcID"] = 190995,
},
[51287] = {
["source"] = "Y'kish the Deceiver",
["event"] = "SPELL_CAST_START",
["npcID"] = 81266,
},
[297574] = {
["encounterName"] = "Oblivion Elemental",
["source"] = "Oblivion Elemental",
["encounterID"] = 2372,
["event"] = "SPELL_CAST_START",
["npcID"] = 153244,
},
[397914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Depraved Mistweaver",
["npcID"] = 200137,
},
[161090] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77816,
},
[252215] = {
["source"] = "Crimson Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 138274,
},
[253239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Juggernaut",
["npcID"] = 122971,
},
[389725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[270956] = {
["source"] = "Disciple of Jan'alai",
["event"] = "SPELL_CAST_START",
["npcID"] = 120950,
},
[31405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[381535] = {
["source"] = "Earthen Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186849,
},
[148805] = {
["source"] = "Bladespire Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 80172,
},
[32173] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Enchantress",
["npcID"] = 17961,
},
[395871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonemender",
["npcID"] = 187600,
},
[56919] = {
["source"] = "Lord Walden",
["event"] = "SPELL_CAST_START",
["npcID"] = 45879,
},
[32858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Soulpriest",
["npcID"] = 18493,
},
[395872] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Talking Fish",
["npcID"] = 59546,
},
[414303] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[387683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Sorcerer",
["npcID"] = 200758,
},
[387684] = {
["source"] = "Earthen Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 195348,
},
[277106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Gastrinax",
["npcID"] = 203521,
},
[200002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bastillax",
["npcID"] = 96783,
},
[377447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Wingguard",
["npcID"] = 192220,
},
[414307] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[301681] = {
["source"] = "Mechagon Cavalry",
["event"] = "SPELL_CAST_START",
["npcID"] = 150292,
},
[102569] = {
["encounterName"] = "Murozond",
["source"] = "Murozond",
["encounterID"] = 1271,
["event"] = "SPELL_CAST_START",
["npcID"] = 54432,
},
[395878] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Talking Fish",
["npcID"] = 59546,
},
[167239] = {
["source"] = "Grom'kar Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 83028,
},
[371306] = {
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 186741,
},
[49241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Watcher",
["npcID"] = 27542,
},
[412262] = {
["source"] = "Time-Lost Rocketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205727,
},
[167240] = {
["source"] = "Grom'kar Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 83028,
},
[406120] = {
["source"] = "Keeper Tyr",
["event"] = "SPELL_CAST_START",
["npcID"] = 198982,
},
[173384] = {
["source"] = "Rampaging Clefthoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 83392,
},
[397931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Doubt",
["npcID"] = 57109,
},
[367215] = {
["source"] = "Toadious",
["event"] = "SPELL_CAST_START",
["npcID"] = 184395,
},
[365168] = {
["source"] = "Eternal Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 184530,
},
[268924] = {
["source"] = "Arathor Arbalest",
["event"] = "SPELL_CAST_START",
["npcID"] = 142733,
},
[37979] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[391790] = {
["source"] = "Seismic Stomps",
["event"] = "SPELL_CAST_START",
["npcID"] = 197829,
},
[371313] = {
["source"] = "Blazing Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 186336,
},
[391791] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[135503] = {
["source"] = "Tidesage Defector",
["event"] = "SPELL_CAST_START",
["npcID"] = 152301,
},
[313977] = {
["source"] = "Abyssal Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161173,
},
[261440] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131527,
},
[32860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Soulpriest",
["npcID"] = 18493,
},
[391793] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[393841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web-Queen Ashkaz",
["npcID"] = 192983,
},
[373364] = {
["source"] = "Gerenth the Vile",
["event"] = "SPELL_CAST_START",
["npcID"] = 107435,
},
[285311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Stormbringer",
["npcID"] = 146831,
},
[197961] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[385652] = {
["source"] = "Awakened Crag",
["event"] = "SPELL_CAST_START",
["npcID"] = 195243,
},
[399987] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[270979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Briarwood Invader",
["npcID"] = 131373,
},
[412275] = {
["source"] = "Captain Reykal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203355,
},
[162127] = {
["source"] = "Grimfrost Drudge",
["event"] = "SPELL_CAST_START",
["npcID"] = 72955,
},
[391798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Incinerator",
["npcID"] = 195062,
},
[102573] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56754,
},
[363130] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182169,
},
[391799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morlash",
["npcID"] = 201549,
},
[367228] = {
["source"] = "Subjugated Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 184767,
},
[135508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Rootshaper",
["npcID"] = 68821,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[375420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Chomper",
["npcID"] = 190886,
},
[395899] = {
["source"] = "Primalist Chillblaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 199124,
},
[375422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Gnasher",
["npcID"] = 189337,
},
[410234] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[414330] = {
["encounterName"] = "Iridikron",
["source"] = "Chromie",
["npcID"] = 204449,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2669,
},
[100015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Twisted Spellweaver",
["npcID"] = 152135,
},
[201038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kethrazor",
["npcID"] = 96997,
},
[412283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alcanon",
["npcID"] = 203515,
},
[365185] = {
["source"] = "Dominated Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 184659,
},
[410236] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203679,
},
[412284] = {
["source"] = "Captain Reykal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203355,
},
[119981] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[183633] = {
["source"] = "Rockbound Pelter",
["event"] = "SPELL_CAST_START",
["npcID"] = 91008,
},
[377473] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[152917] = {
["source"] = "Solar Magnifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 77559,
},
[196944] = {
["source"] = "Balnazzar",
["event"] = "SPELL_CAST_START",
["npcID"] = 90981,
},
[157013] = {
["source"] = "Thunderlord Eagle-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 78806,
},
[381570] = {
["source"] = "Earthen Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186849,
},
[420478] = {
["source"] = "Deceiver Hr'qoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 206784,
},
[260425] = {
["source"] = "Muddy Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 130757,
},
[408193] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[393859] = {
["source"] = "Bustled Beetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 193705,
},
[6605] = {
["source"] = "Plaguebat",
["event"] = "SPELL_CAST_START",
["npcID"] = 8600,
},
[395908] = {
["source"] = "Primal Icebulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 192767,
},
[91314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chiseled Golem",
["npcID"] = 48037,
},
[381575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustpine Immolator",
["npcID"] = 187396,
},
[387719] = {
["encounterName"] = "Kurog Grimtotem",
["event"] = "SPELL_CAST_START",
["source"] = "Water Snail",
["npcID"] = 191790,
},
[120495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Seedstealer",
["npcID"] = 61302,
},
[393864] = {
["source"] = "Trap-Layer Kerwal",
["event"] = "SPELL_CAST_START",
["npcID"] = 186516,
},
[420485] = {
["source"] = "Deceiver Hr'qoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 206784,
},
[424581] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[58972] = {
["source"] = "Drakkari Fire Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 29822,
},
[285335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coldheart Javelineer",
["npcID"] = 185221,
},
[420487] = {
["source"] = "Deceiver Hr'qoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 206784,
},
[381580] = {
["source"] = "Sundered Flame Brawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 203620,
},
[410249] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198998,
},
[377486] = {
["source"] = "Infinite Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["npcID"] = 100485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[381582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[391821] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Sorcerer",
["npcID"] = 200758,
},
[210261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Sentry",
["npcID"] = 104251,
},
[373392] = {
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[31664] = {
["source"] = "Frenzied Gargoyle",
["event"] = "SPELL_CAST_START",
["npcID"] = 27691,
},
[377488] = {
["source"] = "Rune Seal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187155,
},
[157020] = {
["source"] = "Blinding Solar Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 79462,
},
[260432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Tendril",
["npcID"] = 125136,
},
[377490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Crasher",
["npcID"] = 191057,
},
[387729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goopal",
["npcID"] = 203477,
},
[373395] = {
["source"] = "Batak",
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[391825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiobhan Waterborn",
["npcID"] = 201559,
},
[84662] = {
["source"] = "Korok the Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 45301,
},
[58973] = {
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 29820,
},
[165213] = {
["source"] = "Everbloom Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81985,
},
[8858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Geologist",
["npcID"] = 5839,
},
[150879] = {
["encounterName"] = "Hunter Bonetusk",
["source"] = "Hunter Bonetusk",
["encounterID"] = 1656,
["event"] = "SPELL_CAST_START",
["npcID"] = 75001,
},
[387732] = {
["source"] = "Titan Defense Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 193244,
},
[375446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunhide Stomphoof",
["npcID"] = 190953,
},
[418449] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[285346] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["npcID"] = 145616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[330397] = {
["source"] = "Blistering Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 160345,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["encounterID"] = 1983,
["event"] = "SPELL_CAST_START",
["npcID"] = 29573,
},
[118963] = {
["source"] = "Glintrok Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61240,
},
[406165] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[200027] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bastillax",
["npcID"] = 96783,
},
[426643] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Abominable Greench",
["npcID"] = 54499,
},
[381593] = {
["source"] = "Ebonstone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 184300,
},
[41056] = {
["source"] = "Yorus the Flesh Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 24214,
},
[420501] = {
["source"] = "Wildfire Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 209200,
},
[393881] = {
["source"] = "Nezascar the Sightless",
["event"] = "SPELL_CAST_START",
["npcID"] = 196535,
},
[275112] = {
["source"] = "Blisterhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 197353,
},
[377500] = {
["source"] = "Infinite Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[373405] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[301734] = {
["source"] = "Mechanized Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 153068,
},
[412313] = {
["source"] = "Emberdusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 203664,
},
[377502] = {
["source"] = "Cliffdrip Fallstriker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189815,
},
[391837] = {
["source"] = "Emerald Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 191252,
},
[377503] = {
["source"] = "Rune Seal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187155,
},
[11802] = {
["source"] = "Dark Iron Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 6212,
},
[395934] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 197119,
},
[87225] = {
["source"] = "Ambermill Witchalok",
["event"] = "SPELL_CAST_START",
["npcID"] = 1889,
},
[375457] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[377505] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[165220] = {
["source"] = "Captain Brak",
["event"] = "SPELL_CAST_START",
["npcID"] = 81254,
},
[381602] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[375459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Rumbler",
["npcID"] = 192941,
},
[383651] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[12890] = {
["encounterName"] = "Shade of Eranikus",
["source"] = "Shade of Eranikus",
["encounterID"] = 493,
["event"] = "SPELL_CAST_START",
["npcID"] = 5709,
},
[174436] = {
["source"] = "Grom'kar Shadowblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 75753,
},
[17843] = {
["source"] = "Novice Timewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189583,
},
[395939] = {
["source"] = "Clearwater Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 192652,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[395941] = {
["source"] = "Clearwater Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 192652,
},
[408228] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[393894] = {
["source"] = "Nezascar the Sightless",
["event"] = "SPELL_CAST_START",
["npcID"] = 196535,
},
[314033] = {
["source"] = "K'thir Doomsayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 156572,
},
[406182] = {
["isChanneled"] = true,
["source"] = "Corruptor Tentacle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203338,
},
[114872] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[406183] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[391849] = {
["source"] = "Surging Magma",
["event"] = "SPELL_CAST_START",
["npcID"] = 195330,
},
[211299] = {
["source"] = "Watchful Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 105715,
},
[85692] = {
["source"] = "Doomguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 11859,
},
[395946] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 197119,
},
[111801] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58822,
},
[424615] = {
["source"] = "Elder Cassaphine",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[426663] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Snap Dragon",
["npcID"] = 212681,
},
[395947] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197124,
},
[389804] = {
["source"] = "Unstable Curator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187154,
},
[114873] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[412330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malrogg",
["npcID"] = 202606,
},
[250208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snapshell Hatchling",
["npcID"] = 152384,
},
[373424] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[391855] = {
["source"] = "Magmatalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189538,
},
[418476] = {
["source"] = "Illidan Stormrage",
["event"] = "SPELL_CAST_START",
["npcID"] = 205306,
},
[391856] = {
["source"] = "Tenmod",
["event"] = "SPELL_CAST_START",
["npcID"] = 194763,
},
[114874] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[395952] = {
["source"] = "Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197125,
},
[375475] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[418478] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[162157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dorogg the Ruthless",
["npcID"] = 74254,
},
[316093] = {
["source"] = "Zuythiz",
["event"] = "SPELL_CAST_START",
["npcID"] = 162141,
},
[369335] = {
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 184107,
},
[371383] = {
["source"] = "Hailbringer Theurgist",
["event"] = "SPELL_CAST_START",
["npcID"] = 189229,
},
[400052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swooping Flayer",
["npcID"] = 199809,
},
[395957] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[367290] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[264903] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Aqu'sirr",
["encounterID"] = 2130,
["event"] = "SPELL_CAST_START",
["npcID"] = 134056,
},
[400055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Slicer",
["npcID"] = 203384,
},
[147826] = {
["source"] = "Huolon",
["event"] = "SPELL_CAST_START",
["npcID"] = 73167,
},
[415556] = {
["source"] = "Dr. Boom",
["event"] = "SPELL_CAST_START",
["npcID"] = 215146,
},
[159089] = {
["source"] = "Emberbark Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 82284,
},
[107175] = {
["isChanneled"] = true,
["source"] = "Sodden Hozen Brawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56867,
},
[107044] = {
["isChanneled"] = true,
["source"] = "Violetwing Stagbeetle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56865,
},
[106942] = {
["isChanneled"] = true,
["source"] = "Destroying Sha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56765,
},
[400057] = {
["source"] = "Deepstrider Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 203727,
},
[377532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Crasher",
["npcID"] = 191057,
},
[400842] = {
["source"] = "Zaqali Blazestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199828,
},
[258202] = {
["source"] = "Awakened Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 128302,
},
[375485] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[196787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Infused Fury",
["npcID"] = 99956,
},
[369193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Dusttwister",
["npcID"] = 192371,
},
[366142] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[30643] = {
["encounterName"] = "Watchkeeper Gargolmar",
["source"] = "Hellfire Watcher",
["npcID"] = 17309,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1893,
},
[365126] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Absolution",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181548,
},
[157043] = {
["source"] = "Sargerei Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 77130,
},
[398012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthrazer",
["npcID"] = 203739,
},
[167282] = {
["source"] = "Boneseer Cold-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 88361,
},
[368383] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2537,
},
[425875] = {
["isChanneled"] = true,
["source"] = "Lingering Torment",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209564,
},
[37668] = {
["source"] = "Ethereal Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 18312,
},
[391870] = {
["source"] = "Mature Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191696,
},
[285040] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Ire of the Deep",
["npcID"] = 146736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[286619] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[285250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Strongarm",
["npcID"] = 146553,
},
[309961] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Il'gynoth",
["npcID"] = 158328,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2345,
},
[80066] = {
["source"] = "Zephyrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 49263,
},
[395967] = {
["source"] = "Vicious Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 197123,
},
[290437] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[400063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pesky Sporemoth",
["npcID"] = 202625,
},
[426684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[391382] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 197671,
},
[282153] = {
["encounterName"] = "Mekkatorque",
["source"] = "High Tinker Mekkatorque",
["npcID"] = 144796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2276,
},
[6254] = {
["encounterName"] = "Skum",
["source"] = "Skum",
["npcID"] = 3674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 589,
},
[364962] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["npcID"] = 180773,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2512,
},
[32369] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Apprentice",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18430,
},
[153974] = {
["source"] = "Black Iron Leadbelcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 76157,
},
[41238] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bonechewer Blood Prophet",
["npcID"] = 23237,
},
[196977] = {
["source"] = "Balnazzar",
["event"] = "SPELL_CAST_START",
["npcID"] = 90981,
},
[287333] = {
["encounterName"] = "King Rastakhan",
["source"] = "Bwonsamdi",
["npcID"] = 145644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[406209] = {
["source"] = "Han'thul",
["event"] = "SPELL_CAST_START",
["npcID"] = 198914,
},
[400066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Preying Dustmoth",
["npcID"] = 201068,
},
[288410] = {
["encounterName"] = "Mekkatorque",
["source"] = "High Tinker Mekkatorque",
["npcID"] = 144796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2276,
},
[41472] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[406210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[284276] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["npcID"] = 145616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[404932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[46036] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 24685,
},
[174453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Razorwing",
["npcID"] = 131558,
},
[150904] = {
["encounterName"] = "Hunter Bonetusk",
["source"] = "Hunter Bonetusk",
["encounterID"] = 1656,
["event"] = "SPELL_CAST_START",
["npcID"] = 75001,
},
[46181] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Apoko",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24553,
},
[12549] = {
["source"] = "Sparktouched Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 28112,
},
[365257] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Guardian Automa",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182071,
},
[289421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Pa'ku",
["npcID"] = 148624,
},
[256922] = {
["source"] = "Faceless Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 131821,
},
[312782] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[286779] = {
["encounterName"] = "King Rastakhan",
["source"] = "Phantom of Slaughter",
["npcID"] = 146493,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[334542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arch-Suppressor Laguas",
["npcID"] = 185019,
},
[286389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rastari Royal Guard",
["npcID"] = 148665,
},
[33805] = {
["source"] = "Wildhammer Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 19384,
},
[290568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazari Worshipper",
["npcID"] = 149569,
},
[41058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirling Blade",
["npcID"] = 23369,
},
[41169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Heartseeker",
["npcID"] = 23339,
},
[157049] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 77889,
},
[406215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandy Crocolisk",
["npcID"] = 199196,
},
[282411] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Akunda's Aspect",
["npcID"] = 144941,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2268,
},
[401810] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[152954] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["encounterID"] = 1686,
["event"] = "SPELL_CAST_START",
["npcID"] = 75839,
},
[29492] = {
["source"] = "Phantom Guest",
["event"] = "SPELL_CAST_START",
["npcID"] = 16409,
},
[424646] = {
["source"] = "Flametouched Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210150,
},
[288927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unliving Augur",
["npcID"] = 148488,
},
[412360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinmarrow",
["npcID"] = 203480,
},
[289360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Div'yane",
["npcID"] = 148615,
},
[264923] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[303830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warlord Zalzjar",
["npcID"] = 155840,
},
[289496] = {
["encounterName"] = "Champion of the Light",
["source"] = "Dark Iron Primalist",
["npcID"] = 146371,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2265,
},
[289497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Primalist",
["npcID"] = 146371,
},
[383693] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[369359] = {
["source"] = "Infused Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194200,
},
[404171] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[332500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fathomless Lurker",
["npcID"] = 209580,
},
[294349] = {
["source"] = "Living Waste",
["event"] = "SPELL_CAST_START",
["npcID"] = 144301,
},
[84165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempered War Golem",
["npcID"] = 5853,
},
[289498] = {
["encounterName"] = "Champion of the Light",
["source"] = "Dark Iron Primalist",
["npcID"] = 146371,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2265,
},
[162171] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77803,
},
[400077] = {
["source"] = "Deeplung Glowsplasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 204013,
},
[286915] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Indomitable",
["npcID"] = 147745,
},
[417735] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mycelial Growth",
["npcID"] = 208525,
},
[41032] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[400078] = {
["source"] = "Deeplung Glowsplasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 204013,
},
[82064] = {
["event"] = "SPELL_CAST_START",
["source"] = "John J. Keeshan",
["npcID"] = 48246,
},
[287037] = {
["encounterName"] = "Opulence",
["source"] = "Opulence",
["npcID"] = 145261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2271,
},
[8142] = {
["encounterName"] = "Verdan the Everliving",
["source"] = "Verdan the Everliving",
["npcID"] = 5775,
["event"] = "SPELL_CAST_START",
["encounterID"] = 591,
},
[265679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandfury Assassin",
["npcID"] = 129525,
},
[261438] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131527,
},
[412366] = {
["source"] = "Subterrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 203662,
},
[120416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Seedstealer",
["npcID"] = 61302,
},
[337556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[34785] = {
["source"] = "Tempest-Forge Peacekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 18405,
},
[330457] = {
["source"] = "Jovraal",
["event"] = "SPELL_CAST_START",
["npcID"] = 161271,
},
[422606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volgoth The Flamebringer",
["npcID"] = 209129,
},
[285305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Tideweaver",
["npcID"] = 146552,
},
[369365] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184132,
},
[412368] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[202634] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimhorn the Enslaver",
["npcID"] = 102566,
},
[154356] = {
["source"] = "Sargerei Soulpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 76595,
},
[328411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Audat",
["npcID"] = 185123,
},
[395987] = {
["source"] = "Jumping Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 199182,
},
[260466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow of the Darkness",
["npcID"] = 132090,
},
[309982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidtender Malketh",
["npcID"] = 154332,
},
[40508] = {
["encounterName"] = "Gurtogg Bloodboil",
["source"] = "Gurtogg Bloodboil",
["npcID"] = 22948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 605,
},
[41277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Behemoth",
["npcID"] = 23196,
},
[406227] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[40251] = {
["encounterName"] = "Teron Gorefiend",
["event"] = "SPELL_CAST_START",
["source"] = "Teron Gorefiend",
["npcID"] = 22871,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[412371] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[422610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tithris",
["npcID"] = 210674,
},
[38760] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["encounterID"] = 1900,
["event"] = "SPELL_CAST_START",
["npcID"] = 18341,
},
[328414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Arcanist",
["npcID"] = 165270,
},
[398780] = {
["source"] = "Farscale Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 200485,
},
[307937] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["npcID"] = 157238,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2334,
},
[27634] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Garaxxas",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24555,
},
[41183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Stormcaller",
["npcID"] = 22846,
},
[395991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Revenant",
["npcID"] = 191129,
},
[56934] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26731,
},
[30691] = {
["encounterName"] = "Vazruden the Herald",
["source"] = "Vazruden the Herald",
["npcID"] = 17307,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1892,
},
[225207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felblade Assassin",
["npcID"] = 101100,
},
[46042] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 24686,
},
[406231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lingering Wrath",
["npcID"] = 201758,
},
[257397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bonesaw",
["npcID"] = 129788,
},
[387508] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Keeper Orendi",
["npcID"] = 205874,
},
[152962] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[381659] = {
["source"] = "Cascade",
["event"] = "SPELL_CAST_START",
["npcID"] = 186962,
},
[391898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Scalecommander Haerothal",
["npcID"] = 201822,
},
[104318] = {
["source"] = "Wild Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 55659,
},
[147704] = {
["source"] = "Eternal Kilnmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72896,
},
[111813] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58822,
},
[41173] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Heartseeker",
["npcID"] = 23339,
},
[41188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 22847,
},
[289512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Char'golm",
["npcID"] = 146367,
},
[194942] = {
["encounterName"] = "Glazer",
["source"] = "Glazer",
["npcID"] = 95887,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1817,
},
[318181] = {
["source"] = "Vyrm the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 158179,
},
[385757] = {
["source"] = "Mender Eskros",
["event"] = "SPELL_CAST_START",
["npcID"] = 195303,
},
[412378] = {
["source"] = "Infinite Timebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205337,
},
[158083] = {
["source"] = "Adorned Bladetalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 79303,
},
[41184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Stormcaller",
["npcID"] = 22846,
},
[46184] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24556,
},
[404188] = {
["source"] = "Static Charge",
["event"] = "SPELL_CAST_START",
["npcID"] = 202847,
},
[381663] = {
["source"] = "Apex Blazewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 193291,
},
[171394] = {
["source"] = "Liquid Life",
["event"] = "SPELL_CAST_START",
["npcID"] = 81942,
},
[12542] = {
["source"] = "Shadowmoon Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 17694,
},
[424234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amirdrassil Sentinel",
["npcID"] = 207769,
},
[278444] = {
["source"] = "Devouring Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 134024,
},
[128708] = {
["source"] = "Bubbling Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59521,
},
[268306] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131545,
},
[40946] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
},
[56935] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26731,
},
[260907] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[106877] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["event"] = "SPELL_CAST_START",
["npcID"] = 56719,
},
[322281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparring Aspirant",
["npcID"] = 159505,
},
[13321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felhound Manastalker",
["npcID"] = 17401,
},
[39670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[194284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Grenadier",
["npcID"] = 131814,
},
[412383] = {
["source"] = "Colossian",
["event"] = "SPELL_CAST_START",
["npcID"] = 204093,
},
[199481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crusher",
["npcID"] = 97632,
},
[101907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strange Snowman",
["npcID"] = 54523,
},
[35943] = {
["source"] = "Shadowmoon Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 16594,
},
[198379] = {
["encounterName"] = "Archdruid Glaidalis",
["source"] = "Archdruid Glaidalis",
["encounterID"] = 1836,
["event"] = "SPELL_CAST_START",
["npcID"] = 96512,
},
[373477] = {
["source"] = "Bound Shoresnapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190193,
},
[257402] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[418528] = {
["source"] = "Illidan Stormrage",
["event"] = "SPELL_CAST_START",
["npcID"] = 205306,
},
[281329] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Jolly",
["npcID"] = 126845,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[188270] = {
["source"] = "Black Rook Falcon",
["event"] = "SPELL_CAST_START",
["npcID"] = 93064,
},
[169277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Destructor",
["npcID"] = 84337,
},
[34879] = {
["source"] = "Bloodwarder Falconer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17994,
},
[267824] = {
["source"] = "Soul Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 135240,
},
[361913] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181398,
},
[200007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bastillax",
["npcID"] = 96783,
},
[46185] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["encounterID"] = 1895,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24556,
},
[44538] = {
["source"] = "Ethereum Smuggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24698,
},
[332525] = {
["source"] = "Kyrian Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 171396,
},
[428004] = {
["isChanneled"] = true,
["source"] = "Dream Seedling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210423,
},
[102601] = {
["source"] = "Infinite Suppressor",
["event"] = "SPELL_CAST_START",
["npcID"] = 54920,
},
[412388] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[332526] = {
["source"] = "Kyrian Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 171396,
},
[285428] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Manceroy Flamefist",
["npcID"] = 144693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2266,
},
[264520] = {
["source"] = "Maddened Survivalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 131850,
},
[396007] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Songbird Queen",
["npcID"] = 59553,
},
[41986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angered Soul Fragment",
["npcID"] = 23398,
},
[418059] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[388532] = {
["event"] = "SPELL_CAST_START",
["source"] = "O'nank Shorescour",
["npcID"] = 193118,
},
[420236] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[373483] = {
["source"] = "Soggymaw Wavebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187263,
},
[50025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Catapult",
["npcID"] = 34793,
},
[35124] = {
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 18420,
},
[308669] = {
["encounterName"] = "Overlord Mathias Shaw",
["source"] = "Eye of Chaos",
["encounterID"] = 2376,
["event"] = "SPELL_CAST_START",
["npcID"] = 158315,
},
[264150] = {
["source"] = "Thornguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 131858,
},
[199645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crusher",
["npcID"] = 97632,
},
[40936] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
},
[423771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elisande",
["npcID"] = 208668,
},
[191848] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["npcID"] = 91808,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1813,
},
[391915] = {
["source"] = "Shapemaster Za'lani",
["event"] = "SPELL_CAST_START",
["npcID"] = 201545,
},
[33806] = {
["source"] = "Wildhammer Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 19384,
},
[32863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[365295] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[86620] = {
["encounterName"] = "Hogger",
["source"] = "Hogger",
["npcID"] = 46254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1144,
},
[361200] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["encounterID"] = 2539,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 182169,
},
[388529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seabreaker Skrog",
["npcID"] = 192931,
},
[200963] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fel Shocktrooper",
["npcID"] = 92776,
},
[257407] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[416048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[288301] = {
["source"] = "Tyrande Whisperwind",
["event"] = "SPELL_CAST_START",
["npcID"] = 146989,
},
[389870] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 197145,
},
[150753] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["encounterID"] = 1653,
["event"] = "SPELL_CAST_START",
["npcID"] = 74787,
},
[394838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henlare",
["npcID"] = 193229,
},
[305913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Shadowcaster",
["npcID"] = 153242,
},
[365298] = {
["source"] = "Automated Eliminator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184539,
},
[427899] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1751,
},
[426731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Oracle",
["npcID"] = 41096,
},
[152973] = {
["source"] = "Defense Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 76087,
},
[381681] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustpine Immolator",
["npcID"] = 187396,
},
[264931] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[417634] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[404207] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[134059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Blastgineer",
["npcID"] = 67884,
},
[67280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Agmar",
["npcID"] = 34922,
},
[410351] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[387826] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[381683] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[414425] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[374192] = {
["source"] = "Mature Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191696,
},
[396018] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Crybaby Hozen",
["npcID"] = 59552,
},
[389875] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[391268] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Earthwrought Smasher",
["npcID"] = 197595,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[417808] = {
["source"] = "Haywire Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 205889,
},
[396019] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Golden Beetle",
["npcID"] = 59545,
},
[422611] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[39121] = {
["source"] = "Bloodwarder Greenkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 18419,
},
[369399] = {
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[412402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flowfy",
["npcID"] = 203660,
},
[199050] = {
["source"] = "Valarjar Shieldmaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 95832,
},
[192631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ash'golm",
["npcID"] = 96681,
},
[369400] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184132,
},
[261446] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["encounterID"] = 2116,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131545,
},
[307968] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[421570] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[428765] = {
["source"] = "Tindral Sageswift",
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[426596] = {
["source"] = "Coven Diviner",
["event"] = "SPELL_CAST_START",
["npcID"] = 131819,
},
[215433] = {
["source"] = "Valarjar Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 95834,
},
[326399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Longbranch",
["npcID"] = 185021,
},
[427992] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[396023] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[56938] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["event"] = "SPELL_CAST_START",
["npcID"] = 26928,
},
[15611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormsnout",
["npcID"] = 3240,
},
[377594] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[330496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayspeaker",
["npcID"] = 185022,
},
[46155] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["encounterID"] = 1897,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24723,
},
[375547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Eruption",
["npcID"] = 191286,
},
[426741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[404216] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[225289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ranger",
["npcID"] = 101106,
},
[426524] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208459,
},
[118988] = {
["encounterName"] = "Gekkan",
["source"] = "Gekkan",
["encounterID"] = 2129,
["event"] = "SPELL_CAST_START",
["npcID"] = 61243,
},
[412408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Field Despair Bot K156",
["npcID"] = 205612,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 135552,
},
[264525] = {
["source"] = "Maddened Survivalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 131850,
},
[402170] = {
["source"] = "Vengeful Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 201490,
},
[259462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandskitter Crab",
["npcID"] = 129318,
},
[264694] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[424401] = {
["source"] = "Winterskorn Vrykul",
["event"] = "SPELL_CAST_START",
["npcID"] = 206037,
},
[75645] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[330500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayspeaker",
["npcID"] = 185022,
},
[381694] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[372562] = {
["source"] = "Brackenhide Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 188542,
},
[31287] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 81749,
},
[404220] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[204852] = {
["isChanneled"] = true,
["source"] = "Nightmare Dweller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101991,
},
[427428] = {
["source"] = "Greedy Gessie",
["event"] = "SPELL_CAST_START",
["npcID"] = 209936,
},
[369409] = {
["source"] = "Earthen Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184130,
},
[225313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ranger",
["npcID"] = 101106,
},
[307977] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["npcID"] = 157238,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2334,
},
[87761] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[421400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Spear",
["npcID"] = 209973,
},
[412413] = {
["source"] = "Skornak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203643,
},
[369411] = {
["source"] = "Cavern Seeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184301,
},
[310026] = {
["source"] = "Summoned Boggart",
["event"] = "SPELL_CAST_START",
["npcID"] = 158943,
},
[41069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Deathshaper",
["npcID"] = 22882,
},
[412414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Gastrinax",
["npcID"] = 203521,
},
[201839] = {
["source"] = "Taintheart Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 99366,
},
[425379] = {
["source"] = "Flamespreader",
["event"] = "SPELL_CAST_START",
["npcID"] = 210294,
},
[262929] = {
["source"] = "Torraske the Eternal",
["event"] = "SPELL_CAST_START",
["npcID"] = 127939,
},
[265880] = {
["source"] = "Matron Alma",
["event"] = "SPELL_CAST_START",
["npcID"] = 135365,
},
[414463] = {
["event"] = "SPELL_CAST_START",
["source"] = "MR-7 Tangler",
["npcID"] = 205824,
},
[173798] = {
["source"] = "Ontogen the Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 82372,
},
[175997] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83894,
},
[387843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Invoker",
["npcID"] = 196202,
},
[428674] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[87762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[35950] = {
["encounterName"] = "Warbringer O'mrogg",
["source"] = "Shattered Hand Houndmaster",
["encounterID"] = 1937,
["event"] = "SPELL_CAST_START",
["npcID"] = 17670,
},
[200720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul Fragment",
["npcID"] = 101753,
},
[381701] = {
["source"] = "Force of the Springs",
["event"] = "SPELL_CAST_START",
["npcID"] = 197008,
},
[273844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 167664,
},
[264153] = {
["source"] = "Devouring Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 134024,
},
[255371] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[414466] = {
["event"] = "SPELL_CAST_START",
["source"] = "MR-7 Gutcutter",
["npcID"] = 204515,
},
[216800] = {
["source"] = "Thistleleaf Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 91472,
},
[426519] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[414394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nixke Voltscroll",
["npcID"] = 200965,
},
[394660] = {
["source"] = "Bluescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 188723,
},
[197745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 96884,
},
[377608] = {
["source"] = "Frigellus",
["event"] = "SPELL_CAST_START",
["npcID"] = 189217,
},
[428695] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[414468] = {
["event"] = "SPELL_CAST_START",
["source"] = "MR-7 Shadowflipper",
["npcID"] = 205825,
},
[200674] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vile Soulmaster",
["npcID"] = 97014,
},
[377609] = {
["source"] = "Worldbreaker Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 185594,
},
[201902] = {
["source"] = "Taintheart Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 100539,
},
[400802] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 187676,
},
[391944] = {
["source"] = "Gnawbone Splintershield",
["event"] = "SPELL_CAST_START",
["npcID"] = 197847,
},
[426576] = {
["source"] = "Dream Seedling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211339,
},
[396040] = {
["encounterName"] = "Eranog",
["source"] = "Flamescale Captain",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 199233,
},
[12468] = {
["encounterName"] = "Jammal'an the Prophet",
["source"] = "Jammal'an the Prophet",
["encounterID"] = 488,
["event"] = "SPELL_CAST_START",
["npcID"] = 5710,
},
[200084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Retainer",
["npcID"] = 98366,
},
[369026] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184422,
},
[193941] = {
["source"] = "Embershard Scorpion",
["event"] = "SPELL_CAST_START",
["npcID"] = 98406,
},
[427510] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["npcID"] = 83894,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1757,
},
[377522] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Raging Ember",
["encounterID"] = 2611,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192464,
},
[377612] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[161509] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80699,
},
[267034] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Vol'zith the Whisperer",
["encounterID"] = 2133,
["event"] = "SPELL_CAST_START",
["npcID"] = 134069,
},
[258777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Oarsman",
["npcID"] = 127111,
},
[371471] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[289560] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Kimbul's Aspect",
["npcID"] = 144963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2268,
},
[194966] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[391948] = {
["source"] = "Sulfuric Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 191682,
},
[369423] = {
["source"] = "Skittering Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 184303,
},
[396044] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[174489] = {
["source"] = "Solar Magnifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 77559,
},
[423491] = {
["source"] = "Raelas Firewind",
["event"] = "SPELL_CAST_START",
["npcID"] = 209152,
},
[151964] = {
["source"] = "Cave Bat",
["event"] = "SPELL_CAST_START",
["npcID"] = 75467,
},
[394798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azra's Prized Peony",
["npcID"] = 193135,
},
[414475] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[172771] = {
["source"] = "Grom'kar Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 86809,
},
[7951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deviate Venomwing",
["npcID"] = 5756,
},
[41071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Deathshaper",
["npcID"] = 22882,
},
[414476] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[310041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Boggart",
["npcID"] = 158955,
},
[151965] = {
["source"] = "Bloodmaul Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 75191,
},
[169371] = {
["encounterName"] = "Xeri'tac",
["source"] = "Venom-Crazed Pale Hulk",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84554,
},
[414477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greaves",
["npcID"] = 207278,
},
[310042] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158367,
},
[90325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naga Brute",
["npcID"] = 91459,
},
[412430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gastrite",
["npcID"] = 205801,
},
[283422] = {
["encounterName"] = "Tussle Tonks",
["source"] = "Gnomercy 4.U.",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 145185,
},
[208279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igrul the Scalebane",
["npcID"] = 105159,
},
[250258] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["npcID"] = 122965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2085,
},
[9232] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 450,
["event"] = "SPELL_CAST_START",
["npcID"] = 209254,
},
[204896] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellfiend Devourer",
["npcID"] = 114406,
},
[212031] = {
["source"] = "Bound Energy",
["event"] = "SPELL_CAST_START",
["npcID"] = 105705,
},
[200050] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[273185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldbearer of Zul",
["npcID"] = 127879,
},
[422039] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[257426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Enforcer",
["npcID"] = 129602,
},
[385812] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[60781] = {
["source"] = "Forgotten Depths Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 30205,
},
[373526] = {
["source"] = "Shimmerwing Monarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 210767,
},
[387711] = {
["isChanneled"] = true,
["source"] = "Enraged Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200407,
},
[426768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[413387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[56858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Worshipper",
["npcID"] = 30111,
},
[375575] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[75992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[387192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Hammer",
["npcID"] = 209831,
},
[428472] = {
["isChanneled"] = true,
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210295,
},
[391958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloying Gale",
["npcID"] = 198126,
},
[417953] = {
["source"] = "Galok Wingslicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 206460,
},
[362410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cipherclad",
["npcID"] = 181349,
},
[256404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Gull",
["npcID"] = 127530,
},
[391959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unleashed Storm",
["npcID"] = 195846,
},
[428345] = {
["source"] = "Molten Scorpid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213696,
},
[169375] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84550,
},
[381721] = {
["source"] = "Nokhud Wardog",
["event"] = "SPELL_CAST_START",
["npcID"] = 185465,
},
[130770] = {
["event"] = "SPELL_CAST_START",
["source"] = "White Orchid",
["npcID"] = 62650,
},
[41072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Blood Mage",
["npcID"] = 22945,
},
[255814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[256405] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[269096] = {
["source"] = "Sandfury Dunerider",
["event"] = "SPELL_CAST_START",
["npcID"] = 130230,
},
[301177] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["source"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["event"] = "SPELL_CAST_START",
["npcID"] = 150190,
},
[169376] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84550,
},
[406058] = {
["source"] = "Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 203406,
},
[375580] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[310780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Depths",
["npcID"] = 159510,
},
[265002] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[322980] = {
["source"] = "Wayward Gormling",
["event"] = "SPELL_CAST_START",
["npcID"] = 160713,
},
[44224] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24664,
},
[425873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lingering Torment",
["npcID"] = 209564,
},
[314149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 161286,
},
[199389] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 99200,
},
[22458] = {
["source"] = "Blackwing Taskmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 12458,
},
[426147] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[204677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard Firecaller",
["npcID"] = 114399,
},
[207261] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[420476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crustbreaker Conduit",
["npcID"] = 207038,
},
[282676] = {
["source"] = "Blightgut",
["event"] = "SPELL_CAST_START",
["npcID"] = 145811,
},
[314151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shoth the Darkened",
["npcID"] = 160532,
},
[425995] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[31673] = {
["encounterName"] = "Hungarfen",
["source"] = "Hungarfen",
["encounterID"] = 1946,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17770,
},
[371489] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[412444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brullo the Strong",
["npcID"] = 203621,
},
[422683] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[359203] = {
["event"] = "SPELL_CAST_START",
["source"] = "Archaic Curator",
["npcID"] = 181857,
},
[385824] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[418531] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[406302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Caster",
["npcID"] = 200824,
},
[90329] = {
["source"] = "Ramkahen Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 48514,
},
[147878] = {
["source"] = "Cinderfall",
["event"] = "SPELL_CAST_START",
["npcID"] = 73175,
},
[257315] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Irontide Grenadier",
["npcID"] = 129758,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[422685] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[197797] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Risen Arcanist",
["npcID"] = 100486,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[418591] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[152998] = {
["source"] = "Grand Defense Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 76145,
},
[101592] = {
["source"] = "Murozond",
["event"] = "SPELL_CAST_START",
["npcID"] = 54432,
},
[406934] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[402209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Research",
["npcID"] = 201490,
},
[412448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmatron",
["npcID"] = 200115,
},
[394680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Scalecommander Elarthresh",
["npcID"] = 201820,
},
[3256] = {
["encounterName"] = "Theka the Martyr",
["source"] = "Scarab",
["encounterID"] = 596,
["event"] = "SPELL_CAST_START",
["npcID"] = 7269,
},
[426783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Seer",
["npcID"] = 212775,
},
[404258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[111668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raigonn",
["npcID"] = 56877,
},
[204611] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[147880] = {
["source"] = "Cinderfall",
["event"] = "SPELL_CAST_START",
["npcID"] = 73175,
},
[404259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[323058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salvage Dredger",
["npcID"] = 165609,
},
[375591] = {
["source"] = "Bubbling Sapling",
["event"] = "SPELL_CAST_START",
["npcID"] = 191313,
},
[404896] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[169382] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84550,
},
[428103] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Frost Witch",
["npcID"] = 44404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[400165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[385832] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[308018] = {
["source"] = "Aqir Scarab",
["event"] = "SPELL_CAST_START",
["npcID"] = 157904,
},
[373545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tranquil Tideskipper",
["npcID"] = 192148,
},
[200099] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[201123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vilethorn Blossom",
["npcID"] = 99360,
},
[396071] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 197142,
},
[260508] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["encounterID"] = 2114,
["event"] = "SPELL_CAST_START",
["npcID"] = 131667,
},
[408358] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[63830] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[265016] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[422693] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[303693] = {
["source"] = "Deepwater Maw",
["event"] = "SPELL_CAST_START",
["npcID"] = 151569,
},
[422078] = {
["source"] = "Emerald Wingguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210278,
},
[412455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alcanon",
["npcID"] = 203515,
},
[417227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Reaver",
["npcID"] = 207585,
},
[427509] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[34931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Darkcaster",
["npcID"] = 18331,
},
[173480] = {
["source"] = "Ironwing Flamespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 83389,
},
[373549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hot Springs Damselfly",
["npcID"] = 198592,
},
[300972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boggac Skullbash",
["npcID"] = 151308,
},
[36979] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Netherstrand Longbow",
["npcID"] = 21268,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[396075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Revenant",
["npcID"] = 191129,
},
[422696] = {
["source"] = "Avius Flamebeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 210305,
},
[130775] = {
["source"] = "Kunzen Rockflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 59120,
},
[312118] = {
["source"] = "Guardian of the Tombs",
["event"] = "SPELL_CAST_START",
["npcID"] = 127072,
},
[391903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Egg Guardian",
["npcID"] = 190171,
},
[414506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Emberwing",
["npcID"] = 209098,
},
[375599] = {
["isChanneled"] = true,
["source"] = "Bothersome Bee",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191315,
},
[427964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Incarnation",
["npcID"] = 213559,
},
[335505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stygian Behemoth",
["npcID"] = 181064,
},
[428077] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[391982] = {
["source"] = "Magmatalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189538,
},
[255041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feasting Skyscreamer",
["npcID"] = 128434,
},
[396078] = {
["source"] = "Summoned Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193288,
},
[316216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Egg Tender",
["npcID"] = 163112,
},
[251683] = {
["source"] = "Imp Mother Laglath",
["event"] = "SPELL_CAST_START",
["npcID"] = 125820,
},
[305978] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["npcID"] = 156818,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2329,
},
[289596] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Cavalier",
["npcID"] = 147828,
},
[170411] = {
["source"] = "Infested Venomfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 85232,
},
[277920] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jessibelle Moonshield",
["npcID"] = 148390,
},
[418605] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Future Self",
["npcID"] = 208959,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[115418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krik'thik Wind Shaper",
["npcID"] = 59801,
},
[316218] = {
["source"] = "Darkhaven Dredger",
["event"] = "SPELL_CAST_START",
["npcID"] = 156064,
},
[419790] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[427579] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[427960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firebrand Fystia",
["npcID"] = 209893,
},
[359829] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["encounterID"] = 2542,
["event"] = "SPELL_CAST_START",
["npcID"] = 181395,
},
[400177] = {
["isChanneled"] = true,
["source"] = "Zaqali Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199971,
},
[402225] = {
["source"] = "Vengeful Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 201490,
},
[421672] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[422416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Protector",
["npcID"] = 209450,
},
[375605] = {
["source"] = "Unstable Arcanogolem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201554,
},
[201781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mushroom Merchant",
["npcID"] = 101823,
},
[58980] = {
["source"] = "Drakkari Medicine Man",
["event"] = "SPELL_CAST_START",
["npcID"] = 29826,
},
[130265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Soldier",
["npcID"] = 66291,
},
[427670] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[36980] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Netherstrand Longbow",
["npcID"] = 21268,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[396084] = {
["source"] = "Force of the Springs",
["event"] = "SPELL_CAST_START",
["npcID"] = 197008,
},
[298898] = {
["encounterName"] = "Trixie & Naeno",
["source"] = "Naeno Megacrash",
["encounterID"] = 2312,
["event"] = "SPELL_CAST_START",
["npcID"] = 153755,
},
[339768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Athanos",
["npcID"] = 158891,
},
[46195] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Yazzai",
["encounterID"] = 1895,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24561,
},
[274631] = {
["source"] = "Ironhull Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 139799,
},
[421746] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[410225] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2677,
},
[369465] = {
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[304537] = {
["source"] = "Expedition Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 152147,
},
[158128] = {
["source"] = "Captain Brak",
["event"] = "SPELL_CAST_START",
["npcID"] = 81254,
},
[326463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwarren Slicer",
["npcID"] = 164036,
},
[262983] = {
["source"] = "Azsh'ari Stormbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 155629,
},
[271174] = {
["source"] = "Pallid Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 137830,
},
[130266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Soldier",
["npcID"] = 66200,
},
[326464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwarren Slicer",
["npcID"] = 164036,
},
[377658] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[411763] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[428082] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[168666] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["npcID"] = 84358,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[417928] = {
["source"] = "Invading Flameclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 206805,
},
[201872] = {
["source"] = "Lurking Observer",
["event"] = "SPELL_CAST_START",
["npcID"] = 154529,
},
[271841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Enforcer",
["npcID"] = 157002,
},
[319465] = {
["source"] = "Ambitious Duelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 164184,
},
[428526] = {
["encounterName"] = "Ozumat",
["source"] = "Splotch",
["npcID"] = 213806,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[374158] = {
["source"] = "Mature Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191696,
},
[389947] = {
["source"] = "Sirena the Fangbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 185907,
},
[426645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[377661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garden Herdmare",
["npcID"] = 188277,
},
[42723] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[151274] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Aggem Thorncurse",
["encounterID"] = 1659,
["event"] = "SPELL_CAST_START",
["npcID"] = 75149,
},
[269131] = {
["encounterName"] = "Lord Stormsong",
["source"] = "Lord Stormsong",
["encounterID"] = 2132,
["event"] = "SPELL_CAST_START",
["npcID"] = 134060,
},
[11538] = {
["source"] = "Marius Sunshard",
["event"] = "SPELL_CAST_START",
["npcID"] = 113542,
},
[115421] = {
["isChanneled"] = true,
["source"] = "Krik'thik Wind Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59801,
},
[389949] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 187299,
},
[359233] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 181047,
},
[394045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vadne Bleakheart",
["npcID"] = 195764,
},
[406333] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[391999] = {
["source"] = "Nokhud Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 185445,
},
[391998] = {
["source"] = "Erupting Magma",
["event"] = "SPELL_CAST_START",
["npcID"] = 191917,
},
[402237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Research",
["npcID"] = 201490,
},
[281420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Brinescale",
["npcID"] = 129600,
},
[207278] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[359235] = {
["source"] = "Halondrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[389953] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[422717] = {
["source"] = "Phebis of the Burning Sea",
["event"] = "SPELL_CAST_START",
["npcID"] = 210306,
},
[414525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morchie",
["npcID"] = 205708,
},
[359236] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[418621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Fanatic",
["npcID"] = 207896,
},
[363332] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2537,
},
[324425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elite Queensguard",
["npcID"] = 158555,
},
[367428] = {
["source"] = "Gnarled Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 184962,
},
[418622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Scarab",
["npcID"] = 207910,
},
[412479] = {
["source"] = "Dinn",
["event"] = "SPELL_CAST_START",
["npcID"] = 203646,
},
[249919] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[310092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Escaped Mutation",
["npcID"] = 157267,
},
[34934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Wraith",
["npcID"] = 18394,
},
[420671] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[373573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sprite Dreamer",
["npcID"] = 207617,
},
[420495] = {
["source"] = "Deceiver Hr'qoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 206784,
},
[418624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Assassin",
["npcID"] = 207915,
},
[320067] = {
["source"] = "Masked Faerie",
["event"] = "SPELL_CAST_START",
["npcID"] = 160293,
},
[381765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Avalantus",
["npcID"] = 201543,
},
[422699] = {
["source"] = "Phebis of the Burning Sea",
["event"] = "SPELL_CAST_START",
["npcID"] = 210306,
},
[303951] = {
["source"] = "Prince Erazmin",
["event"] = "SPELL_CAST_START",
["npcID"] = 153670,
},
[74613] = {
["source"] = "Dark Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 48269,
},
[199090] = {
["source"] = "Angerhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 96611,
},
[157931] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 76263,
},
[427727] = {
["source"] = "Reefbreaker Moruud",
["event"] = "SPELL_CAST_START",
["npcID"] = 209898,
},
[396101] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brackenhide Shaper",
["npcID"] = 197128,
},
[130414] = {
["source"] = "Ed",
["event"] = "SPELL_CAST_START",
["npcID"] = 82003,
},
[392006] = {
["source"] = "Sickly Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 186668,
},
[427672] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[330574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Death",
["npcID"] = 171317,
},
[398150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Dominator",
["npcID"] = 76446,
},
[424771] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[201139] = {
["source"] = "Wrathguard Bladelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 98810,
},
[314193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidwarped Watcher",
["npcID"] = 160491,
},
[162232] = {
["source"] = "Ogron Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 81240,
},
[198024] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[41334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Acolyte",
["npcID"] = 22939,
},
[428868] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[381770] = {
["encounterName"] = "Treemouth",
["source"] = "Decaying Slime",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 192481,
},
[417640] = {
["source"] = "Fel-Touched Shu'halo",
["event"] = "SPELL_CAST_START",
["npcID"] = 206182,
},
[299460] = {
["source"] = "Pistonhead Blaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 150250,
},
[314195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnashing Terror",
["npcID"] = 161334,
},
[414535] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[42870] = {
["source"] = "Dragonflayer Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 24051,
},
[411012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[412488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawling Goo",
["npcID"] = 205820,
},
[149947] = {
["source"] = "Pale Spider Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 80530,
},
[327054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Epilon",
["npcID"] = 158869,
},
[201141] = {
["isChanneled"] = true,
["source"] = "Wrathguard Bladelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98810,
},
[406345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[423523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[375630] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[73958] = {
["source"] = "Drowned Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 39464,
},
[407122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Warlock",
["npcID"] = 203857,
},
[423410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethka",
["npcID"] = 208740,
},
[392013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Walker",
["npcID"] = 201063,
},
[294726] = {
["source"] = "Abyssal Commander Sivara",
["event"] = "SPELL_CAST_START",
["npcID"] = 151881,
},
[155909] = {
["source"] = "Slavemaster Ok'mok",
["event"] = "SPELL_CAST_START",
["npcID"] = 75864,
},
[316855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwing Commander",
["npcID"] = 165267,
},
[383823] = {
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[419975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Splinterlimb",
["npcID"] = 209365,
},
[412492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brullo the Strong",
["npcID"] = 203621,
},
[395642] = {
["isChanneled"] = true,
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194401,
},
[183202] = {
["source"] = "Dread-Rider Malwick",
["event"] = "SPELL_CAST_START",
["npcID"] = 90902,
},
[419595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten General",
["npcID"] = 207941,
},
[161150] = {
["source"] = "Grom'kar Grenadier",
["event"] = "SPELL_CAST_START",
["npcID"] = 80936,
},
[202913] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[396674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[32888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Soul",
["npcID"] = 18506,
},
[424178] = {
["source"] = "Sickened Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207926,
},
[158141] = {
["source"] = "Icehoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 78920,
},
[163541] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79545,
},
[191900] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[202661] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Fel Scorcher",
["npcID"] = 102583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[400954] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volgoth The Flamebringer",
["npcID"] = 209129,
},
[194860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overgrown Larva",
["npcID"] = 94691,
},
[398720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bulwark",
["npcID"] = 200850,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1834,
},
[292903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Guard",
["npcID"] = 150958,
},
[257458] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[420490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crustbreaker Conduit",
["npcID"] = 207038,
},
[314205] = {
["source"] = "Shadow-Walker Yash'gth",
["event"] = "SPELL_CAST_START",
["npcID"] = 159318,
},
[351621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Woebringer",
["npcID"] = 176573,
},
[427638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nuoberon",
["npcID"] = 209113,
},
[361304] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Wild Stampede",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 183421,
},
[368890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Herald",
["npcID"] = 181408,
},
[251703] = {
["source"] = "Imp Mother Laglath",
["event"] = "SPELL_CAST_START",
["npcID"] = 125820,
},
[151253] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Death Speaker Jargba",
["encounterID"] = 1659,
["event"] = "SPELL_CAST_START",
["npcID"] = 75152,
},
[76008] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[272272] = {
["source"] = "Ravenous Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 169499,
},
[68841] = {
["source"] = "Apothecary Frye",
["event"] = "SPELL_CAST_START",
["npcID"] = 36272,
},
[196027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[274400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cutwater Duelist",
["npcID"] = 129559,
},
[148929] = {
["source"] = "Stonemaul Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 75835,
},
[166335] = {
["source"] = "Grom'kar Far Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82579,
},
[312712] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Forgotten",
["npcID"] = 157176,
},
[168383] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83894,
},
[91263] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["npcID"] = 44577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1052,
},
[406358] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[196028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[180670] = {
["event"] = "SPELL_CAST_START",
["source"] = "K'ute",
["npcID"] = 90215,
},
[68664] = {
["source"] = "Zapper Gnome",
["event"] = "SPELL_CAST_START",
["npcID"] = 36384,
},
[403201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishyra",
["npcID"] = 200579,
},
[300514] = {
["source"] = "Scrapbone Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 150146,
},
[369500] = {
["source"] = "Halondrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[330593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Fearspinner",
["npcID"] = 168724,
},
[195473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gritslime Snail",
["npcID"] = 91786,
},
[394763] = {
["source"] = "Private Shikzar",
["event"] = "SPELL_CAST_START",
["npcID"] = 193127,
},
[385883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[198077] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[419274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashbound Captain",
["npcID"] = 207952,
},
[411002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloud Prince",
["npcID"] = 45917,
},
[192706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Channeler Varisz",
["npcID"] = 100249,
},
[412505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyr's Vanguard",
["npcID"] = 205151,
},
[145860] = {
["source"] = "Thunderlord Talon",
["event"] = "SPELL_CAST_START",
["npcID"] = 72232,
},
[324447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elite Queensguard",
["npcID"] = 158555,
},
[69562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Bonecaster",
["npcID"] = 36564,
},
[371551] = {
["source"] = "Stormfang Dustcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 187551,
},
[398172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stellagosa",
["npcID"] = 200099,
},
[359265] = {
["source"] = "Automa Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 182799,
},
[428889] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[84713] = {
["source"] = "Master Apothecary Lydon",
["event"] = "SPELL_CAST_START",
["npcID"] = 48020,
},
[357218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Colossus",
["npcID"] = 188673,
},
[393323] = {
["source"] = "Iskaaran Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 198298,
},
[86249] = {
["source"] = "7th Legion Submariner",
["event"] = "SPELL_CAST_START",
["npcID"] = 45403,
},
[198079] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1834,
},
[120502] = {
["source"] = "Sandfury Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 130242,
},
[318312] = {
["source"] = "Stitchyard Surgeon",
["event"] = "SPELL_CAST_START",
["npcID"] = 159679,
},
[203163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[397096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[406366] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[335233] = {
["source"] = "Ravenous Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 169499,
},
[313363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terror Tendril",
["npcID"] = 160676,
},
[289645] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Battlemage",
["npcID"] = 147787,
},
[388474] = {
["source"] = "Quiescent Threshadon",
["event"] = "SPELL_CAST_START",
["npcID"] = 194803,
},
[191524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blade Dancer Illianna",
["npcID"] = 96657,
},
[426845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[297837] = {
["source"] = "Deeptide Frenzy",
["event"] = "SPELL_CAST_START",
["npcID"] = 144647,
},
[392569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[375652] = {
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 196115,
},
[398712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[289647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Breakwater Elemental",
["npcID"] = 148569,
},
[166341] = {
["source"] = "Grom'kar Far Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82579,
},
[375653] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[34170] = {
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 18420,
},
[406369] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[193951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barbed Spiderling",
["npcID"] = 97677,
},
[83877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oathsworn Wanderer",
["npcID"] = 44926,
},
[289649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Krag'wa",
["npcID"] = 148625,
},
[330604] = {
["source"] = "Vault Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200375,
},
[166342] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo Hunter",
["npcID"] = 79895,
},
[383846] = {
["source"] = "Furious Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 196540,
},
[271220] = {
["source"] = "Scrapbone Grunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 152960,
},
[169414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironmarch Warcaster",
["npcID"] = 78670,
},
[298894] = {
["source"] = "Malfunctioning Scraphound",
["event"] = "SPELL_CAST_START",
["npcID"] = 151301,
},
[419684] = {
["source"] = "Molten Runebear",
["event"] = "SPELL_CAST_START",
["npcID"] = 207101,
},
[88186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empyrean Assassin",
["npcID"] = 45922,
},
[174912] = {
["source"] = "Skothwa",
["event"] = "SPELL_CAST_START",
["npcID"] = 79500,
},
[193502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glayvianna Soulrender",
["npcID"] = 98177,
},
[310129] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[55098] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["encounterID"] = 1980,
["event"] = "SPELL_CAST_START",
["npcID"] = 29305,
},
[308875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heixi the Stonelord",
["npcID"] = 157171,
},
[320081] = {
["source"] = "Masked Faerie",
["event"] = "SPELL_CAST_START",
["npcID"] = 160293,
},
[408422] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[361324] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[255421] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2086,
},
[256445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Saurolisk",
["npcID"] = 123647,
},
[191941] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[196402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeprock Wormtamer",
["npcID"] = 97999,
},
[265081] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[332657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Satiated Sawtooth",
["npcID"] = 164587,
},
[323048] = {
["source"] = "Blistering Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 160345,
},
[221634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Braxas the Fleshcarver",
["npcID"] = 111290,
},
[371565] = {
["source"] = "Ohn'ir Windcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 191244,
},
[79085] = {
["source"] = "Ionis",
["event"] = "SPELL_CAST_START",
["npcID"] = 50790,
},
[342897] = {
["source"] = "Crazed Maw-shroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 174130,
},
[426855] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[202181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockback Gnasher",
["npcID"] = 91006,
},
[406378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[53333] = {
["source"] = "Anub'ar Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 29064,
},
[82669] = {
["source"] = "Bloodfang Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 45536,
},
[265084] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[419185] = {
["source"] = "Invading Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206765,
},
[270543] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Battlemage",
["npcID"] = 134091,
},
[22695] = {
["event"] = "SPELL_CAST_START",
["source"] = "Growing Squashling",
["npcID"] = 96545,
},
[387950] = {
["source"] = "Caldera Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187919,
},
[307863] = {
["encounterName"] = "Inquisitor Gnshal",
["source"] = "Inquisitor Gnshal",
["encounterID"] = 2371,
["event"] = "SPELL_CAST_START",
["npcID"] = 156161,
},
[359282] = {
["source"] = "Automated Eliminator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184539,
},
[200105] = {
["source"] = "Ghostly Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 98368,
},
[173514] = {
["source"] = "Ironwing Flamespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 83389,
},
[407121] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Warlock",
["npcID"] = 203857,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[300414] = {
["source"] = "Scrapbone Grinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 150143,
},
[225732] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[312884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplord Zrihj",
["npcID"] = 154559,
},
[373618] = {
["source"] = "Hypnosis Bat",
["event"] = "SPELL_CAST_START",
["npcID"] = 190174,
},
[411589] = {
["source"] = "Jalgon Stoutburn",
["event"] = "SPELL_CAST_START",
["npcID"] = 204426,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[265088] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[423775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amerinth",
["npcID"] = 210675,
},
[150990] = {
["source"] = "Razorfen Scarblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 74554,
},
[417763] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[265089] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[299110] = {
["source"] = "Annihilator Lak'hal",
["event"] = "SPELL_CAST_START",
["npcID"] = 153942,
},
[212423] = {
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 99541,
},
[415419] = {
["source"] = "Larodar, Keeper of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 205136,
},
[387955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Restorer",
["npcID"] = 196203,
},
[128233] = {
["source"] = "Scarlet Evangelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58685,
},
[191946] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[306828] = {
["encounterName"] = "Thrall the Corrupted",
["source"] = "Thrall",
["encounterID"] = 2332,
["event"] = "SPELL_CAST_START",
["npcID"] = 152089,
},
[265091] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[31999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Twisted Invader",
["npcID"] = 151742,
},
[417499] = {
["source"] = "Malfunctioning Robotic Cauldron",
["event"] = "SPELL_CAST_START",
["npcID"] = 207111,
},
[225100] = {
["source"] = "Guardian Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 104270,
},
[65301] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[166350] = {
["isChanneled"] = true,
["source"] = "Iron Infantry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82590,
},
[375671] = {
["source"] = "Calving Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 189312,
},
[168398] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Blackhand's Might Turret",
["encounterID"] = 1754,
["event"] = "SPELL_CAST_START",
["npcID"] = 84215,
},
[404846] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[211401] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 104295,
},
[367481] = {
["source"] = "Cruel Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 186206,
},
[294884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Scrapboss",
["npcID"] = 151683,
},
[196591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coldscale Gazecrawler",
["npcID"] = 108185,
},
[285572] = {
["encounterName"] = "King Rastakhan",
["source"] = "Phantom of Slaughter",
["npcID"] = 146493,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[175566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Fury",
["npcID"] = 87701,
},
[387960] = {
["source"] = "Caldera Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187919,
},
[56698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ahn'kahar Spell Flinger",
["npcID"] = 30278,
},
[199915] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["npcID"] = 99651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[276884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber-shaper Gokilak",
["npcID"] = 155985,
},
[311116] = {
["source"] = "Spiked Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 159416,
},
[381585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[317511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandstone Burrower",
["npcID"] = 158477,
},
[383866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incarnated Wick",
["npcID"] = 205407,
},
[418469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Deathwingurlugull",
["npcID"] = 205037,
},
[166205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Bonecrusher",
["npcID"] = 77995,
},
[85232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramkahen Field Worker",
["npcID"] = 47699,
},
[367485] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[165578] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[165329] = {
["source"] = "Thundering Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 141616,
},
[324483] = {
["source"] = "Vorkai Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 170033,
},
[257478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Mastiff",
["npcID"] = 128551,
},
[385916] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[418680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vexemia",
["npcID"] = 206967,
},
[260550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uul'gyneth",
["npcID"] = 126001,
},
[400747] = {
["source"] = "Damaged Titan Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 201441,
},
[314115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manipulator Shrog'lth",
["npcID"] = 159103,
},
[387965] = {
["source"] = "Time-Lost Bladewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 187232,
},
[59430] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[424825] = {
["source"] = "Sylvanesh the Ascended",
["event"] = "SPELL_CAST_START",
["npcID"] = 207107,
},
[188292] = {
["source"] = "Dark Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 91697,
},
[371584] = {
["source"] = "Embertooth Pooltender",
["event"] = "SPELL_CAST_START",
["npcID"] = 187445,
},
[260551] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["encounterID"] = 2114,
["event"] = "SPELL_CAST_START",
["npcID"] = 131667,
},
[323438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Ardenmoth",
["npcID"] = 166073,
},
[150997] = {
["source"] = "Razorfen Thornbolt",
["event"] = "SPELL_CAST_START",
["npcID"] = 74652,
},
[40317] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[398206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exhumed Spirit",
["npcID"] = 75979,
},
[167379] = {
["source"] = "Boneseer Cold-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 88361,
},
[418684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Destroyer",
["npcID"] = 208208,
},
[396159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[211406] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 104295,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[187706] = {
["source"] = "Dark Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 91697,
},
[59359] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'ar Venomancer",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29217,
},
[406399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Arcanist",
["npcID"] = 201736,
},
[264608] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[298488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Bonecrusher",
["npcID"] = 153531,
},
[288281] = {
["source"] = "Lieutenant Maliyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 146458,
},
[373636] = {
["source"] = "Konkhular",
["event"] = "SPELL_CAST_START",
["npcID"] = 194544,
},
[59259] = {
["encounterName"] = "General Bjarngrim",
["source"] = "Hardened Steel Berserker",
["encounterID"] = 1987,
["event"] = "SPELL_CAST_START",
["npcID"] = 28579,
},
[377732] = {
["source"] = "Refti Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184319,
},
[428926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[182739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sinister Shrieker",
["npcID"] = 101900,
},
[194611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Hunter",
["npcID"] = 98926,
},
[79881] = {
["source"] = "Worgen Rebel",
["event"] = "SPELL_CAST_START",
["npcID"] = 45292,
},
[223100] = {
["source"] = "Dreadheart Ruiner",
["event"] = "SPELL_CAST_START",
["npcID"] = 112021,
},
[29927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spell Shade",
["npcID"] = 16525,
},
[363400] = {
["source"] = "Vespoid Drone",
["event"] = "SPELL_CAST_START",
["npcID"] = 178159,
},
[36990] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Staff of Disintegration",
["npcID"] = 21274,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[420737] = {
["source"] = "Elder Cassaphine",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[393385] = {
["source"] = "Chalsec of the Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193847,
},
[375687] = {
["source"] = "Decay Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 190426,
},
[201411] = {
["source"] = "Dreadfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 100527,
},
[259531] = {
["encounterName"] = "Vol'kaal",
["source"] = "Reanimation Totem",
["npcID"] = 125977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2085,
},
[406404] = {
["source"] = "Calibrating Scent Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 203606,
},
[410254] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[59147] = {
["source"] = "Hardened Steel Skycaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 28580,
},
[173265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amorph Annihilator",
["npcID"] = 86620,
},
[362405] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[398154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defiled Spirit",
["npcID"] = 75451,
},
[40062] = {
["source"] = "Shadowmoon Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 17414,
},
[194545] = {
["source"] = "Kael'thas Sunstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 144913,
},
[204243] = {
["isChanneled"] = true,
["source"] = "Nightmare Dweller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101991,
},
[424836] = {
["source"] = "Sylvanesh the Ascended",
["event"] = "SPELL_CAST_START",
["npcID"] = 207107,
},
[214989] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Vengeance",
["npcID"] = 100364,
},
[367500] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[20801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imp Minion",
["npcID"] = 12922,
},
[224721] = {
["source"] = "Spiritwalker Ebonhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 152385,
},
[33919] = {
["encounterName"] = "Tavarok",
["source"] = "Tavarok",
["npcID"] = 18343,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1901,
},
[423265] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[56933] = {
["encounterName"] = "Frozen Commander",
["source"] = "Alliance Ranger",
["encounterID"] = 519,
["event"] = "SPELL_CAST_START",
["npcID"] = 26802,
},
[106856] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[196290] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[304822] = {
["source"] = "Deepwater Maw",
["event"] = "SPELL_CAST_START",
["npcID"] = 151569,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["npcID"] = 43873,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1041,
},
[367502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pocopoc",
["npcID"] = 181059,
},
[80117] = {
["source"] = "Crazed Gyreworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 151639,
},
[297879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Corruptor",
["npcID"] = 153347,
},
[417725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[367503] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[388897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Pincher",
["npcID"] = 200949,
},
[398690] = {
["source"] = "Glakis, Winter's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199502,
},
[309062] = {
["source"] = "Baruk Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 153099,
},
[15585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Healer",
["npcID"] = 17730,
},
[404364] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 202789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[420746] = {
["source"] = "Kaldorei Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207117,
},
[325802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeneye Bowman",
["npcID"] = 166936,
},
[87779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Adept",
["npcID"] = 45935,
},
[396641] = {
["source"] = "Elusive Elder Rockfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 194085,
},
[365458] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[16033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Injured Warsong Shaman",
["npcID"] = 27108,
},
[151432] = {
["encounterName"] = "Groyat, the Blind Hunter",
["source"] = "Groyat, the Blind Hunter",
["encounterID"] = 1660,
["event"] = "SPELL_CAST_START",
["npcID"] = 75247,
},
[174787] = {
["source"] = "Infested Ogron",
["event"] = "SPELL_CAST_START",
["npcID"] = 82062,
},
[314730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tisiphon",
["npcID"] = 157468,
},
[196808] = {
["source"] = "Mo'arg Brutalizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 95984,
},
[392080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverwalker Tamopo",
["npcID"] = 193240,
},
[157387] = {
["source"] = "Thunderlord Eagle-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 78962,
},
[57725] = {
["encounterName"] = "Salram the Fleshcrafter",
["source"] = "Salramm the Fleshcrafter",
["npcID"] = 26530,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2004,
},
[166364] = {
["isChanneled"] = true,
["source"] = "Grom'kar Boomer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82579,
},
[423260] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[201176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[299771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neri Sharpfin",
["npcID"] = 152108,
},
[394591] = {
["source"] = "Tombcaller Arban",
["event"] = "SPELL_CAST_START",
["npcID"] = 190047,
},
[192985] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[407504] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[199652] = {
["source"] = "King Haldor",
["event"] = "SPELL_CAST_START",
["npcID"] = 95843,
},
[378208] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[79607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skitterweb Matriarch",
["npcID"] = 44906,
},
[111631] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[365921] = {
["source"] = "Bound Realmbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 183416,
},
[268233] = {
["source"] = "Guardian Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 136249,
},
[408466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Crystal-collector",
["npcID"] = 204407,
},
[367496] = {
["source"] = "Foul Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 183497,
},
[396180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[314083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Huojin Defender",
["npcID"] = 159335,
},
[200154] = {
["source"] = "Understone Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102253,
},
[47731] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26929,
},
[299937] = {
["source"] = "HK-8 Aerial Oppression Unit",
["event"] = "SPELL_CAST_START",
["npcID"] = 153824,
},
[275364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abrasive Reconfigulator 8000",
["npcID"] = 140530,
},
[306866] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 156866,
},
[410516] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[40064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Technician",
["npcID"] = 17414,
},
[392087] = {
["source"] = "Bossy Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 190998,
},
[176606] = {
["source"] = "Sulfuric Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 85960,
},
[401297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[29579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Guest",
["npcID"] = 16409,
},
[400279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Flamewalker",
["npcID"] = 199826,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[367966] = {
["source"] = "Lihuvim",
["event"] = "SPELL_CAST_START",
["npcID"] = 184901,
},
[28993] = {
["source"] = "Nightlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 46981,
},
[388716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[205231] = {
["encounterName"] = "Terros",
["source"] = "Darkglare",
["npcID"] = 103673,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[389951] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[195037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Oracle",
["npcID"] = 95861,
},
[373614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[34945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Scale-Healer",
["npcID"] = 21126,
},
[255446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amaki Bloodsinger",
["npcID"] = 128773,
},
[315772] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[327280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valinor",
["npcID"] = 167524,
},
[390715] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[315900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Dunewalker",
["npcID"] = 162171,
},
[373662] = {
["isChanneled"] = true,
["source"] = "Sentinel Talondras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186420,
},
[400283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Preserver",
["npcID"] = 199972,
},
[426905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Ghur'sha",
["npcID"] = 212778,
},
[273767] = {
["source"] = "7th Legion Stalwart",
["event"] = "SPELL_CAST_START",
["npcID"] = 147168,
},
[106853] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["encounterID"] = 1304,
["event"] = "SPELL_CAST_START",
["npcID"] = 56541,
},
[257495] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["npcID"] = 127479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2101,
},
[76026] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[164907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Ritual Bones",
["npcID"] = 75715,
},
[408476] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Erratic Remnant",
["npcID"] = 202824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[310184] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158376,
},
[151570] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Venomous Discharge Crystal",
["encounterID"] = 1661,
["event"] = "SPELL_CAST_START",
["npcID"] = 74942,
},
[387740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrhold Watcher",
["npcID"] = 192696,
},
[299946] = {
["source"] = "HK-8 Aerial Oppression Unit",
["event"] = "SPELL_CAST_START",
["npcID"] = 153824,
},
[34871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbrafen Witchdoctor",
["npcID"] = 20115,
},
[385024] = {
["source"] = "Salty Salamander",
["event"] = "SPELL_CAST_START",
["npcID"] = 188027,
},
[371618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Farseer",
["npcID"] = 201117,
},
[314720] = {
["source"] = "Gamon",
["event"] = "SPELL_CAST_START",
["npcID"] = 158588,
},
[370225] = {
["source"] = "Shrieking Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187159,
},
[392098] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[388001] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[422813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Ordan",
["npcID"] = 208727,
},
[400288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Pain",
["npcID"] = 201290,
},
[176611] = {
["source"] = "Lesser Brimfury",
["event"] = "SPELL_CAST_START",
["npcID"] = 85924,
},
[388002] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[316331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Exterminator",
["npcID"] = 154434,
},
[359334] = {
["source"] = "Ancient Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 184954,
},
[385955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[422815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Ordan",
["npcID"] = 208727,
},
[231901] = {
["source"] = "Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 116285,
},
[372056] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[377765] = {
["source"] = "Windborne Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 189485,
},
[169445] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[402772] = {
["source"] = "Deepstrider Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 202312,
},
[376426] = {
["source"] = "Summoned Ripple",
["event"] = "SPELL_CAST_START",
["npcID"] = 192463,
},
[314843] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[375719] = {
["source"] = "Steam Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190700,
},
[304479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Writhing Soulmass",
["npcID"] = 185017,
},
[408483] = {
["source"] = "Elder Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 203846,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[404388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatching Egg",
["npcID"] = 202897,
},
[194019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeprock Scrapper",
["npcID"] = 98003,
},
[69068] = {
["source"] = "Soulguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 36620,
},
[385959] = {
["source"] = "Defense Orb",
["event"] = "SPELL_CAST_START",
["npcID"] = 195184,
},
[296372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Klontzas",
["npcID"] = 152612,
},
[427343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[302964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ma'haat the Indomitable",
["npcID"] = 151739,
},
[209378] = {
["source"] = "Imacu'tya",
["event"] = "SPELL_CAST_START",
["npcID"] = 104275,
},
[388008] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[162280] = {
["source"] = "Blook",
["event"] = "SPELL_CAST_START",
["npcID"] = 78030,
},
[151566] = {
["source"] = "Bloodmaul Magma Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 74349,
},
[7967] = {
["encounterName"] = "Mutanus the Devourer",
["source"] = "Mutanus the Devourer",
["npcID"] = 3654,
["event"] = "SPELL_CAST_START",
["encounterID"] = 592,
},
[402769] = {
["source"] = "Sundered Flame Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 202260,
},
[240095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Commander Urgoz",
["npcID"] = 118006,
},
[400296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Preserver",
["npcID"] = 199972,
},
[57984] = {
["source"] = "Primal Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 61029,
},
[319294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torgok",
["npcID"] = 162817,
},
[351976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torment Golem",
["npcID"] = 176598,
},
[392105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[315927] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[36227] = {
["source"] = "Unamused Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 110721,
},
[57781] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["npcID"] = 30625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1968,
},
[167401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jabberback",
["npcID"] = 79726,
},
[410537] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[153067] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[373678] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[312666] = {
["source"] = "High Executor Yothrim",
["event"] = "SPELL_CAST_START",
["npcID"] = 158597,
},
[271291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktooth Scrapper",
["npcID"] = 129097,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[289722] = {
["source"] = "Nathanos Blightcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 147187,
},
[15586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[31554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Defender",
["npcID"] = 17958,
},
[404396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[373680] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2609,
},
[201399] = {
["source"] = "Dreadfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 100527,
},
[48054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[15970] = {
["source"] = "Nightmare Wyrmkin",
["event"] = "SPELL_CAST_START",
["npcID"] = 5280,
},
[199143] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[392111] = {
["source"] = "Shiverweb Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 185814,
},
[398254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winterpelt Defender",
["npcID"] = 200362,
},
[368545] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 184599,
},
[365299] = {
["source"] = "Automated Eliminator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184539,
},
[157165] = {
["source"] = "Sargerei Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 77132,
},
[41091] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowmoon Houndmaster",
["npcID"] = 23018,
},
[396208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 197126,
},
[166380] = {
["source"] = "Grom'kar Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 82597,
},
[408495] = {
["source"] = "Elder Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 203846,
},
[404400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[420782] = {
["isChanneled"] = true,
["source"] = "Zaqali Lavatongue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208661,
},
[317639] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[392014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rokzul",
["npcID"] = 194458,
},
[51586] = {
["source"] = "Dragonflayer Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 28410,
},
[289727] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnomish Commando",
["npcID"] = 148442,
},
[128249] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 58756,
},
[369442] = {
["source"] = "Infused Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194200,
},
[8995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Rifleman",
["npcID"] = 42155,
},
[36228] = {
["source"] = "Rental Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 38650,
},
[33787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Collaborator",
["npcID"] = 17962,
},
[268239] = {
["source"] = "Guardian Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 136249,
},
[188907] = {
["source"] = "Darkfiend Dreadbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 92789,
},
[404403] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[199146] = {
["source"] = "Gildedfur Stag",
["event"] = "SPELL_CAST_START",
["npcID"] = 96609,
},
[414041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goblin Shredder",
["npcID"] = 200964,
},
[385974] = {
["encounterName"] = "Vexamus",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[365903] = {
["source"] = "Dominated Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 185346,
},
[36279] = {
["source"] = "Rift Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 21148,
},
[215178] = {
["source"] = "Trained Nightsaber",
["event"] = "SPELL_CAST_START",
["npcID"] = 148933,
},
[375385] = {
["source"] = "Steam Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190700,
},
[35511] = {
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[314708] = {
["source"] = "HK-3 Aerial Dissuasion Unit",
["event"] = "SPELL_CAST_START",
["npcID"] = 159261,
},
[293827] = {
["source"] = "Mechagon Tinkerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 144294,
},
[312257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Depthspeaker",
["npcID"] = 162887,
},
[297923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Myrmidon",
["npcID"] = 152883,
},
[316353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Warrior",
["npcID"] = 154462,
},
[408502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["npcID"] = 204412,
},
[110945] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["encounterID"] = 1303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56747,
},
[289733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jek'kwa",
["npcID"] = 148621,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[106428] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[365901] = {
["source"] = "Dominated Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 185346,
},
[299973] = {
["source"] = "Killsaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 152007,
},
[170480] = {
["source"] = "Shadowmoon Voidaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 79589,
},
[76133] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[157170] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 77812,
},
[51587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Spiritualist",
["npcID"] = 28410,
},
[373693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[324513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Experimental Misstep",
["npcID"] = 199859,
},
[385980] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[428983] = {
["isChanneled"] = true,
["source"] = "Pip",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210518,
},
[57780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steelforged Defender",
["npcID"] = 33236,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[312262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Depthspeaker",
["npcID"] = 162887,
},
[296276] = {
["source"] = "Juvenile Snapdragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 154181,
},
[153581] = {
["source"] = "Soaring Chakram Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 76132,
},
[277451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tech Scavenger",
["npcID"] = 155195,
},
[406854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Arcanist",
["npcID"] = 201736,
},
[396615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[112992] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["encounterID"] = 1413,
["event"] = "SPELL_CAST_START",
["npcID"] = 56717,
},
[200551] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[131575] = {
["source"] = "Monk Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 66947,
},
[336834] = {
["source"] = "Monstrous Riftcrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 184606,
},
[199151] = {
["source"] = "Angerhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 96611,
},
[367554] = {
["source"] = "Bound Realmbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 183416,
},
[369602] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184580,
},
[313945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Crusher",
["npcID"] = 161218,
},
[299979] = {
["source"] = "Sawblade Clearcutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 151871,
},
[318409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shath'Yar Scribe",
["npcID"] = 163690,
},
[304075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspeaker",
["npcID"] = 155908,
},
[265168] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[283598] = {
["encounterName"] = "Champion of the Light",
["source"] = "Frida Ironbellows",
["npcID"] = 144680,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2265,
},
[408509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portalkeeper Cimbra",
["npcID"] = 202613,
},
[102241] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[265169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Archelion Great Turtle",
["npcID"] = 130918,
},
[308172] = {
["source"] = "Fallen Voidspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 152722,
},
[392130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[197105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[309420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rei Lun",
["npcID"] = 157162,
},
[52611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Necromancer",
["npcID"] = 27732,
},
[326602] = {
["source"] = "Engorged Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 170767,
},
[256489] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[267604] = {
["source"] = "Deadrot Budling",
["event"] = "SPELL_CAST_START",
["npcID"] = 136129,
},
[378832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Collier",
["npcID"] = 195605,
},
[417683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[152964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Spawn",
["npcID"] = 75652,
},
[365895] = {
["source"] = "Dominated Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 185574,
},
[398276] = {
["source"] = "Glakis, Winter's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199502,
},
[375716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["npcID"] = 191206,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[366326] = {
["source"] = "Foul Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 183497,
},
[42772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
},
[162295] = {
["source"] = "Trained Bonestripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 72650,
},
[309757] = {
["source"] = "Zan-Tien Pikeman",
["event"] = "SPELL_CAST_START",
["npcID"] = 156325,
},
[320463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steelskin Linebreaker",
["npcID"] = 160479,
},
[302477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Haunt",
["npcID"] = 151754,
},
[404415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Damned Warrior",
["npcID"] = 202922,
},
[267905] = {
["encounterName"] = "Tidesage Council",
["source"] = "Brother Ironhull",
["encounterID"] = 2131,
["event"] = "SPELL_CAST_START",
["npcID"] = 134063,
},
[266106] = {
["source"] = "Feral Bloodswarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 133835,
},
[169851] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[165851] = {
["source"] = "Emberbark Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 82284,
},
[7154] = {
["encounterName"] = "Antu'sul",
["source"] = "Sandfury Soul Eater",
["encounterID"] = 595,
["event"] = "SPELL_CAST_START",
["npcID"] = 7247,
},
[320465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Torturer",
["npcID"] = 202555,
},
[412614] = {
["source"] = "Viridian King",
["event"] = "SPELL_CAST_START",
["npcID"] = 201029,
},
[20805] = {
["source"] = "Mudsnout Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 2373,
},
[374724] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[393309] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Flamewrought Eradicator",
["npcID"] = 198311,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[174917] = {
["source"] = "Infested Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 82841,
},
[150326] = {
["source"] = "Razorfen Stonechanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 74549,
},
[266285] = {
["source"] = "Stillwater Crocolisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 156760,
},
[374865] = {
["source"] = "Konkhular",
["event"] = "SPELL_CAST_START",
["npcID"] = 194544,
},
[256494] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[417641] = {
["source"] = "Felbolg",
["event"] = "SPELL_CAST_START",
["npcID"] = 206189,
},
[123648] = {
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61946,
},
[314325] = {
["source"] = "Kzit'kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 160867,
},
[414665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murloc Gillbeater",
["npcID"] = 205823,
},
[187895] = {
["source"] = "Risen Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 146341,
},
[287705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Defender",
["npcID"] = 148393,
},
[314326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crushing Tendril",
["npcID"] = 161312,
},
[196516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Channeler Varisz",
["npcID"] = 100249,
},
[15587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Medic",
["npcID"] = 8894,
},
[149463] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[388046] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[263502] = {
["source"] = "Ritual Mask",
["event"] = "SPELL_CAST_START",
["npcID"] = 134123,
},
[400333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffkeeper Bouldani",
["npcID"] = 202612,
},
[158414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Grunt",
["npcID"] = 91599,
},
[156722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Exhumer",
["npcID"] = 77700,
},
[396605] = {
["source"] = "Fulgurb",
["event"] = "SPELL_CAST_START",
["npcID"] = 193170,
},
[309316] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[52496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Fiend",
["npcID"] = 27734,
},
[121601] = {
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61946,
},
[174769] = {
["source"] = "Steamscar Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81747,
},
[400335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[386866] = {
["source"] = "Gorging Stagbeetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 195709,
},
[123649] = {
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 61947,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[167420] = {
["source"] = "Lady Liadrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 79823,
},
[154110] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["encounterID"] = 1699,
["event"] = "SPELL_CAST_START",
["npcID"] = 76141,
},
[314331] = {
["source"] = "Kzit'kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 160867,
},
[68872] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[310236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kilxl the Gaping Maw",
["npcID"] = 157266,
},
[271329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pathfinder Tacha",
["npcID"] = 200263,
},
[166397] = {
["source"] = "Grimrail Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 82590,
},
[406481] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[200185] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[193018] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[157051] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 77889,
},
[308190] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harrier Nir'verash",
["npcID"] = 160868,
},
[412626] = {
["source"] = "General Zskorro",
["event"] = "SPELL_CAST_START",
["npcID"] = 203592,
},
[336859] = {
["source"] = "Azmogal",
["event"] = "SPELL_CAST_START",
["npcID"] = 162873,
},
[420817] = {
["source"] = "Kaldorei Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207117,
},
[196508] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Deranged Mindflayer",
["npcID"] = 99657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[174768] = {
["source"] = "Steamscar Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81747,
},
[396825] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[193611] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[316383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anubisath Sentinel",
["npcID"] = 162534,
},
[336809] = {
["source"] = "Azmogal",
["event"] = "SPELL_CAST_START",
["npcID"] = 162873,
},
[221688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Braxas the Fleshcarver",
["npcID"] = 111290,
},
[401318] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[388000] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[352223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Sentinel",
["npcID"] = 185027,
},
[305236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Venomweaver",
["npcID"] = 161229,
},
[259572] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["npcID"] = 122965,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2085,
},
[169341] = {
["source"] = "Grom'kar Footsoldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 81283,
},
[375770] = {
["source"] = "Frozion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193655,
},
[372027] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[258864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Marine",
["npcID"] = 130027,
},
[398296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[293861] = {
["source"] = "Ernst",
["event"] = "SPELL_CAST_START",
["npcID"] = 151629,
},
[387037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torch Revenant",
["npcID"] = 201472,
},
[185854] = {
["source"] = "Nightmare Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 92792,
},
[170035] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 84358,
},
[34697] = {
["encounterName"] = "Laj",
["source"] = "Laj",
["encounterID"] = 1927,
["event"] = "SPELL_CAST_START",
["npcID"] = 17980,
},
[59160] = {
["source"] = "Stormforged Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 28582,
},
[146327] = {
["source"] = "Broken Clefthoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 72881,
},
[31281] = {
["source"] = "Chet the Slime-Breeder",
["event"] = "SPELL_CAST_START",
["npcID"] = 48322,
},
[277481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armed Prisoner",
["npcID"] = 154011,
},
[209404] = {
["source"] = "Duskwatch Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 104247,
},
[388060] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[168929] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Skulloc",
["encounterID"] = 1754,
["event"] = "SPELL_CAST_START",
["npcID"] = 83612,
},
[310246] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["npcID"] = 157602,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[188927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfiend Dreadbringer",
["npcID"] = 92789,
},
[123652] = {
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 61947,
},
[398300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[170825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warlock Soulstealer",
["npcID"] = 79482,
},
[336868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Riftcrasher",
["npcID"] = 184606,
},
[16564] = {
["source"] = "D-1000",
["event"] = "SPELL_CAST_START",
["npcID"] = 49268,
},
[283628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anointed Disciple",
["npcID"] = 145898,
},
[102151] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[386015] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[406493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinmarrow",
["npcID"] = 203480,
},
[390111] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[32197] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[32325] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["npcID"] = 18341,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1900,
},
[185857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Marine",
["npcID"] = 130027,
},
[157534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Seer",
["npcID"] = 78073,
},
[170824] = {
["source"] = "Khargax the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81537,
},
[78509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodfang Scavenger",
["npcID"] = 44547,
},
[275012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Worg",
["npcID"] = 152998,
},
[406495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[351206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Soulwarden",
["npcID"] = 176575,
},
[107356] = {
["encounterName"] = "Taran Zhu",
["source"] = "Corrupted Taran Zhu",
["encounterID"] = 1306,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56884,
},
[429021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[275440] = {
["source"] = "Blight Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 146564,
},
[360432] = {
["source"] = "Toadious",
["event"] = "SPELL_CAST_START",
["npcID"] = 184395,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["encounterID"] = 1746,
["event"] = "SPELL_CAST_START",
["npcID"] = 81522,
},
[297966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maw of the Maw",
["npcID"] = 185013,
},
[150023] = {
["encounterName"] = "Magmolatus",
["source"] = "Magmolatus",
["encounterID"] = 1655,
["event"] = "SPELL_CAST_START",
["npcID"] = 74475,
},
[114859] = {
["source"] = "Bored Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 59614,
},
[418784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[371358] = {
["source"] = "Unstable Curator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187154,
},
[386012] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[163334] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Neesa Nox",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80808,
},
[123654] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[322541] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Horrific Bonemauler",
["npcID"] = 162109,
},
[69056] = {
["source"] = "Soulguard Watchman",
["event"] = "SPELL_CAST_START",
["npcID"] = 36478,
},
[192003] = {
["encounterName"] = "Serpentrix",
["source"] = "Blazing Hydra Spawn",
["npcID"] = 97259,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[270987] = {
["source"] = "Disciple of Nalorakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 120949,
},
[12492] = {
["encounterName"] = "Jammal'an the Prophet",
["source"] = "Jammal'an the Prophet",
["encounterID"] = 488,
["event"] = "SPELL_CAST_START",
["npcID"] = 5710,
},
[406918] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[383975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Windlord",
["npcID"] = 200390,
},
[13860] = {
["source"] = "Baron Ashbury",
["event"] = "SPELL_CAST_START",
["npcID"] = 45880,
},
[396751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'raxes",
["npcID"] = 200537,
},
[240126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Commander Urgoz",
["npcID"] = 118006,
},
[209410] = {
["source"] = "Duskwatch Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 104247,
},
[386024] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[256039] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[20295] = {
["encounterName"] = "Lady Anacondra",
["source"] = "Lady Anacondra",
["npcID"] = 3671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 585,
},
[318449] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[89105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurking Tempest",
["npcID"] = 45704,
},
[400688] = {
["source"] = "Wyrmslayer Angvardi",
["event"] = "SPELL_CAST_START",
["npcID"] = 201013,
},
[405043] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[192005] = {
["encounterName"] = "Serpentrix",
["source"] = "Arcane Hydra Spawn",
["npcID"] = 97260,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[386026] = {
["source"] = "Unstable Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 194895,
},
[404456] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[59528] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["encounterID"] = 1985,
["event"] = "SPELL_CAST_START",
["npcID"] = 28587,
},
[416743] = {
["source"] = "Hungering Ghoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 206016,
},
[418791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[15305] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 78553,
},
[417872] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[304093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspeaker",
["npcID"] = 155908,
},
[386028] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[418269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 208500,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[383981] = {
["source"] = "Rising Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 194575,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[57047] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[209413] = {
["source"] = "Guardian Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 104270,
},
[39347] = {
["source"] = "Sunseeker Gene-Splicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 19507,
},
[295929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oddly Large Mawrat",
["npcID"] = 154030,
},
[372539] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[275452] = {
["source"] = "Blight Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 146564,
},
[50648] = {
["source"] = "Relios the Relic Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 45734,
},
[193022] = {
["source"] = "Eredar Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 96196,
},
[325232] = {
["source"] = "Sylvari Tenderhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 170031,
},
[306735] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["encounterID"] = 2329,
["event"] = "SPELL_CAST_START",
["npcID"] = 156818,
},
[269310] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Titan Keeper Hezrel",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 134419,
},
[418796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[209587] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dread Falke",
["npcID"] = 105750,
},
[56969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[88010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[157355] = {
["source"] = "Shadowmoon Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81711,
},
[338011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Violent Muckmare",
["npcID"] = 166318,
},
[199176] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[429037] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[76047] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[420846] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[377844] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[416751] = {
["source"] = "Vargul Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 207805,
},
[59529] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["encounterID"] = 1985,
["event"] = "SPELL_CAST_START",
["npcID"] = 28587,
},
[404465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galakhad",
["npcID"] = 200717,
},
[37591] = {
["source"] = "Ambermill Brewmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 3577,
},
[12058] = {
["source"] = "Iron Dwarf Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 29979,
},
[32364] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["npcID"] = 18344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[365870] = {
["source"] = "Eternal Assembler",
["event"] = "SPELL_CAST_START",
["npcID"] = 183404,
},
[211464] = {
["source"] = "Felbound Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 104278,
},
[39207] = {
["source"] = "Bloodvenom",
["event"] = "SPELL_CAST_START",
["npcID"] = 49264,
},
[59696] = {
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24082,
},
[338939] = {
["source"] = "Decrepit Bilespawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 166928,
},
[150032] = {
["encounterName"] = "Magmolatus",
["source"] = "Magmolatus",
["encounterID"] = 1655,
["event"] = "SPELL_CAST_START",
["npcID"] = 74475,
},
[310271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Will of N'Zoth",
["npcID"] = 154495,
},
[201226] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Fury",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 100531,
},
[361001] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Custodian",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 184522,
},
[406516] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[150661] = {
["source"] = "Gorg the Host",
["event"] = "SPELL_CAST_START",
["npcID"] = 76496,
},
[336893] = {
["source"] = "Azmogal",
["event"] = "SPELL_CAST_START",
["npcID"] = 162873,
},
[222728] = {
["source"] = "Wisp",
["event"] = "SPELL_CAST_START",
["npcID"] = 112252,
},
[161781] = {
["source"] = "Frostfire Gronnling",
["event"] = "SPELL_CAST_START",
["npcID"] = 79529,
},
[20296] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 4289,
},
[295939] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["source"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["event"] = "SPELL_CAST_START",
["npcID"] = 150190,
},
[412661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invoq",
["npcID"] = 203627,
},
[178702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bittertide Brinetail",
["npcID"] = 131674,
},
[40844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Worker",
["npcID"] = 22963,
},
[10277] = {
["source"] = "Torn Fin Coastrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 2375,
},
[185425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steeljaw Grizzly",
["npcID"] = 96677,
},
[308227] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[405016] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[60236] = {
["source"] = "Storming Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 28547,
},
[404472] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[162321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bladespire Ogron",
["npcID"] = 78173,
},
[394536] = {
["source"] = "Chief Dead Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 195337,
},
[200205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[404473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galakhad",
["npcID"] = 200717,
},
[382249] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[310277] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["npcID"] = 157602,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[329383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nascent Shade",
["npcID"] = 178013,
},
[420856] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[397134] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[294195] = {
["source"] = "Defense Bot Mk I",
["event"] = "SPELL_CAST_START",
["npcID"] = 151649,
},
[271371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Taskmaster",
["npcID"] = 156986,
},
[158014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gruffy",
["npcID"] = 193251,
},
[317284] = {
["source"] = "Mistress Dyrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 162880,
},
[83915] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["npcID"] = 44715,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[159847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironmarch Grunt",
["npcID"] = 76556,
},
[161299] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80699,
},
[115650] = {
["source"] = "Fizzy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59520,
},
[196111] = {
["encounterName"] = "Serpentrix",
["source"] = "Seaspray Crab",
["npcID"] = 91793,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[57825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostbringer",
["npcID"] = 30286,
},
[173169] = {
["source"] = "Turbulent Steamfury",
["event"] = "SPELL_CAST_START",
["npcID"] = 81685,
},
[366701] = {
["source"] = "Ebonsteel Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 185268,
},
[412669] = {
["source"] = "Klakatak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203618,
},
[392192] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Blazing Fiend",
["npcID"] = 190688,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[429051] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[211470] = {
["source"] = "Shadow Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 104300,
},
[408574] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 202692,
},
[406527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Banana Bomber",
["npcID"] = 203641,
},
[73564] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["npcID"] = 44819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[166420] = {
["source"] = "Blackrock Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 81422,
},
[363525] = {
["source"] = "Mawsworn Purger",
["event"] = "SPELL_CAST_START",
["npcID"] = 183652,
},
[260617] = {
["source"] = "Zuvembi Brewer Zekal",
["event"] = "SPELL_CAST_START",
["npcID"] = 130260,
},
[404480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Lieutenant",
["npcID"] = 201647,
},
[59019] = {
["source"] = "Spitting Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 29774,
},
[408576] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[197137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[150038] = {
["encounterName"] = "Magmolatus",
["source"] = "Magmolatus",
["encounterID"] = 1655,
["event"] = "SPELL_CAST_START",
["npcID"] = 74475,
},
[167589] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79548,
},
[192018] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["encounterID"] = 1806,
["event"] = "SPELL_CAST_START",
["npcID"] = 95833,
},
[112911] = {
["source"] = "Fragment of Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 58810,
},
[316951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrosive Digester",
["npcID"] = 162828,
},
[154135] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["encounterID"] = 1699,
["event"] = "SPELL_CAST_START",
["npcID"] = 76141,
},
[170517] = {
["source"] = "Iron Explosive",
["event"] = "SPELL_CAST_START",
["npcID"] = 78479,
},
[387135] = {
["source"] = "Primalist Arcblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 194898,
},
[384663] = {
["source"] = "Forgewrought Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 194816,
},
[417899] = {
["source"] = "Risen Adventurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205992,
},
[413136] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[390150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmeater",
["npcID"] = 186612,
},
[169494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[211473] = {
["source"] = "Shadow Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 104300,
},
[395427] = {
["source"] = "Overseer Lahar",
["event"] = "SPELL_CAST_START",
["npcID"] = 189235,
},
[312336] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["npcID"] = 156575,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[198963] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[336910] = {
["source"] = "Xantuth the Blighted",
["event"] = "SPELL_CAST_START",
["npcID"] = 162872,
},
[115030] = {
["source"] = "Muck Brawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 192630,
},
[40078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leviathan",
["npcID"] = 22884,
},
[387189] = {
["source"] = "Srivantor",
["event"] = "SPELL_CAST_START",
["npcID"] = 201555,
},
[333612] = {
["source"] = "Encroaching Mite",
["event"] = "SPELL_CAST_START",
["npcID"] = 160811,
},
[369675] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[246286] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vilescale Harpooner",
["npcID"] = 123771,
},
[412678] = {
["source"] = "Klakatak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203618,
},
[267288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Ring Shaman",
["npcID"] = 135671,
},
[34259] = {
["source"] = "Atal'ai Deathwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 5271,
},
[369677] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184580,
},
[363533] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[59020] = {
["source"] = "Spitting Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 29774,
},
[343056] = {
["source"] = "Heraclor",
["event"] = "SPELL_CAST_START",
["npcID"] = 172025,
},
[386059] = {
["source"] = "Basrikron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193535,
},
[120149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 194853,
},
[157348] = {
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[256464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faithless Trapper",
["npcID"] = 129874,
},
[159802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostwolf Champion",
["npcID"] = 72940,
},
[272592] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[331045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savagewing Teroclaw",
["npcID"] = 170067,
},
[391871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskpaw Tendontearer",
["npcID"] = 197820,
},
[321000] = {
["source"] = "Prime Shieldguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 174672,
},
[369674] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[331044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savagewing Teroclaw",
["npcID"] = 170067,
},
[384014] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[15653] = {
["source"] = "Nightmare Wyrmkin",
["event"] = "SPELL_CAST_START",
["npcID"] = 5280,
},
[158498] = {
["source"] = "Windroc",
["event"] = "SPELL_CAST_START",
["npcID"] = 79398,
},
[211477] = {
["source"] = "Legion Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 104277,
},
[392007] = {
["source"] = "Shadepaw Thief",
["event"] = "SPELL_CAST_START",
["npcID"] = 192748,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[316439] = {
["source"] = "Swarmguard Kzaz",
["event"] = "SPELL_CAST_START",
["npcID"] = 155723,
},
[382791] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[392207] = {
["source"] = "Gareed",
["event"] = "SPELL_CAST_START",
["npcID"] = 200722,
},
[40079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leviathan",
["npcID"] = 22884,
},
[23601] = {
["source"] = "Bolgaff",
["event"] = "SPELL_CAST_START",
["npcID"] = 47003,
},
[147998] = {
["source"] = "Blazebound Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72897,
},
[310298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sinister Soulcarver",
["npcID"] = 162717,
},
[197144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[355349] = {
["source"] = "Reality Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 184185,
},
[404409] = {
["source"] = "Reisa the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 200600,
},
[200216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[160285] = {
["source"] = "Goren Gouger",
["event"] = "SPELL_CAST_START",
["npcID"] = 80690,
},
[404496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Lieutenant",
["npcID"] = 201383,
},
[385157] = {
["source"] = "Greenbelt Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 192834,
},
[410904] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[212773] = {
["source"] = "Duskwatch Reinforcement",
["event"] = "SPELL_CAST_START",
["npcID"] = 107073,
},
[176218] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 81749,
},
[199193] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[395816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Wallcrasher",
["npcID"] = 187813,
},
[400889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[199772] = {
["source"] = "Valarjar Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 97087,
},
[381470] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[381444] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[260322] = {
["source"] = "Nol'ixwan",
["event"] = "SPELL_CAST_START",
["npcID"] = 130741,
},
[420881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Ashwarden",
["npcID"] = 208659,
},
[148001] = {
["source"] = "Blazebound Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72897,
},
[200218] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[394261] = {
["source"] = "Gurblbrblr the Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 197211,
},
[365851] = {
["source"] = "Eternal Assembler",
["event"] = "SPELL_CAST_START",
["npcID"] = 183404,
},
[259732] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[263206] = {
["source"] = "Loa-Gutter Darter",
["event"] = "SPELL_CAST_START",
["npcID"] = 128048,
},
[172574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironwing Flamespitter",
["npcID"] = 86373,
},
[314400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Blood",
["npcID"] = 159312,
},
[31717] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["npcID"] = 17882,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1948,
},
[367642] = {
["isChanneled"] = true,
["source"] = "Point Defense Drone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185363,
},
[386072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[412693] = {
["source"] = "Magtembo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200111,
},
[394264] = {
["source"] = "Hyenamaster Durgun",
["event"] = "SPELL_CAST_START",
["npcID"] = 186515,
},
[400407] = {
["source"] = "Nidharr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201310,
},
[148002] = {
["source"] = "Blazebound Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72897,
},
[41360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Promenade Sentinel",
["npcID"] = 23394,
},
[390169] = {
["source"] = "Magmaclaw Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 187218,
},
[375068] = {
["encounterName"] = "Magmatusk",
["source"] = "Lava Tentacles",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 190023,
},
[396812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[396313] = {
["source"] = "Nokhud Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185147,
},
[291878] = {
["encounterName"] = "King Mechagon",
["source"] = "Aerial Unit R-21/X",
["encounterID"] = 2260,
["event"] = "SPELL_CAST_START",
["npcID"] = 150396,
},
[343072] = {
["source"] = "Heraclor",
["event"] = "SPELL_CAST_START",
["npcID"] = 172025,
},
[148003] = {
["source"] = "Eternal Kilnmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72896,
},
[79850] = {
["source"] = "Aquarius the Unbound",
["event"] = "SPELL_CAST_START",
["npcID"] = 47009,
},
[161314] = {
["source"] = "Mandrakor",
["event"] = "SPELL_CAST_START",
["npcID"] = 84406,
},
[388374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Dreadsquall",
["npcID"] = 191831,
},
[314405] = {
["source"] = "Ramkahen Citizen",
["event"] = "SPELL_CAST_START",
["npcID"] = 157795,
},
[396315] = {
["source"] = "Nokhud Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185147,
},
[359960] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181398,
},
[61326] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[148004] = {
["source"] = "Eternal Kilnmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72896,
},
[396316] = {
["source"] = "Nokhud Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 185353,
},
[387849] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[400413] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[304169] = {
["source"] = "Aqir Mindhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 153532,
},
[298025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Wraith",
["npcID"] = 158707,
},
[195103] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Wandering Shellback",
["npcID"] = 91785,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1810,
},
[196127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mak'rana Siltwalker",
["npcID"] = 91790,
},
[172578] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Melded Berserker",
["npcID"] = 86372,
},
[412700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magtembo",
["npcID"] = 200111,
},
[271406] = {
["source"] = "Maw of Shul-Nagruth",
["event"] = "SPELL_CAST_START",
["npcID"] = 128610,
},
[384032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amethyzar the Glittering",
["npcID"] = 193132,
},
[32329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underbog Shambler",
["npcID"] = 17871,
},
[406802] = {
["source"] = "Cavern Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202307,
},
[404754] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Null Glimmer",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 202971,
},
[396069] = {
["source"] = "Primal Earthshard",
["event"] = "SPELL_CAST_START",
["npcID"] = 185647,
},
[359459] = {
["source"] = "Empowered Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 183947,
},
[16587] = {
["source"] = "Vile Tutor",
["event"] = "SPELL_CAST_START",
["npcID"] = 8548,
},
[150054] = {
["source"] = "Pale Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 76465,
},
[20802] = {
["source"] = "Brackenhide Putrifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 186363,
},
[410655] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[93655] = {
["encounterName"] = "Mekgineer Thermaplugg",
["source"] = "Mekgineer Thermaplugg",
["encounterID"] = 382,
["event"] = "SPELL_CAST_START",
["npcID"] = 7800,
},
[393411] = {
["source"] = "Rakkesh of the Flow",
["event"] = "SPELL_CAST_START",
["npcID"] = 193849,
},
[85846] = {
["source"] = "Forsaken Catapult",
["event"] = "SPELL_CAST_START",
["npcID"] = 46052,
},
[395458] = {
["source"] = "Harkyn Grymstone",
["event"] = "SPELL_CAST_START",
["npcID"] = 186200,
},
[420895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[398370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calcifying Crawler",
["npcID"] = 203342,
},
[397048] = {
["source"] = "Frostbreath Arachnid",
["event"] = "SPELL_CAST_START",
["npcID"] = 199333,
},
[407775] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[314889] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Exposed Synapse",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 159578,
},
[415435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[396317] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[369703] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[149179] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[395936] = {
["source"] = "Clearwater Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 192652,
},
[260635] = {
["source"] = "Queen Tzxi'kik",
["event"] = "SPELL_CAST_START",
["npcID"] = 128974,
},
[361513] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181224,
},
[316463] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Mindgate",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158374,
},
[406564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[315697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Soldier",
["npcID"] = 162885,
},
[39058] = {
["source"] = "Grannok",
["event"] = "SPELL_CAST_START",
["npcID"] = 93057,
},
[404517] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[300082] = {
["source"] = "Volatile Tide Surger",
["event"] = "SPELL_CAST_START",
["npcID"] = 150371,
},
[385569] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[406566] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Primal Lava Elemental",
["npcID"] = 202264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[396327] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[195108] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 111638,
},
[408614] = {
["source"] = "Sundered Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198869,
},
[150448] = {
["source"] = "Pale Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 76465,
},
[20811] = {
["source"] = "Magistrate Burnside",
["event"] = "SPELL_CAST_START",
["npcID"] = 47790,
},
[373803] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["npcID"] = 189893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[424997] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[31704] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["encounterID"] = 1948,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17882,
},
[306228] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Flayed Soul",
["npcID"] = 157005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[195109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 91783,
},
[310324] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["npcID"] = 157354,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[377900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Skullhauler",
["npcID"] = 199298,
},
[396330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Sentry",
["npcID"] = 185357,
},
[386700] = {
["source"] = "Rimebound Froststalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199795,
},
[371984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[31407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Spearman",
["npcID"] = 17729,
},
[164261] = {
["source"] = "Stonemaul Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 75835,
},
[308278] = {
["encounterName"] = "Alleria Windrunner",
["source"] = "Alleria Windrunner",
["encounterID"] = 2338,
["event"] = "SPELL_CAST_START",
["npcID"] = 152718,
},
[373201] = {
["source"] = "Windyfin Skybasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187431,
},
[336947] = {
["source"] = "Unbreakable Urtz",
["event"] = "SPELL_CAST_START",
["npcID"] = 162853,
},
[273467] = {
["source"] = "Nerubis Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 145660,
},
[380174] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[404209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[403855] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[310329] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["npcID"] = 157602,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[68895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Apparition",
["npcID"] = 36551,
},
[408620] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[16102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[420907] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[386096] = {
["source"] = "Screechflight Cursewife",
["event"] = "SPELL_CAST_START",
["npcID"] = 184816,
},
[392239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mosshair Mammoth",
["npcID"] = 193395,
},
[32330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lykul Wasp",
["npcID"] = 17732,
},
[385172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[400430] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[351285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prince Renathal",
["npcID"] = 178006,
},
[279614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Grenadier",
["npcID"] = 131814,
},
[355381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reality Breacher",
["npcID"] = 184185,
},
[382002] = {
["source"] = "Apex Blazewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 193291,
},
[310331] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Mind's Eye",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158122,
},
[279615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Grenadier",
["npcID"] = 131814,
},
[394288] = {
["source"] = "Gurblbrblr the Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 197211,
},
[398385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blaze Hound Matron",
["npcID"] = 204379,
},
[276892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber-shaper Gokilak",
["npcID"] = 155985,
},
[172588] = {
["source"] = "Melded Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 86372,
},
[306953] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Shad'har the Insatiable",
["npcID"] = 157231,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2335,
},
[43667] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["npcID"] = 23953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2026,
},
[406792] = {
["source"] = "Agitated Magmaclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 202288,
},
[167092] = {
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_START",
["npcID"] = 79510,
},
[259618] = {
["source"] = "Vicious Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 130756,
},
[316477] = {
["source"] = "Ysedra the Darkener",
["event"] = "SPELL_CAST_START",
["npcID"] = 157483,
},
[318525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shath'Yar Scribe",
["npcID"] = 163690,
},
[422961] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200926,
},
[294165] = {
["source"] = "Ebon Chainguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 185316,
},
[199210] = {
["source"] = "Valarjar Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 96640,
},
[167470] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 78553,
},
[80003] = {
["source"] = "Worgen Commando",
["event"] = "SPELL_CAST_START",
["npcID"] = 45861,
},
[372201] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[365626] = {
["isChanneled"] = true,
["source"] = "Ancient Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184954,
},
[102173] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[377912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[289859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnomish Commando",
["npcID"] = 148442,
},
[64145] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Crusher Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33966,
},
[359483] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181224,
},
[336958] = {
["source"] = "Unbreakable Urtz",
["event"] = "SPELL_CAST_START",
["npcID"] = 162853,
},
[169519] = {
["source"] = "Thornling Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 81730,
},
[422964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[400439] = {
["source"] = "Wyrmslayer Angvardi",
["event"] = "SPELL_CAST_START",
["npcID"] = 201013,
},
[374451] = {
["source"] = "Burning Chain Caster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195919,
},
[429108] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Cycle Warden",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 209800,
},
[398392] = {
["source"] = "Sulfira Wanderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 205808,
},
[365835] = {
["source"] = "Eternal Artisan",
["event"] = "SPELL_CAST_START",
["npcID"] = 183407,
},
[193069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Infester",
["npcID"] = 96587,
},
[166032] = {
["source"] = "Ogron Warcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 80775,
},
[422966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nolaki",
["npcID"] = 208706,
},
[11431] = {
["encounterName"] = "Lord Pythas",
["source"] = "Lord Pythas",
["npcID"] = 3670,
["event"] = "SPELL_CAST_START",
["encounterID"] = 588,
},
[386107] = {
["source"] = "Screechflight Hexclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 183995,
},
[396346] = {
["source"] = "Sirena the Fangbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 185907,
},
[398394] = {
["source"] = "Deep Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 203898,
},
[376073] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[318534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Gatekeeper",
["npcID"] = 163708,
},
[328773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Weaver",
["npcID"] = 200375,
},
[68899] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[375870] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[328772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Weaver",
["npcID"] = 200375,
},
[396348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 197134,
},
[256551] = {
["encounterName"] = "Ring of Booty",
["source"] = "Sawtooth Shark",
["npcID"] = 129359,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[375871] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[336964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ember Worm",
["npcID"] = 168515,
},
[396349] = {
["source"] = "Bloodbeak the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 201535,
},
[398397] = {
["source"] = "Magmaclaw Supplicant",
["event"] = "SPELL_CAST_START",
["npcID"] = 203933,
},
[163379] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Bombsquad",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80875,
},
[407733] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[396350] = {
["source"] = "Bloodbeak the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 201535,
},
[178837] = {
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_START",
["npcID"] = 79510,
},
[422972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valunei",
["npcID"] = 208709,
},
[196144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mak'rana Siltwalker",
["npcID"] = 91790,
},
[396351] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[398399] = {
["source"] = "Chittering Acidclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 201093,
},
[384065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amethyzar the Glittering",
["npcID"] = 193132,
},
[268030] = {
["source"] = "Tidesage Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 136186,
},
[420925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[231532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrestar Demolisher",
["npcID"] = 114845,
},
[392257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thousandmile",
["npcID"] = 193676,
},
[377923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Spark",
["npcID"] = 186624,
},
[387317] = {
["source"] = "Ruby Culler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190093,
},
[390210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudgatu",
["npcID"] = 197346,
},
[366001] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Acquisitions Automa",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182074,
},
[2601] = {
["source"] = "Shadowforge Senator",
["event"] = "SPELL_CAST_START",
["npcID"] = 8904,
},
[113999] = {
["encounterName"] = "Rattlegore",
["source"] = "Rattlegore",
["encounterID"] = 1428,
["event"] = "SPELL_CAST_START",
["npcID"] = 59153,
},
[191026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirana Starlight",
["npcID"] = 99451,
},
[192050] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["npcID"] = 91808,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[36246] = {
["source"] = "Station Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 51879,
},
[429119] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[365627] = {
["source"] = "Ancient Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 184954,
},
[400642] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198998,
},
[271443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cornered Operative",
["npcID"] = 142072,
},
[87179] = {
["source"] = "Dalaran Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 2358,
},
[412928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[328781] = {
["source"] = "Vault Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199126,
},
[377927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 192690,
},
[335720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Ritualist",
["npcID"] = 155812,
},
[260651] = {
["source"] = "Karkinus the Capsizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200907,
},
[351307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Accursed",
["npcID"] = 176572,
},
[374020] = {
["source"] = "Containment Apparatus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190342,
},
[362601] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182169,
},
[316496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Heartpiercer",
["npcID"] = 162305,
},
[305515] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["npcID"] = 156501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[160312] = {
["source"] = "Sargerei Cleric",
["event"] = "SPELL_CAST_START",
["npcID"] = 77134,
},
[7124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lost Son of Arugal",
["npcID"] = 47015,
},
[40598] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[269399] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Vol'zith the Whisperer",
["encounterID"] = 2133,
["event"] = "SPELL_CAST_START",
["npcID"] = 134069,
},
[377930] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 192692,
},
[420933] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[414974] = {
["source"] = "Blazing Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205140,
},
[378420] = {
["source"] = "Provoked Geode",
["event"] = "SPELL_CAST_START",
["npcID"] = 189040,
},
[45101] = {
["source"] = "Dawnblade Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 24979,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[308308] = {
["source"] = "Fallen Heartpiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 158092,
},
[425030] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[14887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firebrand Darkweaver",
["npcID"] = 9261,
},
[210150] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[365646] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[302166] = {
["source"] = "HK-8 Aerial Oppression Unit",
["event"] = "SPELL_CAST_START",
["npcID"] = 150190,
},
[304214] = {
["source"] = "Yox'ith",
["event"] = "SPELL_CAST_START",
["npcID"] = 155706,
},
[59685] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[260654] = {
["source"] = "Karkinus the Capsizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200907,
},
[250505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidtender Malketh",
["npcID"] = 154332,
},
[260349] = {
["source"] = "Ten'gor",
["event"] = "SPELL_CAST_START",
["npcID"] = 130713,
},
[388918] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[400144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[425033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ignit the Firebranded",
["npcID"] = 209620,
},
[378112] = {
["source"] = "Encroaching Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 189314,
},
[298073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kosarus the Fallen",
["npcID"] = 185016,
},
[365649] = {
["source"] = "Sacred Matrix Automa",
["event"] = "SPELL_CAST_START",
["npcID"] = 184734,
},
[384079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amethyzar the Glittering",
["npcID"] = 193132,
},
[56937] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["event"] = "SPELL_CAST_START",
["npcID"] = 26930,
},
[396366] = {
["source"] = "Tikarr Frostclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 201542,
},
[390223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Tarasek",
["npcID"] = 187089,
},
[425035] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[320600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huwerath",
["npcID"] = 162965,
},
[202295] = {
["source"] = "Feltongue Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 116784,
},
[193826] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[392272] = {
["source"] = "Grove Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 186457,
},
[161533] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80699,
},
[394493] = {
["source"] = "Ko'jo",
["event"] = "SPELL_CAST_START",
["npcID"] = 186367,
},
[267360] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Vol'zith the Whisperer",
["encounterID"] = 2133,
["event"] = "SPELL_CAST_START",
["npcID"] = 134069,
},
[425037] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[376063] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Smoldering Hellion",
["npcID"] = 191510,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[392273] = {
["source"] = "Ergburk",
["event"] = "SPELL_CAST_START",
["npcID"] = 194409,
},
[195129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Crusher",
["npcID"] = 91782,
},
[204344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Assassin",
["npcID"] = 191955,
},
[412922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[396370] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[200248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Arcanist",
["npcID"] = 98280,
},
[11981] = {
["source"] = "Hakkari Sapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 8336,
},
[369750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187602,
},
[363607] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Domination Core",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181244,
},
[154175] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[163390] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Neesa Nox",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80808,
},
[369751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Soldier",
["npcID"] = 186604,
},
[406778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Blaze Hound",
["npcID"] = 205234,
},
[22121] = {
["source"] = "Timberstep Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194041,
},
[373051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Salamancer",
["npcID"] = 186669,
},
[389532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morlash",
["npcID"] = 201549,
},
[155961] = {
["source"] = "Slavemaster Ok'mok",
["event"] = "SPELL_CAST_START",
["npcID"] = 75864,
},
[334538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arch-Suppressor Laguas",
["npcID"] = 185019,
},
[390952] = {
["source"] = "Grand Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 188009,
},
[172606] = {
["source"] = "Goc",
["event"] = "SPELL_CAST_START",
["npcID"] = 85580,
},
[420947] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[188046] = {
["source"] = "Denizen of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 198489,
},
[392279] = {
["source"] = "Wild Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 194089,
},
[40088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 22875,
},
[260741] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131825,
},
[203323] = {
["source"] = "Gornoth the Lost",
["event"] = "SPELL_CAST_START",
["npcID"] = 103656,
},
[392280] = {
["source"] = "Kaurdyth",
["event"] = "SPELL_CAST_START",
["npcID"] = 197835,
},
[396367] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 197142,
},
[278961] = {
["source"] = "Diseased Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 133870,
},
[166464] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[425045] = {
["source"] = "Splinterlimb",
["event"] = "SPELL_CAST_START",
["npcID"] = 209365,
},
[369754] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[174735] = {
["source"] = "Grulkor",
["event"] = "SPELL_CAST_START",
["npcID"] = 86157,
},
[275560] = {
["source"] = "Blight Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 146564,
},
[196157] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Technician",
["npcID"] = 99645,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[363772] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[427252] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[166465] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[384092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timetender Athekk",
["npcID"] = 193042,
},
[400631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[196512] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[392284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Proto-Drake",
["npcID"] = 193145,
},
[361568] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Renewal",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181546,
},
[63032] = {
["source"] = "Keeper Heartwise",
["event"] = "SPELL_CAST_START",
["npcID"] = 33443,
},
[311544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sanguimar",
["npcID"] = 159767,
},
[172816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sun Prophet Tenhamen",
["npcID"] = 154727,
},
[160323] = {
["source"] = "Pale Spider Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 80530,
},
[3110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalmir",
["npcID"] = 416,
},
[396991] = {
["source"] = "Drakonid Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[384095] = {
["source"] = "Ohuna Companion",
["event"] = "SPELL_CAST_START",
["npcID"] = 194254,
},
[275110] = {
["source"] = "Bloodbeak the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 201535,
},
[396640] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Ancient Branch",
["npcID"] = 196548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[311035] = {
["source"] = "Xari the Kind",
["event"] = "SPELL_CAST_START",
["npcID"] = 159119,
},
[393615] = {
["source"] = "Huntmaster Amaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 188715,
},
[48280] = {
["source"] = "Blingtron 5000",
["event"] = "SPELL_CAST_START",
["npcID"] = 77789,
},
[194112] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[387504] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[393607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodclaw",
["npcID"] = 187553,
},
[411916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[418578] = {
["source"] = "Illidan Stormrage",
["event"] = "SPELL_CAST_START",
["npcID"] = 205306,
},
[418024] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[200256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Minion",
["npcID"] = 101549,
},
[386146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[371812] = {
["source"] = "Menial Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 192702,
},
[275568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glimmerhoof Cloudstrider",
["npcID"] = 160606,
},
[425054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Portalkeeper",
["npcID"] = 211756,
},
[18392] = {
["encounterName"] = "Onyxia",
["source"] = "Onyxia",
["encounterID"] = 1084,
["event"] = "SPELL_CAST_START",
["npcID"] = 10184,
},
[154442] = {
["encounterName"] = "Ner'zhul",
["source"] = "Ner'zhul",
["npcID"] = 76407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1682,
},
[275569] = {
["source"] = "Glimmerhoof Cloudstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 160606,
},
[175684] = {
["source"] = "Sunclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 86137,
},
[169613] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[171773] = {
["source"] = "Lorry Warmheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 159211,
},
[260666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilded Priestess",
["npcID"] = 132126,
},
[192138] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["npcID"] = 97269,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[388886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[396388] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[390245] = {
["source"] = "Embertooth Spearhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 188725,
},
[259597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Child of Gonk",
["npcID"] = 127254,
},
[10733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thaurissan Firewalker",
["npcID"] = 7037,
},
[387748] = {
["source"] = "Lurgan",
["event"] = "SPELL_CAST_START",
["npcID"] = 201540,
},
[423010] = {
["source"] = "Dionaessa",
["event"] = "SPELL_CAST_START",
["npcID"] = 210813,
},
[209027] = {
["source"] = "Duskwatch Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 111563,
},
[214593] = {
["source"] = "Amberfall Greatstag",
["event"] = "SPELL_CAST_START",
["npcID"] = 107758,
},
[306289] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["encounterID"] = 2329,
["event"] = "SPELL_CAST_START",
["npcID"] = 156818,
},
[377962] = {
["source"] = "Violent Yeti",
["event"] = "SPELL_CAST_START",
["npcID"] = 197178,
},
[400486] = {
["isChanneled"] = true,
["source"] = "Zaqali Shrineguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 202803,
},
[193092] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 94960,
},
[153161] = {
["source"] = "Jungle Wastetalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 86423,
},
[365676] = {
["source"] = "Sacred Matrix Automa",
["event"] = "SPELL_CAST_START",
["npcID"] = 184734,
},
[365678] = {
["source"] = "Sacred Matrix Automa",
["event"] = "SPELL_CAST_START",
["npcID"] = 184734,
},
[41114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Mystic",
["npcID"] = 22845,
},
[396392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dueling Student",
["npcID"] = 199377,
},
[20815] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 4289,
},
[400488] = {
["isChanneled"] = true,
["source"] = "Zaqali Shrineguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 202803,
},
[193093] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[265337] = {
["source"] = "Gorestained Piglet",
["event"] = "SPELL_CAST_START",
["npcID"] = 135048,
},
[267385] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Tentacle",
["encounterID"] = 2133,
["event"] = "SPELL_CAST_START",
["npcID"] = 135987,
},
[425062] = {
["source"] = "Zaqali Steelshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 210173,
},
[410728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 201411,
},
[59800] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["encounterID"] = 1984,
["event"] = "SPELL_CAST_START",
["npcID"] = 28546,
},
[316532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Willing Sacrifice",
["npcID"] = 162647,
},
[200261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Torn Champion",
["npcID"] = 98243,
},
[125506] = {
["source"] = "Commander Lindon",
["event"] = "SPELL_CAST_START",
["npcID"] = 59191,
},
[412777] = {
["isChanneled"] = true,
["source"] = "Kith'ix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198952,
},
[106827] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56719,
},
[359668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawtouched Animate",
["npcID"] = 181484,
},
[164426] = {
["encounterName"] = "Fleshrender Nok'gar",
["source"] = "Fleshrender Nok'gar",
["encounterID"] = 1749,
["event"] = "SPELL_CAST_START",
["npcID"] = 81305,
},
[407296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Shadowflame",
["npcID"] = 199838,
},
[76590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[400492] = {
["source"] = "Zaqali Cindershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 199824,
},
[209477] = {
["source"] = "Mana Wyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 105703,
},
[371824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodial Protector",
["npcID"] = 192694,
},
[373872] = {
["source"] = "Monstrous Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 186227,
},
[310392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Synod",
["npcID"] = 159190,
},
[419052] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Future Self",
["npcID"] = 208959,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[141427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteleaf Squirt",
["npcID"] = 84655,
},
[365682] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Cartel Overseer",
["encounterID"] = 2553,
["event"] = "SPELL_CAST_START",
["npcID"] = 184792,
},
[192072] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[160332] = {
["source"] = "Shiverblood Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 78758,
},
[304251] = {
["encounterName"] = "Thrall the Corrupted",
["source"] = "Void Boar",
["npcID"] = 157349,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2332,
},
[390256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Apprentice",
["npcID"] = 192340,
},
[41371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of Torment",
["npcID"] = 22956,
},
[296060] = {
["source"] = "Snapling",
["event"] = "SPELL_CAST_START",
["npcID"] = 145339,
},
[396400] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[406639] = {
["source"] = "Response Team Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202318,
},
[192073] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[377971] = {
["source"] = "Massive Thresher",
["event"] = "SPELL_CAST_START",
["npcID"] = 191951,
},
[270976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Briarwood Invader",
["npcID"] = 131373,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[304253] = {
["source"] = "Blackwater Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 155272,
},
[388211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oshigol",
["npcID"] = 193235,
},
[365686] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 184533,
},
[34163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underbog Shambler",
["npcID"] = 17871,
},
[394355] = {
["source"] = "Frigidpelt Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 193063,
},
[298111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crushtide Orb",
["npcID"] = 153500,
},
[55704] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 29981,
},
[65648] = {
["encounterName"] = "Mimiron",
["source"] = "Aerial Command Unit",
["npcID"] = 33670,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[192135] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Shellbreaker",
["npcID"] = 97264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[391866] = {
["source"] = "Brackenhide Putrifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 192057,
},
[166478] = {
["source"] = "Tormented Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 82647,
},
[377950] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[406644] = {
["source"] = "Response Team Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202318,
},
[308352] = {
["source"] = "Anima Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 155970,
},
[38556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Headhunter",
["npcID"] = 74228,
},
[11986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Apostle",
["npcID"] = 30179,
},
[218755] = {
["isChanneled"] = true,
["source"] = "Festerhide Grizzly",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95779,
},
[79860] = {
["source"] = "Forsaken Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 46048,
},
[64153] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[375929] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[176718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Tracker",
["npcID"] = 154461,
},
[195253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Tides",
["npcID"] = 97173,
},
[256581] = {
["source"] = "Scheming Street Scamp",
["event"] = "SPELL_CAST_START",
["npcID"] = 129394,
},
[404713] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[106797] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[265352] = {
["source"] = "Blight Toad",
["event"] = "SPELL_CAST_START",
["npcID"] = 135052,
},
[308355] = {
["source"] = "Dokani Bloodshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 153106,
},
[296182] = {
["source"] = "Venomous Snapdragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 152356,
},
[369788] = {
["source"] = "Qalashi Drakehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 197788,
},
[273544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brother Meller",
["npcID"] = 154447,
},
[227913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[394362] = {
["source"] = "Rasnar the War Ender",
["event"] = "SPELL_CAST_START",
["npcID"] = 193232,
},
[304261] = {
["source"] = "Blackwater Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 155272,
},
[365805] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[410743] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignited Plume",
["npcID"] = 205167,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[107120] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Commander Ri'mok",
["npcID"] = 56636,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1406,
},
[8873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snarlflare",
["npcID"] = 14272,
},
[396041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracked Concretion",
["npcID"] = 197074,
},
[386173] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[273547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cornered Operative",
["npcID"] = 142072,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[429176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Aquamage",
["npcID"] = 40943,
},
[150100] = {
["source"] = "Razorfen Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 74552,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[209485] = {
["source"] = "Arcane Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 105704,
},
[408677] = {
["source"] = "Sundered Scaleguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198871,
},
[406652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[196175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mak'rana Hardshell",
["npcID"] = 95947,
},
[198934] = {
["source"] = "Valarjar Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 95834,
},
[375937] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[308361] = {
["source"] = "Dokani Bloodshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 153106,
},
[257608] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["npcID"] = 127479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2101,
},
[408805] = {
["source"] = "Incorporeal Being",
["event"] = "SPELL_CAST_START",
["npcID"] = 204560,
},
[396415] = {
["source"] = "Galestrike Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190061,
},
[398463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Burster",
["npcID"] = 200801,
},
[150214] = {
["source"] = "Razorfen Geomagus",
["event"] = "SPELL_CAST_START",
["npcID"] = 74545,
},
[213582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sinister Shrieker",
["npcID"] = 101900,
},
[429180] = {
["source"] = "Cycle Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 210518,
},
[398464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Wormling",
["npcID"] = 205613,
},
[412900] = {
["source"] = "Zakajz",
["event"] = "SPELL_CAST_START",
["npcID"] = 198953,
},
[392659] = {
["source"] = "Crazed Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 194224,
},
[404442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[403671] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[377017] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[112084] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["encounterID"] = 1417,
["event"] = "SPELL_CAST_START",
["npcID"] = 58826,
},
[377277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volethi",
["npcID"] = 200727,
},
[191058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirana Starlight",
["npcID"] = 99451,
},
[159318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostwolf Axethrower",
["npcID"] = 74799,
},
[258634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Flamecaster",
["npcID"] = 127488,
},
[373084] = {
["source"] = "Irontorch Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 189466,
},
[308366] = {
["source"] = "Inquisitor Darkspeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 158136,
},
[340412] = {
["source"] = "Forgotten Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 202446,
},
[289937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rastari Punisher",
["npcID"] = 148667,
},
[306319] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["npcID"] = 156575,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[384134] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[377991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[259298] = {
["source"] = "Vilescale Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 123461,
},
[38558] = {
["source"] = "Hillsbrad Miner",
["event"] = "SPELL_CAST_START",
["npcID"] = 2269,
},
[102193] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[307639] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["npcID"] = 157354,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[41374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Archon",
["npcID"] = 23400,
},
[373897] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[375945] = {
["source"] = "Fleecepelt Argali",
["event"] = "SPELL_CAST_START",
["npcID"] = 187975,
},
[112944] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["encounterID"] = 1413,
["event"] = "SPELL_CAST_START",
["npcID"] = 56717,
},
[396423] = {
["source"] = "Galestrike Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190061,
},
[260684] = {
["source"] = "Zuvembi Brewer Zekal",
["event"] = "SPELL_CAST_START",
["npcID"] = 130260,
},
[253517] = {
["source"] = "Dazar'ai Confessor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122973,
},
[49309] = {
["source"] = "Gold Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 32340,
},
[412806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Dragon",
["npcID"] = 205804,
},
[365708] = {
["source"] = "Manifestor Krugan",
["event"] = "SPELL_CAST_START",
["npcID"] = 185363,
},
[362806] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[160345] = {
["source"] = "Pale Spider Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 80530,
},
[114571] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Strife",
["npcID"] = 59051,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1417,
},
[203348] = {
["source"] = "Gornoth the Lost",
["event"] = "SPELL_CAST_START",
["npcID"] = 103656,
},
[410760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[34975] = {
["source"] = "Sa'at",
["event"] = "SPELL_CAST_START",
["npcID"] = 20201,
},
[394466] = {
["source"] = "Primordial Hail",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[374624] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[159322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostwolf Shaman",
["npcID"] = 74622,
},
[369806] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[265371] = {
["source"] = "Enthralled Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 131585,
},
[406752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Betrayer",
["npcID"] = 200828,
},
[375950] = {
["source"] = "Primalist Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[392332] = {
["source"] = "Zumakh",
["event"] = "SPELL_CAST_START",
["npcID"] = 194624,
},
[265372] = {
["source"] = "Bewitched Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 131587,
},
[11922] = {
["source"] = "Constrictor Vine",
["event"] = "SPELL_CAST_START",
["npcID"] = 130272,
},
[145552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Coin Counter",
["npcID"] = 202398,
},
[260480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Tendril",
["npcID"] = 125136,
},
[393540] = {
["source"] = "Zhurtan the Riverboiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 188687,
},
[15785] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Mana Leech",
["npcID"] = 19306,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[106823] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[128304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Disciple",
["npcID"] = 58198,
},
[396430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Protector",
["npcID"] = 198343,
},
[64156] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[381592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[304282] = {
["encounterName"] = "Rexxar",
["source"] = "Rexxar",
["npcID"] = 155098,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2370,
},
[396432] = {
["source"] = "Ancient Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189798,
},
[398479] = {
["source"] = "Hibernating Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 204742,
},
[392336] = {
["source"] = "Uncontrolled Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181775,
},
[369811] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[265376] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[8362] = {
["encounterName"] = "Nekrum Gutchewer",
["source"] = "Shadowpriest Sezz'ziz",
["encounterID"] = 598,
["event"] = "SPELL_CAST_START",
["npcID"] = 7275,
},
[167516] = {
["source"] = "Grom'kar Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 86809,
},
[378003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[265377] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[390290] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[360373] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[369813] = {
["source"] = "Raging Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 194095,
},
[412816] = {
["isChanneled"] = true,
["source"] = "Malygos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198974,
},
[257656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[159382] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["encounterID"] = 1700,
["event"] = "SPELL_CAST_START",
["npcID"] = 76143,
},
[382101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Conjurer",
["npcID"] = 195063,
},
[273570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ringtail Bandicoon",
["npcID"] = 139166,
},
[398483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[198959] = {
["source"] = "Valarjar Runecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 96664,
},
[351459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Woebringer",
["npcID"] = 176573,
},
[299437] = {
["source"] = "Malfunctioning Scraphound",
["event"] = "SPELL_CAST_START",
["npcID"] = 151301,
},
[382102] = {
["source"] = "Grand Artificer Zeerak",
["event"] = "SPELL_CAST_START",
["npcID"] = 201553,
},
[392341] = {
["source"] = "Tevgai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195132,
},
[314518] = {
["event"] = "SPELL_CAST_START",
["source"] = "R'khuzj the Unfathomable",
["npcID"] = 156299,
},
[235310] = {
["source"] = "Mistress Matilda",
["event"] = "SPELL_CAST_START",
["npcID"] = 118511,
},
[373912] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[365715] = {
["source"] = "Eternal Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 184530,
},
[95002] = {
["source"] = "The Ray-Getz-Kalaba Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 47793,
},
[365717] = {
["source"] = "Manifestor Krugan",
["event"] = "SPELL_CAST_START",
["npcID"] = 185363,
},
[64157] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[394391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rhuzast the Tempest",
["npcID"] = 197409,
},
[169567] = {
["source"] = "Primal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 81769,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[367771] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Lost Soul",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 185607,
},
[294362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspeaker",
["npcID"] = 155908,
},
[10346] = {
["source"] = "Mechano-Tank",
["event"] = "SPELL_CAST_START",
["npcID"] = 6225,
},
[373915] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[137427] = {
["source"] = "Sylvari Tenderhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 170031,
},
[50335] = {
["source"] = "Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 46058,
},
[412823] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 198968,
},
[388316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oppressive Artificer",
["npcID"] = 184444,
},
[378012] = {
["source"] = "Magmasworn Flameweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 193414,
},
[361630] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181224,
},
[31975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unliving Stalker",
["npcID"] = 18501,
},
[373917] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[260313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qy'telek",
["npcID"] = 130726,
},
[427159] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[110117] = {
["source"] = "Ethereal Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 65414,
},
[252503] = {
["source"] = "Assault Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 127189,
},
[373698] = {
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186220,
},
[369823] = {
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 184023,
},
[115509] = {
["source"] = "Shado-Pan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 59751,
},
[260292] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[369818] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[54431] = {
["source"] = "Bilgefin Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 98502,
},
[404636] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[63134] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[421020] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[427162] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[260696] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131823,
},
[398494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ember Shalewing",
["npcID"] = 204381,
},
[359587] = {
["source"] = "Basal Raptora",
["event"] = "SPELL_CAST_START",
["npcID"] = 179004,
},
[404639] = {
["source"] = "Han'thul",
["event"] = "SPELL_CAST_START",
["npcID"] = 198914,
},
[396447] = {
["source"] = "Shardwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 201562,
},
[406686] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Djaradin Magmashaper",
["npcID"] = 202257,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[384161] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[106807] = {
["encounterName"] = "Ook-Ook",
["source"] = "Ook-Ook",
["encounterID"] = 1412,
["event"] = "SPELL_CAST_START",
["npcID"] = 56637,
},
[371875] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[369828] = {
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 184023,
},
[82760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Darkcaster",
["npcID"] = 44982,
},
[263345] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Heavy Cannon",
["npcID"] = 134025,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[398497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Praying Stingray",
["npcID"] = 205065,
},
[260697] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131825,
},
[388623] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[398500] = {
["source"] = "Conflagrated Rock Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 203328,
},
[162407] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77803,
},
[316588] = {
["source"] = "Dreliana",
["event"] = "SPELL_CAST_START",
["npcID"] = 157709,
},
[200289] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[412835] = {
["source"] = "Nozdormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 198971,
},
[421024] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[260698] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[196194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steeljaw Grizzly",
["npcID"] = 96677,
},
[114999] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 56884,
},
[255579] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2084,
},
[75068] = {
["source"] = "Grimfrost Lavaslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 72987,
},
[260699] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[427169] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[169574] = {
["source"] = "Dionor Seedpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 81721,
},
[398501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Rock Viper",
["npcID"] = 203783,
},
[214692] = {
["source"] = "Gerenth the Vile",
["event"] = "SPELL_CAST_START",
["npcID"] = 107435,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[396454] = {
["source"] = "Insatiable Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 185715,
},
[173180] = {
["source"] = "Stoneshamble Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 74962,
},
[200291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Scout",
["npcID"] = 98691,
},
[361643] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181224,
},
[398504] = {
["source"] = "Sulfurous Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205814,
},
[260700] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131823,
},
[285878] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Akunda's Aspect",
["npcID"] = 144941,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2268,
},
[361644] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181224,
},
[421029] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[20819] = {
["source"] = "Scarlet Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 4294,
},
[257629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[309669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Onyx Warserpent",
["npcID"] = 153208,
},
[260701] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131825,
},
[373932] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 190187,
},
[160383] = {
["source"] = "Shiverblood Frostbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 78869,
},
[169571] = {
["source"] = "Dionor Seedpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 81721,
},
[198245] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["event"] = "SPELL_CAST_START",
["npcID"] = 98949,
},
[209495] = {
["source"] = "Guardian Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 104270,
},
[391913] = {
["source"] = "Gnawbone Splintershield",
["event"] = "SPELL_CAST_START",
["npcID"] = 197847,
},
[427175] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[365744] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[308406] = {
["source"] = "Forge-Guard Hurrul",
["event"] = "SPELL_CAST_START",
["npcID"] = 158158,
},
[316598] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Amberclaw",
["npcID"] = 162641,
},
[172649] = {
["source"] = "Grom'kar Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 83763,
},
[371887] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 188067,
},
[15530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Magus",
["npcID"] = 26722,
},
[404695] = {
["source"] = "First Mate Ovdah",
["event"] = "SPELL_CAST_START",
["npcID"] = 201182,
},
[378029] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[260703] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131823,
},
[373936] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[392366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Juggernaut",
["npcID"] = 197793,
},
[386223] = {
["source"] = "Primal Stormshield",
["event"] = "SPELL_CAST_START",
["npcID"] = 194896,
},
[322743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lumbering Creation",
["npcID"] = 155824,
},
[417241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[408749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["npcID"] = 204412,
},
[404654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grugoth the Hullcrusher",
["npcID"] = 200721,
},
[265407] = {
["source"] = "Banquet Steward",
["event"] = "SPELL_CAST_START",
["npcID"] = 131586,
},
[154221] = {
["source"] = "Zipteq",
["event"] = "SPELL_CAST_START",
["npcID"] = 78734,
},
[404807] = {
["source"] = "Contamination Investigator",
["event"] = "SPELL_CAST_START",
["npcID"] = 202320,
},
[115002] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 56884,
},
[322745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runestag",
["npcID"] = 159030,
},
[373939] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Rotburst Totem",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 190381,
},
[34984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Ray",
["npcID"] = 21128,
},
[59716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 76242,
},
[392660] = {
["source"] = "Ancient Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 187111,
},
[203368] = {
["source"] = "Felblaze Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 120535,
},
[375988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimblewing Slyvern",
["npcID"] = 191051,
},
[387337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthrazer",
["npcID"] = 203739,
},
[294491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeling",
["npcID"] = 186479,
},
[267459] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Forgotten Denizen",
["encounterID"] = 2133,
["event"] = "SPELL_CAST_START",
["npcID"] = 136083,
},
[373943] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[273604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutus Thornton",
["npcID"] = 139136,
},
[60833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten One",
["npcID"] = 30414,
},
[373942] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[285889] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Gonk's Aspect",
["npcID"] = 144767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2268,
},
[115003] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[330940] = {
["source"] = "Altered Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 168244,
},
[116027] = {
["source"] = "Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59464,
},
[302272] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["source"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["event"] = "SPELL_CAST_START",
["npcID"] = 150190,
},
[62625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ulduar Colossus",
["npcID"] = 33237,
},
[84799] = {
["encounterName"] = "Lockmaw",
["source"] = "Augh",
["npcID"] = 45379,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1054,
},
[406708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sindragosa",
["npcID"] = 201094,
},
[115010] = {
["encounterName"] = "Taran Zhu",
["source"] = "Gripping Hatred",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 59804,
},
[260879] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[418121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Monstrosity",
["npcID"] = 207923,
},
[195172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Crusher",
["npcID"] = 91782,
},
[258672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 126918,
},
[317894] = {
["source"] = "Stoneborn Rebel",
["event"] = "SPELL_CAST_START",
["npcID"] = 160823,
},
[212586] = {
["source"] = "Stormwing Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 91795,
},
[203371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hill Ettin",
["npcID"] = 102886,
},
[285893] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Gonk's Aspect",
["npcID"] = 144767,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2268,
},
[389430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unleashed Storm",
["npcID"] = 195846,
},
[388911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Battleaxe",
["npcID"] = 196577,
},
[373947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skaara",
["npcID"] = 192949,
},
[256589] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["npcID"] = 126847,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[427189] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[169233] = {
["encounterName"] = "Xeri'tac",
["source"] = "Venom-Crazed Pale One",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84554,
},
[394426] = {
["source"] = "Council Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198503,
},
[400569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[369853] = {
["source"] = "Burly Rock-Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 184019,
},
[388283] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[317792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magus of the Dead",
["npcID"] = 163366,
},
[396475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Proto-Dragon",
["npcID"] = 191705,
},
[44196] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24674,
},
[388284] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[203373] = {
["source"] = "Observant Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 107449,
},
[367807] = {
["source"] = "Worldbreaker Escapee",
["event"] = "SPELL_CAST_START",
["npcID"] = 185626,
},
[201959] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113536,
},
[255591] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2084,
},
[374112] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Frostbreath Arachnid",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 189234,
},
[392381] = {
["source"] = "Fledgling Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198815,
},
[394429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarolekk, the Stomper",
["npcID"] = 197650,
},
[63138] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[382143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turi Flickerflame",
["npcID"] = 199740,
},
[253544] = {
["source"] = "Dazar'ai Confessor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122973,
},
[298528] = {
["encounterName"] = "Oblivion Elemental",
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Swarmer",
["npcID"] = 153526,
},
[55715] = {
["source"] = "Earthen Elite",
["event"] = "SPELL_CAST_START",
["npcID"] = 29980,
},
[365745] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Cartel Overseer",
["encounterID"] = 2553,
["event"] = "SPELL_CAST_START",
["npcID"] = 184792,
},
[257640] = {
["source"] = "Unfinished Stone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201586,
},
[160372] = {
["source"] = "Shiverblood Frostbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 78869,
},
[384194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[408767] = {
["source"] = "Ritualmaster Skarna",
["event"] = "SPELL_CAST_START",
["npcID"] = 202274,
},
[376002] = {
["isChanneled"] = true,
["source"] = "Nokhud Huntmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189928,
},
[115006] = {
["source"] = "Hozen Gutripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 58943,
},
[41381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of Delight",
["npcID"] = 22964,
},
[316618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Swarmkeeper",
["npcID"] = 162303,
},
[425149] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[292826] = {
["source"] = "Etruvis the Vassal",
["event"] = "SPELL_CAST_START",
["npcID"] = 151041,
},
[207816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrodark Defiler",
["npcID"] = 104888,
},
[6358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pahamand",
["npcID"] = 184600,
},
[126354] = {
["source"] = "Ramkahen Citizen",
["event"] = "SPELL_CAST_START",
["npcID"] = 157795,
},
[68799] = {
["source"] = "Apothecary Frye",
["event"] = "SPELL_CAST_START",
["npcID"] = 36272,
},
[369921] = {
["source"] = "Eldoren the Reborn",
["event"] = "SPELL_CAST_START",
["npcID"] = 193234,
},
[316620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anubisath Sentinel",
["npcID"] = 162508,
},
[257642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Hive-Guard",
["npcID"] = 162886,
},
[152183] = {
["source"] = "Slagna",
["event"] = "SPELL_CAST_START",
["npcID"] = 75406,
},
[166197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Bonecrusher",
["npcID"] = 77995,
},
[265433] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[427200] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[394436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shas'ith",
["npcID"] = 189822,
},
[83780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pygmy Scout",
["npcID"] = 44897,
},
[316609] = {
["source"] = "Terror Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 157137,
},
[41382] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Battle-mage",
["npcID"] = 23402,
},
[160375] = {
["source"] = "Maggle",
["event"] = "SPELL_CAST_START",
["npcID"] = 78896,
},
[394440] = {
["source"] = "Huntmaster Yrgena",
["event"] = "SPELL_CAST_START",
["npcID"] = 201538,
},
[308432] = {
["source"] = "Forge-Guard Hurrul",
["event"] = "SPELL_CAST_START",
["npcID"] = 158158,
},
[163447] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[369865] = {
["source"] = "Nokhud Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 191227,
},
[421059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[260307] = {
["source"] = "Venomous Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 144496,
},
[14443] = {
["source"] = "Gai-Cho Boltshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 62589,
},
[40102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqueous Spawn",
["npcID"] = 22883,
},
[255597] = {
["source"] = "Wailing Siren",
["event"] = "SPELL_CAST_START",
["npcID"] = 126440,
},
[394972] = {
["source"] = "Qalashi Lavabearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197148,
},
[412868] = {
["source"] = "Karokta",
["event"] = "SPELL_CAST_START",
["npcID"] = 203625,
},
[361676] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[404679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[373960] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[359629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawtouched Bull",
["npcID"] = 181359,
},
[76100] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[84804] = {
["source"] = "Forsaken Catapult",
["event"] = "SPELL_CAST_START",
["npcID"] = 45282,
},
[313691] = {
["source"] = "Aysa Cloudsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 159129,
},
[392394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[86340] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[306389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmaul Centurion",
["npcID"] = 156825,
},
[360845] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181551,
},
[392395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[196208] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Warlock",
["npcID"] = 99704,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[399086] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[119922] = {
["encounterName"] = "Trial of the King",
["source"] = "Kuai the Brute",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61442,
},
[56898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Darkcaster",
["npcID"] = 30319,
},
[115009] = {
["isChanneled"] = true,
["source"] = "Shado-Pan Stormbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59808,
},
[206459] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Avatar of Shadow",
["npcID"] = 104293,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[396476] = {
["source"] = "Piskato",
["event"] = "SPELL_CAST_START",
["npcID"] = 195973,
},
[372296] = {
["source"] = "Irontorch Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 189466,
},
[150755] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 74790,
},
[388302] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[23381] = {
["encounterName"] = "Lady Anacondra",
["source"] = "Lady Anacondra",
["npcID"] = 3671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 585,
},
[392398] = {
["source"] = "Primal Thundercloud",
["event"] = "SPELL_CAST_START",
["npcID"] = 197509,
},
[39079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Falconer",
["npcID"] = 20037,
},
[198263] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[406733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Traitorous Sister",
["npcID"] = 200826,
},
[159356] = {
["source"] = "Malevolent Breath",
["event"] = "SPELL_CAST_START",
["npcID"] = 78791,
},
[312537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplord Zrihj",
["npcID"] = 154559,
},
[360775] = {
["source"] = "Sandskim Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 185511,
},
[12471] = {
["source"] = "Atal'ai High Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 5273,
},
[397014] = {
["source"] = "Qalashi Emissary",
["event"] = "SPELL_CAST_START",
["npcID"] = 197146,
},
[197240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prolifica",
["npcID"] = 98986,
},
[314586] = {
["event"] = "SPELL_CAST_START",
["source"] = "R'khuzj the Unfathomable",
["npcID"] = 156299,
},
[423117] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[247396] = {
["source"] = "Zulian Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 124549,
},
[125056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clefthoof",
["npcID"] = 165189,
},
[340414] = {
["source"] = "Forgotten Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 202446,
},
[373972] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[70074] = {
["source"] = "Crown Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 114275,
},
[386259] = {
["source"] = "Basrikron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193535,
},
[394416] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Flamewrought Eradicator",
["npcID"] = 198311,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[406737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Betrayer",
["npcID"] = 200828,
},
[395859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Sha",
["npcID"] = 59555,
},
[277308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hex Priest Haraka",
["npcID"] = 141959,
},
[404178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[199034] = {
["source"] = "Valarjar Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 101637,
},
[414993] = {
["source"] = "Elder Cassaphine",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[369061] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[341163] = {
["source"] = "Kyrian Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 171396,
},
[412346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Corsair",
["npcID"] = 126928,
},
[257383] = {
["source"] = "Warlord Malaja",
["event"] = "SPELL_CAST_START",
["npcID"] = 122664,
},
[271588] = {
["source"] = "Kael'thas Sunstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 144913,
},
[388310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodial Protector",
["npcID"] = 192694,
},
[60227] = {
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[392406] = {
["source"] = "Storm Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 197982,
},
[41378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of Delight",
["npcID"] = 22964,
},
[412884] = {
["source"] = "Ysera",
["event"] = "SPELL_CAST_START",
["npcID"] = 198970,
},
[425115] = {
["source"] = "Fruitface",
["event"] = "SPELL_CAST_START",
["npcID"] = 209913,
},
[154216] = {
["source"] = "Sun Trinket",
["event"] = "SPELL_CAST_START",
["npcID"] = 76094,
},
[410837] = {
["source"] = "Ritualmaster Skarna",
["event"] = "SPELL_CAST_START",
["npcID"] = 202274,
},
[396503] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[89415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghost Iron Dragonling",
["npcID"] = 57783,
},
[40872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Sky Stalker",
["npcID"] = 23030,
},
[152893] = {
["source"] = "Herald of Sunrise",
["event"] = "SPELL_CAST_START",
["npcID"] = 78933,
},
[10348] = {
["source"] = "Leprous Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 6222,
},
[173479] = {
["source"] = "Cannon Turret",
["event"] = "SPELL_CAST_START",
["npcID"] = 86690,
},
[255577] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2084,
},
[172643] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84550,
},
[400542] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 193460,
},
[353443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Mawsworn Cremator",
["npcID"] = 179080,
},
[390834] = {
["source"] = "Sarana",
["event"] = "SPELL_CAST_START",
["npcID"] = 190161,
},
[77721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thule Ravenclaw",
["npcID"] = 47023,
},
[412888] = {
["source"] = "Ysera",
["event"] = "SPELL_CAST_START",
["npcID"] = 198970,
},
[267977] = {
["source"] = "Shrine Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 134139,
},
[410776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Protector",
["npcID"] = 204658,
},
[427223] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[412889] = {
["source"] = "Zakajz",
["event"] = "SPELL_CAST_START",
["npcID"] = 198953,
},
[365572] = {
["source"] = "Dominated Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 184733,
},
[421013] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[172673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sun Prophet Tenhamen",
["npcID"] = 154727,
},
[311019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Behemoth",
["npcID"] = 159303,
},
[308455] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["npcID"] = 157300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2325,
},
[193376] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[262577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diremaw",
["npcID"] = 128620,
},
[354586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Troz'igal the Oppressor",
["npcID"] = 179526,
},
[68939] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[384223] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[11820] = {
["source"] = "Mechanized Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 6234,
},
[404626] = {
["source"] = "Han'thul",
["event"] = "SPELL_CAST_START",
["npcID"] = 198914,
},
[39593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Searing Totem",
["npcID"] = 22896,
},
[39849] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[193152] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[82742] = {
["source"] = "Southsea Strongarm",
["event"] = "SPELL_CAST_START",
["npcID"] = 40635,
},
[396020] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Golden Beetle",
["npcID"] = 59545,
},
[40873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Sky Stalker",
["npcID"] = 23030,
},
[172675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 167301,
},
[255366] = {
["source"] = "Zulian Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 124549,
},
[308459] = {
["source"] = "Zardeth of the Black Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 158371,
},
[85685] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 45878,
},
[255567] = {
["source"] = "T'lonja",
["event"] = "SPELL_CAST_START",
["npcID"] = 128455,
},
[412895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[382179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Senior Researcher Alydrus",
["npcID"] = 208734,
},
[253562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[410848] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[398471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[153521] = {
["source"] = "Adept of the Dawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 79467,
},
[384132] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[265368] = {
["source"] = "Bewitched Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 131587,
},
[113479] = {
["source"] = "Master Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 59175,
},
[177460] = {
["source"] = "Corrupted Wind Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 80381,
},
[201298] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Burster",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 100532,
},
[337131] = {
["source"] = "Xantuth the Blighted",
["event"] = "SPELL_CAST_START",
["npcID"] = 162872,
},
[393793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hacklung",
["npcID"] = 187752,
},
[386993] = {
["source"] = "Cascade Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194939,
},
[79886] = {
["source"] = "Instructor Rufus",
["event"] = "SPELL_CAST_START",
["npcID"] = 48922,
},
[135818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Footman",
["npcID"] = 68485,
},
[258338] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["npcID"] = 126847,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[384292] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Thunder Caller",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 194647,
},
[414844] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[394470] = {
["source"] = "Ko'jo",
["event"] = "SPELL_CAST_START",
["npcID"] = 186367,
},
[165511] = {
["source"] = "Miserain Starsorrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 82017,
},
[300171] = {
["source"] = "Heavy Scrapbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 150276,
},
[416996] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[160392] = {
["source"] = "Maggle",
["event"] = "SPELL_CAST_START",
["npcID"] = 78896,
},
[384385] = {
["source"] = "Frostsnout Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 199354,
},
[38557] = {
["source"] = "Thaelin Darkanvil",
["event"] = "SPELL_CAST_START",
["npcID"] = 80886,
},
[367851] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[172679] = {
["source"] = "Skothwa",
["event"] = "SPELL_CAST_START",
["npcID"] = 79500,
},
[396520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilmo the Ancient",
["npcID"] = 196386,
},
[20823] = {
["source"] = "Scarlet Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 4297,
},
[392425] = {
["source"] = "Molkeej",
["event"] = "SPELL_CAST_START",
["npcID"] = 195430,
},
[429172] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["npcID"] = 40788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[314611] = {
["source"] = "Insurgent Machinist",
["event"] = "SPELL_CAST_START",
["npcID"] = 159758,
},
[406760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Master",
["npcID"] = 200827,
},
[416999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Paladin of the Silver Hand",
["npcID"] = 208193,
},
[369901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 186965,
},
[255614] = {
["source"] = "Violetsail Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 179936,
},
[167385] = {
["source"] = "Dungeoneer's Training Dummy",
["event"] = "SPELL_CAST_START",
["npcID"] = 194644,
},
[359547] = {
["source"] = "Dominated Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 185314,
},
[44202] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24674,
},
[388332] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 196439,
},
[151475] = {
["encounterName"] = "Groyat, the Blind Hunter",
["source"] = "Groyat, the Blind Hunter",
["encounterID"] = 1660,
["event"] = "SPELL_CAST_START",
["npcID"] = 75247,
},
[89932] = {
["source"] = "Teracula",
["event"] = "SPELL_CAST_START",
["npcID"] = 49265,
},
[106826] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56719,
},
[82765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Darkcaster",
["npcID"] = 44982,
},
[366187] = {
["source"] = "Hired Muscle",
["event"] = "SPELL_CAST_START",
["npcID"] = 183499,
},
[408811] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[377270] = {
["source"] = "Cliffdrip Wavemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189814,
},
[259711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Block Warden",
["npcID"] = 131445,
},
[40091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 22875,
},
[245377] = {
["source"] = "Felsiege Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 119395,
},
[309666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Onyx Warserpent",
["npcID"] = 153208,
},
[388335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Runebinder",
["npcID"] = 186354,
},
[271487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tentacle of Shul-Nagruth",
["npcID"] = 128609,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[394479] = {
["source"] = "Primordial Hail",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[289914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vessel of Bwonsamdi",
["npcID"] = 148673,
},
[375919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Scythid",
["npcID"] = 191104,
},
[40875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[156301] = {
["source"] = "Grom'kar Boomer",
["event"] = "SPELL_CAST_START",
["npcID"] = 80935,
},
[290045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rastari Enforcer",
["npcID"] = 147495,
},
[304245] = {
["source"] = "Abyssal Spearhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 155271,
},
[361581] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Withering Seed",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 182822,
},
[427245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hapless Assistant",
["npcID"] = 212981,
},
[371956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Terrasentry",
["npcID"] = 188011,
},
[414959] = {
["source"] = "Blazing Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205140,
},
[276991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Overseer",
["npcID"] = 156676,
},
[59734] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[402775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[164592] = {
["source"] = "Bloodmaul Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75198,
},
[392435] = {
["source"] = "Molkeej",
["event"] = "SPELL_CAST_START",
["npcID"] = 195430,
},
[275570] = {
["source"] = "Vilebone Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 134852,
},
[388340] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 196439,
},
[177731] = {
["encounterName"] = "Witherbark",
["source"] = "Enchanted Waters",
["encounterID"] = 1746,
["event"] = "SPELL_CAST_START",
["npcID"] = 88862,
},
[61353] = {
["source"] = "Dagna Flintlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 29476,
},
[37036] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Master Engineer Telonicus",
["npcID"] = 20063,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[412914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Shadow",
["npcID"] = 205968,
},
[406771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Master",
["npcID"] = 200827,
},
[91335] = {
["source"] = "Woodfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 83871,
},
[394485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hypoxicron",
["npcID"] = 186334,
},
[298691] = {
["encounterName"] = "Alleria Windrunner",
["source"] = "Alleria Windrunner",
["encounterID"] = 2338,
["event"] = "SPELL_CAST_START",
["npcID"] = 152718,
},
[393458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malifron",
["npcID"] = 190278,
},
[417011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Paladin of the Silver Hand",
["npcID"] = 208193,
},
[401319] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[381517] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[166543] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 82721,
},
[332239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goxul the Devourer",
["npcID"] = 170418,
},
[413806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Tideshifter",
["npcID"] = 204516,
},
[392283] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 191413,
},
[365661] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[40876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[410870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[165520] = {
["source"] = "Rainiara the Kingslayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82260,
},
[20824] = {
["source"] = "Deadwind Ogre Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 7379,
},
[328799] = {
["source"] = "Veteran Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 160959,
},
[304388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siltridge Marauder",
["npcID"] = 152541,
},
[153234] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["encounterID"] = 1678,
["event"] = "SPELL_CAST_START",
["npcID"] = 75927,
},
[126283] = {
["source"] = "Shadowmaster Sydow",
["event"] = "SPELL_CAST_START",
["npcID"] = 63240,
},
[392442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kholdeg",
["npcID"] = 194608,
},
[365632] = {
["source"] = "Dominated Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 184742,
},
[314433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Blood",
["npcID"] = 159312,
},
[150677] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 74790,
},
[384252] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Elemental",
["npcID"] = 190780,
},
[410873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gust Soldier",
["npcID"] = 45477,
},
[238586] = {
["source"] = "Brutal Punisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 117421,
},
[316677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Swarmkeeper",
["npcID"] = 162303,
},
[268050] = {
["source"] = "Tidesage Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 136186,
},
[278919] = {
["source"] = "Decrepit Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 146227,
},
[157331] = {
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[300296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boggac Skullbash",
["npcID"] = 151308,
},
[417018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Conjuror",
["npcID"] = 206351,
},
[271628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Teldrassil Sentinel",
["npcID"] = 134938,
},
[404732] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[209033] = {
["source"] = "Duskwatch Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 111563,
},
[31948] = {
["encounterName"] = "Rokmar the Crackler",
["source"] = "Rokmar the Crackler",
["npcID"] = 17991,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1941,
},
[312584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Venomweaver",
["npcID"] = 161229,
},
[84037] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[64170] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Freya",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33410,
},
[374544] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[121165] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61392,
},
[265487] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[159290] = {
["source"] = "Solar Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 76097,
},
[40877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[394496] = {
["source"] = "Ruinous",
["event"] = "SPELL_CAST_START",
["npcID"] = 193522,
},
[387224] = {
["source"] = "Dracthyr Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 201069,
},
[406783] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[396360] = {
["source"] = "Ritual Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 186787,
},
[385263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coastal Eel",
["npcID"] = 198782,
},
[375579] = {
["source"] = "Primalist Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 190716,
},
[42669] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2025,
},
[400641] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[369925] = {
["source"] = "Transformed Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 197225,
},
[404737] = {
["source"] = "Han'thul",
["event"] = "SPELL_CAST_START",
["npcID"] = 198914,
},
[367484] = {
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185508,
},
[392451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Channeler",
["npcID"] = 197985,
},
[270595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savage Fathomjaw",
["npcID"] = 130916,
},
[396355] = {
["source"] = "Ritual Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 186787,
},
[374022] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[196242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadlord Mendacius",
["npcID"] = 99649,
},
[157001] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[404739] = {
["source"] = "First Mate Ovdah",
["event"] = "SPELL_CAST_START",
["npcID"] = 201182,
},
[390940] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[200238] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99192,
},
[217744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blinky Gizmospark",
["npcID"] = 148322,
},
[371976] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[63147] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[390194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[378120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Rock",
["npcID"] = 192799,
},
[347404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Endbringer",
["npcID"] = 157810,
},
[64171] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Thorim",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33413,
},
[392455] = {
["source"] = "Uurhilt",
["event"] = "SPELL_CAST_START",
["npcID"] = 194760,
},
[296510] = {
["source"] = "Crawling Corruption",
["event"] = "SPELL_CAST_START",
["npcID"] = 152704,
},
[395827] = {
["source"] = "Parched Broadhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 194352,
},
[316689] = {
["source"] = "Ben Howell",
["event"] = "SPELL_CAST_START",
["npcID"] = 162682,
},
[406282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[406581] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lava Elemental",
["npcID"] = 202264,
},
[396552] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[20825] = {
["source"] = "Guzzling Patron",
["event"] = "SPELL_CAST_START",
["npcID"] = 9547,
},
[417030] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Conjuror",
["npcID"] = 206351,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[124048] = {
["source"] = "Osul Sharphorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 60647,
},
[404744] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[68950] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[400649] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[365272] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181551,
},
[79971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drill Sergeant Magnus",
["npcID"] = 48923,
},
[150801] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["encounterID"] = 1653,
["event"] = "SPELL_CAST_START",
["npcID"] = 74787,
},
[198962] = {
["source"] = "Valarjar Runecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 96664,
},
[312597] = {
["source"] = "King Phaoris",
["event"] = "SPELL_CAST_START",
["npcID"] = 161112,
},
[417573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[360414] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 180773,
},
[253583] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[410890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Warder",
["npcID"] = 205259,
},
[371983] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[37551] = {
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[82797] = {
["source"] = "Snickerfang Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 5985,
},
[394509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruinous",
["npcID"] = 193522,
},
[404748] = {
["source"] = "Navigator Bi-Yun",
["event"] = "SPELL_CAST_START",
["npcID"] = 201184,
},
[302816] = {
["source"] = "Crazed Earth Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 151638,
},
[102227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enemy Tonk",
["npcID"] = 54642,
},
[162244] = {
["source"] = "Sharpfang Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 76685,
},
[311015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Behemoth",
["npcID"] = 159303,
},
[401205] = {
["source"] = "Carcaxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 202836,
},
[173172] = {
["source"] = "Turbulent Steamfury",
["event"] = "SPELL_CAST_START",
["npcID"] = 81685,
},
[114646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Sha",
["npcID"] = 59555,
},
[396559] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[153794] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["encounterID"] = 1700,
["event"] = "SPELL_CAST_START",
["npcID"] = 76143,
},
[387243] = {
["source"] = "Time-Lost Murhulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 187677,
},
[394512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Spawn",
["npcID"] = 75652,
},
[257784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Brinescale",
["npcID"] = 129600,
},
[153528] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["encounterID"] = 438,
["event"] = "SPELL_CAST_START",
["npcID"] = 74948,
},
[385827] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[144031] = {
["source"] = "Grievous Depthworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 85942,
},
[147289] = {
["source"] = "Death Adder",
["event"] = "SPELL_CAST_START",
["npcID"] = 72841,
},
[43665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Heartsplitter",
["npcID"] = 24071,
},
[147103] = {
["source"] = "Grimfrost Lavaslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 72987,
},
[406344] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[278755] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[414992] = {
["source"] = "Burning Flamespeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 205138,
},
[200345] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[369942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewing Ascendant",
["npcID"] = 209837,
},
[153247] = {
["encounterName"] = "Roltall",
["source"] = "Roltall",
["encounterID"] = 1652,
["event"] = "SPELL_CAST_START",
["npcID"] = 75786,
},
[374038] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[417041] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Keeper Orendi",
["npcID"] = 205874,
},
[408605] = {
["source"] = "Sundered Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198869,
},
[417497] = {
["source"] = "Rude Crude",
["event"] = "SPELL_CAST_START",
["npcID"] = 206617,
},
[369073] = {
["source"] = "Zaqali Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 201341,
},
[196126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feltotem Demonkindre",
["npcID"] = 96615,
},
[271652] = {
["source"] = "Kaldorei Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 205892,
},
[404756] = {
["source"] = "Sundered Flame Flamespinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 203686,
},
[144932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Invader",
["npcID"] = 74329,
},
[400877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flowfy",
["npcID"] = 203660,
},
[403890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[404757] = {
["source"] = "Sundered Flame Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 203681,
},
[375834] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[369946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneshaper Jardak",
["npcID"] = 188693,
},
[265511] = {
["source"] = "Spirit Drain Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 135169,
},
[382233] = {
["source"] = "Batak",
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[143905] = {
["source"] = "Deepfrost Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 78888,
},
[172703] = {
["source"] = "Grom'kar Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 83763,
},
[153679] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["encounterID"] = 1653,
["event"] = "SPELL_CAST_START",
["npcID"] = 74787,
},
[128999] = {
["source"] = "Thundermaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 58456,
},
[346813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tower Sentinel",
["npcID"] = 152905,
},
[174529] = {
["source"] = "Captain Brak",
["event"] = "SPELL_CAST_START",
["npcID"] = 81254,
},
[258199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 130400,
},
[32363] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["npcID"] = 18344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[382712] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[172704] = {
["source"] = "Infested Vinewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 80698,
},
[361300] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181549,
},
[374045] = {
["source"] = "Containment Apparatus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190342,
},
[192158] = {
["source"] = "Olmyr the Enlightened",
["event"] = "SPELL_CAST_START",
["npcID"] = 97202,
},
[394948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashbinder Tornecha",
["npcID"] = 192344,
},
[173563] = {
["encounterName"] = "Yalnu",
["source"] = "Feral Lasher",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 86684,
},
[391842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Mender",
["npcID"] = 195060,
},
[171385] = {
["source"] = "Unstable Earth Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 80382,
},
[320805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Epilon",
["npcID"] = 158869,
},
[30937] = {
["source"] = "Shadowmoon Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17653,
},
[265241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lazy Drudge",
["npcID"] = 135190,
},
[75610] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[378143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Infiltrator",
["npcID"] = 191841,
},
[76634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tainted Sentry",
["npcID"] = 40925,
},
[316711] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158376,
},
[285995] = {
["encounterName"] = "Opulence",
["source"] = "Opulence",
["npcID"] = 145261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2271,
},
[427290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galok Wingslicer",
["npcID"] = 209047,
},
[388383] = {
["source"] = "Iskaara Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 186478,
},
[64174] = {
["source"] = "Hodir",
["event"] = "SPELL_CAST_START",
["npcID"] = 33411,
},
[197141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[150917] = {
["encounterName"] = "Hunter Bonetusk",
["source"] = "Hunter Bonetusk",
["encounterID"] = 1656,
["event"] = "SPELL_CAST_START",
["npcID"] = 75001,
},
[172567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostwall Grunt",
["npcID"] = 81368,
},
[195232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wavebinder",
["npcID"] = 97170,
},
[410629] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[353573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vil'thras",
["npcID"] = 185110,
},
[57775] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["npcID"] = 30625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1968,
},
[106646] = {
["source"] = "Flying Snow",
["event"] = "SPELL_CAST_START",
["npcID"] = 56473,
},
[88421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forest Ettin",
["npcID"] = 44367,
},
[16561] = {
["source"] = "Infused Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 82857,
},
[11131] = {
["encounterName"] = "Ghaz'rilla",
["source"] = "Gahz'rilla",
["encounterID"] = 594,
["event"] = "SPELL_CAST_START",
["npcID"] = 7273,
},
[170828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warlock Soulstealer",
["npcID"] = 79482,
},
[384291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[413787] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[396073] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Nodding Tiger",
["npcID"] = 59544,
},
[166565] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79548,
},
[17883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Observer",
["npcID"] = 17938,
},
[121174] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61392,
},
[265523] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[195234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wavebinder",
["npcID"] = 97170,
},
[392484] = {
["source"] = "Moskhoi",
["event"] = "SPELL_CAST_START",
["npcID"] = 195093,
},
[378150] = {
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 189869,
},
[18651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrison Marksman",
["npcID"] = 88391,
},
[308527] = {
["encounterName"] = "Ravnyr",
["source"] = "Gor'groth",
["npcID"] = 156814,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[153395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrion Worm",
["npcID"] = 76057,
},
[114864] = {
["source"] = "Bored Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 59614,
},
[404772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grugoth the Hullcrusher",
["npcID"] = 200721,
},
[302089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sean Wilkers",
["npcID"] = 155261,
},
[392486] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[61730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowplain Disciple",
["npcID"] = 26705,
},
[255644] = {
["source"] = "Farstrider Elite",
["event"] = "SPELL_CAST_START",
["npcID"] = 145005,
},
[174758] = {
["source"] = "Grulkor",
["event"] = "SPELL_CAST_START",
["npcID"] = 86157,
},
[384296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[271670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Princess Talanji",
["npcID"] = 134092,
},
[388392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Textbook",
["npcID"] = 196044,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 200852,
},
[3396] = {
["source"] = "Hungry Mine Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 47662,
},
[106841] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[389056] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[398632] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Deadshot",
["npcID"] = 203914,
},
[302388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vexiona",
["npcID"] = 151798,
},
[378155] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[40076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Wrangler",
["npcID"] = 22877,
},
[397383] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[169418] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[271866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angry Dreadcroc",
["npcID"] = 123090,
},
[325205] = {
["source"] = "Keeneye Bowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 166936,
},
[398634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Deadshot",
["npcID"] = 203914,
},
[373733] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[79913] = {
["source"] = "General Marstone",
["event"] = "SPELL_CAST_START",
["npcID"] = 45995,
},
[173148] = {
["source"] = "Grom'kar Flameslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 81279,
},
[38618] = {
["encounterName"] = "Frozen Commander",
["source"] = "Commander Stoutbeard",
["encounterID"] = 519,
["event"] = "SPELL_CAST_START",
["npcID"] = 26796,
},
[256083] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[314942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Goliath",
["npcID"] = 166869,
},
[404779] = {
["source"] = "Contamination Investigator",
["event"] = "SPELL_CAST_START",
["npcID"] = 202320,
},
[365872] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[362028] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[241680] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Lord Stormsong",
["encounterID"] = 2130,
["event"] = "SPELL_CAST_START",
["npcID"] = 139737,
},
[384827] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[384868] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[167966] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[172714] = {
["source"] = "Botani Greensworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 80696,
},
[15982] = {
["encounterName"] = "Antu'sul",
["source"] = "Antu'sul",
["encounterID"] = 595,
["event"] = "SPELL_CAST_START",
["npcID"] = 8127,
},
[389250] = {
["source"] = "Blacktalon Slayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201831,
},
[202108] = {
["source"] = "Blightshard Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 90998,
},
[32346] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["npcID"] = 18373,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1889,
},
[363827] = {
["isChanneled"] = true,
["source"] = "Mawsworn Annihilator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181224,
},
[374066] = {
["source"] = "Primalist Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190345,
},
[408551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Walker",
["npcID"] = 201063,
},
[418338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morchie",
["npcID"] = 205708,
},
[79930] = {
["source"] = "Darbel Montrose",
["event"] = "SPELL_CAST_START",
["npcID"] = 142688,
},
[417678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meantron 7000",
["npcID"] = 206131,
},
[359733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cipherclad",
["npcID"] = 181349,
},
[157794] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 76263,
},
[388402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Predatory Thresher",
["npcID"] = 198779,
},
[152894] = {
["source"] = "Initiate of the Rising Sun",
["event"] = "SPELL_CAST_START",
["npcID"] = 79466,
},
[157053] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[387708] = {
["source"] = "Phenran",
["event"] = "SPELL_CAST_START",
["npcID"] = 193688,
},
[394620] = {
["source"] = "Nightrot",
["event"] = "SPELL_CAST_START",
["npcID"] = 188707,
},
[29582] = {
["source"] = "Phantom Guest",
["event"] = "SPELL_CAST_START",
["npcID"] = 16409,
},
[29427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Healer",
["npcID"] = 17730,
},
[173573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fluttering Teromoth",
["npcID"] = 79595,
},
[30686] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["npcID"] = 17308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1891,
},
[300351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decimator Shiq'voth",
["npcID"] = 153943,
},
[366685] = {
["source"] = "Stellar Mote",
["event"] = "SPELL_CAST_START",
["npcID"] = 185271,
},
[390115] = {
["source"] = "Sarana",
["event"] = "SPELL_CAST_START",
["npcID"] = 190161,
},
[265540] = {
["source"] = "Fetid Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 130909,
},
[426974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[393259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Inferno",
["npcID"] = 189043,
},
[9053] = {
["source"] = "Shadowforge Surveyor",
["event"] = "SPELL_CAST_START",
["npcID"] = 4844,
},
[267891] = {
["encounterName"] = "Tidesage Council",
["source"] = "Galecaller Faye",
["encounterID"] = 2131,
["event"] = "SPELL_CAST_START",
["npcID"] = 134058,
},
[54962] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2026,
},
[55218] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["event"] = "SPELL_CAST_START",
["npcID"] = 29306,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[42729] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2025,
},
[374073] = {
["source"] = "Primalist Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190345,
},
[268028] = {
["source"] = "Living Current",
["event"] = "SPELL_CAST_START",
["npcID"] = 134144,
},
[366629] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 185155,
},
[396599] = {
["source"] = "Fulgurb",
["event"] = "SPELL_CAST_START",
["npcID"] = 193170,
},
[15547] = {
["source"] = "Stormpike Mountaineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 48482,
},
[292910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Shackler",
["npcID"] = 167322,
},
[304451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siltridge Marauder",
["npcID"] = 152541,
},
[396600] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[303158] = {
["source"] = "Zanj'ir Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 153960,
},
[157173] = {
["source"] = "Felguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 79507,
},
[383953] = {
["source"] = "Bakar Companion",
["event"] = "SPELL_CAST_START",
["npcID"] = 194255,
},
[388410] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[169823] = {
["encounterName"] = "Archmage Sol",
["source"] = "Spore Image",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 84983,
},
[316959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrosive Digester",
["npcID"] = 162828,
},
[385574] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[388743] = {
["source"] = "Risen Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 188510,
},
[199341] = {
["encounterName"] = "Fenryr",
["source"] = "Valarjar Trapper",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 96934,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[314329] = {
["source"] = "Kzit'kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 160867,
},
[163689] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Ahri'ok Dugru",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80816,
},
[365887] = {
["source"] = "Eternal Forger",
["event"] = "SPELL_CAST_START",
["npcID"] = 184878,
},
[260483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrogg the Darkspeaker",
["npcID"] = 104890,
},
[182217] = {
["source"] = "Jailer Zerus",
["event"] = "SPELL_CAST_START",
["npcID"] = 91672,
},
[151548] = {
["source"] = "Bloodmaul Ogre Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 75272,
},
[365888] = {
["source"] = "Dominated Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184879,
},
[417782] = {
["source"] = "Mechanized Mekgineer Hologram",
["event"] = "SPELL_CAST_START",
["npcID"] = 207539,
},
[402748] = {
["source"] = "Molten Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202284,
},
[153268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Exhumer",
["npcID"] = 77700,
},
[374080] = {
["source"] = "Primalist Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190348,
},
[31707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 78116,
},
[394558] = {
["source"] = "Unstable Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 198577,
},
[306111] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["npcID"] = 156818,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2329,
},
[390463] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[260409] = {
["source"] = "Bloodraged Pterrordax",
["event"] = "SPELL_CAST_START",
["npcID"] = 126618,
},
[361016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Attendant",
["npcID"] = 183988,
},
[259752] = {
["source"] = "Hand of Fate",
["event"] = "SPELL_CAST_START",
["npcID"] = 131613,
},
[12039] = {
["encounterName"] = "Watchkeeper Gargolmar",
["source"] = "Hellfire Watcher",
["npcID"] = 17309,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1893,
},
[377421] = {
["source"] = "Amberfur Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187455,
},
[267969] = {
["source"] = "Temple Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 134137,
},
[401421] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[395893] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[182333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormcaller",
["npcID"] = 88087,
},
[314322] = {
["source"] = "Kzit'kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 160867,
},
[402050] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[377512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basalt Shell",
["npcID"] = 186622,
},
[411236] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[397094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[54916] = {
["source"] = "Sparktouched Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 28112,
},
[199345] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 99200,
},
[159085] = {
["source"] = "Blackrock Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 81422,
},
[394114] = {
["event"] = "SPELL_CAST_START",
["source"] = "S.A.V.I.O.R.",
["npcID"] = 195328,
},
[52660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Agent",
["npcID"] = 28341,
},
[382277] = {
["source"] = "Balara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[309894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidtender Malketh",
["npcID"] = 154332,
},
[394564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gillidan",
["npcID"] = 205036,
},
[271310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pathfinder Tacha",
["npcID"] = 200263,
},
[406851] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[153485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrion Worm",
["npcID"] = 76057,
},
[243568] = {
["source"] = "Savage Cursespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 122078,
},
[396613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[260072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pa'kura Priest",
["npcID"] = 131834,
},
[294226] = {
["source"] = "Ma'haat the Indomitable",
["event"] = "SPELL_CAST_START",
["npcID"] = 151739,
},
[269097] = {
["encounterName"] = "Lord Stormsong",
["source"] = "Lord Stormsong",
["encounterID"] = 2132,
["event"] = "SPELL_CAST_START",
["npcID"] = 134060,
},
[414652] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[365898] = {
["source"] = "Dominated Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 183413,
},
[408901] = {
["source"] = "Animated Contaminant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202270,
},
[394567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gillidan",
["npcID"] = 205036,
},
[388424] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[415045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nixke Voltscroll",
["npcID"] = 200965,
},
[313938] = {
["source"] = "Aqir Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161218,
},
[402759] = {
["source"] = "Molten Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202284,
},
[173751] = {
["source"] = "Malkor",
["event"] = "SPELL_CAST_START",
["npcID"] = 83452,
},
[174775] = {
["source"] = "Infested Ogron",
["event"] = "SPELL_CAST_START",
["npcID"] = 82062,
},
[373692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[427333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rydra Scalegorger",
["npcID"] = 209048,
},
[412999] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 201677,
},
[415047] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[393855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web-Queen Ashkaz",
["npcID"] = 192983,
},
[172728] = {
["source"] = "Creeping Vine",
["event"] = "SPELL_CAST_START",
["npcID"] = 85538,
},
[372045] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Caustic Spiderling",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 189233,
},
[120160] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61445,
},
[400714] = {
["source"] = "Nidharr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201310,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[169657] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[335187] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Engulfer",
["npcID"] = 183516,
},
[404394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[372047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[174777] = {
["source"] = "Infested Ogron",
["event"] = "SPELL_CAST_START",
["npcID"] = 82062,
},
[395163] = {
["source"] = "Gethdazr",
["event"] = "SPELL_CAST_START",
["npcID"] = 196165,
},
[276441] = {
["source"] = "Irontide Skyrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 141485,
},
[259759] = {
["source"] = "Hand of Fate",
["event"] = "SPELL_CAST_START",
["npcID"] = 131613,
},
[54965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["npcID"] = 207796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[407245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[149181] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[400300] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[384336] = {
["source"] = "Nokhud Plainstomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191847,
},
[402766] = {
["source"] = "Sundered Flame Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 203616,
},
[413005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Additive",
["npcID"] = 205672,
},
[83926] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["npcID"] = 44715,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[195046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Oracle",
["npcID"] = 95861,
},
[106851] = {
["source"] = "Stout Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59519,
},
[265568] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[390481] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[84013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agatha",
["npcID"] = 44951,
},
[427341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rydra Scalegorger",
["npcID"] = 209048,
},
[34232] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Elf Mage-Priest",
["npcID"] = 27747,
},
[424227] = {
["source"] = "Priestess of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 211076,
},
[392530] = {
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 197799,
},
[271713] = {
["source"] = "Azerite Leviathan",
["event"] = "SPELL_CAST_START",
["npcID"] = 152572,
},
[413008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201578,
},
[390483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Gnasher",
["npcID"] = 189337,
},
[40066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Wrangler",
["npcID"] = 22877,
},
[361815] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[374699] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[316996] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sun Prophet Tenhamen",
["npcID"] = 154727,
},
[155327] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["encounterID"] = 1685,
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[213688] = {
["source"] = "Fel Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 107024,
},
[149184] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[308575] = {
["source"] = "Fallen Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 158146,
},
[79884] = {
["source"] = "Instructor Rufus",
["event"] = "SPELL_CAST_START",
["npcID"] = 48922,
},
[271716] = {
["source"] = "Infused Bedrock",
["event"] = "SPELL_CAST_START",
["npcID"] = 137906,
},
[396629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Coastling",
["npcID"] = 193163,
},
[398677] = {
["source"] = "Irontide Cutthroat",
["event"] = "SPELL_CAST_START",
["npcID"] = 200849,
},
[43649] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["npcID"] = 24201,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2024,
},
[151014] = {
["source"] = "Razorfen Hidecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 74555,
},
[413012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Additive",
["npcID"] = 205671,
},
[221357] = {
["source"] = "Cannoneer Dargal",
["event"] = "SPELL_CAST_START",
["npcID"] = 110635,
},
[306874] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Crackling Stalker",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 157365,
},
[389040] = {
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_START",
["npcID"] = 192769,
},
[413013] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[367521] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[425300] = {
["isChanneled"] = true,
["source"] = "Zaqali Flamemancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[312674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necromantic Scourer",
["npcID"] = 161388,
},
[149186] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[263085] = {
["source"] = "Vilebone Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 134852,
},
[307303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zan-Tien Caller",
["npcID"] = 153095,
},
[419158] = {
["source"] = "Invading Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206765,
},
[273768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Mender",
["npcID"] = 154499,
},
[398681] = {
["source"] = "Frigid Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 200623,
},
[118297] = {
["source"] = "Primal Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 61029,
},
[79721] = {
["source"] = "Forsaken Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 45376,
},
[329310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disobedient Citizen",
["npcID"] = 158813,
},
[303563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lesser Zoatroid",
["npcID"] = 152067,
},
[392539] = {
["source"] = "Awakened Terrasentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 197801,
},
[40832] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[273770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Mender",
["npcID"] = 154499,
},
[406874] = {
["source"] = "Contaminated Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 204310,
},
[311399] = {
["source"] = "Armsmaster Terenson",
["event"] = "SPELL_CAST_START",
["npcID"] = 156949,
},
[207806] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[331108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbleblood",
["npcID"] = 162727,
},
[423257] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[60211] = {
["source"] = "Dragonflayer Forge Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 24079,
},
[265019] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[396637] = {
["source"] = "Elusive Elder Rockfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 194085,
},
[382303] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[384351] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[312680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Dominator",
["npcID"] = 160550,
},
[173762] = {
["source"] = "Malkor",
["event"] = "SPELL_CAST_START",
["npcID"] = 83452,
},
[423259] = {
["source"] = "Wildfire Blazekin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210685,
},
[305011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidemistress Ethendriss",
["npcID"] = 153934,
},
[112998] = {
["source"] = "Residual Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 58803,
},
[111854] = {
["source"] = "Instructor Chillheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[162500] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77803,
},
[384353] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[196870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 91783,
},
[82794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oathsworn Wanderer",
["npcID"] = 44926,
},
[223933] = {
["source"] = "Violetsail Bruisebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 179737,
},
[408927] = {
["source"] = "Animated Contaminant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202270,
},
[165875] = {
["source"] = "Keli'dan the Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 79702,
},
[413023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[196916] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[59575] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[413024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[199361] = {
["encounterName"] = "Fenryr",
["source"] = "Valarjar Trapper",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 96934,
},
[395196] = {
["source"] = "Volcanakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200911,
},
[376829] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[194242] = {
["source"] = "Witchwood Hag",
["event"] = "SPELL_CAST_START",
["npcID"] = 95310,
},
[200700] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[18399] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[410978] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["encounterID"] = 1983,
["event"] = "SPELL_CAST_START",
["npcID"] = 29307,
},
[398692] = {
["source"] = "Glakis, Winter's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199502,
},
[381834] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[12167] = {
["encounterName"] = "Lord Serpentis",
["source"] = "Lord Serpentis",
["npcID"] = 3673,
["event"] = "SPELL_CAST_START",
["encounterID"] = 590,
},
[396645] = {
["source"] = "Elusive Elder Rockfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 194085,
},
[405415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[395833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[394598] = {
["source"] = "Shade of Grief",
["event"] = "SPELL_CAST_START",
["npcID"] = 187559,
},
[396646] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[299746] = {
["source"] = "Waveblade Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 154304,
},
[376169] = {
["source"] = "High Thaumaturge Fural",
["event"] = "SPELL_CAST_START",
["npcID"] = 189905,
},
[209602] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
[166981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invading Warsinger",
["npcID"] = 79753,
},
[406886] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[312690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anq'uri the Titanic",
["npcID"] = 155703,
},
[420347] = {
["source"] = "Kaldorei Archdruid",
["event"] = "SPELL_CAST_START",
["npcID"] = 211066,
},
[174791] = {
["source"] = "Ironwing Flamespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 86373,
},
[376171] = {
["source"] = "Primalist Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[386410] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[319298] = {
["source"] = "Torgok",
["event"] = "SPELL_CAST_START",
["npcID"] = 162817,
},
[147646] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[422776] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[402793] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[322931] = {
["source"] = "Predatory Bloodtusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 158752,
},
[383872] = {
["source"] = "Destructive Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 194179,
},
[375237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[411700] = {
["source"] = "Time-Lost Tidehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 205365,
},
[413622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Infiltrator",
["npcID"] = 206214,
},
[374126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plains Bull",
["npcID"] = 195261,
},
[384365] = {
["source"] = "Nokhud Plainstomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191847,
},
[378222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade Swog",
["npcID"] = 191561,
},
[15472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[15536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamecaller",
["npcID"] = 38926,
},
[384366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Redbeak",
["npcID"] = 198824,
},
[15664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekin Spitter",
["npcID"] = 9776,
},
[259519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinefang Saurolisk",
["npcID"] = 136901,
},
[52238] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["encounterID"] = 1985,
["event"] = "SPELL_CAST_START",
["npcID"] = 28587,
},
[331845] = {
["source"] = "Lightbound Scorcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 165687,
},
[87222] = {
["source"] = "Ambermill Witchalok",
["event"] = "SPELL_CAST_START",
["npcID"] = 1889,
},
[157388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Looter",
["npcID"] = 78365,
},
[342462] = {
["source"] = "Champion of Humility",
["event"] = "SPELL_CAST_START",
["npcID"] = 170836,
},
[183350] = {
["source"] = "Eredar Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 96196,
},
[299431] = {
["source"] = "Malfunctioning Scraphound",
["event"] = "SPELL_CAST_START",
["npcID"] = 151301,
},
[372082] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[58967] = {
["source"] = "Drakkari Battle Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 29836,
},
[196296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormwake Hydra",
["npcID"] = 91792,
},
[313400] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Corruptor Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158375,
},
[384961] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[59433] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[400752] = {
["source"] = "Travard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198947,
},
[164218] = {
["source"] = "Grimrail Bombardier",
["event"] = "SPELL_CAST_START",
["npcID"] = 81407,
},
[289662] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Battlemage",
["npcID"] = 147787,
},
[191527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blade Dancer Illianna",
["npcID"] = 96657,
},
[194956] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[33860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Annihilator",
["npcID"] = 18856,
},
[157390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Packleader",
["npcID"] = 78960,
},
[166605] = {
["source"] = "Frenzied Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 83449,
},
[307008] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Gaze of Madness",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157442,
},
[378229] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2570,
},
[44475] = {
["source"] = "Sunblade Mage Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 24683,
},
[394843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oshigol",
["npcID"] = 193235,
},
[408946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 198870,
},
[427376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[372087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[374135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pinehoof Bull",
["npcID"] = 193595,
},
[214988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Vengeance",
["npcID"] = 100364,
},
[256222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gentle Goat",
["npcID"] = 129110,
},
[279264] = {
["source"] = "Kaldorei Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 205892,
},
[280462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watcher Aum-ka",
["npcID"] = 154619,
},
[59146] = {
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 29820,
},
[204905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 99676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[413044] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[374137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parched Broadhoof Bull",
["npcID"] = 194352,
},
[257732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Enforcer",
["npcID"] = 129602,
},
[55633] = {
["source"] = "Drakkari Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 29832,
},
[319910] = {
["source"] = "Ravenous Etherwyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 158771,
},
[417868] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[376186] = {
["source"] = "Overseer Lahar",
["event"] = "SPELL_CAST_START",
["npcID"] = 189235,
},
[402807] = {
["source"] = "Glittering Shard Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 202326,
},
[82800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Footman",
["npcID"] = 68485,
},
[215754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spawn of Serpentrix",
["npcID"] = 108655,
},
[83824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Geologist",
["npcID"] = 1096,
},
[410999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[396665] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[403203] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[204492] = {
["source"] = "Jandvik Bonepiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 100948,
},
[411000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[372093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Blister",
["npcID"] = 197413,
},
[342168] = {
["source"] = "Champion of Wisdom",
["event"] = "SPELL_CAST_START",
["npcID"] = 170833,
},
[415262] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[411001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurking Tempest",
["npcID"] = 45704,
},
[200898] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["npcID"] = 96015,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[398171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Senegos",
["npcID"] = 199923,
},
[376190] = {
["isChanneled"] = true,
["source"] = "Brackenhide Rotflinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186362,
},
[427384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[196587] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[300424] = {
["source"] = "Scrapbone Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 150160,
},
[83825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Shredder",
["npcID"] = 4260,
},
[409018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[43291] = {
["source"] = "Dragonflayer Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 24216,
},
[147516] = {
["source"] = "Eroded Cliffdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 72809,
},
[392574] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[394622] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[406357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[289635] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Medic",
["npcID"] = 147825,
},
[257736] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Stormcaller",
["npcID"] = 126919,
},
[423626] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[59347] = {
["source"] = "Anub'ar Crypt Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 29063,
},
[65210] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Mimiron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33412,
},
[392576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[420428] = {
["source"] = "Deceiver Hr'qoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 206784,
},
[214004] = {
["source"] = "Crazed Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 97587,
},
[406911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Champion",
["npcID"] = 201288,
},
[408959] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[195944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skrog Wavecrasher",
["npcID"] = 91796,
},
[424352] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[374343] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[188114] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[418637] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[59835] = {
["encounterName"] = "Loken",
["source"] = "Loken",
["encounterID"] = 1986,
["event"] = "SPELL_CAST_START",
["npcID"] = 28923,
},
[390531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[392579] = {
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197831,
},
[370054] = {
["source"] = "Battleseared Magmatusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 196772,
},
[396675] = {
["source"] = "Sundered Flame Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 203682,
},
[259187] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[314855] = {
["source"] = "Gryth'ax the Executioner",
["event"] = "SPELL_CAST_START",
["npcID"] = 159224,
},
[106864] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[414280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternus",
["npcID"] = 208168,
},
[415106] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[257739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktooth Scrapper",
["npcID"] = 129529,
},
[193235] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 94960,
},
[413059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Canister",
["npcID"] = 206019,
},
[365961] = {
["source"] = "Bound Realmbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 183416,
},
[376200] = {
["source"] = "Forgewrought Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 194816,
},
[78196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Pyromancer",
["npcID"] = 41902,
},
[413060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fire Canister",
["npcID"] = 206022,
},
[300434] = {
["source"] = "Scrapbone Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 150160,
},
[412486] = {
["source"] = "Warchanter Ronvath",
["event"] = "SPELL_CAST_START",
["npcID"] = 200128,
},
[285020] = {
["encounterName"] = "Tussle Tonks",
["source"] = "The Platinum Pummeler",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 144244,
},
[95970] = {
["source"] = "D-1000",
["event"] = "SPELL_CAST_START",
["npcID"] = 49268,
},
[195284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Tides",
["npcID"] = 97173,
},
[387910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algeth'ar Echoknight",
["npcID"] = 196200,
},
[41150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Nightlord",
["npcID"] = 22855,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[300436] = {
["source"] = "Scrapbone Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 150146,
},
[200404] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[152282] = {
["source"] = "Kraulshaped Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 75384,
},
[190898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirana Starlight",
["npcID"] = 99451,
},
[68982] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[400777] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[263578] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilnean Battlemage",
["npcID"] = 134192,
},
[386555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
},
[91872] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["npcID"] = 45259,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[408969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Mud",
["npcID"] = 192519,
},
[417752] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[169689] = {
["source"] = "Diving Chakram Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 76116,
},
[154331] = {
["source"] = "Grove Cultivator Kados",
["event"] = "SPELL_CAST_START",
["npcID"] = 133104,
},
[408970] = {
["source"] = "Sundered Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 205735,
},
[391939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Reaver",
["npcID"] = 201153,
},
[270334] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[15537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Necromancer",
["npcID"] = 28200,
},
[164187] = {
["source"] = "Grimrail Bombardier",
["event"] = "SPELL_CAST_START",
["npcID"] = 81407,
},
[15665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekin Torcher",
["npcID"] = 9778,
},
[169690] = {
["source"] = "Diving Chakram Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 76116,
},
[428823] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[376208] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[419211] = {
["source"] = "Felbark the Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 207094,
},
[420525] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[317791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magus of the Dead",
["npcID"] = 163366,
},
[255373] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[394037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Walker",
["npcID"] = 201063,
},
[421260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[420509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamesworn Infernomancer",
["npcID"] = 210503,
},
[396001] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Songbird Queen",
["npcID"] = 59553,
},
[304539] = {
["source"] = "Expedition Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 152147,
},
[421402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Pyremancer",
["npcID"] = 209963,
},
[17274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Injured Warsong Mage",
["npcID"] = 27107,
},
[408975] = {
["source"] = "Sundered Edgelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 198873,
},
[345495] = {
["source"] = "Frothing Pustule",
["event"] = "SPELL_CAST_START",
["npcID"] = 175519,
},
[396689] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[124854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sele'na",
["npcID"] = 50766,
},
[392594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meatgrinder Sotok",
["npcID"] = 186777,
},
[35008] = {
["encounterName"] = "Rokmar the Crackler",
["source"] = "Rokmar the Crackler",
["npcID"] = 17991,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1941,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[175847] = {
["source"] = "Y'kish the Deceiver",
["event"] = "SPELL_CAST_START",
["npcID"] = 81266,
},
[302494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grip of Horror",
["npcID"] = 151872,
},
[386675] = {
["source"] = "Novice Timewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189583,
},
[213975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellwyrm",
["npcID"] = 105884,
},
[390548] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[163550] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79545,
},
[34342] = {
["encounterName"] = "Al'ar",
["source"] = "Al'ar",
["npcID"] = 19514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 730,
},
[420647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashendir Hartwood",
["npcID"] = 211258,
},
[200757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volatile Minion",
["npcID"] = 96280,
},
[429615] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[147652] = {
["source"] = "Primal Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72805,
},
[384474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fathomless Lurker",
["npcID"] = 209580,
},
[422691] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[427694] = {
["source"] = "Reefbreaker Moruud",
["event"] = "SPELL_CAST_START",
["npcID"] = 209898,
},
[401447] = {
["source"] = "Horrific Aberration",
["event"] = "SPELL_CAST_START",
["npcID"] = 198965,
},
[422614] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[196403] = {
["source"] = "Doom Commander Beliash",
["event"] = "SPELL_CAST_START",
["npcID"] = 93221,
},
[382573] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[296355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Klontzas",
["npcID"] = 152612,
},
[34930] = {
["source"] = "Ethereal Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 18331,
},
[415125] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 207639,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[114548] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[419221] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'gall",
["npcID"] = 208212,
},
[173791] = {
["source"] = "Tangleheart Cultivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 82322,
},
[308643] = {
["source"] = "Haywire Clockwork Rocket Bot",
["event"] = "SPELL_CAST_START",
["npcID"] = 158279,
},
[319966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lobber Jalrax",
["npcID"] = 161016,
},
[164168] = {
["source"] = "Grimrail Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81212,
},
[421971] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[372202] = {
["isChanneled"] = true,
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189464,
},
[20787] = {
["source"] = "Blazing Fireguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 8910,
},
[419223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'gall",
["npcID"] = 208212,
},
[176127] = {
["source"] = "Grom'kar Boomer",
["event"] = "SPELL_CAST_START",
["npcID"] = 80935,
},
[308645] = {
["source"] = "Reprogrammed Warbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 158286,
},
[369328] = {
["isChanneled"] = true,
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184107,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
[153315] = {
["encounterName"] = "Ranjit",
["source"] = "Ranjit",
["encounterID"] = 1698,
["event"] = "SPELL_CAST_START",
["npcID"] = 75964,
},
[275882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ettin Earthcrusher",
["npcID"] = 136421,
},
[427657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nuoberon",
["npcID"] = 209113,
},
[394652] = {
["source"] = "Infernum",
["event"] = "SPELL_CAST_START",
["npcID"] = 193648,
},
[427498] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[421340] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Anvil",
["npcID"] = 206478,
},
[200805] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queen's Centurion",
["npcID"] = 103432,
},
[427417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[427760] = {
["source"] = "Envoy of Winter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209929,
},
[398749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bulwark",
["npcID"] = 200850,
},
[204574] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[395594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zurgaz Corebreaker",
["npcID"] = 193680,
},
[372129] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[199758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Immolanth",
["npcID"] = 96682,
},
[384416] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[415373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Footman",
["npcID"] = 207578,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[390560] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[426206] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[419229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'gall",
["npcID"] = 208212,
},
[164192] = {
["source"] = "Grimrail Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 81236,
},
[12466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unliving Sorcerer",
["npcID"] = 18499,
},
[414473] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[296365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Klontzas",
["npcID"] = 152612,
},
[282031] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Mestrah",
["npcID"] = 144690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2266,
},
[68988] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[150658] = {
["source"] = "Kraulshaper Tukaar",
["event"] = "SPELL_CAST_START",
["npcID"] = 74900,
},
[35010] = {
["encounterName"] = "Mennu the Betrayer",
["source"] = "Mennu the Betrayer",
["npcID"] = 17941,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1939,
},
[59839] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["encounterID"] = 1978,
["event"] = "SPELL_CAST_START",
["npcID"] = 29304,
},
[423610] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208445,
},
[417184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eviscerator Kintara",
["npcID"] = 207596,
},
[44503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wretched Husk",
["npcID"] = 24690,
},
[161510] = {
["source"] = "Mandrakor",
["event"] = "SPELL_CAST_START",
["npcID"] = 84406,
},
[255824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Juggernaut",
["npcID"] = 122971,
},
[417185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eviscerator Kintara",
["npcID"] = 207596,
},
[263604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunted Servitor",
["npcID"] = 137587,
},
[385239] = {
["source"] = "Flare Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202683,
},
[200647] = {
["source"] = "Felguard Butcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 96494,
},
[200418] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["npcID"] = 84400,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[396709] = {
["source"] = "Servant of Kruul",
["event"] = "SPELL_CAST_START",
["npcID"] = 206861,
},
[204666] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[201033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kethrazor",
["npcID"] = 96997,
},
[172774] = {
["source"] = "Gronn Rockthrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 80689,
},
[282036] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Manceroy Flamefist",
["npcID"] = 144693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2266,
},
[428139] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[257756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Buccaneer",
["npcID"] = 129527,
},
[199567] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Image of Latosius",
["npcID"] = 101028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[314801] = {
["source"] = "Agustus Moulaine",
["event"] = "SPELL_CAST_START",
["npcID"] = 157700,
},
[165193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stele",
["npcID"] = 72627,
},
[406083] = {
["isChanneled"] = true,
["source"] = "Flesh Spawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203338,
},
[378282] = {
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[41410] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["npcID"] = 23419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[427885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[425381] = {
["isChanneled"] = true,
["source"] = "Firelands Flameguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[152298] = {
["source"] = "Vengeful Magma Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 75820,
},
[314803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amahtet",
["npcID"] = 159320,
},
[421398] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[256846] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[189467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malace Shade",
["npcID"] = 97090,
},
[197696] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1833,
},
[303310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Theurgist Nitara",
["npcID"] = 155836,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[113017] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Zao Sunseeker",
["encounterID"] = 1439,
["event"] = "SPELL_CAST_START",
["npcID"] = 58826,
},
[395017] = {
["source"] = "Massive Magmashell",
["event"] = "SPELL_CAST_START",
["npcID"] = 193152,
},
[382576] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[359856] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[427432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[46187] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24556,
},
[22883] = {
["source"] = "Atal'ai High Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 5273,
},
[38391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Destroyer",
["npcID"] = 46260,
},
[46150] = {
["source"] = "Coilskar Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 24696,
},
[396717] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[308664] = {
["source"] = "Craggle Wobbletop",
["event"] = "SPELL_CAST_START",
["npcID"] = 158284,
},
[421616] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[265876] = {
["source"] = "Matron Alma",
["event"] = "SPELL_CAST_START",
["npcID"] = 135365,
},
[176280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Waterspeaker",
["npcID"] = 88261,
},
[263961] = {
["source"] = "Heartsbane Soulcharmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 131812,
},
[264024] = {
["source"] = "Heartsbane Soulcharmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 131812,
},
[131178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pandaren Scarecrow",
["npcID"] = 66768,
},
[421292] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[201039] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor",
["npcID"] = 97044,
},
[425388] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[33111] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[372147] = {
["source"] = "Balara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[36971] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Grand Astromancer Capernian",
["npcID"] = 20062,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[29928] = {
["encounterName"] = "Opera Hall",
["source"] = "Phantom Guest",
["npcID"] = 16409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 655,
},
[86726] = {
["encounterName"] = "Randolph Moloch",
["source"] = "Randolph Moloch",
["npcID"] = 46383,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1146,
},
[378835] = {
["source"] = "Brackenhide Rotflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186362,
},
[316859] = {
["source"] = "Stoneborn Recruit",
["event"] = "SPELL_CAST_START",
["npcID"] = 170042,
},
[284399] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Living Bomb",
["npcID"] = 146102,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2266,
},
[37967] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[300525] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 150142,
},
[398770] = {
["source"] = "Akiormi",
["event"] = "SPELL_CAST_START",
["npcID"] = 200702,
},
[409009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[387465] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[413105] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[406962] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[425392] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[394676] = {
["source"] = "Council Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198501,
},
[372151] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 186284,
},
[17287] = {
["source"] = "Bloodwarder Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 19633,
},
[16006] = {
["source"] = "Farseer Drek'Thar",
["event"] = "SPELL_CAST_START",
["npcID"] = 78996,
},
[370104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Protector",
["npcID"] = 186600,
},
[404916] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[265772] = {
["source"] = "Atal'zul Chosen",
["event"] = "SPELL_CAST_START",
["npcID"] = 132967,
},
[200498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Soulstalker",
["npcID"] = 96278,
},
[34762] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[388535] = {
["source"] = "Gnawbone Chainchewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196521,
},
[390583] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[424315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 211086,
},
[264038] = {
["source"] = "Coven Thornshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 131666,
},
[88959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Adept",
["npcID"] = 45935,
},
[126346] = {
["source"] = "Rangari Jonaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 86663,
},
[244665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ember of Azzinoth",
["npcID"] = 122712,
},
[427444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[388537] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[260258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Fragment",
["npcID"] = 126538,
},
[425397] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[386490] = {
["encounterName"] = "Granyth",
["source"] = "Nokhud Saboteur",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 195821,
},
[87180] = {
["source"] = "Summoned Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 46820,
},
[135425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Hunter",
["npcID"] = 68334,
},
[409016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[39647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Nightlord",
["npcID"] = 22855,
},
[59842] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["encounterID"] = 1978,
["event"] = "SPELL_CAST_START",
["npcID"] = 29304,
},
[41171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Heartseeker",
["npcID"] = 23339,
},
[392635] = {
["source"] = "Kaurdyth",
["event"] = "SPELL_CAST_START",
["npcID"] = 197835,
},
[263627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 134201,
},
[388540] = {
["event"] = "SPELL_CAST_START",
["source"] = "O'nank Shorescour",
["npcID"] = 193118,
},
[41053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Champion",
["npcID"] = 22880,
},
[36805] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 19622,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[205549] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[42024] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Elementalist",
["npcID"] = 23523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[284106] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Sister Katherine",
["npcID"] = 146251,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[417210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Lieutenant",
["npcID"] = 207581,
},
[41276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Behemoth",
["npcID"] = 23196,
},
[169714] = {
["source"] = "Gnarlroot",
["event"] = "SPELL_CAST_START",
["npcID"] = 81984,
},
[170738] = {
["source"] = "Undermage Kesalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 85496,
},
[396877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Air Elemental",
["npcID"] = 196155,
},
[39126] = {
["source"] = "Sunseeker Botanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 18422,
},
[327296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Archilon",
["npcID"] = 158867,
},
[398782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Hunter",
["npcID"] = 200484,
},
[376257] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[361923] = {
["encounterName"] = "Lords of Dread",
["source"] = "Inchoate Shadow",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 183138,
},
[388544] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[41455] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[392640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[41471] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[273871] = {
["source"] = "Ankylodon Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 123093,
},
[38759] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["encounterID"] = 1900,
["event"] = "SPELL_CAST_START",
["npcID"] = 18341,
},
[151286] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Aggem Thorncurse",
["encounterID"] = 1659,
["event"] = "SPELL_CAST_START",
["npcID"] = 75149,
},
[423734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomfiend",
["npcID"] = 210910,
},
[378886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turi Flickerflame",
["npcID"] = 199740,
},
[91313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chiseled Golem",
["npcID"] = 48037,
},
[417215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Reaver",
["npcID"] = 207585,
},
[164597] = {
["source"] = "Bloodmaul Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75198,
},
[396738] = {
["source"] = "The Blue Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195976,
},
[13952] = {
["source"] = "Lightsworn Vindicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 22861,
},
[360859] = {
["source"] = "Halondrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 181047,
},
[289420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kal'ia Pa'kuaya",
["npcID"] = 148607,
},
[396739] = {
["source"] = "The Red Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195974,
},
[406978] = {
["source"] = "Contamination Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 202319,
},
[382555] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[427456] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[282209] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Echo of Krag'wa",
["npcID"] = 148962,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2268,
},
[374215] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[290955] = {
["encounterName"] = "King Rastakhan",
["source"] = "Headhunter Gal'wana",
["npcID"] = 146326,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[288210] = {
["source"] = "Arena Challenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 163032,
},
[413123] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[109952] = {
["source"] = "Time-Twisted Geist",
["event"] = "SPELL_CAST_START",
["npcID"] = 54511,
},
[284831] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["npcID"] = 145616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[284446] = {
["encounterName"] = "King Rastakhan",
["source"] = "Bwonsamdi",
["npcID"] = 145644,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2272,
},
[396742] = {
["source"] = "Slobberclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 195972,
},
[250114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Dragon Whelp",
["npcID"] = 8776,
},
[286695] = {
["encounterName"] = "King Rastakhan",
["source"] = "Phantom of Retribution",
["npcID"] = 146491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[427459] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[421316] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[285319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Stormbringer",
["npcID"] = 146831,
},
[372568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[402887] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[250096] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[382410] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2606,
},
[402888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[84868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ferocious Grizzled Bear",
["npcID"] = 1778,
},
[384933] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 188067,
},
[121468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raigonn",
["npcID"] = 61177,
},
[386757] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[214771] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["npcID"] = 99651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[173307] = {
["source"] = "Thunderlord Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 83390,
},
[30180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Homunculus",
["npcID"] = 16539,
},
[393266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krolkoth the Mountain",
["npcID"] = 197501,
},
[89697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Cannon",
["npcID"] = 48266,
},
[91038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mining Monkey",
["npcID"] = 48441,
},
[409359] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2682,
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-05-12 04:22:48 | INIT | Plater-v579-Retail | Framework v536 | 10.2.7 | enUS | Qpe",
"2024-05-12 04:03:34 | INIT | Plater-v579-Retail | Framework v536 | 10.2.7 | enUS | Qpe",
"2024-05-12 04:02:39 | INIT | Plater-v579-Retail | Framework v536 | 10.2.7 | enUS | Qpe",
"2024-05-12 03:24:55 | INIT | Plater-v579-Retail | Framework v536 | 10.2.7 | enUS | Qpe",
"2024-05-12 03:24:23 | INIT | Plater-v579-Retail | Framework v536 | 10.2.7 | enUS | Qpe",
"2024-05-07 12:00:11 | INIT | Plater-v578a-Retail | Framework v534 | 10.2.6 | enUS | Qubit",
"2024-05-04 09:01:10 | INIT | Plater-v578a-Retail | Framework v532 | 10.2.6 | enUS | Qpe",
"2024-05-02 01:54:07 | INIT | Plater-v578a-Retail | Framework v532 | 10.2.6 | enUS | Qpe",
"2024-05-01 08:03:30 | INIT | Plater-v578a-Retail | Framework v532 | 10.2.6 | enUS | Qpcheese",
"2024-04-30 06:38:52 | INIT | Plater-v578a-Retail | Framework v532 | 10.2.6 | enUS | Qpcheese",
"2024-04-27 04:01:56 | INIT | Plater-v578a-Retail | Framework v532 | 10.2.6 | enUS | Qpe",
"2024-04-24 18:39:15 | INIT | Plater-v578a-Retail | Framework v532 | 10.2.6 | enUS | Qpcheese",
"2024-04-24 17:41:54 | INIT | Plater-v578a-Retail | Framework v532 | 10.2.6 | enUS | Qpcheese",
"2024-03-18 01:40:24 | INIT | Plater-v576a-Retail | Framework v525 | 10.2.5 | enUS | Qubit",
"2024-03-18 01:06:57 | INIT | Plater-v576a-Retail | Framework v525 | 10.2.5 | enUS | Qubit",
"2024-03-18 00:02:16 | INIT | Plater-v576a-Retail | Framework v525 | 10.2.5 | enUS | Qubit",
"2024-03-17 23:27:51 | INIT | Plater-v576a-Retail | Framework v525 | 10.2.5 | enUS | Qubit",
"2024-03-04 19:22:24 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qubit",
"2024-03-04 15:37:05 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qubit",
},
["_error_logs"] = {
},
}
