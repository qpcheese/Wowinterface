
PlaterDB = {
	["captured_spells"] = {
		[396774] = {
			["isChanneled"] = false,
			["source"] = "Primalist Stonegrinder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199982,
		},
		[407122] = {
			["isChanneled"] = false,
			["source"] = "Horde Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203857,
		},
		[407123] = {
			["source"] = "Horde Warlock",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203857,
		},
		[284228] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Downwind Dori",
			["npcID"] = 150755,
		},
		[385023] = {
			["type"] = "DEBUFF",
			["source"] = "Thicket Scalebiter",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 192946,
		},
		[384640] = {
			["type"] = "DEBUFF",
			["source"] = "Wounded Scalesworn",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194069,
		},
		[419516] = {
			["isChanneled"] = false,
			["source"] = "Chronaxie",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 206070,
		},
		[401248] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[407125] = {
			["isChanneled"] = false,
			["source"] = "Horde Raider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 207969,
		},
		[393584] = {
			["isChanneled"] = false,
			["source"] = "Gladehorn Armoredon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 196555,
		},
		[290490] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Crusader Tanastas",
			["npcID"] = 150727,
		},
		[383237] = {
			["isChanneled"] = false,
			["source"] = "Unleashed Lavaburst",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188666,
		},
		[423734] = {
			["isChanneled"] = false,
			["source"] = "Doomfiend",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210910,
		},
		[386176] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[23769] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sayge",
			["npcID"] = 14822,
		},
		[412238] = {
			["isChanneled"] = false,
			["source"] = "Spurlok, Timesworn Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205158,
		},
		[378129] = {
			["isChanneled"] = false,
			["source"] = "Primalist Frostsurger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204442,
		},
		[419648] = {
			["isChanneled"] = false,
			["source"] = "Un'Gorian Protohorn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 207286,
		},
		[387072] = {
			["isChanneled"] = false,
			["source"] = "Lavacaller Primalist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186823,
		},
		[414922] = {
			["source"] = "Spurlok, Timesworn Sentinel",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 205158,
		},
		[193473] = {
			["type"] = "DEBUFF",
			["source"] = "Void Tendril",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 192337,
		},
		[198839] = {
			["isChanneled"] = false,
			["source"] = "Earthen Wall Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 100943,
		},
		[115804] = {
			["source"] = "Earth Spirit",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 69792,
		},
		[419524] = {
			["isChanneled"] = false,
			["source"] = "Loose Time",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 209170,
		},
		[373279] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thing From Beyond",
			["npcID"] = 189988,
		},
		[417481] = {
			["isChanneled"] = false,
			["source"] = "Timeline Marauder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199748,
		},
		[188046] = {
			["isChanneled"] = false,
			["source"] = "Denizen of the Dream",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198489,
		},
		[49966] = {
			["isChanneled"] = false,
			["source"] = "Mammoth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[400492] = {
			["isChanneled"] = false,
			["source"] = "Zaqali Spiritbreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 202675,
		},
		[419527] = {
			["source"] = "Loose Time",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 209170,
		},
		[407902] = {
			["isChanneled"] = false,
			["source"] = "Horde Farseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204206,
		},
		[402793] = {
			["isChanneled"] = false,
			["source"] = "Gholna",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199853,
		},
		[400877] = {
			["isChanneled"] = false,
			["source"] = "Smoldering Hound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205045,
		},
		[388741] = {
			["isChanneled"] = false,
			["source"] = "Ghostly Researcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203013,
		},
		[30213] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Flaagozin",
			["npcID"] = 17252,
		},
		[392063] = {
			["isChanneled"] = false,
			["source"] = "Kykrolian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198614,
		},
		[375201] = {
			["isChanneled"] = false,
			["source"] = "Bright Gustfeather",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195002,
		},
		[378012] = {
			["isChanneled"] = false,
			["source"] = "Lavacaller Primalist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186823,
		},
		[392959] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[412505] = {
			["isChanneled"] = false,
			["source"] = "Tyr's Vanguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205151,
		},
		[407651] = {
			["source"] = "Goblin Sapper",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 204030,
		},
		[408801] = {
			["source"] = "Incorporeal Being",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 204560,
		},
		[375459] = {
			["isChanneled"] = false,
			["source"] = "Thunderspine Rumbler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192941,
		},
		[51963] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ebon Gargoyle",
			["npcID"] = 27829,
		},
		[378143] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Primalist Infiltrator",
			["npcID"] = 189895,
		},
		[418257] = {
			["type"] = "BUFF",
			["source"] = "Fel Queen's Guard",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 207152,
		},
		[422090] = {
			["isChanneled"] = false,
			["source"] = "Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 54983,
		},
		[408805] = {
			["isChanneled"] = false,
			["source"] = "Incorporeal Being",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204560,
		},
		[396159] = {
			["isChanneled"] = false,
			["source"] = "Lava Burster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186836,
		},
		[394754] = {
			["isChanneled"] = false,
			["source"] = "Lindormi",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 197915,
		},
		[386195] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dreadstalker",
			["npcID"] = 98035,
		},
		[413023] = {
			["isChanneled"] = false,
			["source"] = "Lerai, Timesworn Maiden",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205152,
		},
		[412129] = {
			["isChanneled"] = false,
			["source"] = "Lerai, Timesworn Maiden",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205152,
		},
		[412768] = {
			["encounterName"] = "Morchie",
			["type"] = "BUFF",
			["source"] = "Familiar Face",
			["encounterID"] = 2671,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201756,
		},
		[422094] = {
			["isChanneled"] = false,
			["source"] = "Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 54983,
		},
		[413024] = {
			["isChanneled"] = false,
			["source"] = "Valow, Timesworn Keeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201222,
		},
		[57984] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Greater Fire Elemental",
			["npcID"] = 95061,
		},
		[407787] = {
			["isChanneled"] = false,
			["source"] = "Vakan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199855,
		},
		[412131] = {
			["source"] = "Lerai, Timesworn Maiden",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 205152,
		},
		[382749] = {
			["isChanneled"] = false,
			["source"] = "Bossy Hornswog",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 190998,
		},
		[385049] = {
			["type"] = "BUFF",
			["source"] = "Elusive Thunder Lizard",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 193859,
		},
		[377512] = {
			["isChanneled"] = false,
			["source"] = "Igneous Mollusc",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200806,
		},
		[413027] = {
			["source"] = "Valow, Timesworn Keeper",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201222,
		},
		[423886] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Flame Rift",
			["npcID"] = 211039,
		},
		[407535] = {
			["isChanneled"] = true,
			["source"] = "Horde Destroyer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203861,
		},
		[412262] = {
			["isChanneled"] = false,
			["source"] = "Time-Lost Rocketeer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205727,
		},
		[396805] = {
			["isChanneled"] = false,
			["source"] = "Gorger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192759,
		},
		[371383] = {
			["isChanneled"] = false,
			["source"] = "Hailbringer Theurgist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189229,
		},
		[19483] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blasphemy",
			["npcID"] = 185584,
		},
		[412136] = {
			["isChanneled"] = false,
			["source"] = "Valow, Timesworn Keeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201222,
		},
		[259277] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Savage",
			["npcID"] = 165189,
		},
		[2649] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wulgarr",
			["npcID"] = 165189,
		},
		[400641] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[413544] = {
			["isChanneled"] = false,
			["source"] = "Timestream Anomaly",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199749,
		},
		[183075] = {
			["isChanneled"] = false,
			["source"] = "Larivi",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192747,
		},
		[400642] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[192082] = {
			["type"] = "BUFF",
			["source"] = "Wind Rush Totem",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 97285,
		},
		[112042] = {
			["isChanneled"] = false,
			["source"] = "Zag'gore",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[413547] = {
			["source"] = "Timestream Anomaly",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199749,
		},
		[391958] = {
			["isChanneled"] = false,
			["source"] = "Cloying Gale",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198126,
		},
		[283499] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Qyrix the Hatchet",
			["npcID"] = 150743,
		},
		[373947] = {
			["type"] = "DEBUFF",
			["source"] = "Spotted Prowler",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 195460,
		},
		[17735] = {
			["isChanneled"] = false,
			["source"] = "Zag'gore",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[377908] = {
			["type"] = "BUFF",
			["source"] = "Grotto Creeper",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 196426,
		},
		[24394] = {
			["source"] = "Sul'raka",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[392983] = {
			["isChanneled"] = false,
			["source"] = "Fire Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69791,
		},
		[89751] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Flaagozin",
			["npcID"] = 17252,
		},
		[411763] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Infinite Keeper",
			["encounterID"] = 2673,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205212,
		},
		[400649] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[24450] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shinigami",
			["npcID"] = 165189,
		},
		[245102] = {
			["type"] = "DEBUFF",
			["source"] = "Devlynn Styx",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 121527,
		},
		[1604] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Primalist Infiltrator",
			["npcID"] = 189895,
		},
		[3716] = {
			["isChanneled"] = false,
			["source"] = "Zag'gore",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[30151] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Flaagozin",
			["npcID"] = 17252,
		},
		[412661] = {
			["isChanneled"] = false,
			["source"] = "Invoq",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203627,
		},
		[410234] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203678,
		},
		[284401] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Grigori the Unrepentant",
			["npcID"] = 144569,
		},
		[410235] = {
			["encounterName"] = "Time-Lost Battlefield",
			["type"] = "DEBUFF",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203678,
		},
		[410236] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203678,
		},
		[389541] = {
			["isChanneled"] = false,
			["source"] = "White Tiger Statue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 196581,
		},
		[419052] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Future Self",
			["encounterID"] = 2670,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208959,
		},
		[377278] = {
			["isChanneled"] = false,
			["source"] = "Steward Saphos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192552,
		},
		[89753] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Flaagozin",
			["npcID"] = 17252,
		},
		[90328] = {
			["isChanneled"] = false,
			["source"] = "SpaceShrimp",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[412027] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Infinite Keeper",
			["encounterID"] = 2673,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205212,
		},
		[412922] = {
			["isChanneled"] = true,
			["source"] = "Spurlok, Timesworn Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205158,
		},
		[270481] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Demonic Tyrant",
			["npcID"] = 135002,
		},
		[412156] = {
			["isChanneled"] = false,
			["source"] = "Time-Lost Aerobot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205723,
		},
		[404364] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 202789,
		},
		[290539] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Loqh'wa the Vengeful",
			["npcID"] = 150723,
		},
		[410497] = {
			["encounterName"] = "Time-Lost Battlefield",
			["type"] = "DEBUFF",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203678,
		},
		[90361] = {
			["isChanneled"] = false,
			["source"] = "Sul'raka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[372557] = {
			["type"] = "DEBUFF",
			["source"] = "Hyena Matriarch",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 187566,
		},
		[400279] = {
			["type"] = "DEBUFF",
			["source"] = "Zaqali Flamewalker",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199826,
		},
		[104318] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wild Imp",
			["npcID"] = 143622,
		},
		[134477] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Flaagozin",
			["npcID"] = 17252,
		},
		[394660] = {
			["type"] = "DEBUFF",
			["source"] = "Bluescale",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 188723,
		},
		[422382] = {
			["isChanneled"] = false,
			["source"] = "Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 54983,
		},
		[377543] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dream Projection",
			["npcID"] = 192459,
		},
		[405905] = {
			["isChanneled"] = false,
			["source"] = "Failed Experiment",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203007,
		},
		[260249] = {
			["source"] = "Andromeda",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[410249] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[396069] = {
			["isChanneled"] = false,
			["source"] = "Primal Earthshard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 185647,
		},
		[91800] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Stonebender",
			["npcID"] = 26125,
		},
		[398370] = {
			["isChanneled"] = false,
			["source"] = "Calcifying Crawler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203342,
		},
		[410890] = {
			["isChanneled"] = false,
			["source"] = "Infinite Warder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205259,
		},
		[227291] = {
			["isChanneled"] = false,
			["source"] = "Niuzao",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 73967,
		},
		[398627] = {
			["isChanneled"] = false,
			["source"] = "Underlight Flutterer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200570,
		},
		[418046] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203678,
		},
		[410254] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203678,
		},
		[81262] = {
			["isChanneled"] = false,
			["source"] = "Efflorescence",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 47649,
		},
		[407701] = {
			["isChanneled"] = true,
			["source"] = "Spiteful Shade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204030,
		},
		[192226] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Liquid Magma Totem",
			["npcID"] = 97369,
		},
		[419327] = {
			["isChanneled"] = true,
			["source"] = "Timeline Marauder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199748,
		},
		[400165] = {
			["isChanneled"] = false,
			["source"] = "Infinite Twilight Magus",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201223,
		},
		[424949] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
		},
		[392118] = {
			["isChanneled"] = false,
			["source"] = "Studious Scholar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 197468,
		},
		[417413] = {
			["encounterName"] = "Chrono-Lord Deios",
			["type"] = "DEBUFF",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199000,
		},
		[416264] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199000,
		},
		[208963] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Skyfury Totem",
			["npcID"] = 105427,
		},
		[396975] = {
			["isChanneled"] = false,
			["source"] = "Firava the Rekindler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195915,
		},
		[405279] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198999,
		},
		[399786] = {
			["type"] = "BUFF",
			["source"] = "Zaqali Farseer",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201117,
		},
		[400681] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["type"] = "DEBUFF",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 198998,
		},
		[416139] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199000,
		},
		[381519] = {
			["isChanneled"] = false,
			["source"] = "Embertooth Scavenger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187426,
		},
		[355586] = {
			["type"] = "BUFF",
			["source"] = "Static Field Totem",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 179867,
		},
		[388035] = {
			["isChanneled"] = false,
			["source"] = "Mammoth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[16827] = {
			["isChanneled"] = false,
			["source"] = "Sul'raka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[400683] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[410776] = {
			["isChanneled"] = false,
			["source"] = "Infinite Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204658,
		},
		[410904] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199000,
		},
		[398643] = {
			["type"] = "BUFF",
			["source"] = "Deepbed Dawdler",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 205121,
		},
		[138130] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[410908] = {
			["encounterName"] = "Chrono-Lord Deios",
			["type"] = "DEBUFF",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199000,
		},
		[113746] = {
			["source"] = "Fire Spirit",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 69791,
		},
		[396856] = {
			["isChanneled"] = false,
			["source"] = "Firava the Rekindler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195915,
		},
		[407715] = {
			["source"] = "Goblin Sapper",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 204030,
		},
		[401200] = {
			["encounterName"] = "Morchie",
			["type"] = "DEBUFF",
			["source"] = "Familiar Face",
			["encounterID"] = 2671,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201756,
		},
		[408227] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203678,
		},
		[383061] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Liquid Magma Totem",
			["npcID"] = 97369,
		},
		[408228] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203678,
		},
		[400180] = {
			["isChanneled"] = false,
			["source"] = "Infinite Twilight Magus",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201223,
		},
		[396859] = {
			["isChanneled"] = false,
			["source"] = "Primal Earthshard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 185647,
		},
		[413595] = {
			["isChanneled"] = false,
			["source"] = "Tyr, the Infinite Keeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[385363] = {
			["type"] = "DEBUFF",
			["source"] = "Mature Riverbeast",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194075,
		},
		[176458] = {
			["type"] = "BUFF",
			["source"] = "Blacksmithing Follower - Alliance",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 88403,
		},
		[82800] = {
			["isChanneled"] = false,
			["source"] = "Fel Queen's Guard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 207152,
		},
		[416152] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199000,
		},
		[108446] = {
			["isChanneled"] = false,
			["source"] = "Unknown",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17252,
		},
		[370035] = {
			["type"] = "BUFF",
			["source"] = "Injured Bluefeather Roc",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 184481,
		},
		[419603] = {
			["encounterName"] = "Time-Lost Battlefield",
			["type"] = "BUFF",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203678,
		},
		[267964] = {
			["isChanneled"] = false,
			["source"] = "Leeshvegen",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17252,
		},
		[201754] = {
			["isChanneled"] = false,
			["source"] = "Sul'raka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[403891] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198999,
		},
		[413473] = {
			["isChanneled"] = false,
			["source"] = "Temporal Deviation",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 206063,
		},
		[418200] = {
			["isChanneled"] = false,
			["source"] = "Infinite Riftmage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208698,
		},
		[405681] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Flaagozin",
			["npcID"] = 17252,
		},
		[360969] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Savage",
			["npcID"] = 165189,
		},
		[419351] = {
			["isChanneled"] = false,
			["source"] = "Infinite Saboteur",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208438,
		},
		[404916] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198999,
		},
		[317791] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
		},
		[317792] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
		},
		[406962] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Axe Thrower",
			["encounterID"] = 2672,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203799,
		},
		[412200] = {
			["isChanneled"] = true,
			["source"] = "Time-Lost Aerobot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205723,
		},
		[418588] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Future Self",
			["npcID"] = 208957,
		},
		[413606] = {
			["source"] = "Infinite Twilight Magus",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201223,
		},
		[228649] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[209967] = {
			["isChanneled"] = false,
			["source"] = "Dire Basilisk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 105419,
		},
		[381414] = {
			["isChanneled"] = false,
			["source"] = "Dream Projection",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192459,
		},
		[263861] = {
			["isChanneled"] = false,
			["source"] = "Direhorn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[125056] = {
			["isChanneled"] = false,
			["source"] = "Pisan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[418999] = {
			["isChanneled"] = false,
			["source"] = "Future Self",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208958,
		},
		[201633] = {
			["type"] = "BUFF",
			["source"] = "Earthen Wall Totem",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100943,
		},
		[386639] = {
			["type"] = "BUFF",
			["source"] = "Cleansing Totem",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 195778,
		},
		[196816] = {
			["type"] = "BUFF",
			["source"] = "Divine Image",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 198236,
		},
		[403772] = {
			["isChanneled"] = false,
			["source"] = "Vakan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199855,
		},
		[387037] = {
			["isChanneled"] = false,
			["source"] = "Primal Revenant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195917,
		},
		[59638] = {
			["isChanneled"] = false,
			["source"] = "Mirror Image",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 31216,
		},
		[100784] = {
			["isChanneled"] = false,
			["source"] = "Fire Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69791,
		},
		[54049] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shaanhym",
			["npcID"] = 417,
		},
		[412128] = {
			["isChanneled"] = false,
			["source"] = "Lerai, Timesworn Maiden",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205152,
		},
		[7870] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mirora",
			["npcID"] = 1863,
		},
		[283561] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Len'te the Bitter",
			["npcID"] = 144528,
		},
		[382945] = {
			["type"] = "BUFF",
			["source"] = "Sal Atwater",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194053,
		},
		[400883] = {
			["isChanneled"] = false,
			["source"] = "Zaqali Blazestalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199828,
		},
		[89766] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Felguard",
			["npcID"] = 17252,
		},
		[89798] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Lord Victor Nefarius",
			["npcID"] = 49799,
		},
		[334713] = {
			["isChanneled"] = false,
			["source"] = "Dreadstalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98035,
		},
		[386601] = {
			["type"] = "BUFF",
			["source"] = "Akrakorill",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[413607] = {
			["isChanneled"] = false,
			["source"] = "Infinite Twilight Magus",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201223,
		},
		[199373] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Army of the Dead",
			["npcID"] = 24207,
		},
		[411952] = {
			["isChanneled"] = true,
			["source"] = "Infinite Timebender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205337,
		},
		[400481] = {
			["type"] = "BUFF",
			["source"] = "Primalist Crustbreaker",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199980,
		},
		[399702] = {
			["isChanneled"] = false,
			["source"] = "Swooping Flayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199809,
		},
		[107428] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[418085] = {
			["source"] = "Temporal Fusion",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 206068,
		},
		[419602] = {
			["isChanneled"] = false,
			["source"] = "Grommash Hellscream",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203678,
		},
		[113656] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[377589] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[413487] = {
			["isChanneled"] = false,
			["source"] = "Temporal Fusion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 206068,
		},
		[410306] = {
			["type"] = "BUFF",
			["source"] = "Hauling Cart",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 205052,
		},
		[42648] = {
			["type"] = "BUFF",
			["source"] = "Grizzled Mauler",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 197663,
		},
		[405868] = {
			["isChanneled"] = false,
			["source"] = "Invoq",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203627,
		},
		[398391] = {
			["type"] = "BUFF",
			["source"] = "Rock Snail",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 202621,
		},
		[392665] = {
			["isChanneled"] = false,
			["source"] = "Thunderspine Crasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 191057,
		},
		[343737] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Yu'lon",
			["npcID"] = 165374,
		},
		[395985] = {
			["type"] = "BUFF",
			["source"] = "Gracus",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 202830,
		},
		[5672] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Healing Stream Totem",
			["npcID"] = 3527,
		},
		[400842] = {
			["isChanneled"] = false,
			["source"] = "Zaqali Blazestalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199828,
		},
		[384473] = {
			["isChanneled"] = false,
			["source"] = "Icegnaw Mantacorn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187826,
		},
		[355619] = {
			["isChanneled"] = false,
			["source"] = "Static Field Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 179867,
		},
		[193635] = {
			["isChanneled"] = false,
			["source"] = "Void Tendril",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192337,
		},
		[413618] = {
			["source"] = "Infinite Watchkeeper",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 207177,
		},
		[401482] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[3110] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rulrot",
			["npcID"] = 416,
		},
		[388963] = {
			["type"] = "DEBUFF",
			["source"] = "Elusive Prime Salamanther",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194062,
		},
		[400333] = {
			["isChanneled"] = false,
			["source"] = "Primalist Stonegrinder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199982,
		},
		[383771] = {
			["type"] = "BUFF",
			["source"] = "Palla of the Wing",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 193357,
		},
		[374135] = {
			["type"] = "DEBUFF",
			["source"] = "Craggy Stag",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 191541,
		},
		[419591] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Future Self",
			["npcID"] = 208957,
		},
		[116947] = {
			["source"] = "Earthgrab Totem",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 60561,
		},
		[412215] = {
			["isChanneled"] = false,
			["source"] = "Spurlok, Timesworn Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205158,
		},
		[124009] = {
			["isChanneled"] = false,
			["source"] = "Xuen",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 63508,
		},
		[376190] = {
			["isChanneled"] = true,
			["source"] = "Thickfur Ottuk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186362,
		},
		[413621] = {
			["isChanneled"] = false,
			["source"] = "Infinite Watchkeeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 207177,
		},
		[400597] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[384296] = {
			["type"] = "DEBUFF",
			["source"] = "Ayanga",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 192961,
		},
		[419596] = {
			["source"] = "Chrono-Lord Deios",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199000,
		},
		[413622] = {
			["isChanneled"] = true,
			["source"] = "Infinite Watchkeeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 207177,
		},
		[377532] = {
			["isChanneled"] = false,
			["source"] = "Thunderspine Crasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 191057,
		},
		[267999] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Vilefiend",
			["npcID"] = 135816,
		},
		[418605] = {
			["isChanneled"] = false,
			["source"] = "Future Self",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208959,
		},
		[412138] = {
			["isChanneled"] = false,
			["source"] = "Valow, Timesworn Keeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201222,
		},
		[390245] = {
			["isChanneled"] = false,
			["source"] = "Embertooth Spearhunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188725,
		},
		[264667] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Wulgarr",
			["npcID"] = 165189,
		},
		[17253] = {
			["isChanneled"] = false,
			["source"] = "Andromeda",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[403724] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["type"] = "DEBUFF",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 198998,
		},
		[407205] = {
			["isChanneled"] = false,
			["source"] = "Horde Destroyer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203861,
		},
		[387277] = {
			["isChanneled"] = false,
			["source"] = "Primal Revenant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195917,
		},
		[423195] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Nymue",
			["npcID"] = 206172,
		},
		[386542] = {
			["type"] = "BUFF",
			["source"] = "Akrakorill",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[61684] = {
			["isChanneled"] = false,
			["source"] = "Sul'raka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[198837] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Skulker",
			["npcID"] = 99541,
		},
		[399701] = {
			["isChanneled"] = false,
			["source"] = "Swooping Flayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199809,
		},
		[395824] = {
			["type"] = "BUFF",
			["source"] = "Proud Dragonhunter",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 196553,
		},
		[378150] = {
			["isChanneled"] = false,
			["source"] = "Molten Primalist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186825,
		},
		[394975] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Void Lasher",
			["npcID"] = 198757,
		},
		[23768] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sayge",
			["npcID"] = 14822,
		},
		[418202] = {
			["isChanneled"] = false,
			["source"] = "Infinite Riftmage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208698,
		},
		[124007] = {
			["isChanneled"] = false,
			["source"] = "Xuen",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 63508,
		},
		[394976] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Void Lasher",
			["npcID"] = 198757,
		},
		[373643] = {
			["type"] = "DEBUFF",
			["source"] = "Primalist Lava Conduit",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 191886,
		},
		[372862] = {
			["isChanneled"] = false,
			["source"] = "Primal Splash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 185645,
		},
		[167381] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Boulderfist",
			["npcID"] = 189617,
		},
		[371584] = {
			["isChanneled"] = false,
			["source"] = "Embertooth Pooltender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187445,
		},
		[224125] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Spirit Wolf",
			["npcID"] = 100820,
		},
		[413427] = {
			["isChanneled"] = true,
			["source"] = "Pendule",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 206074,
		},
		[418256] = {
			["type"] = "DEBUFF",
			["source"] = "Fel Queen's Guard",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 207152,
		},
		[375445] = {
			["isChanneled"] = false,
			["source"] = "Un'Gorian Protohorn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 207286,
		},
		[411969] = {
			["source"] = "Infinite Timebender",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 205337,
		},
		[64695] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earthgrab Totem",
			["npcID"] = 60561,
		},
		[407120] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Axe Thrower",
			["encounterID"] = 2672,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203799,
		},
		[379134] = {
			["isChanneled"] = false,
			["source"] = "Earthshaker Theurgist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189230,
		},
		[224126] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Spirit Wolf",
			["npcID"] = 100820,
		},
		[418435] = {
			["isChanneled"] = false,
			["source"] = "Lerai, Timesworn Maiden",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205152,
		},
		[407504] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198999,
		},
		[407313] = {
			["source"] = "Horde Destroyer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203861,
		},
		[418103] = {
			["source"] = "Infinite Riftmage",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 208698,
		},
		[267997] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Vilefiend",
			["npcID"] = 135816,
		},
		[407315] = {
			["source"] = "Horde Destroyer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203861,
		},
		[407124] = {
			["isChanneled"] = false,
			["source"] = "Horde Raider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 207969,
		},
		[224127] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Spirit Wolf",
			["npcID"] = 212489,
		},
		[101546] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[68054] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Jeeves",
			["npcID"] = 35642,
		},
		[387317] = {
			["isChanneled"] = false,
			["source"] = "Ruby Egg Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 190171,
		},
		[100780] = {
			["isChanneled"] = false,
			["source"] = "Fire Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69791,
		},
		[428453] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Vilefiend",
			["npcID"] = 135816,
		},
		[417339] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[12024] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scalesworn Guardian",
			["npcID"] = 184168,
		},
		[167385] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Boulderfist",
			["npcID"] = 189617,
		},
		[406481] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198999,
		},
		[381570] = {
			["type"] = "DEBUFF",
			["source"] = "Sedentary Sediment",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194284,
		},
		[378768] = {
			["type"] = "DEBUFF",
			["source"] = "Cavern Lurker",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 189859,
		},
		[171982] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 416,
		},
		[195321] = {
			["source"] = "Earth Spirit",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 69792,
		},
		[407906] = {
			["source"] = "Horde Farseer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 204206,
		},
		[350163] = {
			["isChanneled"] = false,
			["source"] = "Spiteful Shade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 174773,
		},
	},
	["profileKeys"] = {
		["Qpaladin - Ragnaros"] = "Default",
		["Qpcheese - Chamber of Aspects"] = "Default",
		["Qpcheese - Ragnaros"] = "Mage-MOD",
		["Qpc - Draenor"] = "Default",
		["Zelení - Draenor"] = "Default",
		["Flurrq - Ragnaros"] = "Default",
		["Qpfromage - Sylvanas"] = "Default",
		["Djagon - Ragnaros"] = "Default",
		["Qubit - Ragnaros"] = "Mage-MOD",
		["Qute - Sylvanas"] = "Default",
		["Myfficraider - Ragnaros"] = "Default",
		["Fishanus - Ragnaros"] = "Default",
		["Cyclosarin - Ragnaros"] = "Default",
		["Laurs - Ragnaros"] = "Default",
		["Qpe - Ravencrest"] = "Default",
		["Qpebank - Draenor"] = "Default",
		["Jerwin - Ragnaros"] = "Default",
		["Qpfromage - Ragnaros"] = "Default",
		["Qpew - Ragnaros"] = "Default",
		["Dogson - Ragnaros"] = "Default",
	},
	["profiles"] = {
		["Qpcheese - Ragnaros"] = {
			["use_ui_parent"] = true,
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Extra Border"] = 2,
				["Cast Bar Icon Config"] = 2,
				["Execute Range"] = 1,
				["Hide Neutral Units"] = 1,
				["Attacking Specific Unit"] = 2,
				["Target Color"] = 3,
				["Aura Reorder"] = 3,
				["Combo Points"] = 6,
			},
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						398151, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Effect After Cast [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Ultra Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Name"] = "Health Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1669340967,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 137,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "indicatorAlpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "fillAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						350554, -- [16]
						348513, -- [17]
						351779, -- [18]
						328180, -- [19]
						319898, -- [20]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Key"] = "skullScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timeleft to Blink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Tag Number [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376644, -- [1]
						386781, -- [2]
						384823, -- [3]
						385536, -- [4]
						392398, -- [5]
						375596, -- [6]
						387135, -- [7]
						209033, -- [8]
						360850, -- [9]
						212784, -- [10]
						207980, -- [11]
						199033, -- [12]
						199034, -- [13]
						200969, -- [14]
						394512, -- [15]
						397881, -- [16]
						396020, -- [17]
						374430, -- [18]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Important Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Name"] = "Frame Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Quick Flash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura is Shield [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Warning [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["semver"] = "",
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura While Casting [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						350421, -- [28]
						352158, -- [29]
						349985, -- [30]
						329239, -- [31]
						328400, -- [32]
						384194, -- [33]
						392451, -- [34]
						392924, -- [35]
						397889, -- [36]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["NpcNames"] = {
						"165560", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Auto Set Skull",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "M+ Spiteful",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Non Elite Trash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Scale",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Circle AoE [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Name"] = "Rotation Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "rotationDuration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animStartDuration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Texture Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureScale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Stop Casting [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						352833, -- [35]
						330403, -- [36]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Speed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Explode on Die [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Show Energy [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Key"] = "fontSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Countdown",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						350687, -- [21]
						392488, -- [22]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
				}, -- [31]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [32]
			},
			["aura2_x_offset"] = 0,
			["update_throttle"] = 0.1200000047683716,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1547392935,
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Color Automation [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["HooksTemp"] = {
					},
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Time"] = 1541606242,
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Hide Neutral Units [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["HooksTemp"] = {
					},
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Reorder Nameplate [Plater]",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 574574,
					["Options"] = {
					},
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Time"] = 1554138845,
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["Name"] = "Don't Have Aura [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 136207,
					["HooksTemp"] = {
					},
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Tecno-Azralon",
					["Time"] = 1547409079,
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Name"] = "Extra Border [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["HooksTemp"] = {
					},
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Time"] = 1552354619,
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Current Target Color [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 878211,
					["HooksTemp"] = {
					},
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 348,
					["semver"] = "",
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Name"] = "Cast Bar Icon Settings [P]",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Key"] = "iconPadding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Key"] = "textureHeightMod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Ahwa-Azralon",
					["Time"] = 1547406548,
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Execute Range [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135358,
					["HooksTemp"] = {
					},
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 363,
					["semver"] = "",
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Attacking Specific Unit [Plater]",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1620377377,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Combo Points [Plater]",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 135426,
					["Options"] = {
					},
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Time"] = 1548278227,
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Name"] = "Players Targeting a Target [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["HooksTemp"] = {
					},
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 356,
					["semver"] = "",
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Name"] = "Aura Reorder [Plater]",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1608663128,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Options"] = {
					},
				}, -- [12]
			},
			["aura_x_offset"] = 0,
			["range_check_alpha_friendlies"] = 0.6499999761581421,
			["range_check_alpha"] = 0.6499999761581421,
			["npc_cache"] = {
				[197831] = {
					"Quarry Stonebreaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
			},
			["ui_parent_scale_tune"] = 1.409999847412109,
			["script_auto_imported"] = {
				["Aura - Buff Alert"] = 15,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Cast - Glowing [P]"] = 10,
				["Cast - Important Target [P]"] = 2,
				["Cast - Shield Interrupt"] = 2,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Unit - Show Energy"] = 11,
				["Auto Set Skull"] = 11,
				["Spiteful Affix"] = 3,
				["Add - Non Elite Trash [P]"] = 4,
				["Explosion Affix M+"] = 14,
				["Add - Explode on Die [P]"] = 1,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Fixate"] = 11,
				["Cast - Stop Casting"] = 4,
				["Cast - Quick Flash"] = 2,
				["Cast - Very Important"] = 15,
				["Fixate On You"] = 11,
			},
			["range_check_in_range_or_target_alpha"] = 0.8999999761581421,
			["ghost_auras"] = {
				["auras"] = {
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
				},
			},
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["aura2_y_offset"] = 5,
			["pet_height_scale"] = 0.949999988079071,
			["health_selection_overlay_alpha"] = 0.09999999403953552,
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625793282,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1154,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["Name"] = "Cast - Alert + Timer [P]",
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["__TrashAt"] = 1675712003,
				}, -- [1]
			},
			["pet_width_scale"] = 0.949999988079071,
			["patch_version"] = 24,
			["not_affecting_combat_alpha"] = 0.5999999642372131,
			["aura_y_offset"] = 5,
		},
		["Default"] = {
			["target_shady_combat_only"] = false,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 1,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1688802706,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Desc"] = "Add the buff name in the trigger box.",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["Revision"] = 633,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["Name"] = "Aura - Buff Alert [Plater]",
					["Prio"] = 99,
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["SpellIds"] = {
						398151, -- [1]
						377738, -- [2]
						378149, -- [3]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["url"] = "",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1614608904,
					["url"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["Enabled"] = true,
					["Revision"] = 188,
					["semver"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "M+ Spiteful",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Desc"] = "Time to die Spiteful affix",
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Time to Die",
							["Value"] = "Time to Die",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Name"] = "Width",
							["Value"] = 27,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "bgWidth",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0.50588235294118, -- [1]
								0.070588235294118, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "bgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Name"] = "Text Size",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textSize",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								0.5843137254902, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Targeting",
							["Value"] = "Targeting",
							["Key"] = "option11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.070588235294118, -- [1]
								0.61960784313725, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Name"] = "Option 11",
							["Value"] = 0,
							["Key"] = "option11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["Icon"] = 135945,
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						392488, -- [21]
						257732, -- [22]
						256060, -- [23]
						257899, -- [24]
						384633, -- [25]
						374339, -- [26]
						395694, -- [27]
						391634, -- [28]
						372701, -- [29]
						369328, -- [30]
						265487, -- [31]
						413044, -- [32]
						183526, -- [33]
						88194, -- [34]
						87762, -- [35]
						413385, -- [36]
						411001, -- [37]
						378282, -- [38]
						384161, -- [39]
						259572, -- [40]
						255371, -- [41]
						427460, -- [42]
						429172, -- [43]
						426500, -- [44]
						413607, -- [45]
						412922, -- [46]
						417481, -- [47]
						201399, -- [48]
						411994, -- [49]
						415770, -- [50]
						260907, -- [51]
						260703, -- [52]
						260741, -- [53]
						265876, -- [54]
						263959, -- [55]
						266225, -- [56]
						253517, -- [57]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1688802707,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["Revision"] = 369,
					["semver"] = "",
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["Desc"] = "Add the debuff name in the trigger box.",
					["Author"] = "Tercioo-Sylvanas",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
						388923, -- [22]
						376934, -- [23]
						384899, -- [24]
						373960, -- [25]
						374724, -- [26]
						385551, -- [27]
						259732, -- [28]
						373424, -- [29]
						373084, -- [30]
						87618, -- [31]
						255041, -- [32]
						428926, -- [33]
						76634, -- [34]
						200050, -- [35]
						197546, -- [36]
						198079, -- [37]
						199193, -- [38]
						266181, -- [39]
						253544, -- [40]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Name"] = "Health Bar Height Mod",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.431372, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Key"] = "arrowWidth",
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Name"] = "Arrow Height",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [15]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [20]
						{
							["Type"] = 7,
							["Name"] = "Color List by SpellId",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						384194, -- [28]
						392451, -- [29]
						392924, -- [30]
						397889, -- [31]
						209413, -- [32]
						207980, -- [33]
						257397, -- [34]
						257736, -- [35]
						382787, -- [36]
						374699, -- [37]
						377402, -- [38]
						369602, -- [39]
						369465, -- [40]
						369400, -- [41]
						381593, -- [42]
						265091, -- [43]
						265433, -- [44]
						382791, -- [45]
						376780, -- [46]
						225573, -- [47]
						278444, -- [48]
						164887, -- [49]
						168082, -- [50]
						76813, -- [51]
						227913, -- [52]
						265368, -- [53]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						281420, -- [16]
						274383, -- [17]
						259092, -- [18]
						367521, -- [19]
						374544, -- [20]
						385039, -- [21]
						382474, -- [22]
						369823, -- [23]
						377500, -- [24]
						260879, -- [25]
						186269, -- [26]
						378818, -- [27]
						371875, -- [28]
						372225, -- [29]
						200658, -- [30]
						266036, -- [31]
						265407, -- [32]
						164965, -- [33]
						429176, -- [34]
						428526, -- [35]
						418200, -- [36]
						407124, -- [37]
						415437, -- [38]
						264050, -- [39]
						267824, -- [40]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a small animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["version"] = -1,
					["Name"] = "Cast - Small Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1622577650,
					["url"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Enabled"] = false,
					["Revision"] = 64,
					["semver"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "Auto Set Skull",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Desc"] = "Auto set skull marker",
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Only in Combat",
							["Value"] = false,
							["Key"] = "onlyInCombat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1688802694,
					["url"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["Enabled"] = true,
					["Revision"] = 210,
					["semver"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "Countdown",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["Options"] = {
					},
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						209495, -- [35]
						257426, -- [36]
						255952, -- [37]
						257870, -- [38]
						413147, -- [39]
						383107, -- [40]
						377559, -- [41]
						388060, -- [42]
						376170, -- [43]
						384524, -- [44]
						375351, -- [45]
						390111, -- [46]
						369791, -- [47]
						369573, -- [48]
						369563, -- [49]
						369335, -- [50]
						369061, -- [51]
						375727, -- [52]
						265016, -- [53]
						265019, -- [54]
						260793, -- [55]
						260292, -- [56]
						272457, -- [57]
						272609, -- [58]
						269843, -- [59]
						183465, -- [60]
						226296, -- [61]
						188169, -- [62]
						183088, -- [63]
						410873, -- [64]
						411012, -- [65]
						88308, -- [66]
						382708, -- [67]
						375251, -- [68]
						375439, -- [69]
						372311, -- [70]
						373742, -- [71]
						372201, -- [72]
						374533, -- [73]
						377204, -- [74]
						201226, -- [75]
						204667, -- [76]
						198379, -- [77]
						200768, -- [78]
						253239, -- [79]
						250258, -- [80]
						255567, -- [81]
						194956, -- [82]
						427510, -- [83]
						426645, -- [84]
						412505, -- [85]
						412129, -- [86]
						419351, -- [87]
						401482, -- [88]
						404916, -- [89]
						200345, -- [90]
						200261, -- [91]
						198641, -- [92]
						265372, -- [93]
						271174, -- [94]
						264694, -- [95]
						264923, -- [96]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.73,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Key"] = "animSpeed",
							["Value"] = 0.2,
							["Name"] = "Animation Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "desaturateArrow",
							["Value"] = false,
							["Name"] = "Use White Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1688802690,
					["url"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 271,
					["semver"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "Fixate [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Desc"] = "Show above the nameplate who is the player fixated",
					["Options"] = {
					},
					["Icon"] = 1029718,
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1688802689,
					["url"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 235,
					["semver"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "Unit - Show Energy [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Desc"] = "Show the energy amount above the nameplate.",
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "script desc",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show at 80% of Energy",
							["Value"] = true,
							["Key"] = "showLater",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fontSize",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Font Color",
							["Value"] = {
								0.80392156862745, -- [1]
								0.80392156862745, -- [2]
								0.80392156862745, -- [3]
								1, -- [4]
							},
							["Key"] = "fontColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Enable Text Outline",
							["Value"] = true,
							["Key"] = "outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["Icon"] = 136048,
				}, -- [12]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1688802691,
					["url"] = "",
					["Icon"] = 841383,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["Revision"] = 268,
					["semver"] = "",
					["Enabled"] = true,
					["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["Author"] = "Tecno-Azralon",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Options"] = {
					},
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
					["OptionsValues"] = {
						["NameplateSizeOffset"] = 1.3500000238419,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
					["Time"] = 1648170127,
					["url"] = "https://wago.io/1TlaFYtDO/75",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
					["Enabled"] = true,
					["Revision"] = 2918,
					["semver"] = "1.0.74",
					["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
					["Author"] = "Bombad£o-Azralon",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
					["SpellIds"] = {
						240446, -- [1]
						347363, -- [2]
						339415, -- [3]
						318406, -- [4]
						331223, -- [5]
						326607, -- [6]
						327885, -- [7]
						334625, -- [8]
						328016, -- [9]
						324527, -- [10]
						344005, -- [11]
						321999, -- [12]
						340219, -- [13]
						328986, -- [14]
						320576, -- [15]
						322358, -- [16]
						341445, -- [17]
						336451, -- [18]
						332672, -- [19]
						331398, -- [20]
						331379, -- [21]
						334664, -- [22]
						334967, -- [23]
						320230, -- [24]
						328146, -- [25]
						320631, -- [26]
						322493, -- [27]
						324372, -- [28]
						327240, -- [29]
						322939, -- [30]
						328756, -- [31]
						331745, -- [32]
						340304, -- [33]
						319685, -- [34]
						326827, -- [35]
						342481, -- [36]
						356548, -- [37]
						356537, -- [38]
						356407, -- [39]
						349987, -- [40]
						349663, -- [41]
						350090, -- [42]
						355782, -- [43]
						350922, -- [44]
						355438, -- [45]
						357404, -- [46]
						357189, -- [47]
						347150, -- [48]
						355057, -- [49]
						355139, -- [50]
						355429, -- [51]
						355584, -- [52]
						358131, -- [53]
						350517, -- [54]
						357260, -- [55]
						351119, -- [56]
						351646, -- [57]
						350180, -- [58]
						335783, -- [59]
						294533, -- [60]
						353782, -- [61]
						347855, -- [62]
						353769, -- [63]
						331935, -- [64]
						336383, -- [65]
						342160, -- [66]
						353742, -- [67]
						353444, -- [68]
						277039, -- [69]
						278192, -- [70]
						329909, -- [71]
						358328, -- [72]
						325632, -- [73]
						81008, -- [74]
						296355, -- [75]
						355224, -- [76]
						296839, -- [77]
						310392, -- [78]
						367380, -- [79]
						297966, -- [80]
						332002, -- [81]
						329904, -- [82]
						294517, -- [83]
						329423, -- [84]
						329905, -- [85]
						353124, -- [86]
						358270, -- [87]
						295985, -- [88]
						184381, -- [89]
						318995, -- [90]
						260344, -- [91]
						301952, -- [92]
						362820, -- [93]
						329930, -- [94]
						355212, -- [95]
						332165, -- [96]
						358327, -- [97]
						359770, -- [98]
						364040, -- [99]
						361644, -- [100]
						363088, -- [101]
						361989, -- [102]
						363024, -- [103]
						365008, -- [104]
						365805, -- [105]
						365958, -- [106]
						360717, -- [107]
						361923, -- [108]
						363533, -- [109]
						364386, -- [110]
						364114, -- [111]
						362028, -- [112]
						362617, -- [113]
						365385, -- [114]
					},
					["Prio"] = 99,
					["Name"] = "M+ Explosive [Fixed]",
					["PlaterCore"] = 1,
					["version"] = 75,
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "ShowArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "ArrowAlpha",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Glow Alpha",
							["Value"] = 0.7,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "GlowAlpha",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 1,
							["Name"] = "Nameplate Height Scale",
							["Value"] = 1.25,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "NameplateSizeOffset",
						}, -- [4]
					},
					["Icon"] = 2065634,
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
					["OptionsValues"] = {
						["customSize"] = {
							{
								"17", -- [1]
								"120, 16", -- [2]
							}, -- [1]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1628775232,
					["url"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 283,
					["semver"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
					["SpellIds"] = {
						354080, -- [1]
					},
					["Prio"] = 99,
					["Name"] = "Cast - Castbar is Timer [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Desc"] = "When a spell resembles more a timer than a spell being cast",
					["Options"] = {
						{
							["Type"] = 7,
							["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
							["Value"] = {
								{
									"17", -- [1]
									"120, 16", -- [2]
								}, -- [1]
							},
							["Key"] = "customSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "",
							["Min"] = 5,
							["Name"] = "Cast Bar Width",
							["Value"] = 120,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "width",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 5,
							["Name"] = "Cast Bar Height",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "height",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Set the size of the cast time",
							["Min"] = 8,
							["Name"] = "Cast Timer Size",
							["Value"] = 12,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timerFontSize",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 6",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Option 7",
							["Value"] = "Time Separators",
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.5992676615715, -- [4]
							},
							["Key"] = "separatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "",
							["Min"] = 1,
							["Name"] = "Width",
							["Value"] = 1,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "separatorWidth",
						}, -- [9]
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Shows the target name in a separate box",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Key"] = "option27",
							["Value"] = 0,
							["Name"] = "Option 27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Key"] = "option28",
							["Value"] = "Target Options",
							["Name"] = "Option 28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 14,
							["Key"] = "targetNameSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [29]
						{
							["Type"] = 4,
							["Key"] = "colorByClass",
							["Value"] = true,
							["Name"] = "Use Class Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Key"] = "targetBgColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Key"] = "targetBgBorderColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Fraction"] = false,
							["Value"] = 90,
							["Key"] = "targetFrameWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Width",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Frame Height",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameHeight",
						}, -- [35]
					},
					["version"] = -1,
					["Name"] = "Cast - Important Target [P]",
					["NpcNames"] = {
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
						["timerList"] = {
							{
								"350421", -- [1]
								"5", -- [2]
							}, -- [1]
							{
								"355787", -- [1]
								"15", -- [2]
							}, -- [2]
							{
								"348513", -- [1]
								"14", -- [2]
							}, -- [3]
							{
								"348513", -- [1]
								"14", -- [2]
							}, -- [4]
						},
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1688802705,
					["url"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 379,
					["semver"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Key"] = "option17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Blink Enabled",
							["Value"] = true,
							["Key"] = "blinkEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = true,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Name"] = "Change NamePlate Color",
							["Value"] = false,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Name"] = "Timeleft to Blink",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeleftToBlink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Name"] = "Blink Speed",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkSpeed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Name"] = "Blink Max Alpha",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkMaxAlpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Blink Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "blinkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.28627450980392, -- [1]
								0.003921568627451, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Name"] = "Timer Color Enabled",
							["Value"] = true,
							["Key"] = "timerColorEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftWarning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftCritical",
						}, -- [15]
						{
							["Type"] = 1,
							["Name"] = "Warning Color",
							["Value"] = {
								1, -- [1]
								0.87058823529412, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "warningColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Name"] = "Critical Color",
							["Value"] = {
								1, -- [1]
								0.074509803921569, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "criticalColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1688802692,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["Revision"] = 534,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 1,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [13]
						{
							["Type"] = 6,
							["Name"] = "Option 18",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Name"] = "Nameplate Color",
							["Value"] = "Nameplate Color",
							["Key"] = "option17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["Name"] = "Explosion Affix M+ [Plater]",
					["Prio"] = 99,
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["url"] = "",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1688802696,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["url"] = "",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
						"186227", -- [3]
						"184020", -- [4]
						"91005", -- [5]
					},
					["semver"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["Revision"] = 148,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Name"] = "Fill Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["version"] = -1,
					["Prio"] = 99,
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["Name"] = "Add - Health Markers [P]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Enabled"] = true,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
						["npcColor"] = {
							{
								"196548", -- [1]
								"forestgreen", -- [2]
							}, -- [1]
							{
								"195580", -- [1]
								"forestgreen", -- [2]
							}, -- [2]
							{
								"195820", -- [1]
								"forestgreen", -- [2]
							}, -- [3]
							{
								"195821", -- [1]
								"forestgreen", -- [2]
							}, -- [4]
							{
								"189886", -- [1]
								"forestgreen", -- [2]
							}, -- [5]
							{
								"75966", -- [1]
								"forestgreen", -- [2]
							}, -- [6]
							{
								"102019 ", -- [1]
								"forestgreen", -- [2]
							}, -- [7]
							{
								"187159", -- [1]
								"forestgreen", -- [2]
							}, -- [8]
							{
								"194897", -- [1]
								"forestgreen", -- [2]
							}, -- [9]
							{
								"104251", -- [1]
								"forestgreen", -- [2]
							}, -- [10]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1705066622,
					["semver"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["Revision"] = 575,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Extra Texture",
							["Value"] = "Extra Texture",
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "showExtraTexture",
							["Value"] = false,
							["Name"] = "Show Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "skullColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Name"] = "Alpha",
							["Value"] = 0.2,
							["Key"] = "skullAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Key"] = "skullScale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Scale",
						}, -- [14]
						{
							["Type"] = 7,
							["Key"] = "npcColor",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Name"] = "Npc Color By NpcID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["Name"] = "Add - Important [P]",
					["Prio"] = 99,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
						190381, -- [14]
						92538, -- [15]
						192464, -- [16]
						131009, -- [17]
						127315, -- [18]
						133361, -- [19]
						136330, -- [20]
						214117, -- [21]
						212483, -- [22]
						101008, -- [23]
					},
					["Enabled"] = true,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						360850, -- [10]
						212784, -- [11]
						199033, -- [12]
						199034, -- [13]
						200969, -- [14]
						394512, -- [15]
						397881, -- [16]
						396020, -- [17]
						374430, -- [18]
						384353, -- [19]
						265376, -- [20]
						193941, -- [21]
						411002, -- [22]
						169445, -- [23]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 7,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
						385029, -- [4]
						374563, -- [5]
						377341, -- [6]
						369675, -- [7]
						369365, -- [8]
						369411, -- [9]
						278961, -- [10]
						202108, -- [11]
						88186, -- [12]
						200630, -- [13]
						255824, -- [14]
						252781, -- [15]
						250096, -- [16]
						200248, -- [17]
						197797, -- [18]
						264520, -- [19]
						418202, -- [20]
						201839, -- [21]
						412012, -- [22]
						411958, -- [23]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Key"] = "shakeAmplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Quick Flash [P]",
					["NpcNames"] = {
					},
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1688802924,
					["semver"] = "",
					["url"] = "",
					["Icon"] = 610472,
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["Revision"] = 69,
					["Options"] = {
					},
					["Name"] = "Aura is Shield [P]",
					["Prio"] = 99,
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
						["npcColor"] = {
							{
								"189893", -- [1]
								"olivedrab", -- [2]
							}, -- [1]
							{
								"190187", -- [1]
								"olivedrab", -- [2]
							}, -- [2]
							{
								"99922", -- [1]
								"olivedrab", -- [2]
							}, -- [3]
							{
								"153285", -- [1]
								"olivedrab", -- [2]
							}, -- [4]
							{
								"104822", -- [1]
								"olivedrab", -- [2]
							}, -- [5]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1705066619,
					["semver"] = "",
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Desc"] = "Change the color of  add",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["Revision"] = 165,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFlash",
							["Value"] = true,
							["Name"] = "Flash Nameplate",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Key"] = "npcColor",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Name"] = "NpcID to Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["Name"] = "Add - Warning [P]",
					["Prio"] = 99,
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
						129758, -- [5]
						190426, -- [6]
						186696, -- [7]
						101075, -- [8]
						100818, -- [9]
						98081, -- [10]
						52019, -- [11]
					},
					["Enabled"] = true,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1688802707,
					["semver"] = "",
					["url"] = "",
					["Icon"] = 236209,
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["Revision"] = 20,
					["Options"] = {
					},
					["Name"] = "Aura While Casting [P]",
					["Prio"] = 99,
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1705067832,
					["semver"] = "",
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Desc"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["Revision"] = 116,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useNameplateScale",
							["Value"] = true,
							["Name"] = "Change Nameplate Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Key"] = "scale",
							["Value"] = 0.8,
							["Name"] = "Nameplate Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
					},
					["Name"] = "Add - Non Elite Trash [P]",
					["Prio"] = 99,
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
					["Enabled"] = false,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["NpcNames"] = {
					},
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
						258672, -- [20]
						258777, -- [21]
						257756, -- [22]
						257784, -- [23]
						256405, -- [24]
						256589, -- [25]
						393793, -- [26]
						388046, -- [27]
						375079, -- [28]
						390290, -- [29]
						369811, -- [30]
						369703, -- [31]
						226287, -- [32]
						410999, -- [33]
						372561, -- [34]
						256882, -- [35]
						172578, -- [36]
						412063, -- [37]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Name"] = "Rotation Duration",
							["Value"] = 0.15,
							["Key"] = "rotationDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.3,
							["Key"] = "animStartDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Start Duration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Start Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureStartAlpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Name"] = "Texture Scale",
							["Value"] = 0.8,
							["Key"] = "textureScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Name"] = "Texture Alpha",
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - Circle AoE [P]",
					["NpcNames"] = {
					},
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
						200291, -- [5]
						268202, -- [6]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 20,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1688802690,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Revision"] = 34,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["Name"] = "Fixate by Unit Buff [P]",
					["Prio"] = 99,
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						426662, -- [1]
						426663, -- [2]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["url"] = "",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [33]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1705066826,
					["semver"] = "",
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Desc"] = "",
					["Enabled"] = true,
					["Revision"] = 110,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Reverse Health Bar",
							["Value"] = false,
							["Key"] = "useReverse",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 6",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Enable Shake",
							["Value"] = false,
							["Key"] = "useShake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Name"] = "Shake Amplitude",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 70,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Show Red Background",
							["Value"] = true,
							["Key"] = "useBackground",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["Name"] = "Add - Explode on Die [P]",
					["Prio"] = 99,
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
						189299, -- [6]
						131402, -- [7]
						135052, -- [8]
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [34]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Name"] = "Dots X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots Y Offset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "speed",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "minAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - On Going Cast [P]",
					["NpcNames"] = {
					},
				}, -- [35]
			},
			["saved_cvars_last_change"] = {
				["SoftTargetInteract"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/UltraSquirt/UltraSquirt.lua\"]:837: in function `ResetCVars'\n[string \"@Interface/AddOns/UltraSquirt/UltraSquirt.lua\"]:1602: in function <Interface/AddOns/UltraSquirt/UltraSquirt.lua:1599>\n",
			},
			["url"] = "https://wago.io/RPHjubTGI/1",
			["cast_statusbar_spark_alpha"] = 0.8299999833107,
			["aura2_y_offset"] = 5,
			["health_selection_overlay"] = "Details Vidro",
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.19607843137255, -- [1]
				0.050980392156863, -- [2]
				0.062745098039216, -- [3]
				1, -- [4]
			},
			["hide_blizzard_castbar"] = true,
			["extra_icon_cooldown_reverse"] = false,
			["npc_cache"] = {
				[190404] = {
					"Subterranean Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[196798] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[186696] = {
					"Quaking Totem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[109908] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[213806] = {
					"Splotch", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[190405] = {
					"Infuser Sariya", -- [1]
					"Halls of Infusion", -- [2]
				},
				[196671] = {
					"Arcane Ravager", -- [1]
					"Algeth'ar Academy", -- [2]
					"enUS", -- [3]
				},
				[180431] = {
					"Focused Ritualist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[115407] = {
					"Rook", -- [1]
					"Return to Karazhan", -- [2]
				},
				[150253] = {
					"Weaponized Crawler", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[184140] = {
					"Xy Acolyte", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[99359] = {
					"Rotheart Keeper", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[180432] = {
					"Devoted Accomplice", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[95779] = {
					"Festerhide Grizzly", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[201788] = {
					"Dazhak", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[180433] = {
					"Wandering Pulsar", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[120651] = {
					"Explosives", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131009] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[99360] = {
					"Vilethorn Blossom", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[197697] = {
					"Flamegullet", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[134144] = {
					"Living Current", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[81522] = {
					"Witherbark", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[40825] = {
					"Erunak Stonespeaker", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[208440] = {
					"Infinite Slayer", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[196548] = {
					"Ancient Branch", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[84400] = {
					"Flourishing Ancient", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[186191] = {
					"Decay Speaker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[135169] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[201792] = {
					"Ahnzon", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[206140] = {
					"Coalesced Time", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[83761] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[184018] = {
					"Bromach", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[126983] = {
					"Harlan Sweete", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[178392] = {
					"Gatewarden Zo'mazz", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
					"enUS", -- [3]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[200387] = {
					"Shambling Infester", -- [1]
					"Temple of the Jade Serpent", -- [2]
					"enUS", -- [3]
				},
				[213942] = {
					"Sludge", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[199748] = {
					"Timeline Marauder", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[184020] = {
					"Hulking Berserker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[199749] = {
					"Timestream Anomaly", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[170850] = {
					"Raging Bloodhorn", -- [1]
					"Theater of Pain", -- [2]
				},
				[178139] = {
					"Murkbrine Shellcrusher", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[184022] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[196043] = {
					"Primalist Infuser", -- [1]
					"Halls of Infusion", -- [2]
				},
				[199368] = {
					"Hardened Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[196044] = {
					"Unruly Textbook", -- [1]
					"Algeth'ar Academy", -- [2]
					"enUS", -- [3]
				},
				[40923] = {
					"Unstable Corruption", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[83892] = {
					"Life Warden Gola", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[135048] = {
					"Gorestained Piglet", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[98406] = {
					"Embershard Scorpion", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[137478] = {
					"Queen Wasi", -- [1]
					"Kings' Rest", -- [2]
				},
				[194894] = {
					"Primalist Stormspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[200137] = {
					"Depraved Mistweaver", -- [1]
					"Temple of the Jade Serpent", -- [2]
					"enUS", -- [3]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[135049] = {
					"Dreadwing Raven", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[139269] = {
					"Gloom Horror", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[168425] = {
					"Forsworn Annihilator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[168681] = {
					"Forsworn Helion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[99366] = {
					"Taintheart Summoner", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[82039] = {
					"Rockspine Stinger", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[177889] = {
					"Mawforged Souljudge", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[187224] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[136330] = {
					"Soul Thorns", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[194897] = {
					"Stormsurge Totem", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[83894] = {
					"Dulhu", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[135052] = {
					"Blight Toad", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[134157] = {
					"Shadow-Borne Warrior", -- [1]
					"Kings' Rest", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[205384] = {
					"Infinite Chronoweaver", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[212673] = {
					"Naz'jar Ravager", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[111068] = {
					"Archmage Galeorn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[208198] = {
					"Whiiskeyz", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[150143] = {
					"Scrapbone Grinder", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[137484] = {
					"King A'akul", -- [1]
					"Kings' Rest", -- [2]
				},
				[131858] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[40765] = {
					"Commander Ulthok", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[114266] = {
					"Shoreline Tidespeaker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[207177] = {
					"Infinite Watchkeeper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[174569] = {
					"Training Dummy", -- [1]
					"The Shadowlands", -- [2]
				},
				[40925] = {
					"Tainted Sentry", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[190426] = {
					"Decay Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[189531] = {
					"Decayed Elder", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[137486] = {
					"Queen Patlaa", -- [1]
					"Kings' Rest", -- [2]
				},
				[98538] = {
					"Lady Velandras Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[150146] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[137103] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[101991] = {
					"Nightmare Dweller", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[165108] = {
					"Illusionary Clone", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[82682] = {
					"Archmage Sol", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[186208] = {
					"Rotbow Stalker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[122963] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[198996] = {
					"Manifested Timeways", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[81212] = {
					"Grimrail Overseer", -- [1]
					"Grimrail Depot", -- [2]
					"enUS", -- [3]
				},
				[181861] = {
					"Magmatusk", -- [1]
					"Neltharus", -- [2]
				},
				[52019] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[198997] = {
					"Blight of Galakrond", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[131863] = {
					"Raal the Gluttonous", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[203857] = {
					"Horde Warlock", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[195929] = {
					"Soulharvester Tumen", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[207438] = {
					"Headless Horseman", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[131864] = {
					"Gorak Tul", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[188244] = {
					"Primal Juggernaut", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[125828] = {
					"Kronwel", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[150142] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[198999] = {
					"Morchie", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[205265] = {
					"Time-Displaced Trooper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[208461] = {
					"Scorching Brambles", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[214075] = {
					"Cycle Warden", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[193373] = {
					"Nokhud Thunderfist", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[180429] = {
					"Adorned Starseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184422] = {
					"Emberon", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[213696] = {
					"Molten Scorpid", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[199000] = {
					"Chrono-Lord Deios", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[39616] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[114584] = {
					"Phantom Crew", -- [1]
					"Return to Karazhan", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[136214] = {
					"Windspeaker Heldis", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[212681] = {
					"Vicious Snap Dragon", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[150251] = {
					"Pistonhead Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[134041] = {
					"Infected Peasant", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[197595] = {
					"Earthwrought Smasher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[203861] = {
					"Horde Destroyer", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[98542] = {
					"Amalgam of Souls", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[90998] = {
					"Blightshard Shaper", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[179821] = {
					"Commander Zo'far", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[129552] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[154758] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[118491] = {
					"Corrupted Risen Mage", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[115486] = {
					"Erudite Slayer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[210512] = {
					"Ashen Treant", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[196576] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
					"enUS", -- [3]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[122967] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[154744] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[187240] = {
					"Drakonid Breaker", -- [1]
					"The Azure Vault", -- [2]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[45915] = {
					"Armored Mistral", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168443] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[128455] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[84989] = {
					"Infested Icecaller", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[81984] = {
					"Gnarlroot", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[180336] = {
					"Cartel Wiseguy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[40634] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[208698] = {
					"Infinite Riftmage", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[184301] = {
					"Cavern Seeker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[197985] = {
					"Flame Channeler", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[83893] = {
					"Earthshaper Telu", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[99365] = {
					"Taintheart Stalker", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[115488] = {
					"Infused Pyromancer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[91000] = {
					"Vileshard Hulk", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[197857] = {
					"Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[84990] = {
					"Addled Arcanomancer", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[81985] = {
					"Everbloom Cultivator", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[100527] = {
					"Dreadfire Imp", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[191847] = {
					"Nokhud Plainstomper", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[150160] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[197219] = {
					"Vile Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
					"enUS", -- [3]
				},
				[199124] = {
					"Primalist Chillblaster", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[197698] = {
					"Thunderhead", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[195399] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[210518] = {
					"Cycle Warden", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[122970] = {
					"Shadowblade Stalker", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[136076] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[101679] = {
					"Dreadsoul Poisoner", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[206172] = {
					"Nymue", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[184300] = {
					"Ebonstone Golem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[97197] = {
					"Valarjar Purifier", -- [1]
					"UNKNOWN", -- [2]
				},
				[91002] = {
					"Rotdrool Grabber", -- [1]
					"UNKNOWN", -- [2]
					"enUS", -- [3]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[180335] = {
					"Cartel Smuggler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[136353] = {
					"Colossal Tentacle", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[100529] = {
					"Hatespawn Slime", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[150292] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[98792] = {
					"Wyrmtongue Scavenger", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[205790] = {
					"Time-Lost Smack-o-Tron", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[45917] = {
					"Cloud Prince", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[205151] = {
					"Tyr's Vanguard", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[115020] = {
					"Arcanid", -- [1]
					"Return to Karazhan", -- [2]
				},
				[91003] = {
					"Rokmora", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[205408] = {
					"Infinite Timeslicer", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[186226] = {
					"Fetid Rotsinger", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[196712] = {
					"Nullification Device", -- [1]
					"Halls of Infusion", -- [2]
				},
				[192464] = {
					"Raging Ember", -- [1]
					"Neltharus", -- [2]
				},
				[205152] = {
					"Lerai, Timesworn Maiden", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[92538] = {
					"Tarspitter Grub", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[99891] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[189266] = {
					"Qalashi Trainee", -- [1]
					"Neltharus", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[126848] = {
					"Captain Eudora", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[196202] = {
					"Spectral Invoker", -- [1]
					"Algeth'ar Academy", -- [2]
					"enUS", -- [3]
				},
				[103344] = {
					"Oakheart", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[102232] = {
					"Rockbound Trapper", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[100531] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[183671] = {
					"Monstrous Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[192955] = {
					"Draconic Illusion", -- [1]
					"The Azure Vault", -- [2]
				},
				[196203] = {
					"Ethereal Restorer", -- [1]
					"Algeth'ar Academy", -- [2]
					"enUS", -- [3]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[186229] = {
					"Wilted Oak", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[129559] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[194745] = {
					"Rotfang Hyena", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[189886] = {
					"Blazebound Firestorm", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[186741] = {
					"Arcane Elemental", -- [1]
					"The Azure Vault", -- [2]
				},
				[97068] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[150169] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[183033] = {
					"Grim Reflection", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[212775] = {
					"Faceless Seer", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[168658] = {
					"Forsworn Devastator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[100532] = {
					"Bloodtainted Burster", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[182778] = {
					"Collapsing Quasar", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[131850] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[44566] = {
					"Ozumat", -- [1]
					"Throne of the Tides", -- [2]
				},
				[102962] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[204262] = {
					"Necrofrost", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[91006] = {
					"Rockback Gnasher", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[43873] = {
					"Altairus", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[195696] = {
					"Primalist Thunderbeast", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[205158] = {
					"Spurlok, Timesworn Sentinel", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[129369] = {
					"Irontide Raider", -- [1]
					"Siege of Boralus", -- [2]
				},
				[97720] = {
					"Blightshard Skitter", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[187768] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83846] = {
					"Yalnu", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[81864] = {
					"Dreadpetal", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[189555] = {
					"Arcane Attendant", -- [1]
					"The Azure Vault", -- [2]
				},
				[138281] = {
					"Faceless Corruptor", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[190034] = {
					"Blazebound Destroyer", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[210147] = {
					"Harbinger of Incineration", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
					"enUS", -- [3]
				},
				[187897] = {
					"Defier Draghar", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[186107] = {
					"Vault Keeper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[213219] = {
					"Congealed Ooze", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[84550] = {
					"Xeri'tac", -- [1]
					"The Everbloom", -- [2]
				},
				[189265] = {
					"Qalashi Bonetender", -- [1]
					"Neltharus", -- [2]
				},
				[180091] = {
					"Ancient Core Hound", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
					"enUS", -- [3]
				},
				[189816] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[81737] = {
					"Unchecked Growth", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[91008] = {
					"Rockbound Pelter", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[144293] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[169426] = {
					"Infernal", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[183423] = {
					"Reformed Bachelor", -- [1]
					"Return to Karazhan", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[187771] = {
					"Kadros Icewrath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[205366] = {
					"Time-Lost Wakethrasher", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[98681] = {
					"Rook Spinner", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[144294] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[184319] = {
					"Refti Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[137517] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[150297] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[134417] = {
					"Deepsea Ritualist", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[98362] = {
					"Troubled Soul", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[183425] = {
					"Wholesome Host", -- [1]
					"Return to Karazhan", -- [2]
				},
				[192481] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[135474] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[205804] = {
					"Risen Dragon", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[179334] = {
					"Portalmancer Zo'nyy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
					"enUS", -- [3]
				},
				[191230] = {
					"Dragonspawn Flamebender", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[104246] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[214117] = {
					"Stormflurry Totem", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[191739] = {
					"Scalebane Lieutenant", -- [1]
					"The Azure Vault", -- [2]
				},
				[184580] = {
					"Olaf", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[126919] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[179847] = {
					"Shadowsteel Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[107288] = {
					"Vilethorn Sapling", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[144298] = {
					"Defense Bot Mk III", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[190207] = {
					"Primalist Cinderweaver", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[43875] = {
					"Asaad", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[213607] = {
					"Deep Sea Murloc", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[190206] = {
					"Primalist Flamedancer", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[186242] = {
					"Skulking Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[126845] = {
					"Captain Jolly", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[114796] = {
					"Wholesome Hostess", -- [1]
					"Return to Karazhan", -- [2]
				},
				[133430] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[84554] = {
					"Venom-Crazed Pale One", -- [1]
					"The Everbloom", -- [2]
				},
				[96574] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Valor", -- [2]
				},
				[186116] = {
					"Gutshot", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[92610] = {
					"Understone Drummer", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[150165] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[206063] = {
					"Temporal Deviation", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[184581] = {
					"Baelog", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[129758] = {
					"Irontide Grenadier", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[100539] = {
					"Taintheart Deadeye", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[135989] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[206065] = {
					"Interval", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[131824] = {
					"Sister Solena", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[184582] = {
					"Eric \"The Swift\"", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[191232] = {
					"Drakonid Stormbringer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[45922] = {
					"Empyrean Assassin", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[206066] = {
					"Timestream Leech", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[114542] = {
					"Ghostly Philanthropist", -- [1]
					"Return to Karazhan", -- [2]
				},
				[179852] = {
					"Soulless Vengeance", -- [1]
					"The Shadowlands", -- [2]
				},
				[40935] = {
					"Gilgoblin Hunter", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[192767] = {
					"Primal Icebulk", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[186246] = {
					"Fleshripper Vulture", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[98366] = {
					"Ghostly Retainer", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[96512] = {
					"Archdruid Glaidalis", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[134701] = {
					"Blood Effigy", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[114632] = {
					"Spectral Attendant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[204918] = {
					"Iridikron's Creation", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[206068] = {
					"Temporal Fusion", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[210288] = {
					"Ancient Core Hound", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[199037] = {
					"Primalist Shocktrooper", -- [1]
					"Halls of Infusion", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[186120] = {
					"Treemouth", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190340] = {
					"Refti Defender", -- [1]
					"Halls of Infusion", -- [2]
				},
				[167962] = {
					"Defunct Dental Drill", -- [1]
					"De Other Side", -- [2]
				},
				[134331] = {
					"King Rahu'ai", -- [1]
					"Kings' Rest", -- [2]
				},
				[133436] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[40788] = {
					"Mindbender Ghur'sha", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[203688] = {
					"Horde Grunt", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[186121] = {
					"Decatriarch Wratheye", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[184331] = {
					"Infinite Timereaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[40936] = {
					"Faceless Watcher", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
					"enUS", -- [3]
				},
				[210290] = {
					"Firelands Flameguard", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[114544] = {
					"Skeletal Usher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[186122] = {
					"Rira Hackclaw", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190342] = {
					"Containment Apparatus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[101437] = {
					"Burning Geode", -- [1]
					"UNKNOWN", -- [2]
					"enUS", -- [3]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[41096] = {
					"Naz'jar Oracle", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[178171] = {
					"Stormforged Guardian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[80936] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
					"enUS", -- [3]
				},
				[195842] = {
					"Ukhel Corruptor", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195930] = {
					"Soulharvester Mandakh", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[99200] = {
					"Dresaron", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[45572] = {
					"Howling Gale", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[101438] = {
					"Vileshard Chunk", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[195265] = {
					"Stormcaller Arynga", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[129699] = {
					"Ludwig Von Tortollan", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[102781] = {
					"Fel Bat Pup", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[186125] = {
					"Tricktotem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190345] = {
					"Primalist Geomancer", -- [1]
					"Halls of Infusion", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[45924] = {
					"Turbulent Squall", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[189706] = {
					"Chaotic Essence", -- [1]
					"Castle Nathria", -- [2]
				},
				[210294] = {
					"Flamespreader", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[205435] = {
					"Epoch Ripper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[205691] = {
					"Iridikron's Creation", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[193799] = {
					"Rotchanting Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[210295] = {
					"Flamewaker Infernoguard", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[95769] = {
					"Mindshattered Screecher", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[177817] = {
					"Support Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
					"enUS", -- [3]
				},
				[212981] = {
					"Hapless Assistant", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[134338] = {
					"Tidesage Enforcer", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[204030] = {
					"Goblin Sapper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[45477] = {
					"Gust Soldier", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[196102] = {
					"Conjured Lasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[177816] = {
					"Interrogation Specialist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
					"enUS", -- [3]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[188302] = {
					"Reconfiguration Emitter", -- [1]
					"Castle Nathria", -- [2]
				},
				[135234] = {
					"Diseased Mastiff", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[114803] = {
					"Spectral Stable Hand", -- [1]
					"Return to Karazhan", -- [2]
				},
				[40586] = {
					"Lady Naz'jar", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[98691] = {
					"Risen Scout", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[81236] = {
					"Grimrail Technician", -- [1]
					"Grimrail Depot", -- [2]
					"enUS", -- [3]
				},
				[130404] = {
					"Vermin Trapper", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[41139] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[82579] = {
					"Grom'kar Far Seer", -- [1]
					"Grimrail Depot", -- [2]
					"enUS", -- [3]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[131527] = {
					"Lord Waycrest", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[193291] = {
					"Apex Blazewing", -- [1]
					"Neltharus", -- [2]
				},
				[151476] = {
					"Blastatron X-80", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[114804] = {
					"Spectral Charger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[194816] = {
					"Forgewrought Monstrosity", -- [1]
					"Neltharus", -- [2]
				},
				[175517] = {
					"Symbiotic Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[189235] = {
					"Overseer Lahar", -- [1]
					"Neltharus", -- [2]
				},
				[136934] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[187154] = {
					"Arcane Curator", -- [1]
					"The Azure Vault", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[192781] = {
					"Ore Elemental", -- [1]
					"Neltharus", -- [2]
				},
				[81638] = {
					"Aqueous Globule", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[98965] = {
					"Kur'talos Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[202789] = {
					"Morchie", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[187155] = {
					"Rune Seal Keeper", -- [1]
					"The Azure Vault", -- [2]
				},
				[194315] = {
					"Stormcaller Solongo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[194316] = {
					"Stormcaller Zarii", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195851] = {
					"Ukhel Deathspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[134599] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[201222] = {
					"Valow, Timesworn Keeper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Halls of Atonement", -- [2]
				},
				[194317] = {
					"Stormcaller Boroo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[84499] = {
					"Entanglement", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[98949] = {
					"Smashspite the Hateful", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[134600] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[201223] = {
					"Infinite Twilight Magus", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[199595] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[115765] = {
					"Abstract Nullifier", -- [1]
					"Return to Karazhan", -- [2]
				},
				[135240] = {
					"Soul Essence", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[114334] = {
					"Damaged Golem", -- [1]
					"Return to Karazhan", -- [2]
				},
				[114783] = {
					"Reformed Maiden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[187315] = {
					"Disease Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184335] = {
					"Infinite Agent", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[207969] = {
					"Horde Raider", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[193293] = {
					"Qalashi Warden", -- [1]
					"Neltharus", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[102019] = {
					"Stormforged Obliterator", -- [1]
					"Halls of Valor", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[196198] = {
					"Algeth'ar Security", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[95842] = {
					"Valarjar Thundercaller", -- [1]
					"Halls of Valor", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[100485] = {
					"Soul-torn Vanguard", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[192786] = {
					"Qalashi Plunderer", -- [1]
					"Neltharus", -- [2]
				},
				[183707] = {
					"Xy Spellslinger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[133836] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[182045] = {
					"Necrotic Ritualist", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[192787] = {
					"Qalashi Spinecrusher", -- [1]
					"Neltharus", -- [2]
				},
				[206214] = {
					"Infinite Infiltrator", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[187033] = {
					"Stinkbreath", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[189719] = {
					"Watcher Irideus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[100486] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[192788] = {
					"Qalashi Thaumaturge", -- [1]
					"Neltharus", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98696] = {
					"Illysanna Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[199717] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190359] = {
					"Skulking Zealot", -- [1]
					"Halls of Infusion", -- [2]
				},
				[189464] = {
					"Qalashi Irontorch", -- [1]
					"Neltharus", -- [2]
				},
				[76446] = {
					"Shadowmoon Enslaver", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[190174] = {
					"Hypnosis Bat", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[102277] = {
					"Deadeye Decoy", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[138187] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[135365] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[197905] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[196115] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[198326] = {
					"Stormwrought Despoiler", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[137511] = {
					"Bilge Rat Cutthroat", -- [1]
					"Siege of Boralus", -- [2]
				},
				[177891] = {
					"Mawforged Summoner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[189466] = {
					"Irontorch Commander", -- [1]
					"Neltharus", -- [2]
				},
				[45928] = {
					"Executor of the Caliph", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[190381] = {
					"Rotburst Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[176551] = {
					"Vault Purifier", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[131667] = {
					"Soulbound Goliath", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[190362] = {
					"Dazzling Dragonfly", -- [1]
					"Halls of Infusion", -- [2]
				},
				[189467] = {
					"Qalashi Bonesplitter", -- [1]
					"Neltharus", -- [2]
				},
				[169924] = {
					"Veteran Stoneguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[82597] = {
					"Grom'kar Captain", -- [1]
					"Grimrail Depot", -- [2]
					"enUS", -- [3]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[196117] = {
					"Crystal Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[208521] = {
					"Pumpkin Soldier", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[87252] = {
					"Unruly Ogron", -- [1]
					"Iron Docks", -- [2]
				},
				[209800] = {
					"Cycle Warden", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[129366] = {
					"Bilge Rat Buccaneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[193944] = {
					"Qalashi Lavamancer", -- [1]
					"Neltharus", -- [2]
				},
				[131669] = {
					"Jagged Hound", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[115642] = {
					"Umbral Imp", -- [1]
					"Faronaar", -- [2]
				},
				[86547] = {
					"Venom Sprayer", -- [1]
					"The Everbloom", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[206074] = {
					"Pendule", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[198308] = {
					"Frostwrought Dominator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129517] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[131847] = {
					"Waycrest Reveler", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[188703] = {
					"Protoform Barrier", -- [1]
					"Castle Nathria", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[198933] = {
					"Iridikron", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[150168] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[186658] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[204560] = {
					"Incorporeal Being", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[94224] = {
					"Petrifying Totem", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[189471] = {
					"Qalashi Blacksmith", -- [1]
					"Neltharus", -- [2]
				},
				[189727] = {
					"Khajin the Unyielding", -- [1]
					"Halls of Infusion", -- [2]
				},
				[192796] = {
					"Nokhud Hornsounder", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[99192] = {
					"Shade of Xavius", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[205212] = {
					"Infinite Keeper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[86552] = {
					"Gorged Burster", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[189472] = {
					"Qalashi Lavabearer", -- [1]
					"Neltharus", -- [2]
				},
				[185508] = {
					"Claw Fighter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[115388] = {
					"King", -- [1]
					"Return to Karazhan", -- [2]
				},
				[131545] = {
					"Lady Waycrest", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[192333] = {
					"Alpha Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
					"enUS", -- [3]
				},
				[195928] = {
					"Soulharvester Duuren", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190368] = {
					"Flamecaller Aymi", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[175550] = {
					"Volatile Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[189729] = {
					"Primal Tsunami", -- [1]
					"Halls of Infusion", -- [2]
				},
				[114626] = {
					"Forlorn Spirit", -- [1]
					"Return to Karazhan", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[188067] = {
					"Flashfrost Chillweaver", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[213770] = {
					"Ink of Ozumat", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[45930] = {
					"Minister of Air", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[204536] = {
					"Blight Chunk", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[40943] = {
					"Gilgoblin Aquamage", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[192800] = {
					"Nokhud Lancemaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[45932] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[197406] = {
					"Aggravated Skitterfly", -- [1]
					"Algeth'ar Academy", -- [2]
					"enUS", -- [3]
				},
				[194469] = {
					"Wither Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[190371] = {
					"Primalist Earthshaker", -- [1]
					"Halls of Infusion", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[82590] = {
					"Grimrail Scout", -- [1]
					"Grimrail Depot", -- [2]
					"enUS", -- [3]
				},
				[203799] = {
					"Horde Axe Thrower", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[199325] = {
					"Nokhud Stormcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[189478] = {
					"Forgemaster Gorek", -- [1]
					"Neltharus", -- [2]
				},
				[186664] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[133852] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[180015] = {
					"Burly Deckhand", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[190373] = {
					"Primalist Galesinger", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[186284] = {
					"Gutchewer Bear", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[206230] = {
					"Infinite Diversionist", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[84957] = {
					"Putrid Pyromancer", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[197535] = {
					"High Channeler Ryvati", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[198047] = {
					"Tempest Channeler", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[207638] = {
					"Blight of Galakrond", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[194467] = {
					"Disease Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[201756] = {
					"Whiiskeyz", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[86684] = {
					"Feral Lasher", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[176565] = {
					"Disruptive Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[205337] = {
					"Infinite Timebender", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[113537] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[207639] = {
					"Blight of Galakrond", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[114624] = {
					"Arcane Warden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[136541] = {
					"Bile Oozeling", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[192934] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[99664] = {
					"Restless Soul", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[184107] = {
					"Runic Protector", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[190377] = {
					"Primalist Icecaller", -- [1]
					"Halls of Infusion", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[133345] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[102094] = {
					"Risen Swordsman", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[84767] = {
					"Twisted Abomination", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[190370] = {
					"Squallbringer Cyraz", -- [1]
					"Halls of Infusion", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[189227] = {
					"Qalashi Hunter", -- [1]
					"Neltharus", -- [2]
				},
				[205723] = {
					"Time-Lost Aerobot", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[81819] = {
					"Everbloom Naturalist", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[192680] = {
					"Guardian Sentry", -- [1]
					"Algeth'ar Academy", -- [2]
					"enUS", -- [3]
				},
				[195877] = {
					"Risen Mystic", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168384] = {
					"Flesh Construct", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[131849] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[98706] = {
					"Commander Shemdah'sohn", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[203678] = {
					"Grommash Hellscream", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[81820] = {
					"Everbloom Mender", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[101008] = {
					"Stinging Swarm", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[102095] = {
					"Risen Lancer", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[116549] = {
					"Backup Singer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[102287] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[114627] = {
					"Shrieking Terror", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[99358] = {
					"Rotheart Dryad", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[201790] = {
					"Loszkeleth", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[189340] = {
					"Chargath, Bane of Scales", -- [1]
					"Neltharus", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[196263] = {
					"Nokhud Neophyte", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[95766] = {
					"Crazed Razorbeak", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[186124] = {
					"Gashtooth", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[213143] = {
					"Manifested Dream", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[115395] = {
					"Queen", -- [1]
					"Return to Karazhan", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[115640] = {
					"Fuming Imp", -- [1]
					"Faronaar", -- [2]
				},
				[205727] = {
					"Time-Lost Rocketeer", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[197671] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[195927] = {
					"Soulharvester Galtmaa", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[101637] = {
					"Valarjar Aspirant", -- [1]
					"Halls of Valor", -- [2]
				},
				[198311] = {
					"Flamewrought Eradicator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[98900] = {
					"Wyrmtongue Trickster", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[111563] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[101074] = {
					"Hatespawn Whelpling", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[155090] = {
					"Anodized Coilbearer", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[130400] = {
					"Irontide Crusher", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[190128] = {
					"Zul'gamux", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[114629] = {
					"Spectral Retainer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[162763] = {
					"Soulforged Bonereaver", -- [1]
					"Theater of Pain", -- [2]
				},
				[186420] = {
					"Earthen Weaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[100991] = {
					"Strangling Roots", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[189234] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129527] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179388] = {
					"Hourglass Tidesage", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[101075] = {
					"Wormspeaker Devout", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[45919] = {
					"Young Storm Dragon", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[131819] = {
					"Coven Diviner", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[80935] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
					"enUS", -- [3]
				},
				[136295] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[96664] = {
					"Valarjar Runecarver", -- [1]
					"Halls of Valor", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
					"enUS", -- [3]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[136249] = {
					"Guardian Elemental", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[185528] = {
					"Trickclaw Mystic", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[185656] = {
					"Filth Caller", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[137516] = {
					"Ashvane Invader", -- [1]
					"Siege of Boralus", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
					"enUS", -- [3]
				},
				[168932] = {
					"Doomguard", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[134251] = {
					"Seneschal M'bara", -- [1]
					"Kings' Rest", -- [2]
				},
				[185529] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190407] = {
					"Aqua Rager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[186220] = {
					"Brackenhide Shaper", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[187192] = {
					"Rageclaw", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[95834] = {
					"Valarjar Mystic", -- [1]
					"Halls of Valor", -- [2]
				},
				[45935] = {
					"Temple Adept", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[206070] = {
					"Chronaxie", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[189878] = {
					"Nathrezim Infiltrator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[104274] = {
					"Baalgar the Watchful", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[131823] = {
					"Sister Malady", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[184124] = {
					"Sentinel Talondras", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[118489] = {
					"Corrupted Risen Soldier", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[115757] = {
					"Wrathguard Flamebringer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[86372] = {
					"Melded Berserker", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[184125] = {
					"Chrono-Lord Deios", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[95771] = {
					"Dreadsoul Ruiner", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[151773] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[206064] = {
					"Coalesced Moment", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[133432] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[131825] = {
					"Sister Briar", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[114633] = {
					"Spectral Valet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[80938] = {
					"Grom'kar Hulk", -- [1]
					"Grimrail Depot", -- [2]
					"enUS", -- [3]
				},
				[88163] = {
					"Grom'kar Cinderseer", -- [1]
					"Grimrail Depot", -- [2]
					"enUS", -- [3]
				},
				[180104] = {
					"Tangling Bloom", -- [1]
					"The Shadowlands", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[169421] = {
					"Felguard", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[151325] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[95772] = {
					"Frenzied Nightclaw", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[144296] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
					"enUS", -- [3]
				},
				[133361] = {
					"Wasting Servant", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[122968] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[40577] = {
					"Naz'jar Sentinel", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[210150] = {
					"Flametouched Enforcer", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[179269] = {
					"Oasis Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[188026] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179842] = {
					"Commerce Enforcer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[179841] = {
					"Veteran Sparkcaster", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[194487] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[91007] = {
					"Dargrul", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[98970] = {
					"Latosius", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[134514] = {
					"Abyssal Cultist", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[204206] = {
					"Horde Farseer", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[126847] = {
					"Captain Raoul", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[129547] = {
					"Blacktooth Knuckleduster", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[199233] = {
					"Flamescale Captain", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[40633] = {
					"Naz'jar Honor Guard", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[185537] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[169425] = {
					"Felhound", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[115019] = {
					"Coldmist Widow", -- [1]
					"Return to Karazhan", -- [2]
				},
				[191164] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[184131] = {
					"Earthen Guardian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[180348] = {
					"Cartel Muscle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[189901] = {
					"Warlord Sargha", -- [1]
					"Neltharus", -- [2]
				},
				[114316] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Return to Karazhan", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
					"enUS", -- [3]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[184132] = {
					"Earthen Warder", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[198998] = {
					"Tyr, the Infinite Keeper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[137458] = {
					"Rotting Spore", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[198995] = {
					"Chronikar", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[187969] = {
					"Flashfrost Earthshaper", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
					"enUS", -- [3]
				},
				[196045] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
					"enUS", -- [3]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[139422] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[114317] = {
					"Lady Catriona Von'Indi", -- [1]
					"Return to Karazhan", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[169428] = {
					"Wrathguard", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[122965] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[212778] = {
					"Minion of Ghur'sha", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[45912] = {
					"Wild Vortex", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[101476] = {
					"Molten Charskin", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[183495] = {
					"Twisted Worldeater", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[169429] = {
					"Shivarra", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[212779] = {
					"Umbraclaw", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[190401] = {
					"Gusting Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[44404] = {
					"Naz'jar Frost Witch", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[191206] = {
					"Primalist Mage", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[169430] = {
					"Ur'zul", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[205363] = {
					"Time-Lost Waveshaper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[100526] = {
					"Tormented Bloodseeker", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[39960] = {
					"Deep Murloc Drudge", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
					"enUS", -- [3]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[183497] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[208438] = {
					"Infinite Saboteur", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[200126] = {
					"Fallen Waterspeaker", -- [1]
					"Temple of the Jade Serpent", -- [2]
					"enUS", -- [3]
				},
				[184023] = {
					"Vicious Basilisk", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[185032] = {
					"Taskmaster Xy'pro", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[208459] = {
					"Fiery Treant", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[190403] = {
					"Glacial Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[114319] = {
					"Lady Keira Berrybuck", -- [1]
					"Return to Karazhan", -- [2]
				},
				[115406] = {
					"Knight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[208445] = {
					"Larodar, Keeper of the Flame", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[195135] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[45620] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
			},
			["health_selection_overlay_alpha"] = 1,
			["minor_height_scale"] = 0.94999998807907,
			["aura_width2"] = 22,
			["aura_height2"] = 18,
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["range_check_alpha"] = 1,
			["semver"] = "1.0.0",
			["aura_alpha"] = 0.84999996423721,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
			["show_healthbars_on_not_attackable"] = true,
			["transparency_behavior"] = 4,
			["spell_animations"] = false,
			["aura_consolidate"] = true,
			["health_statusbar_texture"] = "ToxiUI Tx Right",
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Extra Border"] = 2,
				["Cast Bar Icon Config"] = 2,
				["Attacking Specific Unit"] = 2,
				["Combo Points"] = 6,
				["Hide Neutral Units"] = 1,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Aura Reorder"] = 3,
			},
			["minor_width_scale"] = 0.89999997615814,
			["castbar_target_text_size"] = 8,
			["honor_blizzard_plate_alpha"] = true,
			["aura_timer_text_font"] = "PT Sans Narrow",
			["aura_height"] = 18,
			["cast_statusbar_bgtexture"] = "Solid",
			["aura2_x_offset"] = 0,
			["target_indicator"] = "NONE",
			["castbar_target_notank"] = true,
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "0.94601118564606",
				["nameplateLargeTopInset"] = "-1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "1",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "1",
				["nameplateTargetRadialPosition"] = "0",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["clampTargetNameplateToScreen"] = "0",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "60",
				["nameplateShowFriendlyMinions"] = "1",
				["nameplateTargetBehindMaxDistance"] = "30",
				["SoftTargetInteract"] = "0",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplateSelfTopInset"] = "0.51",
				["nameplateMotionSpeed"] = "0.050608683377504",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1",
				["nameplateShowFriends"] = "0",
				["nameplateMotion"] = "0",
				["nameplateMinScale"] = "1",
				["nameplateOtherTopInset"] = "-1",
				["nameplateOtherAtBase"] = "0",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["SoftTargetNameplateInteract"] = "1",
				["nameplateShowFriendlyGuardians"] = "1",
				["nameplateOccludedAlphaMult"] = "0.29999998211861",
				["NamePlateHorizontalScale"] = "1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["SoftTargetIconGameObject"] = "0",
				["nameplateShowOnlyNames"] = "1",
			},
			["login_counter"] = 18885,
			["aura_stack_font"] = "PT Sans Narrow",
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.2000000476837,
				},
			},
			["cast_color_settings"] = {
				["enabled"] = true,
				["width"] = 12,
			},
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator5",
			["hover_highlight_alpha"] = 0.2999999821186066,
			["usePlaterWidget"] = false,
			["plate_config"] = {
				["global_health_height"] = 13,
				["friendlyplayer"] = {
					["actorname_use_class_color"] = true,
					["cast"] = {
						121, -- [1]
					},
					["only_thename"] = true,
					["cast_incombat"] = {
						121, -- [1]
					},
					["show_guild_name"] = true,
					["health_incombat"] = {
						121, -- [1]
						13, -- [2]
					},
					["health"] = {
						121, -- [1]
						13, -- [2]
					},
				},
				["friendlynpc"] = {
					["big_actorname_text_size"] = 10,
					["cast"] = {
						121, -- [1]
					},
					["enabled"] = false,
					["actorname_text_spacing"] = 16,
					["cast_incombat"] = {
						121, -- [1]
					},
					["health_incombat"] = {
						121, -- [1]
						17, -- [2]
					},
					["health"] = {
						121, -- [1]
						13, -- [2]
					},
					["actorname_text_size"] = 17,
				},
				["global_health_width"] = 121,
				["enemyplayer"] = {
					["spellpercent_text_font"] = "PT Sans Narrow",
					["level_text_size"] = 8,
					["cast"] = {
						121, -- [1]
					},
					["big_actortitle_text_size"] = 10,
					["spellname_text_outline"] = "OUTLINE",
					["level_text_font"] = "PT Sans Narrow",
					["actorname_text_font"] = "PT Sans Narrow",
					["all_names"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 11,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "PT Sans Narrow",
					["cast_incombat"] = {
						121, -- [1]
						14, -- [2]
					},
					["health_incombat"] = {
						121, -- [1]
						13, -- [2]
					},
					["spellname_text_font"] = "PT Sans Narrow",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actorname_text_font"] = "PT Sans Narrow",
					["big_actorname_text_size"] = 10,
					["percent_text_size"] = 10,
					["percent_text_font"] = "PT Sans Narrow",
					["quest_enabled"] = true,
					["quest_color_enabled"] = true,
					["spellname_text_size"] = 11,
					["health"] = {
						121, -- [1]
						13, -- [2]
					},
				},
				["enemynpc"] = {
					["spellpercent_text_font"] = "Bebas Neue Cyrillic Regular",
					["cast"] = {
						124, -- [1]
					},
					["level_text_font"] = "PT Sans Narrow",
					["actorname_text_font"] = "Bebas Neue Cyrillic Regular",
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 9,
					["big_actortitle_text_font"] = "PT Sans Narrow",
					["cast_incombat"] = {
						124, -- [1]
						10, -- [2]
					},
					["health_incombat"] = {
						121, -- [1]
						13, -- [2]
					},
					["percent_text_anchor"] = {
						["y"] = -0.2400054931640625,
						["x"] = 0.8799972534179688,
						["side"] = 11,
					},
					["spellname_text_font"] = "Bebas Neue Cyrillic Regular",
					["big_actorname_text_font"] = "PT Sans Narrow",
					["castbar_offset"] = -0.2400054931640625,
					["spellpercent_text_size"] = 12,
					["level_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 0,
					["percent_text_size"] = 10,
					["percent_text_font"] = "Bebas Neue Cyrillic Regular",
					["spellname_text_size"] = 10,
					["health"] = {
						121, -- [1]
						13, -- [2]
					},
					["actorname_text_size"] = 10,
					["actorname_text_anchor"] = {
						["y"] = 0.5799942016601562,
						["x"] = -3.75,
						["side"] = 1,
					},
				},
			},
			["aura_y_offset"] = 5,
			["use_ui_parent"] = true,
			["cast_statusbar_bgcolor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0.8900000005960464, -- [4]
			},
			["border_thickness"] = 1.484683036804199,
			["resources_settings"] = {
				["chr"] = {
					["Player-3209-0B4EDE3D"] = "HolyPower",
					["Player-3682-0B236980"] = "ArcaneCharges",
					["Player-1403-0A6909FE"] = "ComboPoints",
					["Player-1403-0A1C79B6"] = "ArcaneCharges",
					["Player-3682-0B20292A"] = "HolyPower",
					["Player-3209-0B29D149"] = "ArcaneCharges",
					["Player-1597-0F7AB124"] = "ArcaneCharges",
					["Player-3682-0B241018"] = "Essence",
					["Player-1307-0BE359D3"] = "ArcaneCharges",
					["Player-3682-0B2A13DE"] = "ComboPoints",
					["Player-3682-0B038C9A"] = "ArcaneCharges",
					["Player-3682-0B310D76"] = "HolyPower",
					["Player-3209-0B2C0A65"] = "Chi",
					["Player-3682-0B155119"] = "SoulShards",
					["Player-1403-0A70E106"] = "ComboPoints",
					["Player-3682-0B19EC37"] = "Chi",
				},
			},
			["ignore_softinteract_objects"] = true,
			["npc_colors"] = {
				[190404] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196798] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[186696] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[109908] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[213806] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190405] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196671] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180431] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115407] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[150253] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[184140] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[99359] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180432] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165471] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190407] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129602] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180433] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131585] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[120651] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[131009] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[99360] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197697] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[176598] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164578] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134144] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[81522] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[40825] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131587] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[208440] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[164707] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196548] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135552] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[84400] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[186191] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135169] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[201792] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[206140] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[83761] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[184018] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[178008] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[126983] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[127111] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168418] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[200387] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[213942] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[199748] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165222] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[184020] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[199749] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168420] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165479] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[170850] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[134150] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[75451] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83763] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[184022] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[128967] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[75899] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196043] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131850] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134024] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[178141] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196044] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[40923] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[83892] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135048] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[178142] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[98406] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137478] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[194894] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196045] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165483] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135049] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[139269] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168425] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164461] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168681] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[128969] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[99366] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[82039] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177889] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[187224] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[136330] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194897] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164463] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[83894] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[98280] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134157] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[75966] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[205384] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[212673] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[136076] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[134158] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[172265] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[208198] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150143] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177892] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165872] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[137484] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[131858] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[40765] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[45912] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[207177] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[174569] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[40925] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190426] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189531] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137486] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[98538] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150146] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137103] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[101991] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165108] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[82682] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[156157] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[75713] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[186208] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[138255] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[122963] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[162040] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198996] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[81212] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[181861] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[52019] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83578] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[171376] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131863] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[203857] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195929] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[207438] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131864] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[75459] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198999] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[205265] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[193373] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[184422] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[199000] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[39616] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[133912] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136214] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[136470] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[75652] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134041] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[197595] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[203861] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[155908] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98542] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179821] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83389] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[157571] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[173044] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[154758] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162047] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[118491] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115486] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[90998] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[157572] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164861] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[122967] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[105704] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[166396] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127315] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83390] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187240] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[132126] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[45915] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171384] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168443] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[77700] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[84989] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[184300] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[122968] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[101549] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170490] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168572] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191206] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[184301] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115488] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[91000] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[84990] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[81985] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122969] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[100527] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197985] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150160] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178165] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197219] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165762] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122970] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131492] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[76104] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165763] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135329] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[81603] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[166275] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[91002] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[174843] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[136353] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[166276] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168578] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150292] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[205790] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[45917] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[162057] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[205151] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[91003] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[186226] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135204] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[196712] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[205152] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[92538] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[170882] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[99891] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[200137] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180473] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[80816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129547] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196202] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[103344] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[126919] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164873] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122973] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[75979] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[183671] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114319] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129367] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[168153] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[186229] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129559] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[175576] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189266] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[186741] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98792] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150169] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150297] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[185032] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183033] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[174210] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[199124] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[111068] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[182778] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[178392] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[170480] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[199233] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[102962] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199368] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163086] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196576] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[204262] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[91006] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114783] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[201788] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129553] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[173189] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[86526] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[205158] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[205366] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[129369] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[97720] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180336] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[43873] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[195696] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[173190] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187768] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[83846] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[91007] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[81864] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[97197] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[138281] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187897] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[153882] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[186107] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134701] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[179841] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[151325] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129552] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[84550] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[169861] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[154744] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188026] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[91008] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168717] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[144293] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165137] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183423] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[137516] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[187771] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[175992] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98681] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168718] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[144294] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[184319] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165010] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[137517] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[83893] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114584] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[174197] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[122972] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[122965] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[95779] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183425] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[187969] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[105715] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134012] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[150165] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[132532] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[98810] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[205804] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179334] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[191739] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[176521] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[133685] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[139949] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[186242] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[130012] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163862] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[214117] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135474] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164567] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[104278] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[179847] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137713] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[144298] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[133430] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[43875] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[137521] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[176523] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[104246] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[213607] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[190206] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180104] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114316] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114796] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[184580] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190207] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[96574] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[184581] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[191230] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[184131] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165911] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[191164] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[206064] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129758] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[104247] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135052] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[186116] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[178139] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133432] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[206065] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[184582] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[154020] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180474] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165529] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191232] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[98813] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165913] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[45922] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[206066] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[175861] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114542] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[40935] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[169426] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[186246] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115757] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[155812] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[100539] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[96512] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[204206] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180864] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98970] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[197698] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[194487] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[92610] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[206068] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[166299] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136249] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[177808] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[186120] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[190340] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[167962] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[134331] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[133436] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[171799] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[178630] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164510] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[186121] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[184331] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[167963] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180495] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[206070] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[166301] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[40936] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114544] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[186122] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190342] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[101437] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122984] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[41096] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[166302] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114334] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134418] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[144296] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[204918] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167965] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[40577] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195842] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[127879] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[104251] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[45572] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163618] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[139422] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[101438] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165919] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[162691] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167967] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[45924] = {
					true, -- [1]
					false, -- [2]
					"MAGE", -- [3]
				},
				[189706] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[186125] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190345] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[184335] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[100991] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129699] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[98370] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165410] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[205435] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163620] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[205691] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83025] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[154014] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[193799] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[177817] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179733] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135234] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[171805] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[98691] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168992] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134338] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[204030] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[45477] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196102] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[98243] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[188302] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[83026] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114803] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[40586] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131825] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[81236] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[130404] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189901] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163458] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135235] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[82579] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[198997] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131527] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165414] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[122971] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[193291] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[151476] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[207969] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114804] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[187154] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[175517] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[184125] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[133870] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194315] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[104300] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135365] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130661] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[192781] = {
					true, -- [1]
					false, -- [2]
					"MAGE", -- [3]
				},
				[192767] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[193293] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187155] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[194316] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[192481] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163882] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[184124] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[195851] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134599] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[201222] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[173729] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194317] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168310] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135239] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[98949] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196203] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134600] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[201223] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[125977] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198326] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[115765] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135240] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[95834] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[141285] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[187192] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[156212] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[195265] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114266] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134284] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135241] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[102019] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189265] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[100485] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[104273] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133835] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[80936] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[81432] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[59873] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[155830] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192786] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[183707] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[116549] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[133836] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[182045] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165805] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[192788] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[155831] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[192787] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[206214] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[102788] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187033] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168747] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136139] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[95769] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[100486] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163121] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[101637] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168109] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[98696] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[141283] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[190359] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[189464] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[76446] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162099] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196115] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[96587] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[156244] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[115640] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[138187] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[59553] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133482] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[87252] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[167113] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131666] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164506] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170483] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176959] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[189466] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[45928] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131819] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[176551] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131667] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[144071] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[137830] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[190362] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189467] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196198] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[98965] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[59547] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196117] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[208521] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[82597] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189340] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130400] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[163459] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163126] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[193944] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131669] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[165556] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115642] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[95842] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[163894] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[45919] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168156] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168882] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131670] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[198933] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187315] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129517] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[81820] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171184] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163128] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[169924] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[192796] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168627] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[204560] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[94224] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189471] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[186658] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[189727] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[99358] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155090] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[184023] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[175550] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[86552] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[189472] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[185508] = {
					true, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[115388] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131545] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150142] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[152898] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168942] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190368] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164921] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[198311] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[189729] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[188703] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[156226] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[167607] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[213770] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168886] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134232] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[45930] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134629] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[133593] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[98275] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[40943] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[157634] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190370] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[166969] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[197671] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[192800] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[205727] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[195927] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[81819] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[104270] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190371] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166970] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[82590] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[206074] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[166971] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131677] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180015] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164926] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[172981] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[203799] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[95766] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[186664] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[167612] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164414] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[133852] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[128434] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190373] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[189478] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134364] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[163520] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[206230] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199325] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[166589] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[84957] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197535] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180070] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[132491] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[150168] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198047] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[177716] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[186284] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[128435] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[194467] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[201756] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[86684] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[76518] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176565] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[205337] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190377] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[101326] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165824] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167998] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[102287] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[136541] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192934] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[99664] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[133345] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[135007] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[194469] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135263] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[45932] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[102094] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[84767] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[169905] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163524] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114626] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131586] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168384] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[192680] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195877] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[205212] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98706] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131812] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[212681] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[203678] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[188244] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[101008] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[102095] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189227] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131685] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[198308] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114627] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164929] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195928] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[204536] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[113537] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[192333] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114624] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196263] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[184107] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190381] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197406] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[152905] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115395] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131849] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127799] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[80805] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129366] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[167876] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199717] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[138465] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[167964] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[59552] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[188067] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170690] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[130485] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[186124] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[200126] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[99192] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[86547] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[176573] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137511] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[190128] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114629] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162763] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[186420] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[167111] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[136549] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[190174] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[151127] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[177891] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[189234] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129527] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168007] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179388] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[101075] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176575] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[201790] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[136934] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[189235] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[80935] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[136295] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[169159] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[131436] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[41139] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[155221] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[96664] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197905] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[169927] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134990] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[185528] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[185656] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[59546] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[156245] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[164557] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[189719] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[141284] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[134251] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[185529] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199595] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168932] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[194816] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131847] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[130488] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[129529] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[40788] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[45935] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162038] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[189878] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[104274] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131823] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114632] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[111563] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134139] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[186220] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134417] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[168396] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[86372] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131824] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179010] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[95771] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155824] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[151773] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[178171] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195930] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[104275] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[126845] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114633] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[80938] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[88163] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[118489] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[157017] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169421] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[170572] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164562] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[40633] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180091] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[107288] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[133361] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162133] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189555] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[199037] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164563] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[206063] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[44566] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179269] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164737] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171341] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[59555] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190034] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[56792] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135167] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[84520] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134174] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[165076] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134514] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[129788] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180323] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[126847] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[179852] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198995] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[128455] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[185537] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171343] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[169425] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[115019] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168658] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[212775] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[84554] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[160495] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[194745] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[75506] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192955] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[102232] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[126848] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[184132] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189886] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[168594] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[137458] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168318] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[192464] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115020] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198998] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[97068] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[81984] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[157810] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114317] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180335] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[169428] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[127757] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179842] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[212778] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[101476] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[65317] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183495] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129370] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[169429] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[173016] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180348] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[176974] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190401] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[136186] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[208698] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[191847] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[169430] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[205363] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[205408] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[39960] = {
					true, -- [1]
					false, -- [2]
					"DEATHKNIGHT", -- [3]
				},
				[134137] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[197857] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[183497] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195399] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[40634] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[208438] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150250] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[44404] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190403] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129600] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180429] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[115406] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168934] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195135] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150251] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162039] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
			},
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Use Big Icon",
							["Value"] = false,
							["Key"] = "useFullSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Name"] = "Icon Size Offset",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconPadding",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.30567157268524, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Name"] = "Texture Width",
							["Value"] = 10,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureHeightMod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Name"] = "Texture Position",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Name"] = "Texture Alpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [16]
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Name"] = "Cast Bar Icon Settings [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["semver"] = "",
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1688802814,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Enabled"] = false,
					["Revision"] = 51,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Color Automation [Plater]",
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1614608917,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135358,
					["Enabled"] = false,
					["Revision"] = 85,
					["semver"] = "",
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Name"] = "Execute Range [Plater]",
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1684153114,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 369,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Color",
							["Value"] = {
								0.50196078431373, -- [1]
								0.50196078431373, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Change Bar Color",
							["Value"] = true,
							["Key"] = "changeBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Change Border Color",
							["Value"] = false,
							["Key"] = "changeBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Reset Colors",
							["Value"] = true,
							["Key"] = "resetColors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["LastHookEdited"] = "",
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [4]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Combo Points [Plater]",
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Extra Border [Plater]",
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [6]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["semver"] = "",
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
					},
					["Time"] = 1705067856,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 136207,
					["Enabled"] = false,
					["Revision"] = 60,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Don't Have Aura [Plater]",
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Players Targeting a Target [Plater]",
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1614606781,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 358,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Initialization",
					["Name"] = "Aura Reorder [Plater]",
				}, -- [10]
				{
					["OptionsValues"] = {
						["targetcolor"] = {
							0, -- [1]
							0.47450980392157, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1654562266,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/_GSmNC31z/1",
					["Icon"] = 878211,
					["Enabled"] = false,
					["Revision"] = 168,
					["semver"] = "1.0.0",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "targetcolor",
							["Value"] = {
								0.46274509803922, -- [1]
								1, -- [2]
								0.48235294117647, -- [3]
								1, -- [4]
							},
							["Key"] = "targetcolor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "targetcolor",
						}, -- [1]
					},
					["LastHookEdited"] = "",
					["Name"] = "Current Target Color [Plater]",
				}, -- [11]
				{
					["OptionsValues"] = {
						["glowColor"] = {
							1, -- [1]
							0, -- [2]
							0.01568627543747425, -- [3]
							1, -- [4]
						},
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
					},
					["Time"] = 1703731894,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/turHC0a5k/7",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
					["Enabled"] = true,
					["Revision"] = 290,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "@scriptname Options:",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the glow ants.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "Amount of ants in the glow effect.",
							["Min"] = 1,
							["Name"] = "Ants Amount",
							["Value"] = 6,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "antsAmount",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Ants move speed",
							["Min"] = -1,
							["Name"] = "Speed",
							["Value"] = 0.25,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "frequency",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "",
							["Min"] = 1,
							["Name"] = "Ants length",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "antsLength",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 4,
							["Desc"] = "",
							["Min"] = 1,
							["Name"] = "Ants Thickness",
							["Value"] = 2,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "antsThickness",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Ants Border",
							["Value"] = false,
							["Key"] = "antsBorder",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Outer Glow",
							["Value"] = false,
							["Key"] = "outerGlow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
					},
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
					["Prio"] = 99,
					["version"] = 7,
					["PlaterCore"] = 1,
					["HooksTemp"] = {
					},
					["semver"] = "1.0.6",
					["Name"] = "Steal/Purge Aura Glow",
				}, -- [12]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame)\n    \n    local healthBar = unitFrame.healthBar\n    local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n    -- change the value to whatever, for fire mages its 30% so 0.30\n    local useScorch = 0.30\n    \n    if (percent <= useScorch) then\n        -- from here the customizing is optional\n        -- for a list of commands look at the plater api\n        -- https://www.curseforge.com/wow/addons/plater-nameplates/pages/scripts/list-of-api-functions\n        \n        -- below is an example which will set the color & bordercolor to orange, \n        -- change the size of the frame and add a flash to it\n        \n        Plater.SetNameplateColor (unitFrame, \"#ff8c00\")\n        Plater.SetBorderColor (unitFrame, \"#ff8c00\")\n        Plater.SetNameplateSize (unitFrame, 120, 20)\n        Plater.FlashNameplateBorder (unitFrame, 1)\n    end\n    \n    \nend",
					},
					["Time"] = 1625007755,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/pc7PK_czd/1",
					["Icon"] = 135827,
					["Enabled"] = false,
					["Revision"] = 102,
					["semver"] = "1.0.0",
					["Author"] = "Sphyre-Tarren Mill",
					["Desc"] = "distinguish the mob for scorching",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Nameplate Updated",
					["Name"] = "Scorch",
				}, -- [13]
				{
					["OptionsValues"] = {
						["colorHealthbar"] = true,
						["targetEnabled"] = false,
						["raidMarkColors"] = false,
						["targetColor"] = {
							0.27058823529412, -- [1]
							0.50980392156863, -- [2]
							0.70196078431373, -- [3]
							1, -- [4]
						},
						["UseDefaultColor"] = false,
						["IMobs"] = {
							1, -- [1]
							0.97254901960784, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["threatColors"] = true,
						["DefaultColor"] = {
							0.27058823529412, -- [1]
							0.50980392156863, -- [2]
							0.70196078431373, -- [3]
							1, -- [4]
						},
						["EnMobs"] = {
							1, -- [1]
							0, -- [2]
							0.10196078431373, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
						["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"]\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    modTable.UseDefaultColor = modTable.config[\"UseDefaultColor\"]\n    modTable.DefaultColor = modTable.config[\"DefaultColor\"]\n    \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    --Bosses - Greenyblue - \"Boss\"\n    --Mini Boss - DarkMagenta - \"MiniBoss\"\n    \n    --Focus mobs - Blue - \"FMobs\"\n    --Deadly mobs - Light Blue - \"DMobs\"\n    --Dodge Mobs - Purple - \"DoMobs\"\n    \n    --Healer mobs - White - HMobs\n    --Interruptable damage mobs - Orange - InMobs\n    --Enrage mobs - Light Orange - \"EnMobs\"\n    \n    --Expolsives mobs - Dark Pink - \"ExMobs\"\n    \n    modTable.NpcColors = {       \n        \n        -- De Other Side\n        [166473] = modTable.config[\"Boss\"],     --Hakkar the Soulflayer\n        [164555] = modTable.config[\"Boss\"],     --Milificent Manastorm\n        [164556] = modTable.config[\"Boss\"],     --Millhouse Manastorm\n        [169769] = modTable.config[\"Boss\"],     --Mueh'zala\n        \n        [170486] = modTable.config[\"FMobs\"],    --Atal'ia Devoted\n        [168992] = modTable.config[\"FMobs\"],    --Risen Cultist\n        [168934] = modTable.config[\"FMobs\"],    --Enraged Spirit\n        [167962] = modTable.config[\"FMobs\"],    --Defunct Dental Drill\n        [171184] = modTable.config[\"FMobs\"],    --Mythresh, Sky's Talon\n        \n        [167964] = modTable.config[\"DMobs\"],    --4.RF-4.RF\n        [164862] = modTable.config[\"DMobs\"],    --Weald Shimmermoth\n        \n        [167965] = modTable.config[\"IMobs\"],    --Lubricator\n        \n        [170490] = modTable.config[\"HMobs\"],    --Atal'ai High Priest\n        [170572] = modTable.config[\"HMobs\"],    --Atal'ai Hoodoo Hexxer\n        \n        [169905] = modTable.config[\"EnMobs\"],   --Risen Warlord\n        [171343] = modTable.config[\"EnMobs\"],   --Bladebeak Matriarch\n        \n        [168942] = modTable.config[\"DoMobs\"],    --DeathSpeaker\n        [167963] = modTable.config[\"DoMobs\"],    --Headless Client\n        [170480] = modTable.config[\"DoMobs\"],    --Atal'ia Deathwalker\n        \n        [170147] = modTable.config[\"ExMobs\"],   --Volatile Memory\n        \n        --Theater Of Pain\n        [164451] = modTable.config[\"Boss\"],     --Dessia the Decapitator\n        [164463] = modTable.config[\"Boss\"],     --Paceran the virulent\n        [164461] = modTable.config[\"Boss\"],     --Sathel the Accursed\n        [162317] = modTable.config[\"Boss\"],     --Gorechop\n        [162309] = modTable.config[\"Boss\"],     --Kul'tharok\n        [162329] = modTable.config[\"Boss\"],     --Xav the Unfallen\n        [165946] = modTable.config[\"Boss\"],     --Mordretha the Endless Empress\n        \n        [167536] = modTable.config[\"MiniBoss\"], --Harugia the Bloodthirsty\n        [162744] = modTable.config[\"MiniBoss\"], --Nekthara the Mangler\n        \n        [174210] = modTable.config[\"FMobs\"],    --Blighted Sludge-Spewer\n        [170882] = modTable.config[\"FMobs\"],    --Bone Magus\n        [160495] = modTable.config[\"FMobs\"],    --Maniacal Soulbinder\n        \n        [174197] = modTable.config[\"DMobs\"],    --Battlefield Ritualist\n        [163086] = modTable.config[\"DMobs\"],    --Rancid Gasbag\n        [170690] = modTable.config[\"DMobs\"],    --Diseased Horror\n        [167998] = modTable.config[\"DMobs\"],    --Portal Guardian\n        [164506] = modTable.config[\"DMobs\"],    --Ancient Captain\n        \n        [170850] = modTable.config[\"EnMobs\"],   --Raging BloodHorn\n        \n        [169893] = modTable.config[\"DoMobs\"],   --Hefarious Darkspeaker\n        [162763] = modTable.config[\"DoMobs\"],    --Soulforged Bonereaver\n        \n        --Necrotic Wake\n        [162691] = modTable.config[\"Boss\"],     --BlightBone\n        [162692] = modTable.config[\"Boss\"],     --Amarth\n        [166882] = modTable.config[\"Boss\"],     --Surgeon Stitchflesh\n        [166945] = modTable.config[\"Boss\"],     --Nalthor the Rimebinder\n        \n        [165824] = modTable.config[\"MiniBoss\"], --Nar'zudah\n        [165197] = modTable.config[\"MiniBoss\"], --Skeletal Monostrosity\n        \n        [163121] = modTable.config[\"FMobs\"],    --Stiched Vanguard\n        [165137] = modTable.config[\"FMobs\"],    --Zolramus GateKeeper\n        [163618] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        [168443] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        \n        [163128] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [168357] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [173044] = modTable.config[\"DMobs\"],    --Stitching Assistant\n        [167731] = modTable.config[\"DMobs\"],    --Separation Assistant\n        [163126] = modTable.config[\"DMobs\"],    --Brittlebone Mage\n        [163621] = modTable.config[\"DMobs\"],    --Goregrind\n        [163620] = modTable.config[\"DMobs\"],    --Rotspew\n        [172981] = modTable.config[\"DMobs\"],    --Kyrian Stitchwerk\n        \n        [173016] = modTable.config[\"IMobs\"],    --Corpse Collector\n        [166302] = modTable.config[\"IMobs\"],    --Corpse Harvester\n        [165919] = modTable.config[\"IMobs\"],    --Skeletal Marauder\n        \n        [165222] = modTable.config[\"HMobs\"],    --Zolramus Bonemender\n        [165872] = modTable.config[\"HMobs\"],    --Flesh Crafter\n        \n        --Halls Of Atonment\n        [165408] = modTable.config[\"Boss\"],     --Halkias\n        [156827] = modTable.config[\"Boss\"],     --Echelon  \n        [165410] = modTable.config[\"Boss\"],     --High Adjudicator Aleez\n        [164218] = modTable.config[\"Boss\"],     --Lord Chamberlain\n        \n        [167876] = modTable.config[\"MiniBoss\"], --Inquisitor Sigar\n        \n        [164562] = modTable.config[\"FMobs\"],    --Depraved Houndmaster\n        [165414] = modTable.config[\"FMobs\"],    --Depraved Obliterator\n        \n        [164563] = modTable.config[\"DMobs\"],    --Vicious Gargon\n        [165515] = modTable.config[\"DMobs\"],    --Depraved Darkblade\n        [167607] = modTable.config[\"DMobs\"],    --Stoneborn Slasher\n        [164557] = modTable.config[\"DMobs\"],    --Shard of Halkias\n        \n        [165529] = modTable.config[\"IMobs\"],    --Depraved Collector\n        [167612] = modTable.config[\"IMobs\"],    --Stoneborn Reaver\n        \n        [167611] = modTable.config[\"DoMobs\"],    --Stoneborn Eviscerator\n        \n        --Spires Of Ascension\n        [162059] = modTable.config[\"Boss\"],     --Kin-Tara\n        [163077] = modTable.config[\"Boss\"],     --Azules\n        [162058] = modTable.config[\"Boss\"],     --Ventunax\n        [162060] = modTable.config[\"Boss\"],     --Oryphrino\n        [167410] = modTable.config[\"Boss\"],     --Devos\n        \n        [168844] = modTable.config[\"MiniBoss\"],  --Lakesis\n        [168843] = modTable.config[\"MiniBoss\"],  --Klotos\n        [168845] = modTable.config[\"MiniBoss\"],  --Astronos\n        \n        [163458] = modTable.config[\"TMobs\"],   --Forsworn Castigator\n        [168418] = modTable.config[\"TMobs\"],   --Forsworn Inquisitor\n        [163520] = modTable.config[\"TMobs\"],   --Forsworn Squad-Leader\n        [168681] = modTable.config[\"TMobs\"],   --Forsworn Helion\n        \n        [163503] = modTable.config[\"DMobs\"],   --EtherDiver\n        [168658] = modTable.config[\"DMobs\"],   --Forsworn Devastator\n        [168717] = modTable.config[\"DMobs\"],   --Forsworn Justicar\n        \n        [168318] = modTable.config[\"IMobs\"],   --Forsworn Goliath\n        \n        [168420] = modTable.config[\"HMobs\"],   --Forsworn Champion\n        [163459] = modTable.config[\"HMobs\"],   --Forsworn Mender\n        [168718] = modTable.config[\"HMobs\"],   --Forsworn Warden\n        \n        --Sanguine Depths\n        [162103] = modTable.config[\"Boss\"],     --Executor Tarvold\n        [165318] = modTable.config[\"Boss\"],     --General Kaal\n        [162102] = modTable.config[\"Boss\"],     --Grand Proctor Beryllia\n        [162100] = modTable.config[\"Boss\"],     --Kryxis the Voracious\n        \n        [171376] = modTable.config[\"MiniBoss\"],    --Head Custodian Javlin\n        \n        [165076] = modTable.config[\"FMobs\"],    --Gluttonous Tick\n        [162040] = modTable.config[\"FMobs\"],    --Grand Overseer\n        [172265] = modTable.config[\"FMobs\"],   --Remnant of Fury\n        [168882] = modTable.config[\"FMobs\"],    --Fleeting Manifestation\n        \n        [162049] = modTable.config[\"DMobs\"],   --Vestige of Doubt\n        [171448] = modTable.config[\"DMobs\"],    --Dreadful Huntmaster\n        [166396] = modTable.config[\"DMobs\"],   --Noble Skirmisher\n        [166589] = modTable.config[\"DMobs\"],    --Animated Weapon\n        [171799] = modTable.config[\"DMobs\"],    --Depths Warden\n        [162047] = modTable.config[\"DMobs\"],    --Instiable Brute\n        \n        [162039] = modTable.config[\"IMobs\"],   --Wicked Oppressor\n        \n        [162057] = modTable.config[\"DoMobs\"],    --Chamber Sentinel\n        [162038] = modTable.config[\"DoMobs\"],   --Regal Mistdancer\n        \n        --Mist of Trina Scithe      \n        [164567] = modTable.config[\"Boss\"],     --ingra-maloch\n        [170217] = modTable.config[\"Boss\"],     --Mistcaller\n        [164517] = modTable.config[\"Boss\"],     --Tred'ova \n        \n        [164929] = modTable.config[\"FMobs\"],   --Tirnenn Villager\n        [164926] = modTable.config[\"FMobs\"],   --Drust Boughbreaker\n        \n        [166275] = modTable.config[\"DMobs\"],   --Mistveil Shaper\n        \n        [164920] = modTable.config[\"DMobs\"],   --Drust Soulcleaver\n        [166304] = modTable.config[\"DMobs\"],   --Mistveil Stinger\n        \n        [166299] = modTable.config[\"HMobs\"],   --Mistveil Tender\n        \n        [164921] = modTable.config[\"IMobs\"],   --Drust Harvester\n        [167111] = modTable.config[\"IMobs\"],   --Spinemaw Staghorn\n        \n        [167113] = modTable.config[\"DoMobs\"],   --Spinemaw Acidgullet \n        [166276] = modTable.config[\"DoMobs\"],   --Mistveil Guardian\n        \n        --Plaguefall    \n        [164967] = modTable.config[\"Boss\"],     --Doctor Ickus\n        [164266] = modTable.config[\"Boss\"],     --Domina Venomblade\n        [164255] = modTable.config[\"Boss\"],     --Globgrog\n        [164267] = modTable.config[\"Boss\"],     --Margrave Stradama\n        \n        [168886] = modTable.config[\"MiniBoss\"],  --Virulax Blightweaver\n        [169861] = modTable.config[\"MiniBoss\"],  --Ickor Bileflesh\n        \n        [164737] = modTable.config[\"FMobs\"],    --Brood Ambusher\n        [163915] = modTable.config[\"FMobs\"],    --Hatchling Nest\n        [168572] = modTable.config[\"FMobs\"],    --Fungi Stormer\n        [163891] = modTable.config[\"FMobs\"],    --Rotmarrow Slime\n        [168837] = modTable.config[\"FMobs\"],    --Stealthling\n        \n        [168578] = modTable.config[\"DMobs\"],    --FungalMancer\n        [168627] = modTable.config[\"DMobs\"],    --Plaguebinder\n        [167493] = modTable.config[\"DMobs\"],    --Venomous Sniper\n        [163882] = modTable.config[\"DMobs\"],    --Decaying Flesh Giant\n        [168310] = modTable.config[\"DMobs\"],    --Plagueroc\n        [165430] = modTable.config[\"DMobs\"],    --Malignant Spawn\n        \n        [168393] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [168396] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [163894] = modTable.config[\"DoMobs\"],   --Blighted Spinebreaker\n        \n        [169159] = modTable.config[\"ExMobs\"],   --Unstable Canister\n        [168878] = modTable.config[\"ExMobs\"],   --Rigged Plagueborer        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            elseif modTable.UseDefaultColor and not (unitFrame.namePlateUnitReaction == 4) and not unitIsPlayer and not unitFrame.namePlateIsQuestObjective then\n                Plater.SetNameplateColor(unitFrame, modTable.DefaultColor)\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n",
					},
					["Time"] = 1628712779,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/ocXXJPJZ7/6",
					["Enabled"] = false,
					["Revision"] = 236,
					["semver"] = "1.0.5",
					["Author"] = "Yummyyummy-Ravencrest",
					["Desc"] = "Colours the Nameplates according to the type of M+ mob. This is my version of M+ Colored Mobs, https://wago.io/UKpo0_GbE",
					["Prio"] = 98,
					["version"] = 6,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Colors Header",
							["Value"] = "Mythic+ Colours:",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Boss",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0.5843137254902, -- [3]
								1, -- [4]
							},
							["Key"] = "Boss",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "MiniBoss",
							["Value"] = {
								0.37647058823529, -- [1]
								0, -- [2]
								0.37647058823529, -- [3]
								1, -- [4]
							},
							["Key"] = "MiniBoss",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mini bosses",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Focus Mobs",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "FMobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that need to be focus.",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Deadly Mobs",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "DMobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that are considered Deadly.",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Dodge Mobs",
							["Value"] = {
								0.81176470588235, -- [1]
								0, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "DoMobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that are not considered deadly, but have ability's that need to be dogded.",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Healer Mobs",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "HMobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that have healing ability's that should be kicked,",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Interruptable Mobs",
							["Value"] = {
								1, -- [1]
								0.49803921568627, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "IMobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that have Interruptable spell that should be kicked.",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Enrage Mobs",
							["Value"] = {
								1, -- [1]
								0.63921568627451, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "EnMobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that enrage and should be calmed if possible.",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Expolsives Mobs",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.38039215686275, -- [3]
								1, -- [4]
							},
							["Key"] = "ExMobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that explode before or after death. WATCH OUT!!!",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "DefaultColor",
							["Value"] = {
								0.43921568627451, -- [1]
								0.43921568627451, -- [2]
								0.43921568627451, -- [3]
								1, -- [4]
							},
							["Key"] = "DefaultColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Target Color",
							["Value"] = {
								0.27058823529412, -- [1]
								0.50980392156863, -- [2]
								0.70196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "targetColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 9",
							["Value"] = 0,
							["Key"] = "option9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Addictional Options",
							["Value"] = "Addictional Options",
							["Key"] = "option22",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 4,
							["Name"] = "Use Target Color",
							["Value"] = false,
							["Key"] = "targetEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Raid Mark Colors",
							["Value"] = true,
							["Key"] = "raidMarkColors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 4,
							["Name"] = "Color Healthbar",
							["Value"] = false,
							["Key"] = "colorHealthbar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 4,
							["Name"] = "ThreatColors",
							["Value"] = false,
							["Key"] = "threatColors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
						}, -- [18]
						{
							["Type"] = 4,
							["Name"] = "Use Default Color",
							["Value"] = true,
							["Key"] = "UseDefaultColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [19]
					},
					["LastHookEdited"] = "",
					["Name"] = "M+ Colouring",
				}, -- [14]
				{
					["OptionsValues"] = {
						["cooldownColor"] = {
							1, -- [1]
							0.01960784383118153, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["interruptedColor"] = {
							1, -- [1]
							0.2823529541492462, -- [2]
							0.3568627536296845, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
					},
					["UID"] = "0x610c5b685dc84cc7",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1703700395,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 132219,
					["Enabled"] = true,
					["Revision"] = 485,
					["semver"] = "",
					["Author"] = "Verlijke-Mal'Ganis",
					["Desc"] = "Changes the color of the nameplate castbar based on the current cooldown of the player's interrupt.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Interrupt CD Indicator",
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Kick Ready Color",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "readyColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the cast bar when your kick is ready to be used.",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Kick Will Be Ready Color",
							["Value"] = {
								1, -- [1]
								0.5921568627451, -- [2]
								0.031372549019608, -- [3]
								1, -- [4]
							},
							["Key"] = "semiCooldownColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the cast bar when your kick is on cooldown, but will be ready before the cast ends.",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Kick Will NOT Be Ready",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.007843137254902, -- [3]
								1, -- [4]
							},
							["Key"] = "cooldownColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the cast bar when your kick is on cooldown, and will NOT be ready before the cast ends.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1000,
							["Desc"] = "Time in milliseconds that your kick should be off cooldown before cast end to count as \"kick will be ready\" (recommended to set to a few hundred ms above your latency).",
							["Min"] = 0,
							["Name"] = "Kick CD Tolerance (ms)",
							["Value"] = 500,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "cooldownTolerance",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Protected Cast Color",
							["Value"] = {
								0.74117647058824, -- [1]
								0.74901960784314, -- [2]
								0.73725490196078, -- [3]
								1, -- [4]
							},
							["Key"] = "protectedColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the cast bar for protected casts.",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Interrupted Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "interruptedColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the cast bar for interrupted casts.",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Castbar CD Line",
							["Value"] = true,
							["Key"] = "cooldownLine",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Draw a line on castbars indicating when your interrupt will be off-cooldown.",
						}, -- [7]
					},
					["LastHookEdited"] = "",
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["UID"] = "0x62229f65202d123",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1688801832,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/CignDPWs3/8",
					["Icon"] = 4224736,
					["Enabled"] = false,
					["Revision"] = 497,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Set Bar Color",
							["Value"] = true,
							["Key"] = "setColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust health bar colors?",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Set Name Color",
							["Value"] = false,
							["Key"] = "setNameColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust Name colors?",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Set Border Color",
							["Value"] = false,
							["Key"] = "setBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust Name colors?",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Vy Color",
							["Value"] = {
								0, -- [1]
								0.9921568627451, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "vyColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Urh Color",
							["Value"] = {
								0.63137254901961, -- [1]
								0.34901960784314, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "urhColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Wo Color",
							["Value"] = {
								0.33725490196078, -- [1]
								1, -- [2]
								0.42352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "woColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Divider",
							["Value"] = 0,
							["Key"] = "pog",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Set Name",
							["Value"] = true,
							["Key"] = "setName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust the NPC's Name?",
						}, -- [8]
						{
							["Type"] = 3,
							["Name"] = "Vy Name",
							["Value"] = "Vy (Haste)",
							["Key"] = "vyName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Urh Name",
							["Value"] = "Urh (CDR)",
							["Key"] = "urhName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 3,
							["Name"] = "Wo Name",
							["Value"] = "Wo (Stealth)",
							["Key"] = "woName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Divider 2",
							["Value"] = 0,
							["Key"] = "deez",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Name"] = "Set Bar Height",
							["Value"] = false,
							["Key"] = "setHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust the NPC's bar height?",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Bar Height",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "barHeight",
						}, -- [14]
						{
							["Type"] = 6,
							["Name"] = "Divider 2",
							["Value"] = 0,
							["Key"] = "deez",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Set Font Size",
							["Value"] = false,
							["Key"] = "setFontSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust the NPC's font size?",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Font Size",
							["Value"] = 20,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fontSize",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "Divider 2",
							["Value"] = 0,
							["Key"] = "deez",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "Divider 2",
							["Value"] = 0,
							["Key"] = "deez",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 4,
							["Name"] = "Set Bar Texture",
							["Value"] = false,
							["Key"] = "setTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust the NPC's bar texture?",
						}, -- [20]
						{
							["Type"] = 5,
							["Name"] = "Bar Warning",
							["Value"] = "*set texture path in \"Nameplate Updated\" hook. Default custom texture is PlaterFocus",
							["Key"] = "barWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "Divider 2",
							["Value"] = 0,
							["Key"] = "deez",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 4,
							["Name"] = "Set Bar Background Color",
							["Value"] = false,
							["Key"] = "setBackgroundColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Some bar textures (like PlaterFocus) Also show the background color, which you can set here.",
						}, -- [23]
						{
							["Type"] = 1,
							["Name"] = "Vy Background Color",
							["Value"] = {
								0, -- [1]
								0.098039215686275, -- [2]
								0.098039215686275, -- [3]
								1, -- [4]
							},
							["Key"] = "vyBGColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 1,
							["Name"] = "Urh Background Color",
							["Value"] = {
								0.043137254901961, -- [1]
								0, -- [2]
								0.098039215686275, -- [3]
								1, -- [4]
							},
							["Key"] = "urhBGColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Wo Background Color",
							["Value"] = {
								0, -- [1]
								0.098039215686275, -- [2]
								0.011764705882353, -- [3]
								1, -- [4]
							},
							["Key"] = "woBGColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Divider 2",
							["Value"] = 0,
							["Key"] = "deez",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Reload Warning",
							["Value"] = "Moving the sliders around too much can cause some temporary lag. To fix this simply reload your game after applying changes!",
							["Key"] = "reloadWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
					},
					["Author"] = "Ilrieth-Argent Dawn",
					["Desc"] = "modify Encrypted mobs' names and healthbar colors with custom values",
					["Prio"] = 99,
					["version"] = 8,
					["PlaterCore"] = 1,
					["semver"] = "1.0.7",
					["LastHookEdited"] = "",
					["Name"] = "Encrypted Names & Colors",
				}, -- [16]
				{
					["OptionsValues"] = {
						["color"] = {
							0.6274510025978088, -- [1]
							1, -- [2]
							0.7568628191947937, -- [3]
							1, -- [4]
						},
						["wrap"] = true,
						["size"] = 2.449691534042358,
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.TargetBorder) then\n        unitFrame.TargetBorder:Hide()\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local size = modTable.config.size\n    local color = modTable.config.color\n    \n    \n    if (not unitFrame.TargetBorder) then\n        unitFrame.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")    \n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            --ViragDevTool_AddData(unitFrame, 'frame')\n            --ViragDevTool_AddData(Plater.db.profile, \"db\")\n            local r, g, b, a = DetailsFramework:ParseColors (color)\n            unitFrame.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            \n            unitFrame.TargetBorder:SetBorderSizes (size, size, size, size)\n            \n            if modTable.config.wrap then\n                envTable.UpdateSize(unitFrame.TargetBorder)    \n            else    \n                unitFrame.TargetBorder:UpdateSizes()\n            end\n            \n            unitFrame.TargetBorder:Show()\n        else\n            unitFrame.TargetBorder:Hide()\n        end\n    end\n    \n    function envTable.UpdateSize(b)\n        local offset = Plater.db.profile.border_thickness\n        local borderSize = b.borderSize or 1\n        local minPixels = b.borderSizeMinPixels or 2\n        local upwardExtendHeightPixels = b.upwardExtendHeightPixels or borderSize\n        local upwardExtendHeightMinPixels = b.upwardExtendHeightMinPixels or minPixels\n        \n        PixelUtil.SetWidth(b.Left, size, minPixels)\n        PixelUtil.SetPoint(b.Left, \"TOPRIGHT\", b, \"TOPLEFT\", -offset, upwardExtendHeightPixels + offset, -offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Left, \"BOTTOMRIGHT\", b, \"BOTTOMLEFT\", -offset, -size - offset, -offset, minPixels - offset)\n        \n        PixelUtil.SetWidth(b.Right, size, minPixels)\n        PixelUtil.SetPoint(b.Right, \"TOPLEFT\", b, \"TOPRIGHT\", offset, upwardExtendHeightPixels + offset, offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Right, \"BOTTOMLEFT\", b, \"BOTTOMRIGHT\", offset, -size - offset, offset, minPixels - offset)\n        \n        PixelUtil.SetHeight(b.Bottom, size, minPixels)\n        PixelUtil.SetPoint(b.Bottom, \"TOPLEFT\", b, \"BOTTOMLEFT\", -offset, -offset)\n        PixelUtil.SetPoint(b.Bottom, \"TOPRIGHT\", b, \"BOTTOMRIGHT\", offset, -offset)\n        \n        if b.Top then\n            PixelUtil.SetHeight(b.Top, size, minPixels)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMLEFT\", b, \"TOPLEFT\", -offset, offset)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMRIGHT\", b, \"TOPRIGHT\", offset, -offset)\n        end\n    end\nend",
					},
					["Time"] = 1704186652,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/XR0IX1Suj/1",
					["Icon"] = 3573824,
					["Enabled"] = true,
					["Revision"] = 338,
					["semver"] = "1.0.0",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add an extra border to your current target. Options included to wrap the border on top of the already existing border.",
					["Prio"] = 99,
					["Name"] = "Wrapping Target Border",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Color",
							["Value"] = "Border",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 2,
							["Key"] = "size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "size",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Option 6",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 4,
							["Name"] = "Wrap border",
							["Value"] = true,
							["Key"] = "wrap",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Check this to place the border AROUND the default nameplate border instead of on top of it",
						}, -- [6]
					},
					["HooksTemp"] = {
					},
					["version"] = 1,
				}, -- [17]
			},
			["disable_omnicc_on_auras"] = true,
			["aura_width"] = 22,
			["pet_width_scale"] = 0.8499999642372131,
			["quick_hide"] = true,
			["target_highlight_color"] = {
				0.02745098248124123, -- [1]
				0.2745098173618317, -- [2]
			},
			["click_space"] = {
				125, -- [1]
			},
			["castbar_target_font"] = "PT Sans Narrow",
			["ui_parent_cast_level"] = 108,
			["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
			["cast_statusbar_texture"] = "Wglass",
			["cast_statusbar_spark_color"] = {
				nil, -- [1]
				0.13333333333333, -- [2]
				0.8, -- [3]
			},
			["pet_height_scale"] = 0.8499999642372131,
			["aura_x_offset"] = 0,
			["range_check_alpha_friendlies"] = 1,
			["stacking_nameplates_enabled"] = false,
			["health_selection_overlay_color"] = {
				0.3450980484485626, -- [1]
				0.3843137621879578, -- [2]
				0.3921568989753723, -- [3]
			},
			["ui_parent_scale_tune"] = 1.4099998474121,
			["profile_name"] = "Default",
			["health_statusbar_bgtexture"] = "Clean",
			["ui_parent_target_strata"] = "MEDIUM",
			["aura_show_enrage"] = true,
			["global_offset_x"] = -0.6000003814697266,
			["aura_tracker"] = {
				["buff_tracked"] = {
					["209859"] = true,
				},
				["debuff_banned"] = {
					["356329"] = false,
					["228354"] = false,
					["113724"] = false,
					["289308"] = false,
					["331934"] = false,
					["205708"] = false,
					["352939"] = false,
					["354050"] = false,
					["236299"] = true,
					["12486"] = false,
				},
				["buff_banned"] = {
					["206150"] = true,
					["333553"] = true,
					["61574"] = true,
					["61573"] = true,
				},
			},
			["castbar_target_show"] = true,
			["update_throttle"] = 0.1499999910593033,
			["tocversion"] = 100205,
			["castbar_icon_show"] = false,
			["global_offset_y"] = 4.430000305175781,
			["not_affecting_combat_alpha"] = 1,
			["indicator_raidmark_scale"] = 0.99999994039536,
			["target_shady_alpha"] = 0.3199999928474426,
			["target_highlight_height"] = 22,
			["aggro_can_check_notank"] = true,
			["version"] = 1,
			["target_highlight"] = false,
			["target_shady_enabled"] = false,
			["patch_version"] = 35,
			["range_check_in_range_or_target_alpha"] = 0.7999999523162842,
			["aura_timer_text_size"] = 12,
			["number_region_first_run"] = true,
			["color_override_colors"] = {
				[3] = {
					0, -- [1]
					0.1450980454683304, -- [2]
					1, -- [3]
				},
			},
			["health_animation_time_dilatation"] = 2.6199998855591,
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["health_statusbar_bgcolor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["range_check_enabled"] = false,
			["castbar_target_anchor"] = {
				["y"] = -8.94000244140625,
				["x"] = -3.170005798339844,
				["side"] = 10,
			},
			["dps"] = {
				["colors"] = {
					["solo"] = {
						0, -- [1]
						1, -- [2]
						0.011764705882353, -- [3]
					},
					["notontank"] = {
						0.960784375667572, -- [1]
						0.501960813999176, -- [2]
					},
					["aggro"] = {
						0.8666667342185974, -- [1]
						0.08627451211214066, -- [2]
						0.08627451211214066, -- [3]
					},
					["noaggro"] = {
						0, -- [1]
						0.250980406999588, -- [2]
					},
					["pulling"] = {
						nil, -- [1]
						0.2980392277240753, -- [2]
						0.168627455830574, -- [3]
					},
				},
			},
			["script_auto_imported"] = {
				["Aura - Buff Alert"] = 15,
				["Cast - Effect After Cast [P]"] = 2,
				["Explosion Affix M+"] = 14,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 2,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Tank Interrupt"] = 12,
				["Unit - Important"] = 11,
				["Cast - Very Important"] = 15,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Unit - Show Energy"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Cast - Circular Swipe"] = 4,
				["Cast - Shield Interrupt"] = 2,
				["Cast - Important Target [P]"] = 2,
				["Add - Explode on Die [P]"] = 1,
				["Auto Set Skull"] = 11,
				["Relics 9.2 M Dungeons"] = 2,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - Stop Casting"] = 4,
				["Countdown"] = 11,
				["Cast - On Going Cast [P]"] = 2,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Fixate"] = 11,
				["Spiteful Affix"] = 3,
				["Cast - Quick Flash"] = 2,
				["Cast - Glowing [P]"] = 10,
				["Fixate On You"] = 11,
			},
			["first_run3"] = true,
			["tank"] = {
				["colors"] = {
					["aggro"] = {
						1, -- [1]
						0.03529411926865578, -- [2]
						0, -- [3]
					},
					["noaggro"] = {
						0, -- [1]
						0.5058823823928833, -- [2]
						1, -- [3]
					},
					["nocombat"] = {
						0.05882353335618973, -- [1]
						1, -- [2]
					},
					["pulling"] = {
						nil, -- [1]
						0.4196078777313232, -- [2]
					},
				},
			},
			["aggro_modifies"] = {
				["actor_name_color"] = true,
			},
		},
		["Mage-MOD"] = {
			["target_shady_combat_only"] = false,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						398151, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1614608904,
					["Icon"] = 135945,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 188,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.50588235294118, -- [1]
								0.070588235294118, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254902, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "switchTargetName",
							["Value"] = true,
							["Name"] = "Show Target instead of Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "useTargetingColor",
							["Value"] = true,
							["Name"] = "Change Color if targeting You",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "targetingColor",
							["Value"] = {
								0.070588235294118, -- [1]
								0.61960784313725, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color if targeting You",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Name"] = "M+ Spiteful",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["url"] = "",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						392488, -- [21]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
						388923, -- [22]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Ultra Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Name"] = "Health Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						384194, -- [28]
						392451, -- [29]
						392924, -- [30]
						397889, -- [31]
						209413, -- [32]
						207980, -- [33]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1622577650,
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Enabled"] = false,
					["Revision"] = 64,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Auto Set Skull",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1628775244,
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 209,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Countdown",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["url"] = "",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						209495, -- [35]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Speed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1628775247,
					["Icon"] = 1029718,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 270,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Fixate [Plater]",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["url"] = "",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1622577644,
					["Icon"] = 136048,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 234,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Name"] = "add trigger",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Key"] = "fontSize",
							["Value"] = 16,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.80392156862745, -- [1]
								0.80392156862745, -- [2]
								0.80392156862745, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Name"] = "Unit - Show Energy [Plater]",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["url"] = "",
				}, -- [12]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1628775245,
					["url"] = "",
					["Icon"] = 841383,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["Revision"] = 267,
					["semver"] = "",
					["NpcNames"] = {
					},
					["Options"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["version"] = -1,
					["Prio"] = 99,
					["Name"] = "Fixate On You [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["Enabled"] = true,
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
					["OptionsValues"] = {
						["NameplateSizeOffset"] = 1.3500000238419,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
					["Time"] = 1648170127,
					["Icon"] = 2065634,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
					["NpcNames"] = {
					},
					["semver"] = "1.0.74",
					["Enabled"] = true,
					["Revision"] = 2918,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "ShowArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Key"] = "ArrowAlpha",
							["Value"] = 1,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Key"] = "GlowAlpha",
							["Value"] = 0.7,
							["Name"] = "Glow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 1,
							["Key"] = "NameplateSizeOffset",
							["Value"] = 1.25,
							["Name"] = "Nameplate Height Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
					["Name"] = "M+ Explosive [Fixed]",
					["Author"] = "Bombad£o-Azralon",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["version"] = 75,
					["Prio"] = 99,
					["SpellIds"] = {
						240446, -- [1]
						347363, -- [2]
						339415, -- [3]
						318406, -- [4]
						331223, -- [5]
						326607, -- [6]
						327885, -- [7]
						334625, -- [8]
						328016, -- [9]
						324527, -- [10]
						344005, -- [11]
						321999, -- [12]
						340219, -- [13]
						328986, -- [14]
						320576, -- [15]
						322358, -- [16]
						341445, -- [17]
						336451, -- [18]
						332672, -- [19]
						331398, -- [20]
						331379, -- [21]
						334664, -- [22]
						334967, -- [23]
						320230, -- [24]
						328146, -- [25]
						320631, -- [26]
						322493, -- [27]
						324372, -- [28]
						327240, -- [29]
						322939, -- [30]
						328756, -- [31]
						331745, -- [32]
						340304, -- [33]
						319685, -- [34]
						326827, -- [35]
						342481, -- [36]
						356548, -- [37]
						356537, -- [38]
						356407, -- [39]
						349987, -- [40]
						349663, -- [41]
						350090, -- [42]
						355782, -- [43]
						350922, -- [44]
						355438, -- [45]
						357404, -- [46]
						357189, -- [47]
						347150, -- [48]
						355057, -- [49]
						355139, -- [50]
						355429, -- [51]
						355584, -- [52]
						358131, -- [53]
						350517, -- [54]
						357260, -- [55]
						351119, -- [56]
						351646, -- [57]
						350180, -- [58]
						335783, -- [59]
						294533, -- [60]
						353782, -- [61]
						347855, -- [62]
						353769, -- [63]
						331935, -- [64]
						336383, -- [65]
						342160, -- [66]
						353742, -- [67]
						353444, -- [68]
						277039, -- [69]
						278192, -- [70]
						329909, -- [71]
						358328, -- [72]
						325632, -- [73]
						81008, -- [74]
						296355, -- [75]
						355224, -- [76]
						296839, -- [77]
						310392, -- [78]
						367380, -- [79]
						297966, -- [80]
						332002, -- [81]
						329904, -- [82]
						294517, -- [83]
						329423, -- [84]
						329905, -- [85]
						353124, -- [86]
						358270, -- [87]
						295985, -- [88]
						184381, -- [89]
						318995, -- [90]
						260344, -- [91]
						301952, -- [92]
						362820, -- [93]
						329930, -- [94]
						355212, -- [95]
						332165, -- [96]
						358327, -- [97]
						359770, -- [98]
						364040, -- [99]
						361644, -- [100]
						363088, -- [101]
						361989, -- [102]
						363024, -- [103]
						365008, -- [104]
						365805, -- [105]
						365958, -- [106]
						360717, -- [107]
						361923, -- [108]
						363533, -- [109]
						364386, -- [110]
						364114, -- [111]
						362028, -- [112]
						362617, -- [113]
						365385, -- [114]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
					["url"] = "https://wago.io/1TlaFYtDO/75",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
					["OptionsValues"] = {
						["customSize"] = {
							{
								"17", -- [1]
								"120, 16", -- [2]
							}, -- [1]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1628775232,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 283,
					["Options"] = {
						{
							["Type"] = 7,
							["Key"] = "customSize",
							["Value"] = {
								{
									"17", -- [1]
									"120, 16", -- [2]
								}, -- [1]
							},
							["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "",
							["Min"] = 5,
							["Key"] = "width",
							["Value"] = 120,
							["Name"] = "Cast Bar Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 5,
							["Key"] = "height",
							["Value"] = 16,
							["Name"] = "Cast Bar Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Set the size of the cast time",
							["Min"] = 8,
							["Key"] = "timerFontSize",
							["Value"] = 12,
							["Name"] = "Cast Timer Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option7",
							["Value"] = "Time Separators",
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "separatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.5992676615715, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "",
							["Min"] = 1,
							["Key"] = "separatorWidth",
							["Value"] = 1,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
					["Name"] = "Cast - Castbar is Timer [P]",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When a spell resembles more a timer than a spell being cast",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
						354080, -- [1]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
					["url"] = "",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Important Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Name"] = "Frame Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
						["timerList"] = {
							{
								"350421", -- [1]
								"5", -- [2]
							}, -- [1]
							{
								"355787", -- [1]
								"15", -- [2]
							}, -- [2]
							{
								"348513", -- [1]
								"14", -- [2]
							}, -- [3]
							{
								"348513", -- [1]
								"14", -- [2]
							}, -- [4]
						},
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1648647350,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 377,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Key"] = "timeleftToBlink",
							["Value"] = 3,
							["Name"] = "Timeleft to Blink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Key"] = "blinkSpeed",
							["Value"] = 1,
							["Name"] = "Blink Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Key"] = "blinkMaxAlpha",
							["Value"] = 0.6,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.28627450980392, -- [1]
								0.003921568627451, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Key"] = "timeLeftWarning",
							["Value"] = 8,
							["Name"] = "Time Left Warning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Key"] = "timeLeftCritical",
							["Value"] = 3,
							["Name"] = "Time Left Critical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.87058823529412, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.074509803921569, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["url"] = "",
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Effect After Cast [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1669340967,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 137,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "indicatorAlpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "fillAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Key"] = "skullScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Tag Number [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						360850, -- [10]
						212784, -- [11]
						199033, -- [12]
						199034, -- [13]
						200969, -- [14]
						394512, -- [15]
						397881, -- [16]
						396020, -- [17]
						374430, -- [18]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Quick Flash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura is Shield [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Warning [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["semver"] = "",
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura While Casting [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Non Elite Trash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Scale",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Circle AoE [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Name"] = "Rotation Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "rotationDuration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animStartDuration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Texture Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureScale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Stop Casting [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [33]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Explode on Die [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
				}, -- [34]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - On Going Cast [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots X Offset",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Dots Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Key"] = "speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Key"] = "minAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
				}, -- [35]
			},
			["pet_height_scale"] = 0.8499999642372131,
			["aura_x_offset"] = 0,
			["saved_cvars_last_change"] = {
				["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4537",
				["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13415",
				["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:184",
				["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:14010",
				["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6610",
				["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6549",
				["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:4535",
				["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:4536",
				["nameplateMotion"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6927",
				["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6548",
				["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6964",
				["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13414",
				["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6917",
				["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:180",
				["nameplateShowSelf"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:352: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:348>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:143: in function <Interface/SharedXML/CallbackRegistry.lua:142>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:146: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:301: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:300>\n",
				["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13440",
				["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:2932",
			},
			["url"] = "https://wago.io/RPHjubTGI/1",
			["health_selection_overlay_color"] = {
				0, -- [1]
				0.1372549086809158, -- [2]
				nil, -- [3]
				0, -- [4]
			},
			["hover_highlight"] = false,
			["spell_animations"] = false,
			["hover_highlight_alpha"] = 1,
			["indicator_raidmark_scale"] = 0.99999994039536,
			["cast_statusbar_spark_alpha"] = 0.8299999833107,
			["aura2_y_offset"] = 5,
			["health_statusbar_bgtexture"] = "Clean",
			["plate_config"] = {
				["global_health_height"] = 15,
				["friendlyplayer"] = {
					["cast"] = {
						121, -- [1]
					},
					["health_incombat"] = {
						121, -- [1]
						15, -- [2]
					},
					["health"] = {
						121, -- [1]
						15, -- [2]
					},
					["cast_incombat"] = {
						121, -- [1]
					},
					["actorname_use_class_color"] = true,
				},
				["friendlynpc"] = {
					["cast"] = {
						121, -- [1]
					},
					["actorname_text_spacing"] = 9,
					["health"] = {
						121, -- [1]
						15, -- [2]
					},
					["cast_incombat"] = {
						121, -- [1]
					},
					["health_incombat"] = {
						121, -- [1]
						15, -- [2]
					},
				},
				["global_health_width"] = 121,
				["enemyplayer"] = {
					["actorname_text_font"] = "PT Sans Narrow",
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellpercent_text_font"] = "PT Sans Narrow",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "PT Sans Narrow",
					["cast"] = {
						135, -- [1]
					},
					["all_names"] = true,
					["big_actortitle_text_size"] = 10,
					["actorname_text_outline"] = "OUTLINE",
					["percent_text_size"] = 10,
					["actorname_text_spacing"] = 11,
					["percent_text_font"] = "PT Sans Narrow",
					["cast_incombat"] = {
						135, -- [1]
						14, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["health_incombat"] = {
						121, -- [1]
						15, -- [2]
					},
					["quest_color_enabled"] = true,
					["spellname_text_size"] = 11,
					["health"] = {
						121, -- [1]
						15, -- [2]
					},
					["quest_enabled"] = true,
					["big_actorname_text_size"] = 10,
					["big_actorname_text_font"] = "PT Sans Narrow",
					["level_text_font"] = "PT Sans Narrow",
					["spellname_text_font"] = "PT Sans Narrow",
				},
				["enemynpc"] = {
					["actorname_text_font"] = "Bebas Neue Cyrillic Regular",
					["spellpercent_text_font"] = "PT Sans Narrow",
					["actorname_text_size"] = 10,
					["big_actortitle_text_font"] = "PT Sans Narrow",
					["cast"] = {
						135, -- [1]
					},
					["spellpercent_text_size"] = 12,
					["level_text_outline"] = "OUTLINE",
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["side"] = 1,
					},
					["percent_text_size"] = 8,
					["actorname_text_spacing"] = 9,
					["percent_text_font"] = "PT Sans Narrow",
					["cast_incombat"] = {
						135, -- [1]
					},
					["health_incombat"] = {
						135, -- [1]
						14, -- [2]
					},
					["health"] = {
						135, -- [1]
						14, -- [2]
					},
					["big_actorname_text_font"] = "PT Sans Narrow",
					["percent_text_anchor"] = {
						["y"] = 0.000885009765625,
						["x"] = -18.74000549316406,
					},
					["level_text_font"] = "PT Sans Narrow",
					["spellname_text_font"] = "PT Sans Narrow",
				},
			},
			["health_selection_overlay"] = "Smooth v2",
			["aura_y_offset"] = 5,
			["tank"] = {
				["colors"] = {
					["aggro"] = {
						0, -- [1]
						0.4117647409439087, -- [2]
					},
					["pulling"] = {
						0, -- [1]
						0.847058892250061, -- [2]
						1, -- [3]
					},
					["anothertank"] = {
						0.7058823704719543, -- [1]
						0, -- [2]
					},
				},
			},
			["health_statusbar_texture"] = "Clean",
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Execute Range"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Aura Reorder"] = 3,
				["Combo Points"] = 6,
				["Hide Neutral Units"] = 1,
				["Target Color"] = 3,
				["Attacking Specific Unit"] = 2,
				["Extra Border"] = 2,
			},
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.19607843137255, -- [1]
				0.050980392156863, -- [2]
				0.062745098039216, -- [3]
				1, -- [4]
			},
			["update_throttle"] = 0.1499999910593033,
			["hide_blizzard_castbar"] = true,
			["extra_icon_cooldown_reverse"] = false,
			["resources_settings"] = {
				["chr"] = {
					["Player-1307-0BE359D3"] = "ArcaneCharges",
					["Player-3682-0B038C9A"] = "ArcaneCharges",
					["Player-3682-0B19EC37"] = "Chi",
					["Player-3209-0B2C0A65"] = "Chi",
					["Player-3209-0B29D149"] = "ArcaneCharges",
					["Player-3209-0B4EDE3D"] = "HolyPower",
				},
			},
			["castbar_target_text_size"] = 8,
			["npc_cache"] = {
				[75829] = {
					"Nhallish", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[198716] = {
					"Unstable Storm", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184522] = {
					"Vigilant Custodian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186696] = {
					"Quaking Totem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[189893] = {
					"Infused Whelp", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[96609] = {
					"Gildedfur Stag", -- [1]
					"Halls of Valor", -- [2]
				},
				[194241] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190405] = {
					"Infuser Sariya", -- [1]
					"Halls of Infusion", -- [2]
				},
				[196671] = {
					"Arcane Ravager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[183500] = {
					"Thieveing Agent", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[184651] = {
					"Subjugator Zeltoth", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[74551] = {
					"Razorfen Beast Stalker", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[195265] = {
					"Stormcaller Arynga", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184140] = {
					"Xy Acolyte", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190406] = {
					"Aqualing", -- [1]
					"Halls of Infusion", -- [2]
				},
				[187593] = {
					"Primal Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[24664] = {
					"Kael'thas Sunstrider", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[195138] = {
					"Detonating Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[190407] = {
					"Aqua Rager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[95843] = {
					"King Haldor", -- [1]
					"Halls of Valor", -- [2]
				},
				[6206] = {
					"Caverndeep Burrower", -- [1]
					"Gnomeregan", -- [2]
				},
				[74552] = {
					"Razorfen Huntmaster", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[6218] = {
					"Irradiated Slime", -- [1]
					"Gnomeregan", -- [2]
				},
				[6222] = {
					"Leprous Technician", -- [1]
					"Gnomeregan", -- [2]
				},
				[6230] = {
					"Peacekeeper Security Suit", -- [1]
					"Gnomeregan", -- [2]
				},
				[6234] = {
					"Mechanized Guardian", -- [1]
					"Gnomeregan", -- [2]
				},
				[198081] = {
					"Quarry Earthshaper", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[96611] = {
					"Angerhoof Bull", -- [1]
					"Halls of Valor", -- [2]
				},
				[84399] = {
					"Vicious Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[194373] = {
					"Brackenhide Gnoll", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[76407] = {
					"Ner'zhul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[8440] = {
					"Avatar of Hakkar", -- [1]
					"Sunken Temple", -- [2]
				},
				[74553] = {
					"Blood-Branded Razorfen", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[199233] = {
					"Flamescale Captain", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196548] = {
					"Ancient Branch", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[5271] = {
					"Atal'ai Deathwalker", -- [1]
					"Sunken Temple", -- [2]
				},
				[75001] = {
					"Hunter Bonetusk", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[5283] = {
					"Nightmare Wanderer", -- [1]
					"Sunken Temple", -- [2]
				},
				[5291] = {
					"Hakkari Frostwing", -- [1]
					"Sunken Temple", -- [2]
				},
				[192329] = {
					"Territorial Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[55659] = {
					"Imp Gang Boss", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[83697] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[83761] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[184018] = {
					"Bromach", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[195399] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[184530] = {
					"Eternal Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[85232] = {
					"Infested Venomfang", -- [1]
					"The Everbloom", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[84401] = {
					"Swift Sproutling", -- [1]
					"The Everbloom", -- [2]
				},
				[196679] = {
					"Frozen Shroud", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184659] = {
					"Dominated Sentinel", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[83762] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[198214] = {
					"Broodguardian Ziruss", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184020] = {
					"Hulking Berserker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[197831] = {
					"Quarry Stonebreaker", -- [1]
					"UNKNOWN", -- [2]
				},
				[76090] = {
					"Blood-Branded Razorfen", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[24697] = {
					"Sister of Torment", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[170850] = {
					"Raging Bloodhorn", -- [1]
					"Theater of Pain", -- [2]
				},
				[24761] = {
					"Brightscale Wyrm", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[74620] = {
					"Battle Boar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[184022] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[189265] = {
					"Qalashi Bonetender", -- [1]
					"Neltharus", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[156913] = {
					"Decaying Corpse", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[196043] = {
					"Primalist Infuser", -- [1]
					"Halls of Infusion", -- [2]
				},
				[184023] = {
					"Vicious Basilisk", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[189266] = {
					"Qalashi Trainee", -- [1]
					"Neltharus", -- [2]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[75452] = {
					"Bonemaw", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[83764] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[190034] = {
					"Blazebound Destroyer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[83892] = {
					"Life Warden Gola", -- [1]
					"The Everbloom", -- [2]
				},
				[191313] = {
					"Bubbling Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[192464] = {
					"Raging Ember", -- [1]
					"Neltharus", -- [2]
				},
				[197835] = {
					"Kaurdyth", -- [1]
					"UNKNOWN", -- [2]
				},
				[194894] = {
					"Primalist Stormspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196045] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[75453] = {
					"Geomancer Acolyte", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[194895] = {
					"Unstable Squall", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[83765] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[157300] = {
					"Tunk", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[168681] = {
					"Forsworn Helion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[62982] = {
					"Mindbender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[82039] = {
					"Rockspine Stinger", -- [1]
					"The Everbloom", -- [2]
				},
				[194896] = {
					"Primal Stormshield", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[187224] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[196559] = {
					"Volatile Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[184539] = {
					"Automated Eliminator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[194897] = {
					"Stormsurge Totem", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[83894] = {
					"Dulhu", -- [1]
					"The Everbloom", -- [2]
				},
				[74751] = {
					"Solarshard Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[194898] = {
					"Primalist Arcblade", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[24698] = {
					"Ethereum Smuggler", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24762] = {
					"Sunblade Keeper", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[181856] = {
					"Point Defense Drone", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[5711] = {
					"Ogom the Wretched", -- [1]
					"Sunken Temple", -- [2]
				},
				[5719] = {
					"Morphaz", -- [1]
					"Sunken Temple", -- [2]
				},
				[143622] = {
					"Wild Imp", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[59051] = {
					"Strife", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[194389] = {
					"Lava Spawn", -- [1]
					"Neltharus", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[174569] = {
					"Training Dummy", -- [1]
					"The Shadowlands", -- [2]
				},
				[89011] = {
					"Rylak Skyterror", -- [1]
					"Iron Docks", -- [2]
				},
				[186206] = {
					"Cruel Bonecrusher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190426] = {
					"Decay Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[189531] = {
					"Decayed Elder", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[105699] = {
					"Mana Saber", -- [1]
					"Court of Stars", -- [2]
				},
				[151041] = {
					"Etruvis the Vassal", -- [1]
					"Crucible of Storms", -- [2]
				},
				[181859] = {
					"Volatile Materium", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[7849] = {
					"Mobile Alert System", -- [1]
					"Gnomeregan", -- [2]
				},
				[183138] = {
					"Inchoate Shadow", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[194647] = {
					"Thunder Caller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165108] = {
					"Illusionary Clone", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[82682] = {
					"Archmage Sol", -- [1]
					"The Everbloom", -- [2]
				},
				[97068] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[186208] = {
					"Rotbow Stalker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[196694] = {
					"Arcane Forager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[195927] = {
					"Soulharvester Galtmaa", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[199124] = {
					"Primalist Chillblaster", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[181861] = {
					"Magmatusk", -- [1]
					"Neltharus", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[195928] = {
					"Soulharvester Duuren", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190174] = {
					"Hypnosis Bat", -- [1]
					"Court of Stars", -- [2]
				},
				[186338] = {
					"Maruuk", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196696] = {
					"Geode Chunk", -- [1]
					"The Azure Vault", -- [2]
				},
				[190686] = {
					"Frozen Destroyer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[195929] = {
					"Soulharvester Tumen", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[24683] = {
					"Sunblade Mage Guard", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[186339] = {
					"Teera", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[183398] = {
					"Ancient Sentinel", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[195930] = {
					"Soulharvester Mandakh", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[104295] = {
					"Blazing Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[75715] = {
					"Reanimated Ritual Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[193373] = {
					"Nokhud Thunderfist", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184422] = {
					"Emberon", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[74948] = {
					"Roogug", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[185574] = {
					"Dominated Saboteur", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[75588] = {
					"Grotto Toad", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[3527] = {
					"Healing Stream Totem", -- [1]
					"Sunken Temple", -- [2]
				},
				[84028] = {
					"Siegemaster Rokra", -- [1]
					"Iron Docks", -- [2]
				},
				[190690] = {
					"Thundering Ravager", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[105703] = {
					"Mana Wyrm", -- [1]
					"Court of Stars", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[187238] = {
					"Witherling", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[192481] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[193760] = {
					"Surging Ruiner", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[62858] = {
					"Beast", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[81983] = {
					"Verdant Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[189669] = {
					"Binding Spear", -- [1]
					"Neltharus", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[187240] = {
					"Drakonid Breaker", -- [1]
					"The Azure Vault", -- [2]
				},
				[183404] = {
					"Eternal Assembler", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[197982] = {
					"Storm Warrior", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[75590] = {
					"Enormous Bullfrog", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[84989] = {
					"Infested Icecaller", -- [1]
					"The Everbloom", -- [2]
				},
				[196576] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[198878] = {
					"Primalist Tempestmaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[105705] = {
					"Bound Energy", -- [1]
					"Court of Stars", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[191206] = {
					"Primalist Mage", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187242] = {
					"Tarasek Looter", -- [1]
					"The Azure Vault", -- [2]
				},
				[196577] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[59726] = {
					"Peril", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[6207] = {
					"Caverndeep Ambusher", -- [1]
					"Gnomeregan", -- [2]
				},
				[6211] = {
					"Caverndeep Reaver", -- [1]
					"Gnomeregan", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[6219] = {
					"Corrosive Lurker", -- [1]
					"Gnomeregan", -- [2]
				},
				[6223] = {
					"Leprous Defender", -- [1]
					"Gnomeregan", -- [2]
				},
				[81985] = {
					"Everbloom Tender", -- [1]
					"The Everbloom", -- [2]
				},
				[6235] = {
					"Electrocutioner 6000", -- [1]
					"Gnomeregan", -- [2]
				},
				[197985] = {
					"Flame Channeler", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[15547] = {
					"Spectral Charger", -- [1]
					"Karazhan", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[184303] = {
					"Skittering Crawler", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[185582] = {
					"Eternal Assembler", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[197219] = {
					"Vile Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[5280] = {
					"Nightmare Wyrmkin", -- [1]
					"Sunken Temple", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[190187] = {
					"Draconic Image", -- [1]
					"The Azure Vault", -- [2]
				},
				[187246] = {
					"Nullmagic Hornswog", -- [1]
					"The Azure Vault", -- [2]
				},
				[196581] = {
					"White Tiger Statue", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[98035] = {
					"Dreadstalker", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[198500] = {
					"Council Earthcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[200035] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[76105] = {
					"Crystalfire Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[198501] = {
					"Council Icecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[156814] = {
					"Gor'groth", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[186737] = {
					"Telash Greywing", -- [1]
					"The Azure Vault", -- [2]
				},
				[24557] = {
					"Kagani Nightstrike", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[196200] = {
					"Algeth'ar Echoknight", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[107435] = {
					"Suspicious Noble", -- [1]
					"Court of Stars", -- [2]
				},
				[198502] = {
					"Council Stormcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196712] = {
					"Nullification Device", -- [1]
					"Halls of Infusion", -- [2]
				},
				[186738] = {
					"Umbrelskul", -- [1]
					"The Azure Vault", -- [2]
				},
				[24685] = {
					"Sunblade Magister", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[198503] = {
					"Council Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[99891] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[75467] = {
					"Cave Bat", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[184693] = {
					"Living Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[4421] = {
					"Charlga Razorflank", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[196202] = {
					"Spectral Invoker", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[191215] = {
					"Tarasek Legionnaire", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[186740] = {
					"Arcane Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[76107] = {
					"Solarshard Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[196203] = {
					"Ethereal Restorer", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[19874] = {
					"Baron Rafe Dreuger", -- [1]
					"Karazhan", -- [2]
				},
				[195820] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[186741] = {
					"Arcane Elemental", -- [1]
					"The Azure Vault", -- [2]
				},
				[182777] = {
					"Rygelon", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189299] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[195821] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[182778] = {
					"Collapsing Quasar", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[75149] = {
					"Aggem Thorncurse", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[181244] = {
					"Domination Core", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186615] = {
					"The Raging Tempest", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[36296] = {
					"Apothecary Hummel", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[156821] = {
					"Darkmaul Shadowcaller", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[186616] = {
					"Granyth", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[187767] = {
					"Embar Firepath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184954] = {
					"Ancient Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[95674] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[195696] = {
					"Primalist Thunderbeast", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[199916] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[187768] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[97081] = {
					"King Bjorn", -- [1]
					"Halls of Valor", -- [2]
				},
				[83846] = {
					"Yalnu", -- [1]
					"The Everbloom", -- [2]
				},
				[16406] = {
					"Phantom Attendant", -- [1]
					"Karazhan", -- [2]
				},
				[195697] = {
					"Thunderbeast Rider", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[187897] = {
					"Defier Draghar", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[89] = {
					"Infernal", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[191222] = {
					"Juvenile Frost Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[84550] = {
					"Xeri'tac", -- [1]
					"The Everbloom", -- [2]
				},
				[189816] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[81737] = {
					"Unchecked Growth", -- [1]
					"The Everbloom", -- [2]
				},
				[188026] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[5720] = {
					"Weaver", -- [1]
					"Sunken Temple", -- [2]
				},
				[77006] = {
					"Corpse Skitterling", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[187771] = {
					"Kadros Icewrath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[75152] = {
					"Death Speaker Jargba", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[95676] = {
					"Odyn", -- [1]
					"Halls of Valor", -- [2]
				},
				[19875] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Karazhan", -- [2]
				},
				[184319] = {
					"Refti Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[191736] = {
					"Crawth", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[187772] = {
					"Opalfang", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[97083] = {
					"King Ranulf", -- [1]
					"Halls of Valor", -- [2]
				},
				[26125] = {
					"Pebblestalker", -- [1]
					"Sunken Temple", -- [2]
				},
				[190586] = {
					"Earth Breaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[200944] = {
					"Nokhud Fighter", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[24207] = {
					"Army of the Dead", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[84552] = {
					"Toxic Spiderling", -- [1]
					"The Everbloom", -- [2]
				},
				[192761] = {
					"Iskakx", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199027] = {
					"Magmas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[97084] = {
					"King Tor", -- [1]
					"Halls of Valor", -- [2]
				},
				[184961] = {
					"Gnarled Skitter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190588] = {
					"Tectonic Crusher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191739] = {
					"Scalebane Lieutenant", -- [1]
					"The Azure Vault", -- [2]
				},
				[199028] = {
					"Glacias", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[190205] = {
					"Scorchling", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[97788] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[185346] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[196855] = {
					"Braekkas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199029] = {
					"Cyclas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104246] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[16407] = {
					"Spectral Servant", -- [1]
					"Karazhan", -- [2]
				},
				[186242] = {
					"Skulking Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[185347] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[192764] = {
					"Flame Guardian", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199030] = {
					"Loamas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[96574] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Valor", -- [2]
				},
				[198263] = {
					"Stalwart Broodwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191230] = {
					"Dragonspawn Flamebender", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[84554] = {
					"Venom-Crazed Pale Hulk", -- [1]
					"The Everbloom", -- [2]
				},
				[188673] = {
					"Smoldering Colossus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[186116] = {
					"Gutshot", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[195579] = {
					"Primal Gust", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[74900] = {
					"Kraulshaper Tukaar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[184582] = {
					"Eric \"The Swift\"", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[191232] = {
					"Drakonid Stormbringer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[19876] = {
					"Lord Robin Daris", -- [1]
					"Karazhan", -- [2]
				},
				[195580] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[192767] = {
					"Primal Icebulk", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[97087] = {
					"Valarjar Champion", -- [1]
					"Halls of Valor", -- [2]
				},
				[198266] = {
					"Pouncing Broodswarmer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[186246] = {
					"Fleshripper Vulture", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[185607] = {
					"Lost Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[7079] = {
					"Viscous Fallout", -- [1]
					"Gnomeregan", -- [2]
				},
				[192769] = {
					"Thondrozus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[186120] = {
					"Treemouth", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190340] = {
					"Refti Defender", -- [1]
					"Halls of Infusion", -- [2]
				},
				[167962] = {
					"Defunct Dental Drill", -- [1]
					"De Other Side", -- [2]
				},
				[194816] = {
					"Forgewrought Monstrosity", -- [1]
					"Neltharus", -- [2]
				},
				[130272] = {
					"Constrictor Vine", -- [1]
					"Maraudon", -- [2]
				},
				[186229] = {
					"Wilted Oak", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[19668] = {
					"Sha Beast", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[189318] = {
					"Infected Bear", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[184331] = {
					"Infinite Timereaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[184535] = {
					"Overthrown Artisan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[199037] = {
					"Primalist Shocktrooper", -- [1]
					"Halls of Infusion", -- [2]
				},
				[198142] = {
					"Quarry Earthshaper", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[185800] = {
					"Níõhöggr", -- [1]
					"Court of Stars", -- [2]
				},
				[186122] = {
					"Rira Hackclaw", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190342] = {
					"Containment Apparatus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[24744] = {
					"Vexallus", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[144754] = {
					"Fa'thuul the Feared", -- [1]
					"Crucible of Storms", -- [2]
				},
				[130273] = {
					"Celebrian Dryad", -- [1]
					"Maraudon", -- [2]
				},
				[24688] = {
					"Wretched Skulker", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[184972] = {
					"Eranog", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[197697] = {
					"Flamegullet", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[6066] = {
					"Earthgrab Totem", -- [1]
					"Sunken Temple", -- [2]
				},
				[157328] = {
					"Darkmaul Channeler", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[24553] = {
					"Apoko", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[195842] = {
					"Ukhel Corruptor", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[24560] = {
					"Priestess Delrissa", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[6212] = {
					"Dark Iron Agent", -- [1]
					"Gnomeregan", -- [2]
				},
				[17007] = {
					"Lady Keira Berrybuck", -- [1]
					"Karazhan", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[196482] = {
					"Overgrown Ancient", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[24686] = {
					"Sunblade Warlock", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[6232] = {
					"Arcane Nullifier X-21", -- [1]
					"Gnomeregan", -- [2]
				},
				[94960] = {
					"Hymdall", -- [1]
					"Halls of Valor", -- [2]
				},
				[130274] = {
					"Creeping Sludge", -- [1]
					"Maraudon", -- [2]
				},
				[75096] = {
					"Crystalline Aberration", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[194181] = {
					"Vexamus", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[186125] = {
					"Tricktotem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190345] = {
					"Primalist Geomancer", -- [1]
					"Halls of Infusion", -- [2]
				},
				[184335] = {
					"Infinite Agent", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[24556] = {
					"Zelfan", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[187139] = {
					"Crystal Thrasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[190404] = {
					"Subterranean Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[199353] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163492] = {
					"Rabid Wolf", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[97219] = {
					"Solsten", -- [1]
					"Halls of Valor", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[5273] = {
					"Atal'ai High Priest", -- [1]
					"Sunken Temple", -- [2]
				},
				[5277] = {
					"Nightmare Scalebane", -- [1]
					"Sunken Temple", -- [2]
				},
				[130275] = {
					"Sister of Celebras", -- [1]
					"Maraudon", -- [2]
				},
				[75097] = {
					"Crystalline Shard", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[24777] = {
					"Sunblade Sentinel", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[104217] = {
					"Talixae Flamewreath", -- [1]
					"Court of Stars", -- [2]
				},
				[74554] = {
					"Razorfen Scarblade", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[171396] = {
					"Kyrian Goliath", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[99868] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[181011] = {
					"Ancient Guardian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[96640] = {
					"Valarjar Marksman", -- [1]
					"Halls of Valor", -- [2]
				},
				[196102] = {
					"Conjured Lasher", -- [1]
					"Darkmoon Faire", -- [2]
				},
				[185181] = {
					"Automated Eliminator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[191243] = {
					"Wild Lasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[197509] = {
					"Primal Thundercloud", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[69791] = {
					"Akulakhan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[163111] = {
					"Magistrate Solomon", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[76057] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[183501] = {
					"Artificer Xy'mox", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[183499] = {
					"Hired Muscle", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[184533] = {
					"Overthrown Protector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[188252] = {
					"Melidrussa Chillworn", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[97197] = {
					"Valarjar Purifier", -- [1]
					"Halls of Valor", -- [2]
				},
				[181398] = {
					"Mal'Ganis", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[17252] = {
					"Shaadhun", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[187894] = {
					"Infused Whelp", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[24561] = {
					"Yazzai", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[184301] = {
					"Cavern Seeker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[193291] = {
					"Apex Blazewing", -- [1]
					"Neltharus", -- [2]
				},
				[63508] = {
					"Xuen", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[185363] = {
					"Manifestor Krugan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[181399] = {
					"Kin'tessa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[200126] = {
					"Fallen Waterspeaker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[24689] = {
					"Wretched Bruiser", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[186107] = {
					"Vault Keeper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[194315] = {
					"Stormcaller Solongo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189555] = {
					"Astral Attendant", -- [1]
					"The Azure Vault", -- [2]
				},
				[201155] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[181850] = {
					"Pre-Fabricated Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[192781] = {
					"Ore Elemental", -- [1]
					"Neltharus", -- [2]
				},
				[190206] = {
					"Primalist Flamedancer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[181395] = {
					"Skolex", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[74652] = {
					"Razorfen Thornbolt", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[194316] = {
					"Stormcaller Zarii", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[69792] = {
					"Akulakhan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[83028] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[184828] = {
					"Winged Soul Eater", -- [1]
					"Path of the Primus", -- [2]
				},
				[195851] = {
					"Ukhel Deathspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184962] = {
					"Gnarled Scavenger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[200137] = {
					"Depraved Mistweaver", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[200388] = {
					"Malformed Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[194317] = {
					"Stormcaller Boroo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[84499] = {
					"Entanglement", -- [1]
					"The Everbloom", -- [2]
				},
				[187638] = {
					"Flamescale Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190609] = {
					"Echo of Doragosa", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[185155] = {
					"Overthrown Protector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[191225] = {
					"Tarasek Earthreaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[192955] = {
					"Draconic Illusion", -- [1]
					"The Azure Vault", -- [2]
				},
				[199368] = {
					"Hardened Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[189247] = {
					"Tamed Phoenix", -- [1]
					"Neltharus", -- [2]
				},
				[104822] = {
					"Flame of Woe", -- [1]
					"Halls of Valor", -- [2]
				},
				[184600] = {
					"Llarondus", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[185154] = {
					"Mal'Ganis", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[76444] = {
					"Subjugated Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[36272] = {
					"Apothecary Frye", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[7603] = {
					"Leprous Assistant", -- [1]
					"Gnomeregan", -- [2]
				},
				[102019] = {
					"Stormforged Obliterator", -- [1]
					"Halls of Valor", -- [2]
				},
				[74462] = {
					"Warlord Ramtusk", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[190207] = {
					"Primalist Cinderweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[95675] = {
					"God-King Skovald", -- [1]
					"Halls of Valor", -- [2]
				},
				[187159] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[193553] = {
					"Nokhud Warhound", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[55869] = {
					"Alizabal", -- [1]
					"Baradin Hold", -- [2]
				},
				[84990] = {
					"Addled Arcanomancer", -- [1]
					"The Everbloom", -- [2]
				},
				[192786] = {
					"Qalashi Plunderer", -- [1]
					"Neltharus", -- [2]
				},
				[183707] = {
					"Xy Spellslinger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[200936] = {
					"Living Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184986] = {
					"Kurog Grimtotem", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[182045] = {
					"Necrotic Ritualist", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[86547] = {
					"Venom Sprayer", -- [1]
					"The Everbloom", -- [2]
				},
				[190485] = {
					"Erkhart Stormvein", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[184603] = {
					"Ancient Bufonid", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[192787] = {
					"Qalashi Spinecrusher", -- [1]
					"Neltharus", -- [2]
				},
				[417] = {
					"Phuutom", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[187033] = {
					"Stinkbreath", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[16410] = {
					"Spectral Retainer", -- [1]
					"Karazhan", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[193555] = {
					"Nokhud Villager", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[101637] = {
					"Valarjar Aspirant", -- [1]
					"Halls of Valor", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[24690] = {
					"Wretched Husk", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[81305] = {
					"Fleshrender Nok'gar", -- [1]
					"Iron Docks", -- [2]
				},
				[189464] = {
					"Qalashi Irontorch", -- [1]
					"Neltharus", -- [2]
				},
				[190359] = {
					"Skulking Zealot", -- [1]
					"Halls of Infusion", -- [2]
				},
				[191510] = {
					"Smoldering Hellion", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[76446] = {
					"Shadowmoon Dominator", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[192789] = {
					"Nokhud Longbow", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184733] = {
					"Dominated Grunt", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[191847] = {
					"Nokhud Plainstomper", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[13456] = {
					"Noxxion's Spawn", -- [1]
					"Maraudon", -- [2]
				},
				[5709] = {
					"Shade of Eranikus", -- [1]
					"Sunken Temple", -- [2]
				},
				[194487] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[2630] = {
					"Earthbind Totem", -- [1]
					"Sunken Temple", -- [2]
				},
				[5721] = {
					"Dreamscythe", -- [1]
					"Sunken Temple", -- [2]
				},
				[112668] = {
					"Infernal Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[184734] = {
					"Sacred Matrix Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[196115] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[199182] = {
					"Jumping Spiderling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[183745] = {
					"Guardian Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189466] = {
					"Irontorch Commander", -- [1]
					"Neltharus", -- [2]
				},
				[193558] = {
					"Primalist Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104218] = {
					"Advisor Melandrus", -- [1]
					"Court of Stars", -- [2]
				},
				[192791] = {
					"Nokhud Warspear", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184735] = {
					"Degeneration Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[196116] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[194147] = {
					"Volcanius", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[56350] = {
					"Disciple of Hate", -- [1]
					"Baradin Hold", -- [2]
				},
				[189467] = {
					"Qalashi Bonesplitter", -- [1]
					"Neltharus", -- [2]
				},
				[80875] = {
					"Bombsquad", -- [1]
					"Iron Docks", -- [2]
				},
				[200945] = {
					"Nokhud Warmonger", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[101639] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[196117] = {
					"Crystal Thrasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[183202] = {
					"Mawsworn Warden", -- [1]
					"Path of the Primus", -- [2]
				},
				[189340] = {
					"Chargath, Bane of Scales", -- [1]
					"Neltharus", -- [2]
				},
				[190923] = {
					"Zephyrling", -- [1]
					"Halls of Infusion", -- [2]
				},
				[7800] = {
					"Mekgineer Thermaplugg", -- [1]
					"Gnomeregan", -- [2]
				},
				[193944] = {
					"Qalashi Lavamancer", -- [1]
					"Neltharus", -- [2]
				},
				[184737] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180773] = {
					"Vigilant Guardian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[81819] = {
					"Everbloom Naturalist", -- [1]
					"The Everbloom", -- [2]
				},
				[193462] = {
					"Batak", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190484] = {
					"Kyrakka", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[192794] = {
					"Nokhud Beastmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190348] = {
					"Primalist Ravager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[201560] = {
					"Primalist Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[7915] = {
					"Walking Bomb", -- [1]
					"Gnomeregan", -- [2]
				},
				[197398] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[189470] = {
					"Lava Flare", -- [1]
					"Neltharus", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[188244] = {
					"Primal Juggernaut", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[184126] = {
					"Defense Matrix Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[156825] = {
					"Darkmaul Centurion", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[81820] = {
					"Everbloom Mender", -- [1]
					"The Everbloom", -- [2]
				},
				[16411] = {
					"Spectral Chef", -- [1]
					"Karazhan", -- [2]
				},
				[190366] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[189471] = {
					"Qalashi Blacksmith", -- [1]
					"Neltharus", -- [2]
				},
				[194330] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[192796] = {
					"Nokhud Hornsounder", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[186658] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[189722] = {
					"Gulping Goliath", -- [1]
					"Halls of Infusion", -- [2]
				},
				[189472] = {
					"Qalashi Lavabearer", -- [1]
					"Neltharus", -- [2]
				},
				[24723] = {
					"Selin Fireheart", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[183206] = {
					"Winged Soul Eater", -- [1]
					"Path of the Primus", -- [2]
				},
				[182311] = {
					"Pre-Fabricated Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[185508] = {
					"Claw Fighter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[191311] = {
					"Infinite Whelp", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[190294] = {
					"Nokhud Stormcaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197145] = {
					"Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[75247] = {
					"Groyat, the Blind Hunter", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[198424] = {
					"Primalist Frostsculptor", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190368] = {
					"Flamecaller Aymi", -- [1]
					"Halls of Infusion", -- [2]
				},
				[190496] = {
					"Terros", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[189729] = {
					"Primal Tsunami", -- [1]
					"Halls of Infusion", -- [2]
				},
				[184742] = {
					"Dominated Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[197146] = {
					"Qalashi Emissary", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[188067] = {
					"Flashfrost Chillweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[180906] = {
					"Halondrus", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186739] = {
					"Azureblade", -- [1]
					"The Azure Vault", -- [2]
				},
				[187154] = {
					"Unstable Curator", -- [1]
					"The Azure Vault", -- [2]
				},
				[83612] = {
					"Skulloc", -- [1]
					"Iron Docks", -- [2]
				},
				[181546] = {
					"Prototype of Renewal", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[86809] = {
					"Grom'kar Incinerator", -- [1]
					"Iron Docks", -- [2]
				},
				[197147] = {
					"Qalashi Honor Guard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184132] = {
					"Earthen Warder", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[97369] = {
					"Liquid Magma Totem", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190370] = {
					"Squallbringer Cyraz", -- [1]
					"Halls of Infusion", -- [2]
				},
				[189719] = {
					"Watcher Irideus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[16414] = {
					"Ghostly Steward", -- [1]
					"Karazhan", -- [2]
				},
				[192800] = {
					"Nokhud Lancemaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184300] = {
					"Ebonstone Golem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[197148] = {
					"Qalashi Lavabearer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[81984] = {
					"Gnarlroot", -- [1]
					"The Everbloom", -- [2]
				},
				[186151] = {
					"Balakar Khan", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190371] = {
					"Primalist Earthshaker", -- [1]
					"Halls of Infusion", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[75429] = {
					"Quilboar Mealtender", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[181548] = {
					"Prototype of Absolution", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[74534] = {
					"Crystalline Behemoth", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[197149] = {
					"Qalashi Lavamancer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187155] = {
					"Rune Seal Keeper", -- [1]
					"The Azure Vault", -- [2]
				},
				[135002] = {
					"Demonic Tyrant", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190688] = {
					"Blazing Fiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[13282] = {
					"Noxxion", -- [1]
					"Maraudon", -- [2]
				},
				[186664] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[181549] = {
					"Prototype of War", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[12218] = {
					"Vile Larva", -- [1]
					"Maraudon", -- [2]
				},
				[75110] = {
					"Razorfen Torchbearer", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[184107] = {
					"Runic Protector", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[197406] = {
					"Aggravated Skitterfly", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[190373] = {
					"Primalist Galesinger", -- [1]
					"Halls of Infusion", -- [2]
				},
				[12258] = {
					"Razorlash", -- [1]
					"Maraudon", -- [2]
				},
				[189478] = {
					"Forgemaster Gorek", -- [1]
					"Neltharus", -- [2]
				},
				[192803] = {
					"War Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184581] = {
					"Baelog", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[16412] = {
					"Ghostly Baker", -- [1]
					"Karazhan", -- [2]
				},
				[197535] = {
					"High Channeler Ryvati", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[190245] = {
					"Broodkeeper Diurna", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184019] = {
					"Burly Rock-Thrower", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[181551] = {
					"Prototype of Duty", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[198047] = {
					"Tempest Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[193293] = {
					"Qalashi Warden", -- [1]
					"Neltharus", -- [2]
				},
				[192788] = {
					"Qalashi Thaumaturge", -- [1]
					"Neltharus", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[194467] = {
					"Brackenhide Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[193572] = {
					"Nokhud Warsmith", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[86684] = {
					"Feral Lasher", -- [1]
					"The Everbloom", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[195119] = {
					"Primalist Shockcaster", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[6225] = {
					"Mechano-Tank", -- [1]
					"Gnomeregan", -- [2]
				},
				[196642] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[6233] = {
					"Mechanized Sentry", -- [1]
					"Gnomeregan", -- [2]
				},
				[195875] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[192934] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[36565] = {
					"Apothecary Baxter", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[190377] = {
					"Primalist Icecaller", -- [1]
					"Halls of Infusion", -- [2]
				},
				[75437] = {
					"Quilboar Broodmentor", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[194469] = {
					"Fledgling Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[61245] = {
					"Capacitor Totem", -- [1]
					"Sunken Temple", -- [2]
				},
				[83616] = {
					"Zoggosh", -- [1]
					"Iron Docks", -- [2]
				},
				[184623] = {
					"Ancient Avian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[84767] = {
					"Twisted Abomination", -- [1]
					"The Everbloom", -- [2]
				},
				[95061] = {
					"Greater Fire Elemental", -- [1]
					"Sunken Temple", -- [2]
				},
				[95833] = {
					"Hyrja", -- [1]
					"Halls of Valor", -- [2]
				},
				[189227] = {
					"Qalashi Hunter", -- [1]
					"Neltharus", -- [2]
				},
				[166262] = {
					"Decaying Corpse", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[5270] = {
					"Atal'ai Corpse Eater", -- [1]
					"Sunken Temple", -- [2]
				},
				[192680] = {
					"Guardian Sentry", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[195877] = {
					"Risen Mystic", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197857] = {
					"Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[184880] = {
					"Dominated Disrupter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[15687] = {
					"Moroes", -- [1]
					"Karazhan", -- [2]
				},
				[185008] = {
					"Volatile Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[16415] = {
					"Skeletal Waiter", -- [1]
					"Karazhan", -- [2]
				},
				[196645] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[6329] = {
					"Irradiated Pillager", -- [1]
					"Gnomeregan", -- [2]
				},
				[195878] = {
					"Ukhel Beastcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[194273] = {
					"Witherling", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[198308] = {
					"Frostwrought Dominator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[186284] = {
					"Gutchewer Bear", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[76089] = {
					"Razorfen Beast Stalker", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[189363] = {
					"Infected Lasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[189235] = {
					"Overseer Lahar", -- [1]
					"Neltharus", -- [2]
				},
				[165189] = {
					"Smierdziel", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[84957] = {
					"Putrid Pyromancer", -- [1]
					"The Everbloom", -- [2]
				},
				[184882] = {
					"Mawsworn Warden", -- [1]
					"Path of the Primus", -- [2]
				},
				[196263] = {
					"Nokhud Neophyte", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[83613] = {
					"Koramar", -- [1]
					"Iron Docks", -- [2]
				},
				[190381] = {
					"Rotburst Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[99922] = {
					"Ebonclaw Packmate", -- [1]
					"Halls of Valor", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[184627] = {
					"Dominated Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[198310] = {
					"Flame Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[199333] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[197671] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199717] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190510] = {
					"Vault Guard", -- [1]
					"The Azure Vault", -- [2]
				},
				[197799] = {
					"Quarry Infuser", -- [1]
					"UNKNOWN", -- [2]
				},
				[80808] = {
					"Neesa Nox", -- [1]
					"Iron Docks", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[184884] = {
					"Mawsworn Warden", -- [1]
					"Path of the Primus", -- [2]
				},
				[198311] = {
					"Flamewrought Eradicator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[182071] = {
					"Guardian Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[185268] = {
					"Ebonsteel Construct", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[199718] = {
					"Nokhud Huntmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[8336] = {
					"Hakkari Sapper", -- [1]
					"Sunken Temple", -- [2]
				},
				[76088] = {
					"Razorfen Huntmaster", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[186226] = {
					"Fetid Rotsinger", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[162763] = {
					"Soulforged Bonereaver", -- [1]
					"Theater of Pain", -- [2]
				},
				[199719] = {
					"Nokhud Wardog", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189233] = {
					"Caustic Spiderling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187315] = {
					"Disease Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[186420] = {
					"Earthen Weaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[193709] = {
					"Primalist Earthwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[197801] = {
					"Awakened Terrasentry", -- [1]
					"UNKNOWN", -- [2]
				},
				[83893] = {
					"Earthshaper Telu", -- [1]
					"The Everbloom", -- [2]
				},
				[81864] = {
					"Dreadpetal", -- [1]
					"The Everbloom", -- [2]
				},
				[189234] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[189232] = {
					"Kokia Blazehoof", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[95832] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[75436] = {
					"Quilboar Swinewatcher", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[81638] = {
					"Aqueous Globule", -- [1]
					"The Everbloom", -- [2]
				},
				[81297] = {
					"Dreadfang", -- [1]
					"Iron Docks", -- [2]
				},
				[199716] = {
					"Nokhud Brute", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[74669] = {
					"Crystalfire Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[182074] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[185271] = {
					"Stellar Mote", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[16408] = {
					"Phantom Valet", -- [1]
					"Karazhan", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[29264] = {
					"Spirit Wolf", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[194990] = {
					"Stormseeker Acolyte", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184124] = {
					"Sentinel Talondras", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[96664] = {
					"Valarjar Runecarver", -- [1]
					"Halls of Valor", -- [2]
				},
				[197793] = {
					"Awakened Juggernaut", -- [1]
					"UNKNOWN", -- [2]
				},
				[195876] = {
					"Desecrated Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189492] = {
					"Raszageth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[185528] = {
					"Trickclaw Mystic", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[185656] = {
					"Filth Caller", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[194991] = {
					"Oathsworn Vanguard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Court of Stars", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[156501] = {
					"Ravnyr", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[193457] = {
					"Balara", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[186124] = {
					"Gashtooth", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[185529] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[75466] = {
					"Vile Bat", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[12219] = {
					"Barbed Lasher", -- [1]
					"Maraudon", -- [2]
				},
				[185534] = {
					"Bonebolt Hunter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[187192] = {
					"Rageclaw", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[185274] = {
					"Astral Particle", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[95834] = {
					"Valarjar Mystic", -- [1]
					"Halls of Valor", -- [2]
				},
				[8035] = {
					"Dark Iron Land Mine", -- [1]
					"Gnomeregan", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[16171] = {
					"Coldmist Widow", -- [1]
					"Karazhan", -- [2]
				},
				[104274] = {
					"Baalgar the Watchful", -- [1]
					"Court of Stars", -- [2]
				},
				[183209] = {
					"Soulseeker", -- [1]
					"Path of the Primus", -- [2]
				},
				[111563] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[185275] = {
					"Kelmortos", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[198702] = {
					"Unstable Frost", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196856] = {
					"Primal Stormsentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163260] = {
					"Vicious Ghoul", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[75055] = {
					"Razorfen Torchbearer", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[86372] = {
					"Melded Berserker", -- [1]
					"The Everbloom", -- [2]
				},
				[189727] = {
					"Khajin the Unyielding", -- [1]
					"Halls of Infusion", -- [2]
				},
				[184125] = {
					"Chrono-Lord Deios", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[16409] = {
					"Phantom Guest", -- [1]
					"Karazhan", -- [2]
				},
				[96677] = {
					"Steeljaw Grizzly", -- [1]
					"Halls of Valor", -- [2]
				},
				[75439] = {
					"Novice Quilboar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[196044] = {
					"Unruly Textbook", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[8319] = {
					"Nightmare Whelp", -- [1]
					"Sunken Temple", -- [2]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Court of Stars", -- [2]
				},
				[193799] = {
					"Rotchanting Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[5710] = {
					"Jammal'an the Prophet", -- [1]
					"Sunken Temple", -- [2]
				},
				[198868] = {
					"Primalist Voltweaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[5722] = {
					"Hazzas", -- [1]
					"Sunken Temple", -- [2]
				},
				[186121] = {
					"Decatriarch Wratheye", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[186191] = {
					"Decay Speaker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[197298] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[200131] = {
					"Sha-Touched Guardian", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[198577] = {
					"Unstable Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[96934] = {
					"Valarjar Trapper", -- [1]
					"Halls of Valor", -- [2]
				},
				[75440] = {
					"Quilboar Pebble-Watcher", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[189901] = {
					"Warlord Sargha", -- [1]
					"Neltharus", -- [2]
				},
				[74545] = {
					"Razorfen Geomagus", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[31216] = {
					"Bengeezuz", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[181954] = {
					"Anduin Wrynn", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[79852] = {
					"Oshir", -- [1]
					"Iron Docks", -- [2]
				},
				[190362] = {
					"Dazzling Dragonfly", -- [1]
					"Halls of Infusion", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[107073] = {
					"Duskwatch Reinforcement", -- [1]
					"Court of Stars", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[183406] = {
					"Colossal Realmcrafter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[184580] = {
					"Olaf", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[187160] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[74555] = {
					"Razorfen Hidecrusher", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[191714] = {
					"Seeking Stormling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[8317] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"Sunken Temple", -- [2]
				},
				[194999] = {
					"Volatile Spark", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104277] = {
					"Legion Hound", -- [1]
					"Court of Stars", -- [2]
				},
				[97202] = {
					"Olmyr the Enlightened", -- [1]
					"Halls of Valor", -- [2]
				},
				[184130] = {
					"Earthen Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[195855] = {
					"Risen Warrior", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[185537] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[182169] = {
					"Lihuvim", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[95842] = {
					"Valarjar Thundercaller", -- [1]
					"Halls of Valor", -- [2]
				},
				[187967] = {
					"Sennarth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191164] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[184131] = {
					"Earthen Guardian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[65310] = {
					"Turnip Punching Bag", -- [1]
					"Halls of Valor", -- [2]
				},
				[198709] = {
					"Unstable Earth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[194745] = {
					"Rotfang Hyena", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[189886] = {
					"Blazebound Firestorm", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[198326] = {
					"Stormwrought Despoiler", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[47120] = {
					"Argaloth", -- [1]
					"Baradin Hold", -- [2]
				},
				[187231] = {
					"Wither Biter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[186220] = {
					"Brackenhide Shaper", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[185691] = {
					"Vicious Hyena", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[52363] = {
					"Occu'thar", -- [1]
					"Baradin Hold", -- [2]
				},
				[186644] = {
					"Leymor", -- [1]
					"The Azure Vault", -- [2]
				},
				[187969] = {
					"Flashfrost Earthshaper", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[197698] = {
					"Thunderhead", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[104918] = {
					"Vigilant Duskwatch", -- [1]
					"Court of Stars", -- [2]
				},
				[192333] = {
					"Alpha Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[188011] = {
					"Primal Terrasentry", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[24687] = {
					"Sunblade Physician", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[183396] = {
					"Eternal Forger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[104215] = {
					"Patrol Captain Gerdo", -- [1]
					"Court of Stars", -- [2]
				},
				[185581] = {
					"Eternal Forger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[184134] = {
					"Scavenging Leaper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[197595] = {
					"Earthwrought Smasher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[189813] = {
					"Dathea, Ascended", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[183495] = {
					"Twisted Worldeater", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[6220] = {
					"Irradiated Horror", -- [1]
					"Gnomeregan", -- [2]
				},
				[75384] = {
					"Kraulshaped Monstrosity", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[186227] = {
					"Monstrous Decay", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[163366] = {
					"Magus of the Dead", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[200387] = {
					"Shambling Infester", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[190401] = {
					"Gusting Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[24696] = {
					"Coilskar Witch", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[183496] = {
					"Foul Gorger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[193352] = {
					"Hextrick Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[74549] = {
					"Razorfen Stonechanter", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[58964] = {
					"Colmek", -- [1]
					"Court of Stars", -- [2]
				},
				[188100] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[181224] = {
					"Dausegne", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[24684] = {
					"Sunblade Blood Knight", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[194622] = {
					"Scorchling", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[183497] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[24815] = {
					"Sunblade Imp", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[75061] = {
					"Young Boar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[96608] = {
					"Ebonclaw Worg", -- [1]
					"Halls of Valor", -- [2]
				},
				[185032] = {
					"Taskmaster Xy'pro", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180990] = {
					"The Jailer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190403] = {
					"Glacial Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[200761] = {
					"Wild Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[183498] = {
					"Illicit Collector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[75509] = {
					"Sadana Bloodfury", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[74550] = {
					"Razorfen Kraulshaper", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[195135] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[198136] = {
					"Eminent Earthshaper", -- [1]
					"Vault of the Incarnates", -- [2]
				},
			},
			["border_color"] = {
				1, -- [1]
				nil, -- [2]
				0.011764705882353, -- [3]
				0.84000000357628, -- [4]
			},
			["focus_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["cast_statusbar_spark_color"] = {
				nil, -- [1]
				0.13333333333333, -- [2]
				0.8, -- [3]
			},
			["honor_blizzard_plate_alpha"] = true,
			["health_selection_overlay_alpha"] = 0,
			["first_run3"] = true,
			["minor_height_scale"] = 0.94999998807907,
			["cast_statusbar_bgcolor"] = {
				0, -- [1]
				0.062745101749897, -- [2]
				0.5137255191802979, -- [3]
				0.8900000005960464, -- [4]
			},
			["not_affecting_combat_alpha"] = 1,
			["color_override"] = false,
			["health_animation_time_dilatation"] = 2.6199998855591,
			["cast_statusbar_texture"] = "Wglass",
			["use_ui_parent"] = true,
			["aura_height"] = 18,
			["ui_parent_scale_tune"] = 1.4099998474121,
			["aura_tracker"] = {
				["debuff_banned"] = {
					["356329"] = false,
					["228354"] = false,
					["113724"] = false,
					["289308"] = false,
					["331934"] = false,
					["205708"] = false,
					["352939"] = false,
					["354050"] = false,
					["12486"] = false,
					["236299"] = true,
				},
				["buff_tracked"] = {
					["209859"] = true,
				},
				["buff_banned"] = {
					["206150"] = true,
					["61573"] = true,
					["61574"] = true,
					["333553"] = true,
				},
			},
			["cast_statusbar_bgtexture"] = "Solid",
			["aura2_x_offset"] = 0,
			["target_indicator"] = "Double Arrows",
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Key"] = "iconSizeOffset",
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Name"] = "Icon Padding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.30567157268524, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Key"] = "textureWidth",
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Key"] = "textureHeightMod",
							["Value"] = 0,
							["Name"] = "Texture Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Key"] = "texturePosition",
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [16]
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Name"] = "Cast Bar Icon Settings [P]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Color Automation [Plater]",
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1614608917,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135358,
					["Enabled"] = false,
					["Revision"] = 85,
					["semver"] = "",
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Execute Range [Plater]",
					["LastHookEdited"] = "Constructor",
					["Options"] = {
					},
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1623383400,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Attacking Specific Unit [Plater]",
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.50196078431373, -- [1]
								0.50196078431373, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
				}, -- [4]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Combo Points [Plater]",
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [6]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Extra Border [Plater]",
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["Time"] = 1554138845,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 136207,
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Players Targeting a Target [Plater]",
				}, -- [10]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1614606781,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 358,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Aura Reorder [Plater]",
					["LastHookEdited"] = "Initialization",
					["Options"] = {
					},
				}, -- [11]
				{
					["OptionsValues"] = {
						["targetcolor"] = {
							0, -- [1]
							0.47450980392157, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1654562266,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/_GSmNC31z/1",
					["Icon"] = 878211,
					["Enabled"] = false,
					["Revision"] = 168,
					["semver"] = "1.0.0",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Name"] = "Current Target Color [Plater]",
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "targetcolor",
							["Value"] = {
								0.46274509803922, -- [1]
								1, -- [2]
								0.48235294117647, -- [3]
								1, -- [4]
							},
							["Name"] = "targetcolor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "targetcolor",
						}, -- [1]
					},
				}, -- [12]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
					},
					["Time"] = 1678511108,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/turHC0a5k/7",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
					["Enabled"] = true,
					["Revision"] = 285,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "@scriptname Options:",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the glow ants.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "Amount of ants in the glow effect.",
							["Min"] = 1,
							["Key"] = "antsAmount",
							["Value"] = 6,
							["Name"] = "Ants Amount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Ants move speed",
							["Min"] = -1,
							["Key"] = "frequency",
							["Value"] = 0.25,
							["Name"] = "Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "",
							["Min"] = 1,
							["Key"] = "antsLength",
							["Value"] = 4,
							["Name"] = "Ants length",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 4,
							["Desc"] = "",
							["Min"] = 1,
							["Key"] = "antsThickness",
							["Value"] = 2,
							["Name"] = "Ants Thickness",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "antsBorder",
							["Value"] = false,
							["Name"] = "Ants Border",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outerGlow",
							["Value"] = false,
							["Name"] = "Outer Glow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
					},
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
					["Prio"] = 99,
					["version"] = 7,
					["PlaterCore"] = 1,
					["Name"] = "Steal/Purge Aura Glow",
					["semver"] = "1.0.6",
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
					},
				}, -- [13]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame)\n    \n    local healthBar = unitFrame.healthBar\n    local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n    -- change the value to whatever, for fire mages its 30% so 0.30\n    local useScorch = 0.30\n    \n    if (percent <= useScorch) then\n        -- from here the customizing is optional\n        -- for a list of commands look at the plater api\n        -- https://www.curseforge.com/wow/addons/plater-nameplates/pages/scripts/list-of-api-functions\n        \n        -- below is an example which will set the color & bordercolor to orange, \n        -- change the size of the frame and add a flash to it\n        \n        Plater.SetNameplateColor (unitFrame, \"#ff8c00\")\n        Plater.SetBorderColor (unitFrame, \"#ff8c00\")\n        Plater.SetNameplateSize (unitFrame, 120, 20)\n        Plater.FlashNameplateBorder (unitFrame, 1)\n    end\n    \n    \nend",
					},
					["Time"] = 1625007755,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/pc7PK_czd/1",
					["Icon"] = 135827,
					["Enabled"] = false,
					["Revision"] = 102,
					["semver"] = "1.0.0",
					["Author"] = "Sphyre-Tarren Mill",
					["Desc"] = "distinguish the mob for scorching",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Name"] = "Scorch",
					["LastHookEdited"] = "Nameplate Updated",
					["Options"] = {
					},
				}, -- [14]
				{
					["OptionsValues"] = {
						["colorHealthbar"] = true,
						["targetEnabled"] = false,
						["raidMarkColors"] = false,
						["targetColor"] = {
							0.27058823529412, -- [1]
							0.50980392156863, -- [2]
							0.70196078431373, -- [3]
							1, -- [4]
						},
						["UseDefaultColor"] = false,
						["IMobs"] = {
							1, -- [1]
							0.97254901960784, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["threatColors"] = true,
						["DefaultColor"] = {
							0.27058823529412, -- [1]
							0.50980392156863, -- [2]
							0.70196078431373, -- [3]
							1, -- [4]
						},
						["EnMobs"] = {
							1, -- [1]
							0, -- [2]
							0.10196078431373, -- [3]
							1, -- [4]
						},
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
						["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"]\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    modTable.UseDefaultColor = modTable.config[\"UseDefaultColor\"]\n    modTable.DefaultColor = modTable.config[\"DefaultColor\"]\n    \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    --Bosses - Greenyblue - \"Boss\"\n    --Mini Boss - DarkMagenta - \"MiniBoss\"\n    \n    --Focus mobs - Blue - \"FMobs\"\n    --Deadly mobs - Light Blue - \"DMobs\"\n    --Dodge Mobs - Purple - \"DoMobs\"\n    \n    --Healer mobs - White - HMobs\n    --Interruptable damage mobs - Orange - InMobs\n    --Enrage mobs - Light Orange - \"EnMobs\"\n    \n    --Expolsives mobs - Dark Pink - \"ExMobs\"\n    \n    modTable.NpcColors = {       \n        \n        -- De Other Side\n        [166473] = modTable.config[\"Boss\"],     --Hakkar the Soulflayer\n        [164555] = modTable.config[\"Boss\"],     --Milificent Manastorm\n        [164556] = modTable.config[\"Boss\"],     --Millhouse Manastorm\n        [169769] = modTable.config[\"Boss\"],     --Mueh'zala\n        \n        [170486] = modTable.config[\"FMobs\"],    --Atal'ia Devoted\n        [168992] = modTable.config[\"FMobs\"],    --Risen Cultist\n        [168934] = modTable.config[\"FMobs\"],    --Enraged Spirit\n        [167962] = modTable.config[\"FMobs\"],    --Defunct Dental Drill\n        [171184] = modTable.config[\"FMobs\"],    --Mythresh, Sky's Talon\n        \n        [167964] = modTable.config[\"DMobs\"],    --4.RF-4.RF\n        [164862] = modTable.config[\"DMobs\"],    --Weald Shimmermoth\n        \n        [167965] = modTable.config[\"IMobs\"],    --Lubricator\n        \n        [170490] = modTable.config[\"HMobs\"],    --Atal'ai High Priest\n        [170572] = modTable.config[\"HMobs\"],    --Atal'ai Hoodoo Hexxer\n        \n        [169905] = modTable.config[\"EnMobs\"],   --Risen Warlord\n        [171343] = modTable.config[\"EnMobs\"],   --Bladebeak Matriarch\n        \n        [168942] = modTable.config[\"DoMobs\"],    --DeathSpeaker\n        [167963] = modTable.config[\"DoMobs\"],    --Headless Client\n        [170480] = modTable.config[\"DoMobs\"],    --Atal'ia Deathwalker\n        \n        [170147] = modTable.config[\"ExMobs\"],   --Volatile Memory\n        \n        --Theater Of Pain\n        [164451] = modTable.config[\"Boss\"],     --Dessia the Decapitator\n        [164463] = modTable.config[\"Boss\"],     --Paceran the virulent\n        [164461] = modTable.config[\"Boss\"],     --Sathel the Accursed\n        [162317] = modTable.config[\"Boss\"],     --Gorechop\n        [162309] = modTable.config[\"Boss\"],     --Kul'tharok\n        [162329] = modTable.config[\"Boss\"],     --Xav the Unfallen\n        [165946] = modTable.config[\"Boss\"],     --Mordretha the Endless Empress\n        \n        [167536] = modTable.config[\"MiniBoss\"], --Harugia the Bloodthirsty\n        [162744] = modTable.config[\"MiniBoss\"], --Nekthara the Mangler\n        \n        [174210] = modTable.config[\"FMobs\"],    --Blighted Sludge-Spewer\n        [170882] = modTable.config[\"FMobs\"],    --Bone Magus\n        [160495] = modTable.config[\"FMobs\"],    --Maniacal Soulbinder\n        \n        [174197] = modTable.config[\"DMobs\"],    --Battlefield Ritualist\n        [163086] = modTable.config[\"DMobs\"],    --Rancid Gasbag\n        [170690] = modTable.config[\"DMobs\"],    --Diseased Horror\n        [167998] = modTable.config[\"DMobs\"],    --Portal Guardian\n        [164506] = modTable.config[\"DMobs\"],    --Ancient Captain\n        \n        [170850] = modTable.config[\"EnMobs\"],   --Raging BloodHorn\n        \n        [169893] = modTable.config[\"DoMobs\"],   --Hefarious Darkspeaker\n        [162763] = modTable.config[\"DoMobs\"],    --Soulforged Bonereaver\n        \n        --Necrotic Wake\n        [162691] = modTable.config[\"Boss\"],     --BlightBone\n        [162692] = modTable.config[\"Boss\"],     --Amarth\n        [166882] = modTable.config[\"Boss\"],     --Surgeon Stitchflesh\n        [166945] = modTable.config[\"Boss\"],     --Nalthor the Rimebinder\n        \n        [165824] = modTable.config[\"MiniBoss\"], --Nar'zudah\n        [165197] = modTable.config[\"MiniBoss\"], --Skeletal Monostrosity\n        \n        [163121] = modTable.config[\"FMobs\"],    --Stiched Vanguard\n        [165137] = modTable.config[\"FMobs\"],    --Zolramus GateKeeper\n        [163618] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        [168443] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        \n        [163128] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [168357] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [173044] = modTable.config[\"DMobs\"],    --Stitching Assistant\n        [167731] = modTable.config[\"DMobs\"],    --Separation Assistant\n        [163126] = modTable.config[\"DMobs\"],    --Brittlebone Mage\n        [163621] = modTable.config[\"DMobs\"],    --Goregrind\n        [163620] = modTable.config[\"DMobs\"],    --Rotspew\n        [172981] = modTable.config[\"DMobs\"],    --Kyrian Stitchwerk\n        \n        [173016] = modTable.config[\"IMobs\"],    --Corpse Collector\n        [166302] = modTable.config[\"IMobs\"],    --Corpse Harvester\n        [165919] = modTable.config[\"IMobs\"],    --Skeletal Marauder\n        \n        [165222] = modTable.config[\"HMobs\"],    --Zolramus Bonemender\n        [165872] = modTable.config[\"HMobs\"],    --Flesh Crafter\n        \n        --Halls Of Atonment\n        [165408] = modTable.config[\"Boss\"],     --Halkias\n        [156827] = modTable.config[\"Boss\"],     --Echelon  \n        [165410] = modTable.config[\"Boss\"],     --High Adjudicator Aleez\n        [164218] = modTable.config[\"Boss\"],     --Lord Chamberlain\n        \n        [167876] = modTable.config[\"MiniBoss\"], --Inquisitor Sigar\n        \n        [164562] = modTable.config[\"FMobs\"],    --Depraved Houndmaster\n        [165414] = modTable.config[\"FMobs\"],    --Depraved Obliterator\n        \n        [164563] = modTable.config[\"DMobs\"],    --Vicious Gargon\n        [165515] = modTable.config[\"DMobs\"],    --Depraved Darkblade\n        [167607] = modTable.config[\"DMobs\"],    --Stoneborn Slasher\n        [164557] = modTable.config[\"DMobs\"],    --Shard of Halkias\n        \n        [165529] = modTable.config[\"IMobs\"],    --Depraved Collector\n        [167612] = modTable.config[\"IMobs\"],    --Stoneborn Reaver\n        \n        [167611] = modTable.config[\"DoMobs\"],    --Stoneborn Eviscerator\n        \n        --Spires Of Ascension\n        [162059] = modTable.config[\"Boss\"],     --Kin-Tara\n        [163077] = modTable.config[\"Boss\"],     --Azules\n        [162058] = modTable.config[\"Boss\"],     --Ventunax\n        [162060] = modTable.config[\"Boss\"],     --Oryphrino\n        [167410] = modTable.config[\"Boss\"],     --Devos\n        \n        [168844] = modTable.config[\"MiniBoss\"],  --Lakesis\n        [168843] = modTable.config[\"MiniBoss\"],  --Klotos\n        [168845] = modTable.config[\"MiniBoss\"],  --Astronos\n        \n        [163458] = modTable.config[\"TMobs\"],   --Forsworn Castigator\n        [168418] = modTable.config[\"TMobs\"],   --Forsworn Inquisitor\n        [163520] = modTable.config[\"TMobs\"],   --Forsworn Squad-Leader\n        [168681] = modTable.config[\"TMobs\"],   --Forsworn Helion\n        \n        [163503] = modTable.config[\"DMobs\"],   --EtherDiver\n        [168658] = modTable.config[\"DMobs\"],   --Forsworn Devastator\n        [168717] = modTable.config[\"DMobs\"],   --Forsworn Justicar\n        \n        [168318] = modTable.config[\"IMobs\"],   --Forsworn Goliath\n        \n        [168420] = modTable.config[\"HMobs\"],   --Forsworn Champion\n        [163459] = modTable.config[\"HMobs\"],   --Forsworn Mender\n        [168718] = modTable.config[\"HMobs\"],   --Forsworn Warden\n        \n        --Sanguine Depths\n        [162103] = modTable.config[\"Boss\"],     --Executor Tarvold\n        [165318] = modTable.config[\"Boss\"],     --General Kaal\n        [162102] = modTable.config[\"Boss\"],     --Grand Proctor Beryllia\n        [162100] = modTable.config[\"Boss\"],     --Kryxis the Voracious\n        \n        [171376] = modTable.config[\"MiniBoss\"],    --Head Custodian Javlin\n        \n        [165076] = modTable.config[\"FMobs\"],    --Gluttonous Tick\n        [162040] = modTable.config[\"FMobs\"],    --Grand Overseer\n        [172265] = modTable.config[\"FMobs\"],   --Remnant of Fury\n        [168882] = modTable.config[\"FMobs\"],    --Fleeting Manifestation\n        \n        [162049] = modTable.config[\"DMobs\"],   --Vestige of Doubt\n        [171448] = modTable.config[\"DMobs\"],    --Dreadful Huntmaster\n        [166396] = modTable.config[\"DMobs\"],   --Noble Skirmisher\n        [166589] = modTable.config[\"DMobs\"],    --Animated Weapon\n        [171799] = modTable.config[\"DMobs\"],    --Depths Warden\n        [162047] = modTable.config[\"DMobs\"],    --Instiable Brute\n        \n        [162039] = modTable.config[\"IMobs\"],   --Wicked Oppressor\n        \n        [162057] = modTable.config[\"DoMobs\"],    --Chamber Sentinel\n        [162038] = modTable.config[\"DoMobs\"],   --Regal Mistdancer\n        \n        --Mist of Trina Scithe      \n        [164567] = modTable.config[\"Boss\"],     --ingra-maloch\n        [170217] = modTable.config[\"Boss\"],     --Mistcaller\n        [164517] = modTable.config[\"Boss\"],     --Tred'ova \n        \n        [164929] = modTable.config[\"FMobs\"],   --Tirnenn Villager\n        [164926] = modTable.config[\"FMobs\"],   --Drust Boughbreaker\n        \n        [166275] = modTable.config[\"DMobs\"],   --Mistveil Shaper\n        \n        [164920] = modTable.config[\"DMobs\"],   --Drust Soulcleaver\n        [166304] = modTable.config[\"DMobs\"],   --Mistveil Stinger\n        \n        [166299] = modTable.config[\"HMobs\"],   --Mistveil Tender\n        \n        [164921] = modTable.config[\"IMobs\"],   --Drust Harvester\n        [167111] = modTable.config[\"IMobs\"],   --Spinemaw Staghorn\n        \n        [167113] = modTable.config[\"DoMobs\"],   --Spinemaw Acidgullet \n        [166276] = modTable.config[\"DoMobs\"],   --Mistveil Guardian\n        \n        --Plaguefall    \n        [164967] = modTable.config[\"Boss\"],     --Doctor Ickus\n        [164266] = modTable.config[\"Boss\"],     --Domina Venomblade\n        [164255] = modTable.config[\"Boss\"],     --Globgrog\n        [164267] = modTable.config[\"Boss\"],     --Margrave Stradama\n        \n        [168886] = modTable.config[\"MiniBoss\"],  --Virulax Blightweaver\n        [169861] = modTable.config[\"MiniBoss\"],  --Ickor Bileflesh\n        \n        [164737] = modTable.config[\"FMobs\"],    --Brood Ambusher\n        [163915] = modTable.config[\"FMobs\"],    --Hatchling Nest\n        [168572] = modTable.config[\"FMobs\"],    --Fungi Stormer\n        [163891] = modTable.config[\"FMobs\"],    --Rotmarrow Slime\n        [168837] = modTable.config[\"FMobs\"],    --Stealthling\n        \n        [168578] = modTable.config[\"DMobs\"],    --FungalMancer\n        [168627] = modTable.config[\"DMobs\"],    --Plaguebinder\n        [167493] = modTable.config[\"DMobs\"],    --Venomous Sniper\n        [163882] = modTable.config[\"DMobs\"],    --Decaying Flesh Giant\n        [168310] = modTable.config[\"DMobs\"],    --Plagueroc\n        [165430] = modTable.config[\"DMobs\"],    --Malignant Spawn\n        \n        [168393] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [168396] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [163894] = modTable.config[\"DoMobs\"],   --Blighted Spinebreaker\n        \n        [169159] = modTable.config[\"ExMobs\"],   --Unstable Canister\n        [168878] = modTable.config[\"ExMobs\"],   --Rigged Plagueborer        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            elseif modTable.UseDefaultColor and not (unitFrame.namePlateUnitReaction == 4) and not unitIsPlayer and not unitFrame.namePlateIsQuestObjective then\n                Plater.SetNameplateColor(unitFrame, modTable.DefaultColor)\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n",
					},
					["Time"] = 1628712779,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/ocXXJPJZ7/6",
					["Enabled"] = false,
					["Revision"] = 236,
					["semver"] = "1.0.5",
					["Author"] = "Yummyyummy-Ravencrest",
					["Desc"] = "Colours the Nameplates according to the type of M+ mob. This is my version of M+ Colored Mobs, https://wago.io/UKpo0_GbE",
					["Prio"] = 98,
					["version"] = 6,
					["PlaterCore"] = 1,
					["Name"] = "M+ Colouring",
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Mythic+ Colours:",
							["Name"] = "Colors Header",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "Boss",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0.5843137254902, -- [3]
								1, -- [4]
							},
							["Name"] = "Boss",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "MiniBoss",
							["Value"] = {
								0.37647058823529, -- [1]
								0, -- [2]
								0.37647058823529, -- [3]
								1, -- [4]
							},
							["Name"] = "MiniBoss",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mini bosses",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "FMobs",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Focus Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that need to be focus.",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "DMobs",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Deadly Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that are considered Deadly.",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "DoMobs",
							["Value"] = {
								0.81176470588235, -- [1]
								0, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Dodge Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that are not considered deadly, but have ability's that need to be dogded.",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "HMobs",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Healer Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that have healing ability's that should be kicked,",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "IMobs",
							["Value"] = {
								1, -- [1]
								0.49803921568627, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Interruptable Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that have Interruptable spell that should be kicked.",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "EnMobs",
							["Value"] = {
								1, -- [1]
								0.63921568627451, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Enrage Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that enrage and should be calmed if possible.",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "ExMobs",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.38039215686275, -- [3]
								1, -- [4]
							},
							["Name"] = "Expolsives Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Mobs that explode before or after death. WATCH OUT!!!",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "DefaultColor",
							["Value"] = {
								0.43921568627451, -- [1]
								0.43921568627451, -- [2]
								0.43921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "DefaultColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "targetColor",
							["Value"] = {
								0.27058823529412, -- [1]
								0.50980392156863, -- [2]
								0.70196078431373, -- [3]
								1, -- [4]
							},
							["Name"] = "Target Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option9",
							["Value"] = 0,
							["Name"] = "Option 9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option22",
							["Value"] = "Addictional Options",
							["Name"] = "Addictional Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 4,
							["Key"] = "targetEnabled",
							["Value"] = false,
							["Name"] = "Use Target Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Key"] = "raidMarkColors",
							["Value"] = true,
							["Name"] = "Raid Mark Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 4,
							["Key"] = "colorHealthbar",
							["Value"] = false,
							["Name"] = "Color Healthbar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 4,
							["Key"] = "threatColors",
							["Value"] = false,
							["Name"] = "ThreatColors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
						}, -- [18]
						{
							["Type"] = 4,
							["Key"] = "UseDefaultColor",
							["Value"] = true,
							["Name"] = "Use Default Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [19]
					},
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["UID"] = "0x610c5b685dc84cc7",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1678511151,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 132219,
					["Enabled"] = true,
					["Revision"] = 477,
					["semver"] = "",
					["Author"] = "Verlijke-Mal'Ganis",
					["Desc"] = "Changes the color of the nameplate castbar based on the current cooldown of the player's interrupt.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "readyColor",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Kick Ready Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the cast bar when your kick is ready to be used.",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "semiCooldownColor",
							["Value"] = {
								1, -- [1]
								0.5921568627451, -- [2]
								0.031372549019608, -- [3]
								1, -- [4]
							},
							["Name"] = "Kick Will Be Ready Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the cast bar when your kick is on cooldown, but will be ready before the cast ends.",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "cooldownColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.007843137254902, -- [3]
								1, -- [4]
							},
							["Name"] = "Kick Will NOT Be Ready",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the cast bar when your kick is on cooldown, and will NOT be ready before the cast ends.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1000,
							["Desc"] = "Time in milliseconds that your kick should be off cooldown before cast end to count as \"kick will be ready\" (recommended to set to a few hundred ms above your latency).",
							["Min"] = 0,
							["Key"] = "cooldownTolerance",
							["Value"] = 500,
							["Name"] = "Kick CD Tolerance (ms)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "protectedColor",
							["Value"] = {
								0.74117647058824, -- [1]
								0.74901960784314, -- [2]
								0.73725490196078, -- [3]
								1, -- [4]
							},
							["Name"] = "Protected Cast Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the cast bar for protected casts.",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "interruptedColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Interrupted Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "The color of the cast bar for interrupted casts.",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "cooldownLine",
							["Value"] = true,
							["Name"] = "Castbar CD Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Draw a line on castbars indicating when your interrupt will be off-cooldown.",
						}, -- [7]
					},
					["Name"] = "Interrupt CD Indicator",
				}, -- [16]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
					},
					["UID"] = "0x62229f65202d123",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1678511103,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/CignDPWs3/8",
					["Icon"] = 4224736,
					["Enabled"] = true,
					["Revision"] = 499,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "setColor",
							["Value"] = true,
							["Name"] = "Set Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust health bar colors?",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "setNameColor",
							["Value"] = false,
							["Name"] = "Set Name Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust Name colors?",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "setBorderColor",
							["Value"] = false,
							["Name"] = "Set Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust Name colors?",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "vyColor",
							["Value"] = {
								0, -- [1]
								0.9921568627451, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vy Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "urhColor",
							["Value"] = {
								0.63137254901961, -- [1]
								0.34901960784314, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Urh Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "woColor",
							["Value"] = {
								0.33725490196078, -- [1]
								1, -- [2]
								0.42352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Wo Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "pog",
							["Value"] = 0,
							["Name"] = "Divider",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "setName",
							["Value"] = true,
							["Name"] = "Set Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust the NPC's Name?",
						}, -- [8]
						{
							["Type"] = 3,
							["Key"] = "vyName",
							["Value"] = "Vy (Haste)",
							["Name"] = "Vy Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "urhName",
							["Value"] = "Urh (CDR)",
							["Name"] = "Urh Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 3,
							["Key"] = "woName",
							["Value"] = "Wo (Stealth)",
							["Name"] = "Wo Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "deez",
							["Value"] = 0,
							["Name"] = "Divider 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "setHeight",
							["Value"] = false,
							["Name"] = "Set Bar Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust the NPC's bar height?",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 0,
							["Key"] = "barHeight",
							["Value"] = 20,
							["Name"] = "Bar Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 6,
							["Key"] = "deez",
							["Value"] = 0,
							["Name"] = "Divider 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Key"] = "setFontSize",
							["Value"] = false,
							["Name"] = "Set Font Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust the NPC's font size?",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 0,
							["Key"] = "fontSize",
							["Value"] = 20,
							["Name"] = "Font Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "deez",
							["Value"] = 0,
							["Name"] = "Divider 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "deez",
							["Value"] = 0,
							["Name"] = "Divider 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 4,
							["Key"] = "setTexture",
							["Value"] = false,
							["Name"] = "Set Bar Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Should we adjust the NPC's bar texture?",
						}, -- [20]
						{
							["Type"] = 5,
							["Key"] = "barWarning",
							["Value"] = "*set texture path in \"Nameplate Updated\" hook. Default custom texture is PlaterFocus",
							["Name"] = "Bar Warning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "deez",
							["Value"] = 0,
							["Name"] = "Divider 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 4,
							["Key"] = "setBackgroundColor",
							["Value"] = false,
							["Name"] = "Set Bar Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Some bar textures (like PlaterFocus) Also show the background color, which you can set here.",
						}, -- [23]
						{
							["Type"] = 1,
							["Key"] = "vyBGColor",
							["Value"] = {
								0, -- [1]
								0.098039215686275, -- [2]
								0.098039215686275, -- [3]
								1, -- [4]
							},
							["Name"] = "Vy Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 1,
							["Key"] = "urhBGColor",
							["Value"] = {
								0.043137254901961, -- [1]
								0, -- [2]
								0.098039215686275, -- [3]
								1, -- [4]
							},
							["Name"] = "Urh Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "woBGColor",
							["Value"] = {
								0, -- [1]
								0.098039215686275, -- [2]
								0.011764705882353, -- [3]
								1, -- [4]
							},
							["Name"] = "Wo Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [26]
						{
							["Type"] = 6,
							["Key"] = "deez",
							["Value"] = 0,
							["Name"] = "Divider 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Key"] = "reloadWarning",
							["Value"] = "Moving the sliders around too much can cause some temporary lag. To fix this simply reload your game after applying changes!",
							["Name"] = "Reload Warning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
					},
					["Author"] = "Ilrieth-Argent Dawn",
					["Desc"] = "modify Encrypted mobs' names and healthbar colors with custom values",
					["Prio"] = 99,
					["version"] = 8,
					["PlaterCore"] = 1,
					["Name"] = "Encrypted Names & Colors",
					["LastHookEdited"] = "",
					["semver"] = "1.0.7",
				}, -- [17]
			},
			["target_shady_enabled"] = false,
			["border_thickness"] = 0.800000011920929,
			["aura_width2"] = 22,
			["aggro_modifies"] = {
				["actor_name_color"] = true,
			},
			["health_statusbar_bgcolor"] = {
				0.0470588281750679, -- [1]
				0.05098039656877518, -- [2]
				0.05098039656877518, -- [3]
				1, -- [4]
			},
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1499999761581",
				["nameplateLargeTopInset"] = "-1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateTargetRadialPosition"] = "0",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["clampTargetNameplateToScreen"] = "0",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "60",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateTargetBehindMaxDistance"] = "30",
				["SoftTargetInteract"] = "3",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplateSelfTopInset"] = "0.51",
				["nameplateMotionSpeed"] = "0.050608683377504",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1",
				["nameplateShowFriends"] = "0",
				["nameplateMotion"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateOtherTopInset"] = "-1",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateOccludedAlphaMult"] = "0.30423501133919",
				["SoftTargetIconGameObject"] = "0",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["NamePlateHorizontalScale"] = "1",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
			},
			["target_shady_alpha"] = 0.2520707845687866,
			["disable_omnicc_on_auras"] = true,
			["ui_parent_cast_level"] = 108,
			["aura_width"] = 22,
			["aura_height2"] = 18,
			["castbar_target_notank"] = true,
			["ghost_auras"] = {
				["auras"] = {
					["DEATHKNIGHT"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
					},
					["WARRIOR"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
					},
					["SHAMAN"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
					},
					["MAGE"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
					},
					["PRIEST"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
							["589"] = true,
							["34914"] = true,
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
					},
					["HUNTER"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
					},
					["WARLOCK"] = {
						["1"] = {
							[980] = true,
							[172] = true,
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
					},
					["DEMONHUNTER"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
					},
					["PALADIN"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
					},
					["DRUID"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["8"] = {
						},
					},
					["MONK"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
					},
					["ROGUE"] = {
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
					},
				},
			},
			["global_offset_y"] = 0.2299995422363281,
			["aggro_can_check_notank"] = true,
			["login_counter"] = 11387,
			["version"] = 1,
			["range_check_enabled"] = false,
			["pet_width_scale"] = 0.8499999642372131,
			["focus_indicator_enabled"] = false,
			["target_highlight_alpha"] = 0.9511719942092896,
			["focus_as_target_alpha"] = true,
			["castbar_target_anchor"] = {
				["y"] = -8.94000244140625,
				["x"] = -3.170005798339844,
				["side"] = 10,
			},
			["quick_hide"] = true,
			["script_auto_imported"] = {
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Effect After Cast [P]"] = 2,
				["Explosion Affix M+"] = 14,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Tank Interrupt"] = 12,
				["Unit - Important"] = 11,
				["Cast - Quick Flash"] = 2,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Fixate On You"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Cast - Glowing [P]"] = 10,
				["Cast - Very Important"] = 15,
				["Auto Set Skull"] = 11,
				["Fixate"] = 11,
				["Spiteful Affix"] = 3,
				["Aura - Buff Alert"] = 15,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - On Going Cast [P]"] = 2,
				["Cast - Stop Casting"] = 4,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Cast - Important Target [P]"] = 2,
				["Cast - Shield Interrupt"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Unit - Show Energy"] = 11,
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["patch_version"] = 25,
			["target_highlight_color"] = {
				nil, -- [1]
				0.05882353335618973, -- [2]
			},
			["range_check_in_range_or_target_alpha"] = 0.7999999523162842,
			["aura_timer_text_size"] = 12,
			["range_check_alpha_friendlies"] = 1,
			["aura_show_enrage"] = true,
			["number_region_first_run"] = true,
			["aura_stack_font"] = "PT Sans Narrow",
			["usePlaterWidget"] = false,
			["range_check_alpha"] = 1,
			["click_space"] = {
				138, -- [1]
				36, -- [2]
			},
			["castbar_icon_show"] = false,
			["castbar_target_font"] = "PT Sans Narrow",
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.2000000476837,
				},
			},
			["semver"] = "1.0.0",
			["target_highlight_height"] = 7.005825042724609,
			["npc_colors"] = {
				[167998] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[165108] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[178165] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[162691] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[170850] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[164873] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[162763] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[163086] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164929] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[162047] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[168418] = {
					true, -- [1]
					true, -- [2]
					"crimson", -- [3]
				},
				[163520] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[174569] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167962] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[170490] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[165529] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[163458] = {
					true, -- [1]
					true, -- [2]
					"crimson", -- [3]
				},
				[171341] = {
					true, -- [1]
					true, -- [2]
					"greenyellow", -- [3]
				},
				[162057] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[163459] = {
					true, -- [1]
					true, -- [2]
					"greenyellow", -- [3]
				},
				[168318] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[171799] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[168594] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[163121] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[177808] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[168681] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[167111] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[178141] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[166299] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[163618] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[174210] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[169905] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[170572] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[168942] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[168572] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[162040] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[180495] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[167964] = {
					true, -- [1]
					true, -- [2]
					"fuchsia", -- [3]
				},
				[164557] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
			},
			["dps"] = {
				["colors"] = {
					["solo"] = {
						0, -- [1]
						1, -- [2]
						0.011764705882353, -- [3]
					},
					["notontank"] = {
						1, -- [1]
						0.43529411764706, -- [2]
						0, -- [3]
					},
					["aggro"] = {
						nil, -- [1]
						0.007843137718737125, -- [2]
					},
					["noaggro"] = {
						0.3803921937942505, -- [1]
						0.4823529720306397, -- [2]
					},
					["pulling"] = {
						0.93333333333333, -- [1]
						1, -- [2]
						0.95686274509804, -- [3]
					},
				},
			},
			["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
			["castbar_target_show"] = true,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator2",
			["cast_color_settings"] = {
				["enabled"] = true,
				["width"] = 12,
			},
			["aura_alpha"] = 0.84999996423721,
			["aura_timer_text_font"] = "PT Sans Narrow",
			["minor_width_scale"] = 0.89999997615814,
			["aura_consolidate"] = true,
			["transparency_behavior"] = 4,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
		},
	},
	["InterruptableSpells"] = {
		[253562] = true,
		[271174] = true,
		[407891] = true,
		[168092] = true,
		[116705] = true,
		[164965] = true,
		[417481] = true,
		[169839] = true,
		[266225] = true,
		[201399] = true,
		[411958] = true,
		[255041] = true,
		[169840] = true,
		[266036] = true,
		[426596] = true,
		[415770] = true,
		[225562] = true,
		[147362] = true,
		[57994] = true,
		[6552] = true,
		[411994] = true,
		[204243] = true,
		[417011] = true,
		[31935] = true,
		[227913] = true,
		[253583] = true,
		[264390] = true,
		[427459] = true,
		[412378] = true,
		[260696] = true,
		[260697] = true,
		[200642] = true,
		[183752] = true,
		[413427] = true,
		[204896] = true,
		[168082] = true,
		[426731] = true,
		[429176] = true,
		[426541] = true,
		[200658] = true,
		[97547] = true,
		[347008] = true,
		[255824] = true,
		[267824] = true,
		[32747] = true,
		[412922] = true,
		[416256] = true,
		[265876] = true,
		[253517] = true,
		[260698] = true,
		[220543] = true,
		[164887] = true,
		[169841] = true,
		[260699] = true,
		[259572] = true,
		[164973] = true,
		[256849] = true,
		[426768] = true,
		[200248] = true,
		[260701] = true,
		[264050] = true,
		[260700] = true,
		[252923] = true,
		[428103] = true,
		[415435] = true,
		[196883] = true,
		[96231] = true,
		[407124] = true,
		[428263] = true,
		[200630] = true,
		[165213] = true,
		[400165] = true,
		[415437] = true,
		[201837] = true,
		[168040] = true,
		[418200] = true,
		[407121] = true,
		[263959] = true,
		[418202] = true,
		[201298] = true,
		[199663] = true,
		[268278] = true,
		[252781] = true,
		[412233] = true,
		[197797] = true,
		[201839] = true,
		[407122] = true,
		[408805] = true,
		[426783] = true,
		[351338] = true,
		[253544] = true,
		[386071] = true,
		[264024] = true,
		[47528] = true,
		[417030] = true,
		[93985] = true,
		[173563] = true,
		[201411] = true,
		[19647] = true,
		[2139] = true,
		[91807] = true,
		[76813] = true,
		[1766] = true,
		[415773] = true,
		[428526] = true,
		[278444] = true,
		[265368] = true,
		[413607] = true,
	},
	["captured_casts"] = {
		[386509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ezrigeth",
			["npcID"] = 187666,
		},
		[37319] = {
			["encounterName"] = "Al'ar",
			["source"] = "Phoenix-Hawk Hatchling",
			["npcID"] = 20038,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 730,
		},
		[124800] = {
			["source"] = "Sra'thik Warcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61502,
		},
		[394701] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Great Shellkhan",
			["npcID"] = 191305,
		},
		[413131] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[15795] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smolderthorn Axe Thrower",
			["npcID"] = 9267,
		},
		[376272] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Tarasek Earthreaver",
			["npcID"] = 191225,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[413133] = {
			["source"] = "Forgemaster Kraglin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201625,
		},
		[195320] = {
			["source"] = "Drogbar Manathirster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95866,
		},
		[288221] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Unexploded Ordnance",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148631,
		},
		[421325] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[316890] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ogre Brute",
			["npcID"] = 153239,
		},
		[257777] = {
			["encounterName"] = "Jes Howlis",
			["source"] = "Jes Howlis",
			["npcID"] = 127484,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2102,
		},
		[413135] = {
			["source"] = "Forgemaster Kraglin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201625,
		},
		[196345] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deeprock Scrapper",
			["npcID"] = 98003,
		},
		[394706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Frost",
			["npcID"] = 198702,
		},
		[404945] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Winglord Iyazael",
			["npcID"] = 199401,
		},
		[275937] = {
			["source"] = "Frigidus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204425,
		},
		[409041] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Failed Prototype",
			["npcID"] = 203927,
		},
		[269795] = {
			["source"] = "Jungo, Herald of G'huun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128184,
		},
		[320989] = {
			["source"] = "Altered Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 168244,
		},
		[390613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snarglebone",
			["npcID"] = 197344,
		},
		[376279] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[306656] = {
			["encounterName"] = "Vez'okk the Lightless",
			["source"] = "Vez'okk the Lightless",
			["encounterID"] = 2373,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152874,
		},
		[384471] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magma Skitter",
			["npcID"] = 196758,
		},
		[398806] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[97158] = {
			["encounterName"] = "Jin'do the Godbreaker",
			["source"] = "Jin'do the Godbreaker",
			["encounterID"] = 1182,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 52150,
		},
		[260852] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Solena",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131824,
		},
		[40904] = {
			["encounterName"] = "Illidan Stormrage",
			["source"] = "Illidan Stormrage",
			["encounterID"] = 609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 22917,
		},
		[404951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mad-Eye Carrey",
			["npcID"] = 201181,
		},
		[392665] = {
			["source"] = "Time-Lost Thunderhide",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187258,
		},
		[34761] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["encounterID"] = 1926,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17975,
		},
		[119684] = {
			["encounterName"] = "Xin the Weaponmaster",
			["source"] = "Xin the Weaponmaster",
			["encounterID"] = 1441,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61398,
		},
		[384476] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192789,
		},
		[413145] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[400859] = {
			["source"] = "Skornak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203643,
		},
		[386526] = {
			["source"] = "Nullmagic Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187246,
		},
		[413147] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[54983] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Proto-Drake Handler",
			["npcID"] = 24082,
		},
		[417243] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Great Glorious Alliance Lieutenant",
			["npcID"] = 207581,
		},
		[353763] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sath'zuul",
			["npcID"] = 179135,
		},
		[392671] = {
			["source"] = "Icebreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199279,
		},
		[394719] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Stormwrought Despoiler",
			["npcID"] = 198326,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[56775] = {
			["source"] = "Azure Magus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26722,
		},
		[390624] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snarglebone",
			["npcID"] = 197344,
		},
		[392672] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Failed Scalecommander Elarthresh",
			["npcID"] = 201820,
		},
		[314858] = {
			["source"] = "Scoutmaster Moswen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152040,
		},
		[382434] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[425437] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Surging Lasher",
			["npcID"] = 210111,
		},
		[413151] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Grand Vizier Ertan",
			["npcID"] = 43878,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1043,
		},
		[382435] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[376292] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[421343] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["encounterID"] = 2824,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200927,
		},
		[407009] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Ignara",
			["npcID"] = 202791,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[310766] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eye of the Depths",
			["npcID"] = 159510,
		},
		[353769] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karthazel",
			["npcID"] = 179136,
		},
		[282098] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Pa'ku's Aspect",
			["encounterID"] = 2268,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144747,
		},
		[13748] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Emissary",
			["npcID"] = 8913,
		},
		[164615] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Bloodmaul Flamespeaker",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81767,
		},
		[396774] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Earthshaper",
			["npcID"] = 190996,
		},
		[396775] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Earthshaper",
			["npcID"] = 190996,
		},
		[423396] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lethka",
			["npcID"] = 208740,
		},
		[312818] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shoth the Darkened",
			["npcID"] = 160532,
		},
		[255741] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fangcaller Sraka",
			["npcID"] = 130466,
		},
		[167688] = {
			["encounterName"] = "Nitrogg Thundertower",
			["source"] = "Blackrock Turret",
			["encounterID"] = 1732,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82721,
		},
		[265721] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terrorachna",
			["npcID"] = 200349,
		},
		[34763] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["encounterID"] = 1926,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17975,
		},
		[164617] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Bloodmaul Flamespeaker",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81767,
		},
		[29926] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spell Shade",
			["npcID"] = 16525,
		},
		[366062] = {
			["encounterName"] = "Prototype Pantheon",
			["source"] = "Prototype of Duty",
			["encounterID"] = 2544,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181551,
		},
		[384492] = {
			["source"] = "Nokhud Beastmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192794,
		},
		[394731] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Earth",
			["npcID"] = 198709,
		},
		[384493] = {
			["source"] = "Shikaar Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184657,
		},
		[396780] = {
			["source"] = "Rimebound Subjugator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195837,
		},
		[22887] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Spearman",
			["npcID"] = 17729,
		},
		[257791] = {
			["encounterName"] = "Jes Howlis",
			["source"] = "Jes Howlis",
			["npcID"] = 127484,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2102,
		},
		[392686] = {
			["source"] = "Tevgai",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195132,
		},
		[172810] = {
			["source"] = "Champion Druna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81603,
		},
		[421355] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Anvil",
			["npcID"] = 206478,
		},
		[32358] = {
			["encounterName"] = "Pandemonius",
			["source"] = "Pandemonius",
			["npcID"] = 18341,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1900,
		},
		[298491] = {
			["source"] = "Scrapbone Trashtosser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151660,
		},
		[188169] = {
			["encounterName"] = "Rokmora",
			["source"] = "Rokmora",
			["encounterID"] = 1790,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91003,
		},
		[282110] = {
			["source"] = "Vindictive Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146616,
		},
		[150286] = {
			["source"] = "Razorfen Geomagus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74545,
		},
		[257793] = {
			["encounterName"] = "Jes Howlis",
			["source"] = "Jes Howlis",
			["npcID"] = 127484,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2102,
		},
		[386546] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186741,
		},
		[251650] = {
			["source"] = "Loti's Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 126790,
		},
		[415215] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Alliance Archer",
			["npcID"] = 206352,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[269825] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nisha",
			["npcID"] = 130455,
		},
		[386547] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[199433] = {
			["source"] = "Stormfang Bonecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187931,
		},
		[425455] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Surging Lasher",
			["npcID"] = 210111,
		},
		[400883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Blazestalker",
			["npcID"] = 199828,
		},
		[151312] = {
			["encounterName"] = "Warlord Ramtusk",
			["source"] = "Warlord Ramtusk",
			["encounterID"] = 1659,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74462,
		},
		[404980] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mad-Eye Carrey",
			["npcID"] = 201181,
		},
		[316927] = {
			["source"] = "Barrow Spider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160394,
		},
		[310784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eye of the Depths",
			["npcID"] = 159510,
		},
		[404982] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mad-Eye Carrey",
			["npcID"] = 201181,
		},
		[300547] = {
			["source"] = "Scrapbone Trashtosser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150142,
		},
		[214794] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forsaken Deathguard",
			["npcID"] = 135886,
		},
		[150290] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Calamity",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74571,
		},
		[21096] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Coilfang Technician",
			["npcID"] = 17940,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1939,
		},
		[310788] = {
			["encounterName"] = "Il'gynoth, Corruption Reborn",
			["source"] = "Organ of Corruption",
			["npcID"] = 158343,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2345,
		},
		[394746] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Liskron the Dazzling",
			["npcID"] = 193273,
		},
		[298502] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Bonecrusher",
			["npcID"] = 153531,
		},
		[417272] = {
			["source"] = "The Lich King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205305,
		},
		[209676] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[372222] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[30695] = {
			["encounterName"] = "Omor the Unscarred",
			["source"] = "Omor the Unscarred",
			["npcID"] = 17308,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1891,
		},
		[372223] = {
			["source"] = "Qalashi Bonetender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189265,
		},
		[392701] = {
			["source"] = "Stormshroud Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192536,
		},
		[394749] = {
			["source"] = "Unstable Storm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198716,
		},
		[265741] = {
			["source"] = "Matron Bryndle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135329,
		},
		[269837] = {
			["source"] = "Amani Thug",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120843,
		},
		[386559] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["encounterID"] = 2617,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189727,
		},
		[372225] = {
			["source"] = "Qalashi Bonesplitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189467,
		},
		[166675] = {
			["source"] = "Grom'kar Gunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80937,
		},
		[372226] = {
			["source"] = "Qalashi Bonetender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189265,
		},
		[114062] = {
			["encounterName"] = "Jandice Barov",
			["source"] = "Jandice Barov",
			["encounterID"] = 1427,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59184,
		},
		[57547] = {
			["source"] = "Brynja",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146447,
		},
		[275983] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Flametender",
			["npcID"] = 185227,
		},
		[400896] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rampant Tide",
			["npcID"] = 201463,
		},
		[361989] = {
			["encounterName"] = "Anduin Wrynn",
			["source"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181954,
		},
		[34254] = {
			["source"] = "Sunseeker Botanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 18422,
		},
		[275984] = {
			["source"] = "Vigil Hill Marine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130695,
		},
		[419327] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Timeline Marauder",
			["npcID"] = 199748,
		},
		[269843] = {
			["encounterName"] = "Unbound Abomination",
			["source"] = "Unbound Abomination",
			["encounterID"] = 2123,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133007,
		},
		[300560] = {
			["source"] = "Scrapbone Trashtosser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150142,
		},
		[46029] = {
			["source"] = "Sunblade Blood Knight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24684,
		},
		[396805] = {
			["source"] = "Gorger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192759,
		},
		[407045] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ookbeard",
			["npcID"] = 200956,
		},
		[409093] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[396807] = {
			["source"] = "Gorger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192759,
		},
		[366091] = {
			["source"] = "Ancient Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181011,
		},
		[171799] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmane Bonereaver",
			["npcID"] = 85896,
		},
		[372235] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blood Horde Shaman",
			["npcID"] = 207583,
		},
		[382474] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[265754] = {
			["source"] = "Rastakhan's Might Mutineer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133136,
		},
		[384524] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[419336] = {
			["source"] = "Fel-Watcher Mara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206925,
		},
		[252687] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowblade Stalker",
			["npcID"] = 122970,
		},
		[419337] = {
			["source"] = "Fel-Watcher Mara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206925,
		},
		[7739] = {
			["source"] = "Magistrate Burnside",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 47790,
		},
		[400908] = {
			["source"] = "Suffocating Menace",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201644,
		},
		[394765] = {
			["source"] = "Igneous Stonemauler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210043,
		},
		[314903] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Khateph",
			["npcID"] = 159321,
		},
		[154396] = {
			["encounterName"] = "High Sage Viryx",
			["source"] = "High Sage Viryx",
			["encounterID"] = 1701,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76266,
		},
		[278044] = {
			["source"] = "Wrathful Orchid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186321,
		},
		[396814] = {
			["source"] = "Rimebound Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195836,
		},
		[325143] = {
			["source"] = "Strategist Palladia",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162613,
		},
		[185113] = {
			["source"] = "Thistleleaf Menace",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91472,
		},
		[265759] = {
			["source"] = "Matron Bryndle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135329,
		},
		[265760] = {
			["source"] = "Matron Bryndle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135329,
		},
		[407055] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Seer Jhatal",
			["npcID"] = 199842,
		},
		[267809] = {
			["source"] = "Forgotten Denizen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136297,
		},
		[384531] = {
			["encounterName"] = "Gutshot",
			["source"] = "Rotfang Hyena",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194745,
		},
		[419343] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208445,
		},
		[366102] = {
			["source"] = "Ancient Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181011,
		},
		[392724] = {
			["source"] = "Jadzigeth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188447,
		},
		[372247] = {
			["source"] = "Duskpaw Hidestitcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187941,
		},
		[407060] = {
			["source"] = "High Seer Jhatal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199842,
		},
		[394775] = {
			["source"] = "Eldoren the Reborn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193234,
		},
		[425492] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[198428] = {
			["encounterName"] = "Ularogg Cragshaper",
			["source"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91004,
		},
		[319010] = {
			["source"] = "Cloudtail",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161530,
		},
		[68506] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overlord Agmar",
			["npcID"] = 34922,
		},
		[417303] = {
			["source"] = "The Lich King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205305,
		},
		[419351] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Saboteur",
			["npcID"] = 208438,
		},
		[388635] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Volatile Spark",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194999,
		},
		[267818] = {
			["encounterName"] = "Tidesage Council",
			["source"] = "Galecaller Faye",
			["encounterID"] = 2131,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134058,
		},
		[257814] = {
			["encounterName"] = "Jes Howlis",
			["source"] = "Jes Howlis",
			["npcID"] = 127484,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2102,
		},
		[378397] = {
			["source"] = "Primal Earthshard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185647,
		},
		[306726] = {
			["encounterName"] = "Vez'okk the Lightless",
			["source"] = "Vez'okk the Lightless",
			["encounterID"] = 2373,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152874,
		},
		[204573] = {
			["source"] = "Wrathguard Cleaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97566,
		},
		[255767] = {
			["source"] = "Jungo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127929,
		},
		[392733] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sleepless Fickleshell",
			["npcID"] = 191329,
		},
		[405020] = {
			["source"] = "Enraged Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200407,
		},
		[392734] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Pillager",
			["npcID"] = 199374,
		},
		[70043] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["encounterID"] = 2006,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36497,
		},
		[407069] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[192288] = {
			["source"] = "Olmyr the Enlightened",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97202,
		},
		[405022] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[253721] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shieldbearer of Zul",
			["npcID"] = 127879,
		},
		[296492] = {
			["source"] = "Void Globule",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152669,
		},
		[364068] = {
			["encounterName"] = "Anduin Wrynn",
			["source"] = "Sylvanas Windrunner",
			["encounterID"] = 2546,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183666,
		},
		[12470] = {
			["source"] = "Gold Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 32340,
		},
		[417310] = {
			["source"] = "Unknown",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208380,
		},
		[370212] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Wallcrasher",
			["npcID"] = 187813,
		},
		[392738] = {
			["source"] = "Kargpaw the Fetid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186660,
		},
		[388643] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[359975] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["source"] = "Skolex",
			["encounterID"] = 2542,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181395,
		},
		[372262] = {
			["source"] = "Qalashi Bonesplitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189467,
		},
		[396836] = {
			["source"] = "Colossal Glacier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194798,
		},
		[62415] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jormungar Behemoth",
			["npcID"] = 32882,
		},
		[13878] = {
			["source"] = "Ambermill Magister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 1914,
		},
		[423459] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Flowering Lasher",
			["encounterID"] = 2708,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 209800,
		},
		[359979] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["source"] = "Skolex",
			["encounterID"] = 2542,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181395,
		},
		[310834] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Demented Knife-Twister",
			["npcID"] = 159417,
		},
		[402983] = {
			["source"] = "Gholna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199853,
		},
		[314930] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Black Warden Rhothkozz",
			["npcID"] = 158790,
		},
		[161577] = {
			["source"] = "Lernaea Vilescale",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85693,
		},
		[402985] = {
			["source"] = "Gholna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199853,
		},
		[355887] = {
			["source"] = "Ebon Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185313,
		},
		[158506] = {
			["source"] = "Windroc",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79398,
		},
		[394795] = {
			["source"] = "Molka The Grinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193443,
		},
		[355888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Customs Security",
			["npcID"] = 177807,
		},
		[260894] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[310838] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eye of the Depths",
			["npcID"] = 159510,
		},
		[197414] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brood Queen Tyranna",
			["npcID"] = 93802,
		},
		[165674] = {
			["source"] = "Taskmaster Gurran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79585,
		},
		[133934] = {
			["source"] = "Shieldwall Engineer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67441,
		},
		[310839] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Occult Shadowmender",
			["npcID"] = 159425,
		},
		[170794] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Doombringer",
			["npcID"] = 79503,
		},
		[400941] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dampened Bones",
			["npcID"] = 203470,
		},
		[402989] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[183081] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kirin Tor Guardian",
			["npcID"] = 104091,
		},
		[310842] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Occult Shadowmender",
			["npcID"] = 159425,
		},
		[394800] = {
			["source"] = "Council Earthcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198500,
		},
		[423469] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mosa Umbramane",
			["npcID"] = 210070,
		},
		[394802] = {
			["source"] = "Council Stormcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198502,
		},
		[269890] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Ruffian",
			["npcID"] = 126720,
		},
		[405042] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[154415] = {
			["encounterName"] = "Soulbinder Nyami",
			["source"] = "Soulbinder Nyami",
			["encounterID"] = 1685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76177,
		},
		[189227] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crawliac Cinderwitch",
			["npcID"] = 95174,
		},
		[372279] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[46035] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Magister",
			["npcID"] = 24685,
		},
		[9591] = {
			["source"] = "Burrowing Leyworm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106630,
		},
		[394806] = {
			["source"] = "Phleep",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193210,
		},
		[396854] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutal Motivator",
			["npcID"] = 184453,
		},
		[355900] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Customs Security",
			["npcID"] = 177807,
		},
		[396856] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Firava the Rekindler",
			["npcID"] = 195915,
		},
		[327233] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Experimental Misstep",
			["npcID"] = 199859,
		},
		[59346] = {
			["source"] = "Anub'ar Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28922,
		},
		[378428] = {
			["source"] = "Primal Stonekin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194291,
		},
		[407097] = {
			["source"] = "Earthrender Ku'siva",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199840,
		},
		[351808] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Cremator",
			["npcID"] = 176577,
		},
		[396859] = {
			["source"] = "Gargantuan Vessel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202835,
		},
		[366143] = {
			["source"] = "Subjugator Zeltoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184651,
		},
		[197422] = {
			["encounterName"] = "Cordana Felsong",
			["source"] = "Cordana Felsong",
			["npcID"] = 95888,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1818,
		},
		[183088] = {
			["source"] = "Mightstone Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113998,
		},
		[417338] = {
			["source"] = "The Lich King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205305,
		},
		[396861] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Arcanogolem",
			["npcID"] = 201554,
		},
		[170802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Doombringer",
			["npcID"] = 79503,
		},
		[269901] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sulfurous Fury",
			["npcID"] = 133434,
		},
		[172850] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arachnis",
			["npcID"] = 96323,
		},
		[11895] = {
			["encounterName"] = "Antu'sul",
			["source"] = "Antu'sul",
			["encounterID"] = 595,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8127,
		},
		[174898] = {
			["source"] = "Acidtooth Devourer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79416,
		},
		[296523] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Seeker",
			["npcID"] = 152708,
		},
		[384577] = {
			["encounterName"] = "Gutshot",
			["source"] = "Rotfang Hyena",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194745,
		},
		[394816] = {
			["source"] = "Shardwing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201562,
		},
		[374339] = {
			["source"] = "Refti Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190340,
		},
		[75683] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[427581] = {
			["source"] = "Stalwart Bristlebruin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210507,
		},
		[360006] = {
			["encounterName"] = "Lords of Dread",
			["source"] = "Mal'Ganis",
			["encounterID"] = 2543,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181398,
		},
		[59603] = {
			["source"] = "Dragonflayer Heartsplitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24071,
		},
		[165685] = {
			["source"] = "Taskmaster Gurran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79585,
		},
		[415296] = {
			["source"] = "Larodar, Keeper of the Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205136,
		},
		[201521] = {
			["source"] = "Dormant Wisp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102422,
		},
		[195378] = {
			["source"] = "Rippling Lifefury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95869,
		},
		[212784] = {
			["source"] = "Watchful Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105715,
		},
		[362056] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["source"] = "Guardian Sphere",
			["encounterID"] = 2529,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181447,
		},
		[407107] = {
			["source"] = "Earthrender Ku'siva",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199840,
		},
		[192307] = {
			["encounterName"] = "Hyrja",
			["source"] = "Hyrja",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95833,
		},
		[427585] = {
			["source"] = "Stalwart Bristlebruin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210507,
		},
		[380487] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[407108] = {
			["source"] = "Earthrender Ku'siva",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199840,
		},
		[327246] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valinor",
			["npcID"] = 167524,
		},
		[156472] = {
			["source"] = "Gorg the Host",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76496,
		},
		[191284] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 94960,
		},
		[260908] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ji'arak",
			["npcID"] = 132253,
		},
		[212786] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["encounterID"] = 1837,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103344,
		},
		[199476] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sledge",
			["npcID"] = 92990,
		},
		[162617] = {
			["encounterName"] = "Rocketspark and Borka",
			["source"] = "Borka the Brute",
			["encounterID"] = 1715,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77816,
		},
		[415304] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Great Glorious Alliance Paladin",
			["npcID"] = 207579,
		},
		[15095] = {
			["encounterName"] = "Pyromancer Loregrain",
			["source"] = "Pyromancer Loregrain",
			["npcID"] = 9024,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 231,
		},
		[400971] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sulfuric Rager",
			["npcID"] = 202622,
		},
		[288345] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Lady Jaina Proudmoore",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146409,
		},
		[382542] = {
			["source"] = "Ice Burrower",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190319,
		},
		[376399] = {
			["source"] = "Wild Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192188,
		},
		[394829] = {
			["source"] = "Osseous Broodmother",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203348,
		},
		[117665] = {
			["encounterName"] = "Sha of Doubt",
			["source"] = "Sha of Doubt",
			["npcID"] = 56439,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1439,
		},
		[39127] = {
			["source"] = "Sunseeker Chemist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19486,
		},
		[400974] = {
			["source"] = "Flamebringer Elementalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203705,
		},
		[386640] = {
			["source"] = "Tarasek Looter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187242,
		},
		[396879] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enraged Air Elemental",
			["npcID"] = 196155,
		},
		[415309] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Great Glorious Alliance Paladin",
			["npcID"] = 207579,
		},
		[370259] = {
			["source"] = "Primal Earth Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187322,
		},
		[8376] = {
			["encounterName"] = "Jammal'an the Prophet",
			["source"] = "Jammal'an the Prophet",
			["encounterID"] = 488,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5710,
		},
		[294493] = {
			["source"] = "Timeless Causality",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186464,
		},
		[394833] = {
			["source"] = "Plainswalker Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187937,
		},
		[407120] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Axe Thrower",
			["npcID"] = 203799,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[400977] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[172860] = {
			["source"] = "Grom'kar Battlemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83025,
		},
		[396882] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enraged Air Elemental",
			["npcID"] = 196155,
		},
		[191290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crashin' Thrashin' Mortar",
			["npcID"] = 76642,
		},
		[372310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Reaver",
			["npcID"] = 200756,
		},
		[162622] = {
			["source"] = "Huezeki Windsong",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205497,
		},
		[384597] = {
			["source"] = "Qalashi Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193293,
		},
		[378454] = {
			["source"] = "Primal Stonekin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194291,
		},
		[372311] = {
			["source"] = "Qalashi Trainee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189266,
		},
		[208697] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Deathglare Tentacle",
			["npcID"] = 105322,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1873,
		},
		[355930] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Interrogation Specialist",
			["npcID"] = 177816,
		},
		[407124] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Knight",
			["npcID"] = 208165,
		},
		[327262] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valinor",
			["npcID"] = 167524,
		},
		[419411] = {
			["source"] = "Ursoc the Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206834,
		},
		[407125] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Knight",
			["npcID"] = 208165,
		},
		[388696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gahz'raxes",
			["npcID"] = 200537,
		},
		[57046] = {
			["source"] = "Crazed Mana-Surge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26737,
		},
		[409174] = {
			["source"] = "Incarnation of Entropy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203811,
		},
		[372315] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Kadros Icewrath",
			["npcID"] = 187771,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[258869] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashvane Flamecaster",
			["npcID"] = 127488,
		},
		[374364] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[374365] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181861,
		},
		[409177] = {
			["source"] = "Entropic Hatred",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203809,
		},
		[403034] = {
			["source"] = "Fyrakk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200832,
		},
		[44504] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wretched Husk",
			["npcID"] = 24690,
		},
		[92072] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Or'Kalar",
			["npcID"] = 2773,
		},
		[300650] = {
			["source"] = "Toxic Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150169,
		},
		[382561] = {
			["source"] = "Snowhide Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189654,
		},
		[32749] = {
			["encounterName"] = "High Inquisitor Whitemane",
			["source"] = "Scarlet Wizard",
			["encounterID"] = 450,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4300,
		},
		[386658] = {
			["source"] = "Molkeej",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195430,
		},
		[388706] = {
			["source"] = "Invading Storm Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191235,
		},
		[382563] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[327274] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valinor",
			["npcID"] = 167524,
		},
		[329322] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Soulbinder",
			["npcID"] = 155831,
		},
		[366182] = {
			["source"] = "Illicit Collector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183498,
		},
		[386660] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[366183] = {
			["source"] = "Illicit Collector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183498,
		},
		[106920] = {
			["source"] = "Regenerating Sha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56763,
		},
		[421473] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 206172,
		},
		[183108] = {
			["source"] = "Larivi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192747,
		},
		[366185] = {
			["source"] = "Hired Muscle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183499,
		},
		[329326] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Soulbinder",
			["npcID"] = 155831,
		},
		[355947] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Defiler",
			["npcID"] = 181044,
		},
		[166727] = {
			["source"] = "Fireblade Invoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77047,
		},
		[390760] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chief Grrlgllmesh",
			["npcID"] = 186678,
		},
		[400999] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonesifter Marwak",
			["npcID"] = 200681,
		},
		[425573] = {
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210423,
		},
		[288374] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Lady Jaina Proudmoore",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146409,
		},
		[366189] = {
			["source"] = "Thieveing Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183500,
		},
		[366190] = {
			["source"] = "Twisted Worldeater",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183495,
		},
		[384620] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[22127] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nordrassil Druid",
			["npcID"] = 38952,
		},
		[396907] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Yu'lon",
			["npcID"] = 56762,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[267899] = {
			["encounterName"] = "Tidesage Council",
			["source"] = "Brother Ironhull",
			["encounterID"] = 2131,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134063,
		},
		[314998] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Shadowcrafter",
			["npcID"] = 161416,
		},
		[423529] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anguished Dream Spirit",
			["npcID"] = 210304,
		},
		[417386] = {
			["source"] = "Valhalas Vargul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207804,
		},
		[394861] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Henlare",
			["npcID"] = 193229,
		},
		[390766] = {
			["source"] = "Blitztusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190907,
		},
		[384623] = {
			["source"] = "Qalashi Blacksmith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189471,
		},
		[39131] = {
			["encounterName"] = "Thorngrin the Tender",
			["source"] = "Thorngrin the Tender",
			["encounterID"] = 1928,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17978,
		},
		[315000] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Shadowcrafter",
			["npcID"] = 161416,
		},
		[423531] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anguished Dream Spirit",
			["npcID"] = 210304,
		},
		[170827] = {
			["source"] = "Khargax the Devourer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81537,
		},
		[16496] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Master Engineer Telonicus",
			["npcID"] = 20063,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 733,
		},
		[382578] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184131,
		},
		[366197] = {
			["source"] = "Thieveing Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183500,
		},
		[403057] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[366199] = {
			["source"] = "Twisted Worldeater",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183495,
		},
		[174925] = {
			["source"] = "Vined Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77226,
		},
		[46043] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Warlock",
			["npcID"] = 24686,
		},
		[394869] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boneshaper Jardak",
			["npcID"] = 188693,
		},
		[335485] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stygian Behemoth",
			["npcID"] = 181064,
		},
		[87471] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Trained Brineshell Snapper",
			["npcID"] = 65330,
		},
		[97198] = {
			["encounterName"] = "Jin'do the Godbreaker",
			["source"] = "Gurubashi Spirit",
			["encounterID"] = 1182,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 52730,
		},
		[384633] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[306819] = {
			["encounterName"] = "Ra-den the Despoiled",
			["source"] = "Ra-den",
			["npcID"] = 156866,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2331,
		},
		[407159] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["npcID"] = 198997,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2668,
		},
		[315011] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Shadowcrafter",
			["npcID"] = 161416,
		},
		[163665] = {
			["encounterName"] = "Grimrail Enforcers",
			["source"] = "Makogg Emberblade",
			["encounterID"] = 1748,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80805,
		},
		[312964] = {
			["source"] = "Amathet Devoted",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152649,
		},
		[298630] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voidbound Shieldbearer",
			["npcID"] = 156146,
		},
		[390780] = {
			["source"] = "Blitztusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190907,
		},
		[360064] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nascence Attendant",
			["npcID"] = 181945,
		},
		[394876] = {
			["source"] = "Phenran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193688,
		},
		[46044] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Imp",
			["npcID"] = 24815,
		},
		[209741] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Image of Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105754,
		},
		[396925] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197149,
		},
		[171858] = {
			["source"] = "Clarice Chapmann",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159210,
		},
		[39133] = {
			["encounterName"] = "Warp Splinter",
			["source"] = "Warp Splinter",
			["encounterID"] = 1929,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17977,
		},
		[405117] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Shaz'ra",
			["npcID"] = 200885,
		},
		[401022] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[382593] = {
			["source"] = "Cruel Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186206,
		},
		[171859] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmane Earthbinder",
			["npcID"] = 82944,
		},
		[370307] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[421501] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208367,
		},
		[174931] = {
			["source"] = "Bloom Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81575,
		},
		[417406] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ankura Bloodhewer",
			["npcID"] = 207589,
		},
		[272016] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imprisoned Cabalist",
			["npcID"] = 154014,
		},
		[17137] = {
			["source"] = "Master Apothecary Lydon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48020,
		},
		[409216] = {
			["source"] = "Sundered Manaweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198872,
		},
		[165717] = {
			["source"] = "Alya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82002,
		},
		[398978] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Caster",
			["npcID"] = 200824,
		},
		[409217] = {
			["source"] = "Sundered Manaweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198872,
		},
		[388741] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ghostly Researcher",
			["npcID"] = 203013,
		},
		[386694] = {
			["source"] = "Stormsurge Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194897,
		},
		[398981] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stalwart Broodwarden",
			["npcID"] = 198263,
		},
		[163671] = {
			["source"] = "Nar'thalas Nightwatcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88782,
		},
		[355979] = {
			["source"] = "Ebon Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185313,
		},
		[174934] = {
			["source"] = "Bloom Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81575,
		},
		[384648] = {
			["source"] = "Gnarls",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197354,
		},
		[360076] = {
			["source"] = "Subjugated Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184767,
		},
		[388745] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Icy Blue Crab",
			["npcID"] = 197862,
		},
		[337552] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unbreakable Urtz",
			["npcID"] = 162853,
		},
		[265881] = {
			["source"] = "Matron Alma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135365,
		},
		[398985] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Broodguardian Ziruss",
			["npcID"] = 198214,
		},
		[116] = {
			["npcID"] = 188027,
		},
		[388747] = {
			["source"] = "Boggy Bullfrog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193699,
		},
		[174936] = {
			["source"] = "Voice of Iyu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81634,
		},
		[257870] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Buccaneer",
			["npcID"] = 130011,
		},
		[394891] = {
			["source"] = "Braekkas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196855,
		},
		[317077] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Harpy Snatcher",
			["npcID"] = 152571,
		},
		[331412] = {
			["source"] = "Deepscar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162797,
		},
		[46046] = {
			["source"] = "Sunblade Physician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24687,
		},
		[394893] = {
			["source"] = "Lookout Mordren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193668,
		},
		[15801] = {
			["source"] = "Smolderthorn Seer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9269,
		},
		[319127] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Goldenback Grazer",
			["npcID"] = 169123,
		},
		[372369] = {
			["source"] = "Shadepaw Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186490,
		},
		[142174] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Small Illusionary Guardian",
			["npcID"] = 71079,
		},
		[394895] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phenran",
			["npcID"] = 193688,
		},
		[366227] = {
			["source"] = "Foul Gorger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183496,
		},
		[172891] = {
			["source"] = "Commander Gar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85571,
		},
		[256849] = {
			["source"] = "Dinomancer Kish'o",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129553,
		},
		[409231] = {
			["source"] = "Colossal Draconic Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203826,
		},
		[59357] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Shadowcaster",
			["encounterID"] = 1971,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28733,
		},
		[405137] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Shaz'ra",
			["npcID"] = 200885,
		},
		[337562] = {
			["source"] = "Devmorta",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162875,
		},
		[227158] = {
			["source"] = "Darkspear Headhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113034,
		},
		[256851] = {
			["source"] = "Defiled Worshiper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 126090,
		},
		[392854] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Scythid Queen",
			["npcID"] = 184853,
		},
		[368282] = {
			["isChanneled"] = true,
			["source"] = "Corrupted Architect",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 183953,
		},
		[394903] = {
			["source"] = "Lookout Mordren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193668,
		},
		[388760] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["npcID"] = 189729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[106421] = {
			["source"] = "Shado-Pan Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59741,
		},
		[427668] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[274087] = {
			["source"] = "Zekhan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153789,
		},
		[191325] = {
			["encounterName"] = "Dresaron",
			["source"] = "Dresaron",
			["encounterID"] = 1838,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 99200,
		},
		[169824] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Spore Image",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84984,
		},
		[85944] = {
			["source"] = "Lord Godfrey",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46028,
		},
		[205660] = {
			["source"] = "Observant Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107449,
		},
		[382620] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[321188] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quilboar Geomancer",
			["npcID"] = 150238,
		},
		[169825] = {
			["source"] = "Addled Arcanomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84990,
		},
		[374430] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Tectonic Crusher",
			["npcID"] = 190588,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[368287] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[156515] = {
			["source"] = "Whirling Dervish",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77605,
		},
		[356001] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Armored Overseer",
			["npcID"] = 177808,
		},
		[308903] = {
			["encounterName"] = "Maut",
			["source"] = "Maut",
			["npcID"] = 156523,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2327,
		},
		[193375] = {
			["encounterName"] = "Ularogg Cragshaper",
			["source"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91004,
		},
		[11642] = {
			["source"] = "Murta Grimgut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7608,
		},
		[69051] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36502,
		},
		[184] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blackrock Summoner",
			["npcID"] = 4463,
		},
		[403101] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["npcID"] = 201773,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[11962] = {
			["source"] = "Oro Eyegouge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7606,
		},
		[48096] = {
			["encounterName"] = "Keristrasza",
			["source"] = "Keristrasza",
			["npcID"] = 26723,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2011,
		},
		[272046] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Sharkbait",
			["npcID"] = 126841,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[407198] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[198496] = {
			["encounterName"] = "Ularogg Cragshaper",
			["source"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91004,
		},
		[407199] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[386722] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormbound Striker",
			["npcID"] = 199800,
		},
		[194401] = {
			["source"] = "Defiled Grovewalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113646,
		},
		[407200] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[69564] = {
			["source"] = "Soulguard Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36620,
		},
		[3263] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hand of Ravenclaw",
			["npcID"] = 1870,
		},
		[343722] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huwerath",
			["npcID"] = 162965,
		},
		[388773] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["npcID"] = 186738,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[317102] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "N'Zoth the Corruptor",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158041,
		},
		[302768] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spawn of Wekemara",
			["npcID"] = 155702,
		},
		[394917] = {
			["encounterName"] = "Eranog",
			["source"] = "Flamescale Captain",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199233,
		},
		[392870] = {
			["source"] = "Uurhilt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194760,
		},
		[411300] = {
			["source"] = "Time-Lost Waveshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205363,
		},
		[306865] = {
			["encounterName"] = "Ra-den the Despoiled",
			["source"] = "Ra-den",
			["encounterID"] = 2331,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156866,
		},
		[407205] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Destroyer",
			["npcID"] = 208208,
		},
		[258908] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sethrak Invader",
			["npcID"] = 130411,
		},
		[372394] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[278198] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Defender",
			["npcID"] = 148393,
		},
		[407207] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[162665] = {
			["source"] = "Grom'kar Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75749,
		},
		[278200] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Defender",
			["npcID"] = 148393,
		},
		[59616] = {
			["source"] = "Dragonflayer Runecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23960,
		},
		[372397] = {
			["source"] = "Brackenhide Scrapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186359,
		},
		[152427] = {
			["source"] = "Magma Lord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75211,
		},
		[337587] = {
			["source"] = "Mistress Dyrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162880,
		},
		[142189] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Large Illusionary Amber-Weaver",
			["npcID"] = 71068,
		},
		[384686] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[407212] = {
			["encounterName"] = "Echo of Neltharion",
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Dragonhunter",
			["npcID"] = 202108,
		},
		[204646] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["encounterID"] = 1837,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103344,
		},
		[256864] = {
			["source"] = "Dinomancer Kish'o",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129553,
		},
		[409261] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["npcID"] = 198933,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2669,
		},
		[396975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Firava the Rekindler",
			["npcID"] = 195915,
		},
		[162668] = {
			["source"] = "Grom'kar Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75749,
		},
		[165740] = {
			["source"] = "Bonesaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82010,
		},
		[399024] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Farscale Brute",
			["npcID"] = 200486,
		},
		[17140] = {
			["source"] = "Ambermill Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 1888,
		},
		[399025] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Revenant",
			["npcID"] = 200720,
		},
		[417455] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[59617] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Dragonflayer Runecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23960,
		},
		[165741] = {
			["source"] = "Challe Tebrilinde",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82005,
		},
		[96189] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shattered Sun Marksman",
			["npcID"] = 24938,
		},
		[415409] = {
			["source"] = "Rupturing Firevine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207699,
		},
		[392884] = {
			["source"] = "Tevgai",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195132,
		},
		[116155] = {
			["source"] = "Bubbling Brew Alemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59521,
		},
		[419506] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[421554] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[267973] = {
			["source"] = "Temple Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134137,
		},
		[351931] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Torment Golem",
			["npcID"] = 176598,
		},
		[306881] = {
			["encounterName"] = "Ra-den the Despoiled",
			["source"] = "Void Hunter",
			["encounterID"] = 2331,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157366,
		},
		[270022] = {
			["source"] = "Silverback Thumpknuckle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130543,
		},
		[169839] = {
			["source"] = "Putrid Pyromancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84957,
		},
		[366267] = {
			["source"] = "Volatile Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185008,
		},
		[155505] = {
			["source"] = "Black Iron Engineer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76101,
		},
		[386745] = {
			["source"] = "Prozela Galeshot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193669,
		},
		[409271] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["npcID"] = 199703,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[258917] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashvane Priest",
			["npcID"] = 130028,
		},
		[169840] = {
			["source"] = "Infested Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84989,
		},
		[399033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Weyrn Spellslinger",
			["npcID"] = 200736,
		},
		[59362] = {
			["source"] = "Anub'ar Webspinner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29335,
		},
		[419511] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chronaxie",
			["npcID"] = 206070,
		},
		[315076] = {
			["source"] = "Stitchyard Surgeon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159679,
		},
		[423607] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[135029] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Elemental",
			["npcID"] = 78116,
		},
		[52451] = {
			["encounterName"] = "Salram the Fleshcrafter",
			["source"] = "Salramm the Fleshcrafter",
			["npcID"] = 26530,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2004,
		},
		[169841] = {
			["source"] = "Addled Arcanomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84990,
		},
		[30707] = {
			["encounterName"] = "Omor the Unscarred",
			["source"] = "Omor the Unscarred",
			["npcID"] = 17308,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1891,
		},
		[197486] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Brood Queen Tyranna",
			["npcID"] = 93802,
		},
		[366272] = {
			["source"] = "Taskmaster Xy'pro",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185032,
		},
		[267981] = {
			["source"] = "Shrine Templar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134139,
		},
		[126908] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shao-Tien Fist",
			["npcID"] = 58927,
		},
		[11899] = {
			["source"] = "Sandfury Witch Doctor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5650,
		},
		[419516] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chronaxie",
			["npcID"] = 206070,
		},
		[169843] = {
			["source"] = "Putrid Pyromancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84957,
		},
		[278222] = {
			["source"] = "Grimscowl the Harebrained",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 141059,
		},
		[427708] = {
			["source"] = "Reefbreaker Moruud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209898,
		},
		[388801] = {
			["source"] = "Risen Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195855,
		},
		[6270] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Muyoh",
			["npcID"] = 3678,
		},
		[243563] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crusty Sean",
			["npcID"] = 139647,
		},
		[171892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmane Longclaw",
			["npcID"] = 85900,
		},
		[411328] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Diganthor",
			["npcID"] = 204434,
		},
		[366278] = {
			["source"] = "Taskmaster Xy'pro",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185032,
		},
		[388804] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[362184] = {
			["encounterName"] = "Rygelon",
			["source"] = "Rygelon",
			["encounterID"] = 2549,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182777,
		},
		[423617] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[257899] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Ravager",
			["npcID"] = 130012,
		},
		[218992] = {
			["source"] = "Risen Legionnaire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 108830,
		},
		[407236] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shrinekeeper Qanosh",
			["npcID"] = 199839,
		},
		[304849] = {
			["source"] = "Frenzied Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152164,
		},
		[165751] = {
			["source"] = "Etubrute",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82187,
		},
		[419524] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Loose Time",
			["npcID"] = 209170,
		},
		[169847] = {
			["source"] = "Infested Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84989,
		},
		[252781] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zanchuli Witch-Doctor",
			["npcID"] = 122969,
		},
		[34791] = {
			["source"] = "Tempest-Forge Peacekeeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 18405,
		},
		[413385] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Minister of Air",
			["npcID"] = 45930,
		},
		[366287] = {
			["source"] = "Taskmaster Xy'pro",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185032,
		},
		[417481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Timeline Marauder",
			["npcID"] = 199748,
		},
		[364240] = {
			["encounterName"] = "Prototype Pantheon",
			["source"] = "Prototype of War",
			["encounterID"] = 2544,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181549,
		},
		[382670] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[360145] = {
			["encounterName"] = "Lords of Dread",
			["source"] = "Kin'tessa",
			["encounterID"] = 2543,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181399,
		},
		[364241] = {
			["encounterName"] = "Prototype Pantheon",
			["source"] = "Prototype of Renewal",
			["encounterID"] = 2544,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181546,
		},
		[267997] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Vilefiend",
			["npcID"] = 135816,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[55269] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Ocular",
			["npcID"] = 29747,
		},
		[415436] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coalesced Moment",
			["npcID"] = 206064,
		},
		[257904] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ludwig Von Tortollan",
			["npcID"] = 129699,
		},
		[321240] = {
			["encounterName"] = "Tunk",
			["source"] = "Tunk",
			["npcID"] = 157300,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2325,
		},
		[315097] = {
			["encounterName"] = "Il'gynoth, Corruption Reborn",
			["source"] = "Il'gynoth",
			["npcID"] = 158328,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2345,
		},
		[415437] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Timestream Leech",
			["npcID"] = 206066,
		},
		[388817] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[116162] = {
			["source"] = "Fizzy Brew Alemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59520,
		},
		[397010] = {
			["source"] = "Qalashi Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197147,
		},
		[256882] = {
			["source"] = "Monzumi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129552,
		},
		[272098] = {
			["source"] = "Blacktooth Brute",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131307,
		},
		[397011] = {
			["source"] = "Qalashi Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197147,
		},
		[163710] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shimmerwing Moth",
			["npcID"] = 79910,
		},
		[205689] = {
			["source"] = "Zanj'ir Huntress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155618,
		},
		[190331] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shuja Grimaxe",
			["npcID"] = 167664,
		},
		[99781] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Inferno Hawk",
			["npcID"] = 53648,
		},
		[401108] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Ignara",
			["npcID"] = 202791,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[9532] = {
			["source"] = "Muckgill",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 47759,
		},
		[388822] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["npcID"] = 190609,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2565,
		},
		[399061] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 200858,
		},
		[401109] = {
			["source"] = "Crimson Oldblood",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201054,
		},
		[372441] = {
			["source"] = "Hyenamaster Durgun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186515,
		},
		[399062] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 200858,
		},
		[257908] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Officer",
			["npcID"] = 127106,
		},
		[419540] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten General",
			["npcID"] = 207941,
		},
		[204667] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["encounterID"] = 1837,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103344,
		},
		[115652] = {
			["source"] = "Stout Brew Alemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59519,
		},
		[243575] = {
			["source"] = "Jambani Chosen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130221,
		},
		[399065] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200858,
		},
		[59366] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Silthik",
			["npcID"] = 28731,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1971,
		},
		[284393] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Sister Katherine",
			["encounterID"] = 2280,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146251,
		},
		[392924] = {
			["source"] = "High Channeler Ryvati",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197535,
		},
		[386781] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["encounterID"] = 2583,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186737,
		},
		[409307] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Blazing Dreadsquall",
			["npcID"] = 202262,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[258935] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashvane Priest",
			["npcID"] = 130028,
		},
		[399069] = {
			["source"] = "Farscale Tidelord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200488,
		},
		[360162] = {
			["encounterName"] = "Vigilant Guardian",
			["source"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180773,
		},
		[11836] = {
			["encounterName"] = "Ghaz'rilla",
			["source"] = "Gahz'rilla",
			["encounterID"] = 594,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7273,
		},
		[372449] = {
			["source"] = "Stormfang Bonecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187931,
		},
		[106439] = {
			["source"] = "Fragrant Lotus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56472,
		},
		[394976] = {
			["isChanneled"] = true,
			["source"] = "Void Lasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198757,
		},
		[83914] = {
			["encounterName"] = "Ozumat",
			["source"] = "Vicious Mindlasher",
			["npcID"] = 44715,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[394977] = {
			["source"] = "Frigidpelt Den Mother",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193698,
		},
		[372452] = {
			["source"] = "Snowstorm Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194158,
		},
		[399073] = {
			["source"] = "Farscale Tidelord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200488,
		},
		[403169] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ishyra",
			["npcID"] = 200579,
		},
		[409313] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[60903] = {
			["source"] = "Indigos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 47010,
		},
		[288497] = {
			["source"] = "Huezeki Windsong",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205497,
		},
		[311023] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Willing Sacrifice",
			["npcID"] = 162647,
		},
		[372456] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[85963] = {
			["source"] = "Lord Godfrey",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46028,
		},
		[421603] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["encounterID"] = 2786,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209090,
		},
		[382696] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184131,
		},
		[167815] = {
			["source"] = "Thunderlord Wrangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83390,
		},
		[399079] = {
			["source"] = "Farscale Tidelord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200488,
		},
		[200580] = {
			["source"] = "Festerhide Grizzly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95779,
		},
		[372460] = {
			["source"] = "Bakra the Bully",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186517,
		},
		[85964] = {
			["source"] = "Lord Godfrey",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46028,
		},
		[15228] = {
			["source"] = "Murkblood Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17771,
		},
		[268027] = {
			["source"] = "Living Current",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134144,
		},
		[360176] = {
			["encounterName"] = "Vigilant Guardian",
			["source"] = "Point Defense Drone",
			["encounterID"] = 2512,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181856,
		},
		[341747] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wailing Soul",
			["npcID"] = 174158,
		},
		[425706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Astromancer's Guard",
			["npcID"] = 208729,
		},
		[382704] = {
			["source"] = "Grand Artificer Zeerak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201553,
		},
		[386800] = {
			["source"] = "Galzuda",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193330,
		},
		[405230] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duzalgor",
			["npcID"] = 200610,
		},
		[40683] = {
			["encounterName"] = "Illidan Stormrage",
			["source"] = "Illidan Stormrage",
			["encounterID"] = 609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 22917,
		},
		[417517] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ankura Bloodhewer",
			["npcID"] = 207589,
		},
		[386801] = {
			["source"] = "Cragsworn Stoneshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195838,
		},
		[390897] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scalepiercer",
			["npcID"] = 186632,
		},
		[135056] = {
			["source"] = "Darkmoon Rabbit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58336,
		},
		[258945] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fangcaller Sraka",
			["npcID"] = 130466,
		},
		[427758] = {
			["source"] = "Envoy of Winter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209929,
		},
		[382708] = {
			["source"] = "Qalashi Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193293,
		},
		[397043] = {
			["source"] = "Cyclas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199029,
		},
		[172941] = {
			["source"] = "Sor the Eradicator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80691,
		},
		[360185] = {
			["source"] = "Lured Smasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183580,
		},
		[413427] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pendule",
			["npcID"] = 206074,
		},
		[407285] = {
			["encounterName"] = "Echo of Neltharion",
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Skullcrusher",
			["npcID"] = 202258,
		},
		[311041] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Umbral Seer",
			["npcID"] = 159219,
		},
		[263943] = {
			["source"] = "Heartsbane Runeweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131677,
		},
		[372474] = {
			["source"] = "Shikaar Ranger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180393,
		},
		[384761] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[388857] = {
			["source"] = "Rampaging Forest Giant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194741,
		},
		[83920] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skymane Bonobo",
			["npcID"] = 43417,
		},
		[78801] = {
			["encounterName"] = "Hydromancer Velratha",
			["source"] = "Hydromancer Velratha",
			["encounterID"] = 593,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7795,
		},
		[311045] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Initiate",
			["npcID"] = 160182,
		},
		[397051] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cyclas",
			["npcID"] = 199029,
		},
		[308998] = {
			["source"] = "Fallen Taskmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158437,
		},
		[311046] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Umbral Seer",
			["npcID"] = 159219,
		},
		[392957] = {
			["source"] = "Azure Vorquin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190216,
		},
		[388862] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupted Manafiend",
			["npcID"] = 196045,
		},
		[407292] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Erupting Shadowflame",
			["npcID"] = 199838,
		},
		[388863] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupted Manafiend",
			["npcID"] = 196045,
		},
		[150421] = {
			["source"] = "Pale Flinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76465,
		},
		[427771] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[390912] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vile Lasher",
			["npcID"] = 197219,
		},
		[106447] = {
			["source"] = "Shado-Pan Novice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56395,
		},
		[413438] = {
			["source"] = "Void Lord Aurvizk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200865,
		},
		[178067] = {
			["source"] = "Sea Skrog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88094,
		},
		[179091] = {
			["source"] = "Nar'thalas Magister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88783,
		},
		[311052] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maddened Conscript",
			["npcID"] = 159305,
		},
		[296718] = {
			["source"] = "Faceless Willbreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152987,
		},
		[374533] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189478,
		},
		[151447] = {
			["source"] = "Bloodmaul Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84978,
		},
		[411393] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bogg",
			["npcID"] = 201747,
		},
		[372486] = {
			["source"] = "Waste Water Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187497,
		},
		[390916] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Melkhop",
			["npcID"] = 193311,
		},
		[411394] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bogg",
			["npcID"] = 201747,
		},
		[169878] = {
			["encounterName"] = "Yalnu",
			["source"] = "Vicious Mandragora",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84399,
		},
		[300818] = {
			["source"] = "Gnome-Eating Droplet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 154663,
		},
		[263959] = {
			["source"] = "Heartsbane Soulcharmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131812,
		},
		[421636] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["encounterID"] = 2786,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209090,
		},
		[411399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bogg",
			["npcID"] = 201747,
		},
		[409352] = {
			["encounterName"] = "Echo of Neltharion",
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Dreadsquall",
			["npcID"] = 202262,
		},
		[172952] = {
			["source"] = "Siegemaster Olugar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83026,
		},
		[352016] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vault Sentinel",
			["npcID"] = 185027,
		},
		[372494] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormshackler Rynea",
			["npcID"] = 189391,
		},
		[372495] = {
			["source"] = "Ensnaring Current",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191328,
		},
		[390926] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Gastrinax",
			["npcID"] = 203521,
		},
		[15869] = {
			["source"] = "Drakkari Witch Doctor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 27555,
		},
		[411404] = {
			["source"] = "Shade of Skytalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204430,
		},
		[142238] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Large Illusionary Mystic",
			["npcID"] = 71069,
		},
		[306971] = {
			["encounterName"] = "Carapace of N'Zoth",
			["source"] = "Fury of N'Zoth",
			["encounterID"] = 2337,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157439,
		},
		[116178] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sudsy Brew Alemental",
			["npcID"] = 59522,
		},
		[151454] = {
			["encounterName"] = "Groyat, the Blind Hunter",
			["source"] = "Groyat, the Blind Hunter",
			["encounterID"] = 1660,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75247,
		},
		[411407] = {
			["source"] = "Time-Lost Waveshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205363,
		},
		[388882] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[69080] = {
			["source"] = "Soulguard Bonecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36564,
		},
		[44271] = {
			["source"] = "Garaxxas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24555,
		},
		[154527] = {
			["source"] = "Sargerei Soulbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77812,
		},
		[413458] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Osthilde",
			["npcID"] = 200867,
		},
		[309023] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shith'rus the Manipulator",
			["npcID"] = 154727,
		},
		[395029] = {
			["isChanneled"] = true,
			["source"] = "Flashfrost Earthshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195119,
		},
		[274212] = {
			["source"] = "Drowned Depthbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134418,
		},
		[390934] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Melkhop",
			["npcID"] = 193311,
		},
		[274213] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131383,
		},
		[166815] = {
			["source"] = "Warsong Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75745,
		},
		[186269] = {
			["source"] = "Blightshard Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90998,
		},
		[401175] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ebyssian",
			["npcID"] = 201707,
		},
		[272167] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Bilescourge",
			["npcID"] = 136404,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[319266] = {
			["source"] = "Steelskin Vanguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157669,
		},
		[390938] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aggravated Skitterfly",
			["npcID"] = 197406,
		},
		[282408] = {
			["encounterName"] = "Mekkatorque",
			["source"] = "Spark Bot",
			["encounterID"] = 2276,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144942,
		},
		[176032] = {
			["source"] = "Grom'kar Cinderseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88163,
		},
		[395035] = {
			["source"] = "Soulharvester Galtmaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195927,
		},
		[97239] = {
			["source"] = "Gurubashi Shadow Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 52327,
		},
		[382749] = {
			["source"] = "Bossy Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190998,
		},
		[300840] = {
			["source"] = "Inhuman Test Subject",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202147,
		},
		[266029] = {
			["source"] = "Windcaller Ula'jan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133140,
		},
		[276268] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless Despoiler",
			["npcID"] = 156568,
		},
		[31865] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Seductress",
			["npcID"] = 17399,
		},
		[270126] = {
			["source"] = "Necropolis Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135253,
		},
		[362275] = {
			["encounterName"] = "Rygelon",
			["source"] = "Rygelon",
			["encounterID"] = 2549,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182777,
		},
		[360228] = {
			["source"] = "Subjugated Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184767,
		},
		[386849] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Storm",
			["npcID"] = 195846,
		},
		[405279] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["npcID"] = 198999,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2671,
		},
		[374563] = {
			["source"] = "Dazzling Dragonfly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190362,
		},
		[360229] = {
			["encounterName"] = "Lords of Dread",
			["source"] = "Kin'tessa",
			["encounterID"] = 2543,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181399,
		},
		[306988] = {
			["encounterName"] = "Carapace of N'Zoth",
			["source"] = "Fury of N'Zoth",
			["encounterID"] = 2337,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157439,
		},
		[311084] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maddened Conscript",
			["npcID"] = 159305,
		},
		[222110] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Pounder",
			["npcID"] = 111405,
		},
		[366374] = {
			["encounterName"] = "The Jailer",
			["source"] = "The Jailer",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180990,
		},
		[327467] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Custodian Thonar",
			["npcID"] = 185011,
		},
		[413473] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Temporal Deviation",
			["npcID"] = 206063,
		},
		[266036] = {
			["source"] = "Thistle Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135474,
		},
		[374567] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[272180] = {
			["source"] = "Grotesque Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138187,
		},
		[202658] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Malignant Defiler",
			["npcID"] = 102584,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[407332] = {
			["source"] = "Agitated Dustmoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202316,
		},
		[196515] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Binder Ashioi",
			["npcID"] = 100250,
		},
		[364330] = {
			["source"] = "Acquisitions Automa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184737,
		},
		[374569] = {
			["source"] = "Monstrous Decay",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186227,
		},
		[160680] = {
			["encounterName"] = "Nitrogg Thundertower",
			["source"] = "Assault Cannon",
			["encounterID"] = 1732,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79548,
		},
		[366379] = {
			["encounterName"] = "Rygelon",
			["source"] = "Rygelon",
			["encounterID"] = 2549,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182777,
		},
		[294708] = {
			["source"] = "Telur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151909,
		},
		[274231] = {
			["source"] = "Quid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 154106,
		},
		[300852] = {
			["source"] = "Inhuman Test Subject",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202147,
		},
		[401192] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quicksmack Magk",
			["npcID"] = 204651,
		},
		[160681] = {
			["encounterName"] = "Nitrogg Thundertower",
			["source"] = "Assault Cannon",
			["encounterID"] = 1732,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 79548,
		},
		[401193] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nevroll's Drogbar",
			["npcID"] = 203041,
		},
		[409385] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201934,
		},
		[411433] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Violetwing Stagbeetle",
			["npcID"] = 205384,
		},
		[52721] = {
			["encounterName"] = "Mal'ganis",
			["source"] = "Mal'Ganis",
			["npcID"] = 26533,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2005,
		},
		[203685] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Mogu'shan Secret-Keeper",
			["npcID"] = 99676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[397100] = {
			["source"] = "Magmas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199027,
		},
		[22907] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1947,
		},
		[319286] = {
			["source"] = "Manifestation of Rage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 164084,
		},
		[218020] = {
			["source"] = "Agitated Stonewarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 108856,
		},
		[413483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apiazhus",
			["npcID"] = 200981,
		},
		[372529] = {
			["source"] = "Shadepaw Thief",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192748,
		},
		[200615] = {
			["source"] = "Eredar Sorcerer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102726,
		},
		[411437] = {
			["source"] = "Sundered Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198874,
		},
		[290621] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Lady Jaina Proudmoore",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146409,
		},
		[191401] = {
			["source"] = "Valarjar Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96640,
		},
		[411439] = {
			["source"] = "Sundered Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198874,
		},
		[413487] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Temporal Fusion",
			["npcID"] = 206068,
		},
		[319292] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ogre Overseer",
			["npcID"] = 156676,
		},
		[419632] = {
			["isChanneled"] = true,
			["source"] = "Pendule",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208945,
		},
		[52722] = {
			["encounterName"] = "Mal'ganis",
			["source"] = "Mal'Ganis",
			["npcID"] = 26533,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2005,
		},
		[197546] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Illysanna Ravencrest",
			["npcID"] = 98696,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1833,
		},
		[309055] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Baruk Stoneshaper",
			["npcID"] = 155957,
		},
		[302912] = {
			["source"] = "Zanj'ir Trapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153962,
		},
		[397109] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Air Revenant",
			["npcID"] = 203743,
		},
		[384823] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["npcID"] = 189886,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2606,
		},
		[397110] = {
			["source"] = "Entropic Diruption",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201598,
		},
		[270150] = {
			["source"] = "Feathered Viper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 132409,
		},
		[264007] = {
			["source"] = "Vol'jamba",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131241,
		},
		[372538] = {
			["source"] = "Lava Flare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189470,
		},
		[374586] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189478,
		},
		[409398] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Guardian",
			["npcID"] = 203831,
		},
		[397112] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Proto-Dragon",
			["npcID"] = 189798,
		},
		[335680] = {
			["source"] = "Mawsworn Converter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181782,
		},
		[42740] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Runecaster",
			["npcID"] = 23960,
		},
		[401209] = {
			["source"] = "Deepbed Longwalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203917,
		},
		[388923] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["npcID"] = 196482,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2563,
		},
		[309061] = {
			["source"] = "Baruk Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153099,
		},
		[88032] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Vortex",
			["npcID"] = 45912,
		},
		[44276] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Zelfan",
			["npcID"] = 24556,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[113629] = {
			["source"] = "Boneweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59193,
		},
		[407354] = {
			["source"] = "Slaghide Shalewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202303,
		},
		[388925] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[309063] = {
			["source"] = "Baruk Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153099,
		},
		[401212] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Goopal",
			["npcID"] = 203477,
		},
		[153524] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Plagued Bat",
			["npcID"] = 75459,
		},
		[382783] = {
			["source"] = "Obsidian Tyrant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202483,
		},
		[39413] = {
			["source"] = "Murkblood Spearman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17729,
		},
		[401214] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elder Honeypelt",
			["npcID"] = 202451,
		},
		[153525] = {
			["encounterName"] = "Roogug",
			["source"] = "Roogug",
			["encounterID"] = 438,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74948,
		},
		[362308] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malfunctioned Constructor",
			["npcID"] = 181870,
		},
		[407359] = {
			["source"] = "Slaghide Shalewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202303,
		},
		[401216] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nevroll",
			["npcID"] = 203039,
		},
		[307020] = {
			["encounterName"] = "Vexiona",
			["source"] = "Vexiona",
			["npcID"] = 157354,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2336,
		},
		[382787] = {
			["source"] = "Disease Slasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187315,
		},
		[376644] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[390979] = {
			["source"] = "Lurgan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201540,
		},
		[168885] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[266067] = {
			["source"] = "Loa-Speaker Kihara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 132979,
		},
		[343883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shuja Grimaxe",
			["npcID"] = 167664,
		},
		[304976] = {
			["encounterName"] = "Inquisitor Gnshal",
			["source"] = "Inquisitor Gnshal",
			["npcID"] = 156161,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2371,
		},
		[405316] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[390982] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Huntmaster",
			["npcID"] = 185353,
		},
		[172982] = {
			["source"] = "Siegemaster Olugar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83026,
		},
		[372553] = {
			["source"] = "Darktooth Howler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195273,
		},
		[390983] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalbound Water Spirit",
			["npcID"] = 190739,
		},
		[335694] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Endbringer",
			["npcID"] = 157810,
		},
		[390984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Earthshaper",
			["npcID"] = 190996,
		},
		[425796] = {
			["source"] = "Harbinger of Incineration",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210147,
		},
		[362316] = {
			["source"] = "Miru Jasyn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183448,
		},
		[199604] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sledge",
			["npcID"] = 92990,
		},
		[403272] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[382795] = {
			["isChanneled"] = true,
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193944,
		},
		[360270] = {
			["source"] = "Oracle Zoketh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181625,
		},
		[372557] = {
			["source"] = "Darktooth Howler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195273,
		},
		[390987] = {
			["source"] = "Nokhud Brute",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185168,
		},
		[390988] = {
			["source"] = "Forge-Keep Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192700,
		},
		[45046] = {
			["source"] = "Eredar Sorcerer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 25033,
		},
		[197558] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95674,
		},
		[388941] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hulking Wave",
			["npcID"] = 187793,
		},
		[200630] = {
			["source"] = "Mindshattered Screecher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95769,
		},
		[388942] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Ravager",
			["npcID"] = 196671,
		},
		[276316] = {
			["source"] = "Risen Abomination",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145120,
		},
		[419659] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ignit the Firebranded",
			["npcID"] = 209620,
		},
		[372561] = {
			["source"] = "Qalashi Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189227,
		},
		[311129] = {
			["source"] = "Overwhelming Confusion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161829,
		},
		[388944] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hulking Wave",
			["npcID"] = 187793,
		},
		[114658] = {
			["encounterName"] = "Instructor Chillheart",
			["source"] = "Instructor Chillheart",
			["encounterID"] = 1426,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58633,
		},
		[382802] = {
			["source"] = "Vile Rothexer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187224,
		},
		[25085] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Syndicate Conjuror",
			["npcID"] = 2590,
		},
		[311132] = {
			["source"] = "Ha-Li",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157153,
		},
		[372566] = {
			["source"] = "Qalashi Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189227,
		},
		[317277] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magni Bronzebeard",
			["npcID"] = 154533,
		},
		[302943] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zanj'ir Trapper",
			["npcID"] = 153962,
		},
		[325469] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decrepit Bilespawn",
			["npcID"] = 166928,
		},
		[401236] = {
			["source"] = "Nidharr",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201310,
		},
		[405332] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gahz'raxes",
			["npcID"] = 200537,
		},
		[417619] = {
			["isChanneled"] = true,
			["source"] = "Gill'dan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204808,
		},
		[427858] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["npcID"] = 82682,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1751,
		},
		[87527] = {
			["source"] = "Dustbelcher Initiate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46694,
		},
		[388952] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Echoed Lurker",
			["npcID"] = 202636,
		},
		[360284] = {
			["encounterName"] = "Lords of Dread",
			["source"] = "Kin'tessa",
			["encounterID"] = 2543,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181399,
		},
		[254901] = {
			["source"] = "Atal'Shadra Bloodletter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122872,
		},
		[395097] = {
			["source"] = "Emberdusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203664,
		},
		[210875] = {
			["source"] = "Stormforged Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96574,
		},
		[434005] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilnean Alchemist",
			["npcID"] = 213995,
		},
		[59638] = {
			["encounterName"] = "Terros",
			["source"] = "Mirror Image",
			["npcID"] = 31216,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[391003] = {
			["source"] = "High Shaman Rotknuckle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197356,
		},
		[200637] = {
			["encounterName"] = "Dargrul the Underking",
			["source"] = "Dargrul",
			["encounterID"] = 1793,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91007,
		},
		[427863] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["npcID"] = 82682,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1751,
		},
		[413529] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Timestream Anomaly",
			["npcID"] = 199749,
		},
		[374622] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Thundering Ravager",
			["npcID"] = 190690,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[425816] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Tainted Treant",
			["npcID"] = 211904,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[37113] = {
			["source"] = "Murkblood Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17771,
		},
		[374623] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frozen Destroyer",
			["npcID"] = 190686,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[319334] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jugnug",
			["npcID"] = 153583,
		},
		[388958] = {
			["isChanneled"] = true,
			["source"] = "Spellbound Scepter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 196671,
		},
		[391006] = {
			["source"] = "Blisterhide",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197353,
		},
		[196543] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95674,
		},
		[407389] = {
			["source"] = "Brimstone Serpent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202272,
		},
		[409437] = {
			["source"] = "Voracious Magma Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203825,
		},
		[12160] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Druid",
			["npcID"] = 68486,
		},
		[32637] = {
			["source"] = "Doomwalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 167749,
		},
		[124389] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Slitherscale Ripper",
			["npcID"] = 58212,
		},
		[401248] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["npcID"] = 198998,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2670,
		},
		[155590] = {
			["source"] = "Black Iron Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77036,
		},
		[264050] = {
			["source"] = "Thistle Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135474,
		},
		[78827] = {
			["isChanneled"] = true,
			["source"] = "Blood Guard Gro'tash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 67927,
		},
		[317292] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "N'Zoth the Corruptor",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162480,
		},
		[360295] = {
			["encounterName"] = "Prototype Pantheon",
			["source"] = "Prototype of War",
			["encounterID"] = 2544,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181549,
		},
		[18431] = {
			["encounterName"] = "Onyxia",
			["source"] = "Onyxia",
			["npcID"] = 10184,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1084,
		},
		[106984] = {
			["encounterName"] = "Gu Cloudstrike",
			["source"] = "Gu Cloudstrike",
			["encounterID"] = 1303,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56747,
		},
		[256955] = {
			["encounterName"] = "Knight Captain Valyri",
			["event"] = "SPELL_CAST_START",
			["source"] = "Knight Captain Valyri",
			["npcID"] = 127490,
		},
		[200642] = {
			["source"] = "Dreadsoul Ruiner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95771,
		},
		[153544] = {
			["source"] = "Soaring Chakram Master",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76132,
		},
		[198595] = {
			["source"] = "Valarjar Thundercaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95842,
		},
		[409445] = {
			["source"] = "Voracious Magma Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203825,
		},
		[305010] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tidemistress Ethendriss",
			["npcID"] = 153934,
		},
		[374634] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189478,
		},
		[360300] = {
			["encounterName"] = "Lords of Dread",
			["source"] = "Mal'Ganis",
			["encounterID"] = 2543,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181398,
		},
		[386921] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194367,
		},
		[376683] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[378731] = {
			["source"] = "Frigellus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189217,
		},
		[274296] = {
			["source"] = "Rotting Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 139709,
		},
		[127463] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shao-Tien Antiquator",
			["npcID"] = 58928,
		},
		[413544] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Timestream Anomaly",
			["npcID"] = 199749,
		},
		[391019] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[401258] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[395115] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smogswog the Firebreather",
			["npcID"] = 193120,
		},
		[15232] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Keeper",
			["npcID"] = 24762,
		},
		[360304] = {
			["encounterName"] = "Lords of Dread",
			["source"] = "Kin'tessa",
			["encounterID"] = 2543,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181399,
		},
		[256959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reanimated Honor Guard",
			["npcID"] = 127757,
		},
		[403309] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Expulsion Drone",
			["npcID"] = 202592,
		},
		[16000] = {
			["source"] = "Celebrian Dryad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130273,
		},
		[79854] = {
			["source"] = "Lord Godfrey",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45878,
		},
		[388976] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Ravager",
			["npcID"] = 196671,
		},
		[195528] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Animated Storm",
			["npcID"] = 95920,
		},
		[207815] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[167884] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terokk",
			["npcID"] = 83554,
		},
		[411503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Diganthor",
			["npcID"] = 204434,
		},
		[391026] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[409456] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["npcID"] = 198933,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2669,
		},
		[405361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Shaz'ra",
			["npcID"] = 200885,
		},
		[382836] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[313213] = {
			["encounterName"] = "Ra-den the Despoiled",
			["source"] = "Ra-den",
			["encounterID"] = 2331,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156866,
		},
		[36604] = {
			["source"] = "Verdant Emerald Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208750,
		},
		[372600] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["npcID"] = 184124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2557,
		},
		[102381] = {
			["encounterName"] = "Murozond",
			["source"] = "Murozond",
			["encounterID"] = 1271,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54432,
		},
		[127466] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shao-Tien Antiquator",
			["npcID"] = 58928,
		},
		[79856] = {
			["source"] = "Ambermill Magister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 1914,
		},
		[405366] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Shaz'ra",
			["npcID"] = 200885,
		},
		[302979] = {
			["source"] = "The Scrap King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151625,
		},
		[290694] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Spawn of Laminaria",
			["npcID"] = 148633,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2280,
		},
		[43516] = {
			["source"] = "Dragonflayer Prisoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24255,
		},
		[51963] = {
			["encounterName"] = "Terros",
			["source"] = "Ebon Gargoyle",
			["npcID"] = 27829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[79857] = {
			["source"] = "Lord Godfrey",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45878,
		},
		[360320] = {
			["source"] = "Chrysalis Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181942,
		},
		[413562] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Lurking Tempest",
			["npcID"] = 204337,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1043,
		},
		[421754] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Moltenbinder",
			["npcID"] = 206477,
		},
		[407420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Runestone",
			["npcID"] = 204001,
		},
		[311176] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "N'Zoth the Corruptor",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158041,
		},
		[157652] = {
			["source"] = "Auchenai Magus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77694,
		},
		[11969] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magistrate Burnside",
			["npcID"] = 47790,
		},
		[79858] = {
			["source"] = "Dalaran Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2358,
		},
		[403326] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[376706] = {
			["source"] = "Nokhud Stormcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[329608] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Runecarved Colossus",
			["npcID"] = 155828,
		},
		[405375] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[329609] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Runecarved Colossus",
			["npcID"] = 155828,
		},
		[266129] = {
			["source"] = "Gahz'ragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120850,
		},
		[268177] = {
			["source"] = "Windspeaker Heldis",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136214,
		},
		[384899] = {
			["source"] = "Rotbow Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186208,
		},
		[111599] = {
			["encounterName"] = "Instructor Chillheart",
			["source"] = "Scholomance Acolyte",
			["npcID"] = 58757,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1426,
		},
		[256970] = {
			["encounterName"] = "Knight Captain Valyri",
			["event"] = "SPELL_CAST_START",
			["source"] = "Knight Captain Valyri",
			["npcID"] = 127490,
		},
		[409473] = {
			["source"] = "Voracious Magma Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203825,
		},
		[372615] = {
			["source"] = "Tamed Phoenix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189247,
		},
		[200658] = {
			["source"] = "Dreadsoul Ruiner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95771,
		},
		[298897] = {
			["encounterName"] = "Trixie & Naeno",
			["source"] = "Trixie Tazer",
			["encounterID"] = 2312,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150712,
		},
		[196563] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Warlord Parjesh",
			["npcID"] = 91784,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1810,
		},
		[111600] = {
			["encounterName"] = "Raigonn",
			["source"] = "Krik'thik Swarm Bringer",
			["npcID"] = 56930,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1419,
		},
		[423811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Chardryn",
			["npcID"] = 210912,
		},
		[409477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kretchenwrath",
			["npcID"] = 201673,
		},
		[113136] = {
			["source"] = "Darkmaster Gandling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59080,
		},
		[268184] = {
			["source"] = "Windspeaker Heldis",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136214,
		},
		[391050] = {
			["source"] = "High Channeler Ryvati",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197535,
		},
		[360334] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dominated Attendant",
			["npcID"] = 183983,
		},
		[415624] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[186327] = {
			["source"] = "Helarjar Mistcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105748,
		},
		[268187] = {
			["source"] = "Windspeaker Heldis",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136214,
		},
		[163802] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74790,
		},
		[395148] = {
			["source"] = "Mikrin of the Raging Winds",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193173,
		},
		[372623] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[83445] = {
			["encounterName"] = "General Husam",
			["source"] = "General Husam",
			["npcID"] = 44577,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1052,
		},
		[286618] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Laminaria",
			["encounterID"] = 2280,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146256,
		},
		[201686] = {
			["source"] = "Anguished Spectre",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 108815,
		},
		[76790] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Invader",
			["npcID"] = 39616,
		},
		[417675] = {
			["source"] = "Meantron 7000",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206131,
		},
		[255952] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Skycap'n Kragg",
			["npcID"] = 126832,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[391055] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[423820] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Chardryn",
			["npcID"] = 210912,
		},
		[360340] = {
			["source"] = "Accelerated Helicid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 178831,
		},
		[405391] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[376723] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[59389] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Prince Keleseth",
			["encounterID"] = 2026,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23953,
		},
		[362390] = {
			["encounterName"] = "Rygelon",
			["source"] = "Rygelon",
			["encounterID"] = 2549,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182777,
		},
		[266146] = {
			["source"] = "Disciple of Zul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 139543,
		},
		[376725] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[170973] = {
			["source"] = "Dew Master",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81553,
		},
		[256979] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Eudora",
			["npcID"] = 126848,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[376727] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[264101] = {
			["encounterName"] = "Aqu'sirr",
			["source"] = "Aqu'sirr",
			["encounterID"] = 2130,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134056,
		},
		[409492] = {
			["source"] = "Afflicted Soul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204773,
		},
		[270246] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Pyremancer",
			["npcID"] = 176576,
		},
		[413590] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Dazhak",
			["npcID"] = 201788,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2668,
		},
		[256981] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frightened Brutosaur",
			["npcID"] = 129668,
		},
		[33793] = {
			["encounterName"] = "Vazruden the Herald",
			["source"] = "Nazan",
			["npcID"] = 17307,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1892,
		},
		[395161] = {
			["source"] = "Treasure-Mad Trambladd",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193146,
		},
		[429973] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[183263] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gormling Spitter",
			["npcID"] = 155219,
		},
		[113141] = {
			["encounterName"] = "Darkmaster Gandling",
			["source"] = "Darkmaster Gandling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59080,
		},
		[364447] = {
			["encounterName"] = "Vigilant Guardian",
			["source"] = "Vigilant Custodian",
			["encounterID"] = 2512,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184522,
		},
		[417689] = {
			["source"] = "Meantron Prototype",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206132,
		},
		[164834] = {
			["source"] = "Everbloom Naturalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81819,
		},
		[421785] = {
			["isChanneled"] = true,
			["source"] = "Watchful Gladehind",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210170,
		},
		[368544] = {
			["source"] = "Lady Jaina Proudmoore",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184597,
		},
		[417691] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fury of N'zoth",
			["npcID"] = 205307,
		},
		[111606] = {
			["encounterName"] = "Instructor Chillheart",
			["source"] = "Instructor Chillheart",
			["npcID"] = 58633,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1426,
		},
		[11970] = {
			["source"] = "Subjugated Firestarter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46838,
		},
		[395167] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "O'nank Shorescour",
			["npcID"] = 193118,
		},
		[374691] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[425885] = {
			["encounterName"] = "Smolderon",
			["source"] = "Seeking Inferno",
			["npcID"] = 210203,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2824,
		},
		[193505] = {
			["source"] = "Vileshard Hulk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91000,
		},
		[382883] = {
			["source"] = "Vile Rothexer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187224,
		},
		[25602] = {
			["source"] = "Maelgwyn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81995,
		},
		[268211] = {
			["source"] = "Runecarver Sorn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134150,
		},
		[368551] = {
			["source"] = "Sylvanas Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184605,
		},
		[401316] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[315311] = {
			["encounterName"] = "The Hivemind",
			["source"] = "Aqir Drone",
			["npcID"] = 157255,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2333,
		},
		[395174] = {
			["source"] = "Gethdazr",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196165,
		},
		[268214] = {
			["source"] = "Runecarver Sorn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134150,
		},
		[79868] = {
			["source"] = "Relios the Relic Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45734,
		},
		[417701] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Peeved",
			["npcID"] = 205428,
		},
		[274359] = {
			["source"] = "Lord Stormsong",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 139737,
		},
		[391081] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tserasor the Preserver",
			["npcID"] = 190598,
		},
		[270264] = {
			["source"] = "Portal Breacher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209821,
		},
		[395177] = {
			["source"] = "Massive Magmashell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193152,
		},
		[413607] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Twilight Magus",
			["npcID"] = 201223,
		},
		[164841] = {
			["encounterName"] = "Teron'gor",
			["source"] = "Teron'gor",
			["encounterID"] = 1714,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77734,
		},
		[288696] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Laminaria",
			["encounterID"] = 2280,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146256,
		},
		[15234] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Enchantress",
			["npcID"] = 17961,
		},
		[61184] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Krasari Huntress",
			["npcID"] = 58070,
		},
		[68607] = {
			["encounterName"] = "The Crown Chemical Co.",
			["source"] = "Apothecary Hummel",
			["npcID"] = 36296,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2879,
		},
		[203750] = {
			["source"] = "Arcane Chronomaton",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111622,
		},
		[401325] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[386991] = {
			["source"] = "Wild Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191395,
		},
		[111610] = {
			["encounterName"] = "Instructor Chillheart",
			["source"] = "Instructor Chillheart",
			["encounterID"] = 1426,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58633,
		},
		[88061] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Armored Mistral",
			["npcID"] = 45915,
		},
		[386992] = {
			["source"] = "Wild Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192636,
		},
		[178154] = {
			["encounterName"] = "Oshir",
			["source"] = "Rylak Skyterror",
			["encounterID"] = 1750,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89011,
		},
		[374706] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[376754] = {
			["isChanneled"] = true,
			["source"] = "Qalashi Skullhauler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 191983,
		},
		[395184] = {
			["source"] = "Volcanakk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200911,
		},
		[150510] = {
			["source"] = "Razorfen Kraulshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74550,
		},
		[151534] = {
			["encounterName"] = "Charlga Razorflank",
			["source"] = "Charlga Razorflank",
			["encounterID"] = 1661,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4421,
		},
		[168940] = {
			["source"] = "Kor'gall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77020,
		},
		[202728] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadlord Mendacius",
			["npcID"] = 99649,
		},
		[218087] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "OOX-Avenger/MG",
			["npcID"] = 151296,
		},
		[44547] = {
			["source"] = "Sister of Torment",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24697,
		},
		[172013] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sethekk Oracle",
			["npcID"] = 86123,
		},
		[370615] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[83455] = {
			["encounterName"] = "Siamat",
			["source"] = "Minion of Siamat",
			["npcID"] = 44704,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1055,
		},
		[266181] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Gorak Tul",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131864,
		},
		[69633] = {
			["source"] = "Spectral Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36666,
		},
		[79872] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Iceheart",
			["npcID"] = 48880,
		},
		[413621] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Infiltrator",
			["npcID"] = 206214,
		},
		[405431] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["npcID"] = 198996,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2667,
		},
		[168944] = {
			["source"] = "Kor'gall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77020,
		},
		[391098] = {
			["source"] = "Galzuda",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193330,
		},
		[360382] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Converter",
			["npcID"] = 181782,
		},
		[405433] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[268234] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Bile Oozeling",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136541,
		},
		[401338] = {
			["source"] = "Kob'rok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203462,
		},
		[354240] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vault Aegis",
			["npcID"] = 185028,
		},
		[393148] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maneet",
			["npcID"] = 188704,
		},
		[30851] = {
			["source"] = "Shadowmoon Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17395,
		},
		[374719] = {
			["source"] = "Stonejaw Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188128,
		},
		[387006] = {
			["source"] = "Rotting Treant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186361,
		},
		[389054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Forager",
			["npcID"] = 196694,
		},
		[317383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quilboar Warrior",
			["npcID"] = 150237,
		},
		[401341] = {
			["source"] = "Kob'rok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203462,
		},
		[405437] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["npcID"] = 201934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[199663] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ghostly Councilor",
			["npcID"] = 98370,
		},
		[401342] = {
			["source"] = "Magmaclaw Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203934,
		},
		[65026] = {
			["encounterName"] = "Mimiron",
			["source"] = "Leviathan Mk II",
			["npcID"] = 34071,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1138,
		},
		[57091] = {
			["encounterName"] = "Keristrasza",
			["source"] = "Keristrasza",
			["encounterID"] = 2011,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26723,
		},
		[147446] = {
			["source"] = "Foreboding Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 73162,
		},
		[378818] = {
			["source"] = "Qalashi Thaumaturge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192788,
		},
		[274383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vermin Trapper",
			["npcID"] = 130404,
		},
		[12675] = {
			["encounterName"] = "Warder Stilgiss",
			["source"] = "Warder Stilgiss",
			["npcID"] = 9041,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 233,
		},
		[12739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Darkcaster",
			["npcID"] = 30319,
		},
		[59395] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Torturer",
			["npcID"] = 200529,
		},
		[288719] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Lady Jaina Proudmoore",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146409,
		},
		[198641] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Kur'talos Ravencrest",
			["npcID"] = 98965,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1835,
		},
		[207856] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Helarjar Champion",
			["npcID"] = 96754,
		},
		[200689] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vile Soulmaster",
			["npcID"] = 102724,
		},
		[411585] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jalgon Stoutburn",
			["npcID"] = 204426,
		},
		[166902] = {
			["source"] = "Blademaster Bralok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76981,
		},
		[226287] = {
			["source"] = "Vileshard Chunk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101438,
		},
		[188404] = {
			["encounterName"] = "Hymdall",
			["source"] = "Storm Drake",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97788,
		},
		[214001] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Lancer",
			["npcID"] = 102095,
		},
		[151545] = {
			["source"] = "Bloodmaul Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75210,
		},
		[56580] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deep Crawler",
			["npcID"] = 30279,
		},
		[97282] = {
			["encounterName"] = "Lord Rhyolith",
			["source"] = "Lord Rhyolith",
			["npcID"] = 52558,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1204,
		},
		[372683] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infused Whelp",
			["npcID"] = 187894,
		},
		[378827] = {
			["source"] = "Qalashi Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192786,
		},
		[210931] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Eye of Il'gynoth",
			["npcID"] = 105906,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1873,
		},
		[407496] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[376780] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["npcID"] = 189901,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2611,
		},
		[214003] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Swordsman",
			["npcID"] = 102094,
		},
		[15043] = {
			["source"] = "Green Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 32324,
		},
		[405450] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hungry Rock Snail",
			["npcID"] = 203260,
		},
		[203765] = {
			["source"] = "Gilnean Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102875,
		},
		[417737] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Shadowcaster",
			["npcID"] = 207893,
		},
		[387021] = {
			["source"] = "Agitated Essence",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192238,
		},
		[374735] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[417738] = {
			["source"] = "Peeved",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205428,
		},
		[356306] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Annihilator",
			["npcID"] = 182214,
		},
		[391118] = {
			["encounterName"] = "Azureblade",
			["source"] = "Scalebane Lieutenant",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191739,
		},
		[319447] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Empowered Imperial Curator",
			["npcID"] = 168111,
		},
		[395214] = {
			["source"] = "Worldcarver A'tir",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186859,
		},
		[325591] = {
			["source"] = "Gracefallen Tactician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 163392,
		},
		[152573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coldsnout Boar",
			["npcID"] = 75416,
		},
		[56837] = {
			["source"] = "Mage Hunter Ascendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26727,
		},
		[292828] = {
			["source"] = "Etruvis the Vassal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151041,
		},
		[147454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Jadefire",
			["npcID"] = 72769,
		},
		[175099] = {
			["source"] = "Dew Master",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81553,
		},
		[384978] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[395217] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverwalker Tamopo",
			["npcID"] = 193240,
		},
		[266209] = {
			["source"] = "Fallen Deathspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134284,
		},
		[366549] = {
			["source"] = "Overthrown Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185154,
		},
		[401361] = {
			["source"] = "Towering Deepstrider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205124,
		},
		[173052] = {
			["encounterName"] = "Xeri'tac",
			["source"] = "Venom Sprayer",
			["encounterID"] = 1752,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86547,
		},
		[401362] = {
			["source"] = "Zaqali Heatbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200452,
		},
		[154623] = {
			["source"] = "Sargerei Spirit-Tender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77131,
		},
		[199674] = {
			["source"] = "King Bjorn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97081,
		},
		[372696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Juggernaut",
			["npcID"] = 188244,
		},
		[197627] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brood Queen Tyranna",
			["npcID"] = 93802,
		},
		[417748] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klaxxi Blade Lord",
			["npcID"] = 207922,
		},
		[226296] = {
			["source"] = "Vileshard Hulk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91000,
		},
		[260084] = {
			["source"] = "Wandering Tempest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131852,
		},
		[360412] = {
			["encounterName"] = "Vigilant Guardian",
			["source"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180773,
		},
		[401368] = {
			["source"] = "Deepstrider Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203727,
		},
		[419798] = {
			["source"] = "Druid of the Moon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210686,
		},
		[417751] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klaxxi Blade Lord",
			["npcID"] = 207922,
		},
		[372701] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[401370] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Owlbeast",
			["npcID"] = 205316,
		},
		[366559] = {
			["source"] = "Overthrown Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185154,
		},
		[30853] = {
			["source"] = "Shadowmoon Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17395,
		},
		[368608] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Akkaris",
			["npcID"] = 179006,
		},
		[378847] = {
			["source"] = "Qalashi Spinecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192787,
		},
		[298985] = {
			["source"] = "Blackfin Seer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148475,
		},
		[69131] = {
			["source"] = "Soulguard Animator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36516,
		},
		[401373] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Owlbeast",
			["npcID"] = 205316,
		},
		[387039] = {
			["source"] = "Nokhud Brute",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187299,
		},
		[307177] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellbound Ritualist",
			["npcID"] = 162716,
		},
		[421852] = {
			["source"] = "Shoreline Gladehart",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210283,
		},
		[391136] = {
			["source"] = "Drakonid Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187240,
		},
		[384993] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horned Filcher",
			["npcID"] = 194702,
		},
		[378850] = {
			["source"] = "Destabilized Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181536,
		},
		[151558] = {
			["source"] = "Bloodmaul Ogre Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75272,
		},
		[266225] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Gorak Tul",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131864,
		},
		[268273] = {
			["source"] = "Tidesage Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134338,
		},
		[417759] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klaxxi Amber Shaper",
			["npcID"] = 207918,
		},
		[329706] = {
			["source"] = "Mawsworn Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153878,
		},
		[268274] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Booty Fanatic",
			["npcID"] = 136539,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[79883] = {
			["source"] = "Admiral Hatchet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46055,
		},
		[427999] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["encounterID"] = 2824,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200927,
		},
		[252923] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zanchuli Witch-Doctor",
			["npcID"] = 122969,
		},
		[387045] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ezrigeth",
			["npcID"] = 187666,
		},
		[204802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Lurker",
			["npcID"] = 105069,
		},
		[268278] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lady Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131545,
		},
		[401382] = {
			["encounterName"] = "Eranog",
			["source"] = "Past Self",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185800,
		},
		[430051] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Screaming Soul",
			["npcID"] = 214608,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[401383] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[387049] = {
			["source"] = "Wild Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194089,
		},
		[284662] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "Prelate Za'lan",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146320,
		},
		[376811] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[395241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Voltweaver",
			["npcID"] = 198868,
		},
		[76813] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Spiritmender",
			["npcID"] = 41096,
		},
		[366573] = {
			["source"] = "Overthrown Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185154,
		},
		[401385] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystal Wormling",
			["npcID"] = 205613,
		},
		[374765] = {
			["source"] = "Ravenous Bloodbeak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185350,
		},
		[201733] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Dantalionax",
			["npcID"] = 98970,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1835,
		},
		[423912] = {
			["source"] = "The Stonewarmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210235,
		},
		[385005] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalsworn Furbolg",
			["npcID"] = 190738,
		},
		[362480] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Carnivorous Overgrowth",
			["npcID"] = 182322,
		},
		[372719] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[150540] = {
			["source"] = "Razorfen Kraulshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74550,
		},
		[15620] = {
			["source"] = "Doomforge Dragoon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8899,
		},
		[387054] = {
			["source"] = "Cliffdrip Snapstrider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189812,
		},
		[172042] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowclaw",
			["npcID"] = 86138,
		},
		[166923] = {
			["source"] = "Champion Druna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81603,
		},
		[409581] = {
			["source"] = "Whisper in the Dark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203806,
		},
		[272382] = {
			["source"] = "Ankylodon Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 123093,
		},
		[407535] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horde Destroyer",
			["npcID"] = 203861,
		},
		[262145] = {
			["source"] = "Taskmaster Burlok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138793,
		},
		[76815] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Spiritmender",
			["npcID"] = 41096,
		},
		[211975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmtongue Scavenger",
			["npcID"] = 105629,
		},
		[192522] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ash'golm",
			["npcID"] = 96681,
		},
		[354297] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Support Officer",
			["npcID"] = 177817,
		},
		[405491] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Animated Riches",
			["npcID"] = 201573,
		},
		[207881] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[405492] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[425970] = {
			["source"] = "Verdant Boughwalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213576,
		},
		[395254] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Tempestmaker",
			["npcID"] = 198878,
		},
		[274437] = {
			["source"] = "Galecaller Apprentice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 139800,
		},
		[257028] = {
			["encounterName"] = "Knight Captain Valyri",
			["event"] = "SPELL_CAST_START",
			["source"] = "Knight Captain Valyri",
			["npcID"] = 127490,
		},
		[417780] = {
			["source"] = "Mechanized Mekgineer Hologram",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207539,
		},
		[372730] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Juggernaut",
			["npcID"] = 188244,
		},
		[417781] = {
			["source"] = "Overlord Mechagon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205309,
		},
		[150546] = {
			["source"] = "Razorfen Stonechanter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74549,
		},
		[376827] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[407544] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[34829] = {
			["source"] = "Rangari Jonaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86663,
		},
		[387067] = {
			["source"] = "Arcane Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186740,
		},
		[88080] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whipping Wind",
			["npcID"] = 47238,
		},
		[428023] = {
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210423,
		},
		[372735] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flashfrost Earthshaper",
			["npcID"] = 187969,
		},
		[31623] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1947,
		},
		[411644] = {
			["source"] = "Time-Lost Tidehunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205365,
		},
		[165907] = {
			["source"] = "Groog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80167,
		},
		[360451] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["source"] = "Skolex",
			["encounterID"] = 2542,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181395,
		},
		[130060] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monk Trainee",
			["npcID"] = 66101,
		},
		[81426] = {
			["source"] = "Blackrock Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7013,
		},
		[165908] = {
			["source"] = "Borogahn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81043,
		},
		[284686] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "Siegebreaker Roka",
			["npcID"] = 146322,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2272,
		},
		[393217] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Inferno",
			["npcID"] = 189043,
		},
		[407552] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[307213] = {
			["encounterName"] = "The Hivemind",
			["source"] = "Tek'ris",
			["npcID"] = 157254,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2333,
		},
		[374789] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[258058] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Silt Crab",
			["npcID"] = 127381,
		},
		[272402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cutwater Knife Juggler",
			["npcID"] = 129599,
		},
		[153623] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["npcID"] = 75829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1688,
		},
		[385029] = {
			["source"] = "Fleshripper Vulture",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186246,
		},
		[403459] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["npcID"] = 201774,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[76820] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Spiritmender",
			["npcID"] = 41096,
		},
		[268309] = {
			["source"] = "Deepsea Ritualist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134417,
		},
		[164887] = {
			["source"] = "Everbloom Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81820,
		},
		[191508] = {
			["source"] = "Valarjar Aspirant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101637,
		},
		[362507] = {
			["source"] = "Octolus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182690,
		},
		[313362] = {
			["encounterName"] = "Carapace of N'Zoth",
			["source"] = "Fury of N'Zoth",
			["encounterID"] = 2337,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157439,
		},
		[191509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hill Ettin",
			["npcID"] = 102886,
		},
		[319506] = {
			["source"] = "Manifestation of Hate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 164232,
		},
		[395273] = {
			["source"] = "Primal Stormsentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196856,
		},
		[59148] = {
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28580,
		},
		[387083] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Time-Lost Briarback",
			["npcID"] = 187264,
		},
		[266266] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Gorak Tul",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131864,
		},
		[374797] = {
			["source"] = "Divebeak Ohuna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189373,
		},
		[385036] = {
			["source"] = "Primalist Galesinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190373,
		},
		[268315] = {
			["source"] = "Abyss Dweller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134423,
		},
		[36879] = {
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 20977,
		},
		[421898] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["encounterID"] = 2820,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209333,
		},
		[268317] = {
			["source"] = "Drowned Depthbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134418,
		},
		[409612] = {
			["source"] = "Whisper in the Dark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203806,
		},
		[151581] = {
			["source"] = "Bloodmaul Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75426,
		},
		[376851] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[288798] = {
			["source"] = "Tormented Magister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146809,
		},
		[17290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Worshipper",
			["npcID"] = 30111,
		},
		[387091] = {
			["source"] = "Time-Lost Sunseeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187239,
		},
		[268322] = {
			["source"] = "Drowned Depthbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134418,
		},
		[151583] = {
			["encounterName"] = "Charlga Razorflank",
			["source"] = "Charlga Razorflank",
			["encounterID"] = 1661,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4421,
		},
		[428047] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verlann Timbercrush",
			["npcID"] = 207554,
		},
		[360472] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Accelerated Bufonid",
			["npcID"] = 178803,
		},
		[395284] = {
			["source"] = "Rugren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201563,
		},
		[385046] = {
			["source"] = "Skulking Gutstabber",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186242,
		},
		[272420] = {
			["source"] = "Crawg Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128267,
		},
		[307232] = {
			["encounterName"] = "The Hivemind",
			["source"] = "Tek'ris",
			["npcID"] = 157254,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2333,
		},
		[9734] = {
			["source"] = "Lord Walden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45879,
		},
		[259092] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Stormcaller",
			["npcID"] = 126919,
		},
		[211994] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmtongue Scavenger",
			["npcID"] = 105629,
		},
		[189469] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Vengeance",
			["npcID"] = 100364,
		},
		[200732] = {
			["encounterName"] = "Dargrul the Underking",
			["source"] = "Dargrul",
			["encounterID"] = 1793,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91007,
		},
		[428054] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[397338] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Tectonic Crusher",
			["npcID"] = 190588,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[391195] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bisquius",
			["npcID"] = 197557,
		},
		[331811] = {
			["source"] = "Lightbound Scorcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 165687,
		},
		[415769] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coalesced Time",
			["npcID"] = 206140,
		},
		[147492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shattered Hand Flayer",
			["npcID"] = 80430,
		},
		[415770] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coalesced Time",
			["npcID"] = 206140,
		},
		[177185] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brine Lasher",
			["npcID"] = 86267,
		},
		[397341] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[391198] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tserasor the Preserver",
			["npcID"] = 190598,
		},
		[376865] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[415773] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Interval",
			["npcID"] = 206065,
		},
		[288813] = {
			["source"] = "Harbinger Il'koxik",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160810,
		},
		[266288] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ol' Big Tusk",
			["npcID"] = 153206,
		},
		[395297] = {
			["source"] = "Snee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186203,
		},
		[274480] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Ravasaur",
			["npcID"] = 139842,
		},
		[171044] = {
			["source"] = "Siege Cannon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85587,
		},
		[165925] = {
			["source"] = "Borogahn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81043,
		},
		[395299] = {
			["source"] = "Spellforged Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194402,
		},
		[374823] = {
			["source"] = "Squallbringer Cyraz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190370,
		},
		[409635] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["npcID"] = 198933,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2669,
		},
		[101401] = {
			["encounterName"] = "Echo of Sylvanas",
			["source"] = "Echo of Sylvanas",
			["encounterID"] = 1882,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54123,
		},
		[366633] = {
			["source"] = "Overthrown Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185155,
		},
		[385063] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Cinderweaver",
			["npcID"] = 190207,
		},
		[389159] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[207906] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[346157] = {
			["source"] = "Soul Feaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 175699,
		},
		[385065] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[3650] = {
			["source"] = "Mudsnout Gnoll",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2372,
		},
		[288822] = {
			["source"] = "Rastari Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 149591,
		},
		[153642] = {
			["source"] = "Black Iron Warcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76151,
		},
		[59152] = {
			["source"] = "Stormforged Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28835,
		},
		[385068] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Colossal Stormfiend",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197145,
		},
		[290872] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Automated Flame Turret",
			["npcID"] = 149879,
		},
		[268347] = {
			["encounterName"] = "Lord Stormsong",
			["source"] = "Lord Stormsong",
			["encounterID"] = 2132,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134060,
		},
		[147500] = {
			["source"] = "Eroded Cliffdweller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72809,
		},
		[268348] = {
			["source"] = "Colossal Tentacle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136353,
		},
		[407596] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[303161] = {
			["source"] = "Farscale Raider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201301,
		},
		[214053] = {
			["source"] = "Crimson Rockshell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113508,
		},
		[397358] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[323640] = {
			["source"] = "Bloodtusk Alpha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 165473,
		},
		[297020] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Binder Baritas",
			["npcID"] = 185015,
		},
		[393265] = {
			["source"] = "Tombcaller Arban",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190047,
		},
		[387122] = {
			["source"] = "Arcane Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186740,
		},
		[290878] = {
			["source"] = "Lady Jaina Proudmoore",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146409,
		},
		[292926] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord of Torment",
			["npcID"] = 151127,
		},
		[385075] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[156718] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Corpse Spider",
			["npcID"] = 76104,
		},
		[79903] = {
			["source"] = "Turkina",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81996,
		},
		[52498] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Necromancer",
			["npcID"] = 28200,
		},
		[303167] = {
			["source"] = "Zanj'ir Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153697,
		},
		[387125] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[315454] = {
			["source"] = "Pelagos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184003,
		},
		[374839] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189478,
		},
		[417843] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Listless Nae'dra",
			["npcID"] = 211164,
		},
		[387127] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[372793] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Primal Juggernaut",
			["npcID"] = 188244,
		},
		[337982] = {
			["source"] = "Xantuth the Blighted",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162872,
		},
		[317506] = {
			["source"] = "Depthsborn Binder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 154329,
		},
		[200748] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel Weaver",
			["npcID"] = 97706,
		},
		[59154] = {
			["source"] = "Stormforged Giant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28920,
		},
		[376892] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[272457] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131383,
		},
		[389179] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["npcID"] = 189719,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2615,
		},
		[175152] = {
			["source"] = "Loup",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82209,
		},
		[106526] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56448,
		},
		[274507] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Bilge Rat Swabby",
			["npcID"] = 129526,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[199726] = {
			["source"] = "King Ranulf",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97083,
		},
		[226347] = {
			["source"] = "Stoneclaw Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91332,
		},
		[372800] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Expedition Guardian",
			["npcID"] = 187125,
		},
		[391230] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bisquius",
			["npcID"] = 197557,
		},
		[272461] = {
			["source"] = "Reanimated Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122684,
		},
		[32011] = {
			["source"] = "Sulfurious",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80725,
		},
		[183345] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Necrodark Defiler",
			["npcID"] = 104888,
		},
		[319560] = {
			["source"] = "Emaciated Etherwyrm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 172703,
		},
		[260136] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mala'kili",
			["npcID"] = 128935,
		},
		[196656] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malace Shade",
			["npcID"] = 97090,
		},
		[193585] = {
			["source"] = "Rockbound Trapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102232,
		},
		[292942] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chainbound Construct",
			["npcID"] = 181800,
		},
		[346186] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Deadeye",
			["npcID"] = 167323,
		},
		[192563] = {
			["source"] = "Valarjar Purifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97197,
		},
		[372808] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2609,
		},
		[272469] = {
			["source"] = "Abyssal Reach",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138538,
		},
		[417860] = {
			["source"] = "Shoreline Gladehart",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210283,
		},
		[227376] = {
			["source"] = "Crown Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 114275,
		},
		[268375] = {
			["source"] = "Abyssal Cultist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134514,
		},
		[311378] = {
			["source"] = "Deresh of the Nothingness",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159768,
		},
		[387145] = {
			["source"] = "Stormcaller Boroo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194317,
		},
		[374859] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["source"] = "Halondrus",
			["encounterID"] = 2529,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180906,
		},
		[75813] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Tempest Witch",
			["npcID"] = 40634,
		},
		[370764] = {
			["source"] = "Crystal Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196116,
		},
		[188470] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Surging Podling",
			["npcID"] = 210210,
		},
		[173112] = {
			["source"] = "Grom'kar Deckhand",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83762,
		},
		[397386] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["npcID"] = 199703,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[166969] = {
			["source"] = "Olin Umberhide",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79315,
		},
		[401482] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["npcID"] = 198998,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2670,
		},
		[370766] = {
			["source"] = "Crystal Thrasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196117,
		},
		[311382] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deresh of the Nothingness",
			["npcID"] = 159768,
		},
		[101411] = {
			["encounterName"] = "Echo of Sylvanas",
			["source"] = "Echo of Sylvanas",
			["encounterID"] = 1882,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54123,
		},
		[387151] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["encounterID"] = 2583,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186737,
		},
		[391247] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bazual",
			["npcID"] = 193532,
		},
		[393295] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[393296] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frostwrought Dominator",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198308,
		},
		[393298] = {
			["source"] = "Smoldering Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188673,
		},
		[173116] = {
			["source"] = "Beremus the Overgrowth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80700,
		},
		[397394] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Thunderfist",
			["npcID"] = 193373,
		},
		[366678] = {
			["encounterName"] = "The Jailer",
			["source"] = "The Jailer",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180990,
		},
		[385108] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Restless Podling",
			["npcID"] = 187317,
		},
		[152639] = {
			["source"] = "Thunderlord Talon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72232,
		},
		[411730] = {
			["encounterName"] = "Echo of Neltharion",
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten Hound",
			["npcID"] = 205611,
		},
		[383062] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189531,
		},
		[9672] = {
			["source"] = "Blackscale Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45985,
		},
		[393302] = {
			["source"] = "Smoldering Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188673,
		},
		[198715] = {
			["source"] = "Val'kyr Battlemaiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100876,
		},
		[184381] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Synod",
			["npcID"] = 159190,
		},
		[268391] = {
			["source"] = "Abyssal Cultist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134514,
		},
		[393305] = {
			["source"] = "Primalist Earthwarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193709,
		},
		[193597] = {
			["encounterName"] = "Lady Hatecoil",
			["source"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1811,
		},
		[372828] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Shaman",
			["npcID"] = 186679,
		},
		[407640] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["npcID"] = 201774,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[393306] = {
			["source"] = "Primalist Earthwarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193709,
		},
		[346208] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Deadeye",
			["npcID"] = 167323,
		},
		[157762] = {
			["source"] = "Auchenai Soulpriest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77696,
		},
		[393307] = {
			["source"] = "Primalist Flamecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193558,
		},
		[22414] = {
			["source"] = "Thrall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78553,
		},
		[393308] = {
			["source"] = "Primalist Flamecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193558,
		},
		[411738] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rashok",
			["npcID"] = 201320,
		},
		[389213] = {
			["source"] = "Flame Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192764,
		},
		[166978] = {
			["source"] = "Exarch Maladaar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79537,
		},
		[401500] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[125988] = {
			["source"] = "Quid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58771,
		},
		[366689] = {
			["source"] = "Ebonsteel Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185268,
		},
		[383073] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[123429] = {
			["source"] = "Broketooth Sneaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 60195,
		},
		[323689] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soul-Rotted Flesh",
			["npcID"] = 158642,
		},
		[317546] = {
			["source"] = "King Phaoris",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161112,
		},
		[200768] = {
			["source"] = "Crazed Razorbeak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95766,
		},
		[317547] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grunk",
			["npcID"] = 153581,
		},
		[393314] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[374885] = {
			["source"] = "Astral Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189555,
		},
		[333931] = {
			["source"] = "Feral Helhound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 171245,
		},
		[376934] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[372839] = {
			["source"] = "Nokhud Spearman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191227,
		},
		[301168] = {
			["isChanneled"] = true,
			["source"] = "Muck Creeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 145333,
		},
		[411747] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twisted Elementium",
			["npcID"] = 205628,
		},
		[270453] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Geolord Grek'og",
			["npcID"] = 151091,
		},
		[428130] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verlann Timbercrush",
			["npcID"] = 207554,
		},
		[198723] = {
			["source"] = "Rotheart Dryad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99358,
		},
		[64535] = {
			["encounterName"] = "Mimiron",
			["source"] = "Aerial Command Unit",
			["npcID"] = 33670,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1138,
		},
		[81452] = {
			["source"] = "Jorgensen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43546,
		},
		[417893] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Walking Nightmare",
			["npcID"] = 206627,
		},
		[197700] = {
			["source"] = "Temple Priestess",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100450,
		},
		[364652] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["source"] = "Lihuvim",
			["encounterID"] = 2539,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182169,
		},
		[200772] = {
			["source"] = "High Explorer Dellorah",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161938,
		},
		[374892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Plainswalker Calf",
			["npcID"] = 190908,
		},
		[409704] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kretchenwrath",
			["npcID"] = 201673,
		},
		[403561] = {
			["source"] = "Fael'lin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198916,
		},
		[87084] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skitterweb Matriarch",
			["npcID"] = 44906,
		},
		[383084] = {
			["source"] = "Water Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190066,
		},
		[286840] = {
			["source"] = "Azerite Droplet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152098,
		},
		[411754] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Conduit Guardian",
			["npcID"] = 205478,
		},
		[415850] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Roiling Deathstalker",
			["npcID"] = 211242,
		},
		[376943] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[411755] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Conduit Guardian",
			["npcID"] = 205478,
		},
		[413803] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cenrrrn Cirrgl Mooncaller",
			["npcID"] = 205851,
		},
		[317559] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodbeak",
			["npcID"] = 153964,
		},
		[360562] = {
			["encounterName"] = "The Jailer",
			["source"] = "The Jailer",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180990,
		},
		[403565] = {
			["source"] = "Fael'lin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198916,
		},
		[413804] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cenrrrn Cirrgl Mender",
			["npcID"] = 205852,
		},
		[403566] = {
			["source"] = "Flare Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202683,
		},
		[413805] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cenrrrn Cirrgl Tideshifter",
			["npcID"] = 204516,
		},
		[374898] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grasslands Musken",
			["npcID"] = 195172,
		},
		[385137] = {
			["source"] = "Basrikron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193535,
		},
		[403567] = {
			["source"] = "Warden Entrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200960,
		},
		[372851] = {
			["encounterName"] = "Melidrussa Chillworn",
			["event"] = "SPELL_CAST_START",
			["source"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
		},
		[395377] = {
			["source"] = "Thondrozus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192769,
		},
		[317563] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vil'raxx",
			["npcID"] = 153326,
		},
		[147535] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gu'chi the Swarmbringer",
			["npcID"] = 72909,
		},
		[395378] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malsegan",
			["npcID"] = 193212,
		},
		[413808] = {
			["source"] = "Cenrrrn Cirrgl Tideshifter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204516,
		},
		[129577] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Korjan Slavemaster",
			["npcID"] = 65638,
		},
		[260162] = {
			["source"] = "Jambani Spirit Twister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129513,
		},
		[385141] = {
			["source"] = "Primalist Galesinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190373,
		},
		[403571] = {
			["source"] = "Fael'lin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198916,
		},
		[9481] = {
			["encounterName"] = "High Inquisitor Whitemane",
			["source"] = "High Inquisitor Whitemane",
			["encounterID"] = 450,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209254,
		},
		[362617] = {
			["encounterName"] = "The Jailer",
			["source"] = "The Jailer",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180990,
		},
		[153680] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["npcID"] = 75452,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1679,
		},
		[38940] = {
			["source"] = "Sargeron Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 20901,
		},
		[387191] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[257092] = {
			["encounterName"] = "The Sand Queen",
			["source"] = "The Sand Queen",
			["npcID"] = 127479,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2101,
		},
		[403574] = {
			["source"] = "Fael'lin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198916,
		},
		[397431] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192934,
		},
		[81456] = {
			["source"] = "Jorgensen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43546,
		},
		[385145] = {
			["source"] = "Time-Lost Raptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187256,
		},
		[173135] = {
			["source"] = "Ogron Laborer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83578,
		},
		[256069] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scavenging Snapclaw",
			["npcID"] = 127526,
		},
		[366716] = {
			["source"] = "Astral Particle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185274,
		},
		[403576] = {
			["source"] = "Warden Entrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200960,
		},
		[68658] = {
			["source"] = "Netgun Gnome",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36385,
		},
		[29583] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[409721] = {
			["source"] = "Winglord Dezran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202610,
		},
		[372862] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Churning Splash",
			["npcID"] = 187318,
		},
		[244808] = {
			["source"] = "Sandclaw Crab",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145337,
		},
		[389245] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Ruinstalker",
			["npcID"] = 199379,
		},
		[150612] = {
			["source"] = "Nagrand Prowler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81902,
		},
		[200782] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fiendish Creeper",
			["npcID"] = 99759,
		},
		[413819] = {
			["isChanneled"] = true,
			["source"] = "Stormforged Tactician",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 206059,
		},
		[409724] = {
			["source"] = "Neltharion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[173138] = {
			["source"] = "Beremus the Overgrowth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80700,
		},
		[389247] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blacktalon Avenger",
			["npcID"] = 187187,
		},
		[144470] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chi-Ji",
			["npcID"] = 71952,
		},
		[323720] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gill'dan",
			["npcID"] = 204808,
		},
		[200784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmtongue Scavenger",
			["npcID"] = 98792,
		},
		[125997] = {
			["source"] = "Battleworn Paratrooper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 63764,
		},
		[317579] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Dominator",
			["npcID"] = 162164,
		},
		[270481] = {
			["source"] = "Demonic Tyrant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135002,
		},
		[389251] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Morlash",
			["npcID"] = 201549,
		},
		[319628] = {
			["source"] = "Larion Sire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157761,
		},
		[393348] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stalwart Broodwarden",
			["npcID"] = 198263,
		},
		[387205] = {
			["source"] = "Tyrhold Gryphon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198417,
		},
		[346251] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ghastly Willbreaker",
			["npcID"] = 178490,
		},
		[299153] = {
			["encounterName"] = "Trixie & Naeno",
			["source"] = "Trixie Tazer",
			["encounterID"] = 2312,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150712,
		},
		[307345] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hovok",
			["npcID"] = 153241,
		},
		[87603] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bolgaff",
			["npcID"] = 47003,
		},
		[56860] = {
			["source"] = "Mage Hunter Initiate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26728,
		},
		[147546] = {
			["source"] = "Golganarr",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72970,
		},
		[268440] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crackshot",
			["npcID"] = 126918,
		},
		[417926] = {
			["source"] = "Freya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205304,
		},
		[389258] = {
			["source"] = "Piskato",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195973,
		},
		[403593] = {
			["source"] = "Magma Burster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200801,
		},
		[405641] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["npcID"] = 201934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[360591] = {
			["encounterName"] = "Prototype Pantheon",
			["source"] = "Necrotic Ritualist",
			["encounterID"] = 2544,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182045,
		},
		[15241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bleeding Hollow Darkcaster",
			["npcID"] = 17269,
		},
		[391308] = {
			["source"] = "Boolk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191450,
		},
		[106546] = {
			["source"] = "Bloated Brew Alemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59518,
		},
		[15497] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wastewalker Slave",
			["npcID"] = 17963,
		},
		[379023] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hillside Forager",
			["npcID"] = 191240,
		},
		[422026] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["encounterID"] = 2820,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209333,
		},
		[325782] = {
			["source"] = "Darkwarren Spitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 164038,
		},
		[422027] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Spirit of the Kaldorei",
			["npcID"] = 207800,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[258128] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Thug",
			["npcID"] = 130025,
		},
		[106547] = {
			["source"] = "Shado-Pan Novice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56395,
		},
		[98868] = {
			["encounterName"] = "Alysrazor",
			["source"] = "Blazing Talon Initiate",
			["npcID"] = 53369,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1206,
		},
		[385170] = {
			["source"] = "Wind Serpent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191645,
		},
		[260177] = {
			["source"] = "Jambani Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134156,
		},
		[317595] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Watcher Aum-ka",
			["npcID"] = 154619,
		},
		[409744] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kretchenwrath",
			["npcID"] = 201673,
		},
		[403601] = {
			["source"] = "Warden Entrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200960,
		},
		[389267] = {
			["source"] = "Clearwater Snapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192678,
		},
		[409745] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kretchenwrath",
			["npcID"] = 201673,
		},
		[389268] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Expedition Guardian",
			["npcID"] = 187135,
		},
		[417937] = {
			["source"] = "Rotted Gladiator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207808,
		},
		[389269] = {
			["source"] = "Expedition Guarantor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187061,
		},
		[317598] = {
			["source"] = "Ishak of the Four Winds",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157134,
		},
		[262309] = {
			["source"] = "Thalassian Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145113,
		},
		[389270] = {
			["source"] = "Expedition Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187123,
		},
		[325790] = {
			["source"] = "Bitter Memory",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158629,
		},
		[389271] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunscale Behemoth",
			["npcID"] = 193133,
		},
		[407701] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Pendule",
			["npcID"] = 204030,
		},
		[379033] = {
			["source"] = "Feral Bakar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193545,
		},
		[417941] = {
			["source"] = "Rotted Gladiator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207808,
		},
		[411798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oozing Sludge",
			["npcID"] = 205644,
		},
		[389273] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmeater",
			["npcID"] = 186612,
		},
		[317602] = {
			["source"] = "Golden Lotus Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162836,
		},
		[389274] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Shaman",
			["npcID"] = 186679,
		},
		[270505] = {
			["source"] = "Fallen Heartpiercer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158092,
		},
		[165985] = {
			["source"] = "Ogron Spinecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81240,
		},
		[424087] = {
			["source"] = "Zaqali Devastator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207089,
		},
		[417944] = {
			["source"] = "Freya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205304,
		},
		[11082] = {
			["encounterName"] = "Electrocutioner 6000",
			["source"] = "Electrocutioner 6000",
			["encounterID"] = 380,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6235,
		},
		[385181] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[198750] = {
			["encounterName"] = "Odyn",
			["source"] = "Stormforged Obliterator",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102019,
		},
		[409756] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Commander",
			["npcID"] = 202109,
		},
		[409757] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Commander",
			["npcID"] = 202109,
		},
		[387232] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Emerald Preserver",
			["npcID"] = 209202,
		},
		[389280] = {
			["source"] = "Shiverweb Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185814,
		},
		[157797] = {
			["source"] = "Sargerei Arbiter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77080,
		},
		[167012] = {
			["source"] = "Saberon Ambusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88813,
		},
		[193633] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Archer",
			["npcID"] = 98275,
		},
		[59167] = {
			["source"] = "Stormfury Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28826,
		},
		[270513] = {
			["source"] = "Infused Bedrock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 137906,
		},
		[164965] = {
			["source"] = "Everbloom Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81820,
		},
		[376997] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["npcID"] = 191736,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2564,
		},
		[411809] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pahi'rys",
			["npcID"] = 205540,
		},
		[366759] = {
			["source"] = "Illicit Collector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183498,
		},
		[270515] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azerite-Infused Elemental",
			["npcID"] = 137905,
		},
		[176229] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vrok the Ancient",
			["npcID"] = 87356,
		},
		[411811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bubbling Slime",
			["npcID"] = 205651,
		},
		[405668] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Sundered Destroyer",
			["npcID"] = 201753,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[383143] = {
			["source"] = "Brackenhide Putrifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192057,
		},
		[417955] = {
			["isChanneled"] = true,
			["source"] = "Wild Sproutling",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205304,
		},
		[413860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chromie",
			["npcID"] = 205707,
		},
		[79932] = {
			["source"] = "Nevo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81999,
		},
		[147562] = {
			["source"] = "Ashleaf Sprite",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72877,
		},
		[329904] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Royal Advisor",
			["npcID"] = 157118,
		},
		[422053] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Tainted Lasher",
			["encounterID"] = 2820,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210231,
		},
		[168040] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83893,
		},
		[329905] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Royal Advisor",
			["npcID"] = 157118,
		},
		[377004] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["npcID"] = 191736,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2564,
		},
		[403625] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[405673] = {
			["source"] = "Overflowing Magma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203277,
		},
		[168041] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83893,
		},
		[15242] = {
			["source"] = "Hellfire Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17477,
		},
		[329908] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lithic Watcher",
			["npcID"] = 157017,
		},
		[405675] = {
			["source"] = "Volcanakk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200911,
		},
		[192617] = {
			["encounterName"] = "Wrath of Azshara",
			["source"] = "Wrath of Azshara",
			["npcID"] = 96028,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1814,
		},
		[59169] = {
			["source"] = "Storming Vortex",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28547,
		},
		[270529] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mareen Sherwood",
			["npcID"] = 137551,
		},
		[164973] = {
			["source"] = "Everbloom Tender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81985,
		},
		[299198] = {
			["source"] = "Aerial Enforcer XZ-9",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 154700,
		},
		[226406] = {
			["source"] = "Emberhusk Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113537,
		},
		[52770] = {
			["encounterName"] = "Ionar",
			["source"] = "Ionar",
			["encounterID"] = 1984,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28546,
		},
		[244836] = {
			["source"] = "Phantom Nightsaber",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 154624,
		},
		[270531] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thorn Sutton",
			["npcID"] = 137548,
		},
		[256099] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grand Ma'da Ateena",
			["npcID"] = 121504,
		},
		[191595] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felsworn Infester",
			["npcID"] = 96587,
		},
		[303296] = {
			["source"] = "Zanj'ir Huntress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155618,
		},
		[210025] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nightborne Eradicator",
			["npcID"] = 106049,
		},
		[413875] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apiazhus",
			["npcID"] = 200981,
		},
		[9739] = {
			["source"] = "Plainsmender Darragh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82013,
		},
		[264390] = {
			["source"] = "Runic Disciple",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131685,
		},
		[374969] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189478,
		},
		[262343] = {
			["source"] = "Reckless Cutter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 121577,
		},
		[303299] = {
			["source"] = "Tidemistress Ethendriss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153934,
		},
		[256101] = {
			["encounterName"] = "Overseer Korgus",
			["source"] = "Overseer Korgus",
			["npcID"] = 127503,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2104,
		},
		[207979] = {
			["source"] = "Jazshariu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104273,
		},
		[192621] = {
			["encounterName"] = "Ash'Golm",
			["source"] = "Ash'Golm",
			["npcID"] = 95886,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1816,
		},
		[274633] = {
			["source"] = "Ironhull Apprentice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 139799,
		},
		[207980] = {
			["source"] = "Baalgar the Watchful",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104274,
		},
		[258150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Seaspeaker",
			["npcID"] = 130026,
		},
		[201837] = {
			["source"] = "Taintheart Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99366,
		},
		[383165] = {
			["source"] = "Brackenhide Putrifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192057,
		},
		[387261] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[405691] = {
			["source"] = "Volcanakk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200911,
		},
		[336068] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blind Souldrinker",
			["npcID"] = 182686,
		},
		[297161] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voidbound Ravager",
			["npcID"] = 153065,
		},
		[407740] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurantia",
			["npcID"] = 203047,
		},
		[79938] = {
			["source"] = "Anruin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81998,
		},
		[411837] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fragment of Fire",
			["npcID"] = 205971,
		},
		[356548] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Portalmancer Zo'honn",
			["npcID"] = 179334,
		},
		[360644] = {
			["source"] = "Adrift Core",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184660,
		},
		[197744] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilskar Sea-Caller",
			["npcID"] = 96503,
		},
		[307403] = {
			["encounterName"] = "Vexiona",
			["source"] = "Void Ascendant",
			["npcID"] = 157467,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2336,
		},
		[12491] = {
			["encounterName"] = "Witch Doctor Zum'rah",
			["source"] = "Witch Doctor Zum'rah",
			["encounterID"] = 597,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7271,
		},
		[258153] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Seaspeaker",
			["npcID"] = 130026,
		},
		[329929] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonewing Ravager",
			["npcID"] = 157083,
		},
		[405696] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["npcID"] = 198996,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2667,
		},
		[12747] = {
			["source"] = "Verdant Emerald Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208750,
		},
		[163957] = {
			["source"] = "Fungus Covered Shambler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80721,
		},
		[329930] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonewing Ravager",
			["npcID"] = 157083,
		},
		[256106] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Skycap'n Kragg",
			["npcID"] = 126832,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[87618] = {
			["encounterName"] = "Asaad",
			["source"] = "Asaad",
			["npcID"] = 43875,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1042,
		},
		[377029] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Scythid Queen",
			["npcID"] = 184853,
		},
		[244844] = {
			["source"] = "Brinescale Wavecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131305,
		},
		[13323] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ethereal Theurgist",
			["npcID"] = 18315,
		},
		[194675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Imp",
			["npcID"] = 98963,
		},
		[377033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ripsaw the Stalker",
			["npcID"] = 193153,
		},
		[264407] = {
			["source"] = "Faceless Maiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131821,
		},
		[377034] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["npcID"] = 191736,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2564,
		},
		[150650] = {
			["source"] = "Kraulshaper Tukaar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74900,
		},
		[311508] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sanguimar",
			["npcID"] = 159767,
		},
		[397514] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[393419] = {
			["source"] = "Penumbrus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189289,
		},
		[303319] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wekemara",
			["npcID"] = 152671,
		},
		[387277] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Revenant",
			["npcID"] = 195917,
		},
		[176249] = {
			["source"] = "Woodfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83871,
		},
		[422090] = {
			["source"] = "Treant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54983,
		},
		[55077] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Savage Worg",
			["npcID"] = 29735,
		},
		[305369] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voidbound Honor Guard",
			["npcID"] = 156406,
		},
		[178298] = {
			["source"] = "Grom'kar Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83763,
		},
		[424140] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["encounterID"] = 2786,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209090,
		},
		[106563] = {
			["encounterName"] = "Yan-Zhu the Uncasked",
			["source"] = "Yan-Zhu the Uncasked",
			["encounterID"] = 1414,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59479,
		},
		[171132] = {
			["source"] = "Tailthrasher Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85718,
		},
		[272609] = {
			["source"] = "Faceless Corruptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138281,
		},
		[224374] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Infernal Imp",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112668,
		},
		[418000] = {
			["source"] = "Fel-Corrupted Kaldorei",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206146,
		},
		[194682] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Imp",
			["npcID"] = 98963,
		},
		[391380] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormbound Sorcerer",
			["npcID"] = 201152,
		},
		[163966] = {
			["isChanneled"] = true,
			["source"] = "Grimrail Technician",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 81236,
		},
		[246900] = {
			["source"] = "Void Discharge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122478,
		},
		[224375] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Infernal Imp",
			["npcID"] = 112668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[393429] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Stormwrought Despoiler",
			["npcID"] = 198326,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[193659] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[235638] = {
			["source"] = "Roottender Treant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209280,
		},
		[171134] = {
			["source"] = "Tailthrasher Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85718,
		},
		[393430] = {
			["source"] = "Forge-Keep Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192703,
		},
		[200827] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soul Fragment",
			["npcID"] = 96279,
		},
		[305378] = {
			["source"] = "Voidbound Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156406,
		},
		[393432] = {
			["source"] = "Refti Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190340,
		},
		[411862] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Animation Fluid",
			["npcID"] = 203939,
		},
		[430292] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Inquisitor Fairbell",
			["npcID"] = 211930,
		},
		[391385] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summoned Lava Elemental",
			["npcID"] = 182815,
		},
		[303332] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rijz'x the Devourer",
			["npcID"] = 154490,
		},
		[387290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Giant Lasher",
			["npcID"] = 194588,
		},
		[34345] = {
			["source"] = "Refining Specialist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67283,
		},
		[393434] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Supplyhand",
			["npcID"] = 193790,
		},
		[35369] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Phoenix",
			["npcID"] = 21362,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 733,
		},
		[199805] = {
			["source"] = "Stormforged Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96574,
		},
		[260214] = {
			["source"] = "Mindslaved Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130219,
		},
		[418009] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Alliance Archer",
			["npcID"] = 206352,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[83017] = {
			["source"] = "Smokemaster Snarl",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81749,
		},
		[100423] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamewaker Subjugator",
			["npcID"] = 53188,
		},
		[272620] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cutwater Striker",
			["npcID"] = 131112,
		},
		[366818] = {
			["source"] = "Kelmortos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185275,
		},
		[393439] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Mercenary",
			["npcID"] = 193791,
		},
		[299243] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sun Prophet Tenhamen",
			["npcID"] = 154727,
		},
		[106055] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56448,
		},
		[387297] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Runebinder",
			["npcID"] = 186354,
		},
		[375011] = {
			["source"] = "Seismic Force",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192745,
		},
		[395489] = {
			["source"] = "Karantun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193647,
		},
		[102472] = {
			["encounterName"] = "Echo of Tyrande",
			["source"] = "Echo of Tyrande",
			["encounterID"] = 1884,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54544,
		},
		[418016] = {
			["source"] = "Hand of the Lich King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207386,
		},
		[387300] = {
			["source"] = "Feasting Wyrm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192739,
		},
		[366823] = {
			["source"] = "Kelmortos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185275,
		},
		[81995] = {
			["source"] = "Messner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43826,
		},
		[201858] = {
			["source"] = "Taintheart Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100539,
		},
		[162951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Impaler",
			["npcID"] = 154367,
		},
		[13900] = {
			["encounterName"] = "Lord Incendius",
			["source"] = "Lord Incendius",
			["encounterID"] = 232,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9017,
		},
		[418020] = {
			["source"] = "Freya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205304,
		},
		[193668] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[81996] = {
			["source"] = "Messner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43826,
		},
		[372971] = {
			["source"] = "Qalashi Blacksmith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189471,
		},
		[385258] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coastal Eel",
			["npcID"] = 198782,
		},
		[401642] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[428263] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[114249] = {
			["source"] = "Broketooth Tosser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59416,
		},
		[418025] = {
			["source"] = "Hand of the Lich King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207386,
		},
		[83021] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blacksmith Verringtan",
			["npcID"] = 47792,
		},
		[393453] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Defender",
			["npcID"] = 199941,
		},
		[395501] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192934,
		},
		[358642] = {
			["source"] = "Violetsail Cutthroat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 179606,
		},
		[393454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Battlehorn Pyrhus",
			["npcID"] = 190986,
		},
		[329975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Adjutant Felipos",
			["npcID"] = 185103,
		},
		[389360] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sandana the Tempest",
			["npcID"] = 193176,
		},
		[407790] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[358645] = {
			["source"] = "Violetsail Swiftshot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 179736,
		},
		[418031] = {
			["source"] = "Vereesa Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207816,
		},
		[307453] = {
			["encounterName"] = "Vexiona",
			["source"] = "Vexiona",
			["npcID"] = 157354,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2336,
		},
		[393459] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[389364] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sandana the Tempest",
			["npcID"] = 193176,
		},
		[424176] = {
			["source"] = "Ancient Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210637,
		},
		[311550] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jesh'ra",
			["npcID"] = 159764,
		},
		[403699] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["npcID"] = 201774,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[311551] = {
			["encounterName"] = "Dark Inquisitor Xanesh",
			["source"] = "Dark Inquisitor Xanesh",
			["npcID"] = 156575,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2328,
		},
		[9613] = {
			["encounterName"] = "Nekrum Gutchewer",
			["source"] = "Sandfury Acolyte",
			["encounterID"] = 598,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8876,
		},
		[407796] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[163983] = {
			["source"] = "Khargax the Devourer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81537,
		},
		[64041] = {
			["source"] = "Shatterspear Raider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 34309,
		},
		[151697] = {
			["source"] = "Bloodmaul Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75426,
		},
		[284933] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "King Rastakhan",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145616,
		},
		[297220] = {
			["source"] = "Voidbound Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153097,
		},
		[33325] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Auchenai Necromancer",
			["npcID"] = 18702,
		},
		[258181] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 130400,
		},
		[85584] = {
			["source"] = "Lord Godfrey",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45878,
		},
		[11085] = {
			["encounterName"] = "Electrocutioner 6000",
			["source"] = "Electrocutioner 6000",
			["encounterID"] = 380,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6235,
		},
		[30615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bleeding Hollow Scryer",
			["npcID"] = 17478,
		},
		[385277] = {
			["source"] = "Worldcarver A'tir",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186859,
		},
		[379134] = {
			["source"] = "Magmasworn Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190210,
		},
		[168082] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83892,
		},
		[383231] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193944,
		},
		[175250] = {
			["source"] = "Beatface",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81264,
		},
		[171155] = {
			["source"] = "Skull Thrash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85733,
		},
		[274703] = {
			["source"] = "Drowned Depthbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134418,
		},
		[391425] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frostwrought Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198308,
		},
		[418046] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["npcID"] = 203678,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[411903] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Chemist",
			["npcID"] = 205656,
		},
		[59179] = {
			["source"] = "Titanium Thunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28965,
		},
		[418047] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["npcID"] = 203679,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[297230] = {
			["source"] = "Fathom Ray",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145967,
		},
		[256138] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dazar'ai Honor Guard",
			["npcID"] = 127799,
		},
		[352520] = {
			["encounterName"] = "The Jailer",
			["source"] = "Kevin's Oozeling",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 178601,
		},
		[193682] = {
			["encounterName"] = "Lady Hatecoil",
			["source"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1811,
		},
		[383237] = {
			["source"] = "Provoking Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188697,
		},
		[418049] = {
			["source"] = "Vereesa Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207816,
		},
		[411906] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Chemist",
			["npcID"] = 205656,
		},
		[418051] = {
			["source"] = "Vereesa Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207816,
		},
		[95826] = {
			["source"] = "Orgrimmar Wind Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 51346,
		},
		[185493] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imperial Archivist",
			["npcID"] = 157016,
		},
		[171159] = {
			["source"] = "Tailthrasher Vinebender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85725,
		},
		[411910] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Young Storm Dragon",
			["npcID"] = 45919,
		},
		[428293] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["npcID"] = 40633,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[411912] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Devourer",
			["npcID"] = 205673,
		},
		[407817] = {
			["source"] = "Gholna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199853,
		},
		[418056] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["npcID"] = 203679,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[313621] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Falconer Amenophis",
			["npcID"] = 158491,
		},
		[15245] = {
			["encounterName"] = "Witch Doctor Zum'rah",
			["source"] = "Witch Doctor Zum'rah",
			["encounterID"] = 597,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7271,
		},
		[7655] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thule Ravenclaw",
			["npcID"] = 47023,
		},
		[311574] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jesh'ra",
			["npcID"] = 159764,
		},
		[375056] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[311576] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jesh'ra",
			["npcID"] = 159764,
		},
		[387343] = {
			["source"] = "Bouldron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193644,
		},
		[366866] = {
			["source"] = "Subjugator Zeltoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184651,
		},
		[377105] = {
			["source"] = "Vault Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190510,
		},
		[375058] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grasslands Stomper",
			["npcID"] = 195219,
		},
		[156829] = {
			["source"] = "Gul'kosh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78437,
		},
		[223381] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dire Shaman",
			["npcID"] = 112153,
		},
		[8398] = {
			["source"] = "Hakkari Frostwing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5291,
		},
		[168092] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83892,
		},
		[272672] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grand Ma'da Ateena",
			["npcID"] = 121504,
		},
		[366869] = {
			["source"] = "Subjugator Zeltoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184651,
		},
		[169117] = {
			["source"] = "Kor'gall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77020,
		},
		[403731] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duzalgor",
			["npcID"] = 200610,
		},
		[411923] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Diganthor",
			["npcID"] = 204434,
		},
		[171166] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Charl Doomwing",
			["npcID"] = 81548,
		},
		[319775] = {
			["source"] = "Swiftwing Larion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160569,
		},
		[373017] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["npcID"] = 189886,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2606,
		},
		[375065] = {
			["source"] = "Fetid Rotsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186226,
		},
		[405784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarasek Boarder",
			["npcID"] = 203307,
		},
		[59182] = {
			["source"] = "Unbound Firestorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28584,
		},
		[35377] = {
			["source"] = "Subjugated Firestarter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46838,
		},
		[172193] = {
			["source"] = "Jandvik Bonepiercer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100948,
		},
		[22938] = {
			["source"] = "Arcane Remnant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45728,
		},
		[385310] = {
			["source"] = "Primalist Shockcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195119,
		},
		[403740] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[373024] = {
			["source"] = "Brackenhide Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186220,
		},
		[403741] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[409885] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Highmountain Seer",
			["npcID"] = 201578,
		},
		[422172] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["encounterID"] = 2824,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200927,
		},
		[171171] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Charl Doomwing",
			["npcID"] = 81548,
		},
		[385313] = {
			["source"] = "Primalist Shockcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195119,
		},
		[373027] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[176291] = {
			["source"] = "Tarlna Thorncaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83826,
		},
		[59183] = {
			["source"] = "Unbound Firestorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28584,
		},
		[176292] = {
			["source"] = "Tarlna Infested",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83824,
		},
		[389412] = {
			["source"] = "Nezascar the Sightless",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196535,
		},
		[418081] = {
			["source"] = "Felhound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206090,
		},
		[375079] = {
			["source"] = "Squallbringer Cyraz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190370,
		},
		[418082] = {
			["source"] = "Felhound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206090,
		},
		[14030] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anvilrage Warden",
			["npcID"] = 8890,
		},
		[393511] = {
			["source"] = "Cauldronbearer Blakor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186783,
		},
		[373034] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Mudrunner",
			["npcID"] = 186690,
		},
		[198820] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Latosius",
			["npcID"] = 98970,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1835,
		},
		[399656] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Igneous Darkness",
			["npcID"] = 202866,
		},
		[313652] = {
			["encounterName"] = "The Hivemind",
			["source"] = "Ka'zir",
			["npcID"] = 157253,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2333,
		},
		[168105] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83892,
		},
		[169129] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["source"] = "Backdraft",
			["encounterID"] = 1754,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84464,
		},
		[162986] = {
			["source"] = "Scavenging Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83448,
		},
		[180392] = {
			["source"] = "Eredar Riftweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92450,
		},
		[215204] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Vigilant Duskwatch",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104918,
		},
		[391470] = {
			["source"] = "Clove",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194457,
		},
		[264510] = {
			["source"] = "Crazed Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131849,
		},
		[389423] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thieving Conjurer",
			["npcID"] = 196388,
		},
		[183465] = {
			["source"] = "Tarspitter Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91001,
		},
		[395567] = {
			["source"] = "Gravlion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193654,
		},
		[393520] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ceeqa the Peacetaker",
			["npcID"] = 188708,
		},
		[399664] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Igneous Darkness",
			["npcID"] = 202866,
		},
		[33844] = {
			["source"] = "Kengtus Pranch the Patient",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82012,
		},
		[377140] = {
			["source"] = "River Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191618,
		},
		[411952] = {
			["source"] = "Infinite Timebender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205337,
		},
		[399666] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellsworn Construct",
			["npcID"] = 200598,
		},
		[35892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Annihilator",
			["npcID"] = 18856,
		},
		[373046] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2609,
		},
		[375094] = {
			["source"] = "Swiftfoot Tallstrider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192641,
		},
		[188587] = {
			["source"] = "Understone Demolisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102253,
		},
		[411954] = {
			["isChanneled"] = true,
			["source"] = "Infinite Timeslicer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205384,
		},
		[274755] = {
			["source"] = "Seer Drannix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146443,
		},
		[424241] = {
			["source"] = "Amirdrassil Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207769,
		},
		[176301] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Everbloom Waterspeaker",
			["npcID"] = 88261,
		},
		[160943] = {
			["encounterName"] = "Nitrogg Thundertower",
			["source"] = "Grom'kar Gunner",
			["encounterID"] = 1732,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77483,
		},
		[405812] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["npcID"] = 202375,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2689,
		},
		[389431] = {
			["source"] = "Bazual",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193532,
		},
		[150705] = {
			["source"] = "Grom'kar Siegesmith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80552,
		},
		[393527] = {
			["source"] = "Cracktooth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187528,
		},
		[411958] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iridikron's Creation",
			["npcID"] = 205691,
		},
		[389433] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qiraji Prophet",
			["npcID"] = 195641,
		},
		[150706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Bonerender",
			["npcID"] = 96535,
		},
		[385339] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[389435] = {
			["source"] = "Darktooth Spirit-Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195267,
		},
		[360767] = {
			["source"] = "Lured Mite",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181879,
		},
		[387388] = {
			["source"] = "Worldbreaker Cultist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185595,
		},
		[260262] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Effusion",
			["npcID"] = 130139,
		},
		[403771] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[414010] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Goblin Shredder",
			["npcID"] = 200964,
		},
		[217260] = {
			["source"] = "Mudfin Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186679,
		},
		[403772] = {
			["source"] = "Vakan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199855,
		},
		[405821] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[399678] = {
			["source"] = "Rampant Shadowflame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203698,
		},
		[193712] = {
			["encounterName"] = "Lady Hatecoil",
			["source"] = "Lady Hatecoil",
			["encounterID"] = 1811,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91789,
		},
		[340294] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bubbleblood",
			["npcID"] = 162727,
		},
		[317769] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wastewander Tracker",
			["npcID"] = 154461,
		},
		[377154] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ripsaw the Stalker",
			["npcID"] = 193153,
		},
		[297292] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Custodian Thonar",
			["npcID"] = 185011,
		},
		[373059] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Kadros Icewrath",
			["npcID"] = 187771,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[383298] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summoned Lava Elemental",
			["npcID"] = 182815,
		},
		[235692] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Darius Crowley",
			["npcID"] = 213057,
		},
		[395586] = {
			["source"] = "Spellforged Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194402,
		},
		[389443] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Nullification Device",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196712,
		},
		[391491] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sootscale the Indomitable",
			["npcID"] = 190307,
		},
		[409921] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Commander",
			["npcID"] = 202109,
		},
		[303439] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kelfin Scout",
			["npcID"] = 156265,
		},
		[6728] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Daggerspine Siren",
			["npcID"] = 2371,
		},
		[176309] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twisted Guardian",
			["npcID"] = 88279,
		},
		[387398] = {
			["source"] = "Worldbreaker Brute",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185589,
		},
		[389446] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Nullification Device",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196712,
		},
		[385351] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Arcanogolem",
			["npcID"] = 201554,
		},
		[167095] = {
			["source"] = "Thunderlord Wrangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83390,
		},
		[193716] = {
			["encounterName"] = "Lady Hatecoil",
			["source"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1811,
		},
		[193717] = {
			["encounterName"] = "Lady Hatecoil",
			["source"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1811,
		},
		[418119] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Destroyer",
			["npcID"] = 207912,
		},
		[297302] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Endless Hunger Totem",
			["npcID"] = 153141,
		},
		[334162] = {
			["source"] = "Malifis",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 166908,
		},
		[393547] = {
			["source"] = "Kraunot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186401,
		},
		[285017] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Laminaria",
			["encounterID"] = 2280,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146256,
		},
		[377166] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[428360] = {
			["source"] = "Firelands Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210293,
		},
		[15503] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Warlord Salaris",
			["encounterID"] = 1895,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24559,
		},
		[409931] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Commander",
			["npcID"] = 202109,
		},
		[195767] = {
			["source"] = "Slumber",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98890,
		},
		[385359] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[8040] = {
			["encounterName"] = "Lady Anacondra",
			["source"] = "Lady Anacondra",
			["npcID"] = 3671,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 585,
		},
		[418125] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Varian Wrynn",
			["npcID"] = 205308,
		},
		[287070] = {
			["encounterName"] = "Opulence",
			["source"] = "Opulence",
			["npcID"] = 145261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2271,
		},
		[387410] = {
			["source"] = "Scalesmith Mita",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191010,
		},
		[34360] = {
			["isChanneled"] = true,
			["source"] = "Sunseeker Geomancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18420,
		},
		[34616] = {
			["source"] = "Nethervine Inciter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19511,
		},
		[385363] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverwalker Tamopo",
			["npcID"] = 193240,
		},
		[387411] = {
			["source"] = "Soulharvester Galtmaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195927,
		},
		[166077] = {
			["source"] = "Blackrock Machinist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80468,
		},
		[403794] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duzalgor",
			["npcID"] = 200610,
		},
		[368983] = {
			["source"] = "Raging Inferno",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194095,
		},
		[407891] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horde Farseer",
			["npcID"] = 204206,
		},
		[368984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Firebinder",
			["npcID"] = 186605,
		},
		[362841] = {
			["encounterName"] = "Artificer Xy'mox",
			["source"] = "Fracturing Rift Blast Portal",
			["encounterID"] = 2553,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183663,
		},
		[260275] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutosaur",
			["npcID"] = 122107,
		},
		[399701] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Swooping Flayer",
			["npcID"] = 199809,
		},
		[147649] = {
			["source"] = "Crag Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72807,
		},
		[366938] = {
			["source"] = "Taskmaster Xy'pro",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185032,
		},
		[393559] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rhuzast the Tempest",
			["npcID"] = 197409,
		},
		[297315] = {
			["source"] = "Greater Void Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153130,
		},
		[147650] = {
			["source"] = "Crag Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72807,
		},
		[354653] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fragment of Troz'igal",
			["npcID"] = 179560,
		},
		[414038] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aquifon",
			["npcID"] = 203468,
		},
		[274792] = {
			["source"] = "Released Crawg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 140149,
		},
		[319843] = {
			["source"] = "Bonescarred Veteran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 168331,
		},
		[428374] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[166081] = {
			["source"] = "Blackrock Laborer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81063,
		},
		[191678] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Viletongue Belcher",
			["npcID"] = 96480,
		},
		[368990] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184422,
		},
		[405850] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Sundered Destroyer",
			["npcID"] = 201753,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[418137] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Varian Wrynn",
			["npcID"] = 205308,
		},
		[411994] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infinite Chronoweaver",
			["npcID"] = 205384,
		},
		[373087] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["npcID"] = 189886,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2606,
		},
		[37945] = {
			["source"] = "Greater Felfire Diemetradon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 21462,
		},
		[362849] = {
			["encounterName"] = "Artificer Xy'mox",
			["source"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183501,
		},
		[274796] = {
			["source"] = "Necrotic Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146459,
		},
		[86633] = {
			["encounterName"] = "Lord Overheat",
			["source"] = "Lord Overheat",
			["npcID"] = 46264,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1145,
		},
		[381280] = {
			["source"] = "Uktulut Trainee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193203,
		},
		[301418] = {
			["source"] = "Mechanized Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 154448,
		},
		[407902] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horde Farseer",
			["npcID"] = 204206,
		},
		[264560] = {
			["encounterName"] = "Aqu'sirr",
			["source"] = "Aqu'sirr",
			["encounterID"] = 2130,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134056,
		},
		[389474] = {
			["source"] = "Frozion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193655,
		},
		[387427] = {
			["source"] = "Uncontrolled Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181775,
		},
		[166085] = {
			["source"] = "Burning Blade Saberguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81129,
		},
		[167109] = {
			["source"] = "Scavenger Wasp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83447,
		},
		[88170] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Turbulent Squall",
			["npcID"] = 45924,
		},
		[260282] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutosaur",
			["npcID"] = 122107,
		},
		[389477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Sorcerer",
			["npcID"] = 200758,
		},
		[92266] = {
			["source"] = "Irradiated Pillager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6329,
		},
		[389478] = {
			["source"] = "Darktooth Spirit-Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195267,
		},
		[385383] = {
			["source"] = "Forge-Keep Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192700,
		},
		[307569] = {
			["encounterName"] = "The Hivemind",
			["source"] = "Tek'ris",
			["npcID"] = 157254,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2333,
		},
		[175302] = {
			["source"] = "Char the Burning",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82311,
		},
		[56632] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ahn'kahar Web Winder",
			["npcID"] = 30276,
		},
		[385386] = {
			["source"] = "Overseer Stonetongue",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201552,
		},
		[399721] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellsworn Construct",
			["npcID"] = 200598,
		},
		[86636] = {
			["encounterName"] = "Lord Overheat",
			["source"] = "Lord Overheat",
			["npcID"] = 46264,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1145,
		},
		[200901] = {
			["source"] = "Solsten",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97219,
		},
		[418153] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cinderclaw Stalker",
			["npcID"] = 207084,
		},
		[99947] = {
			["encounterName"] = "Shannox",
			["source"] = "Rageface",
			["npcID"] = 53695,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1205,
		},
		[385390] = {
			["source"] = "Forge-Keep Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192700,
		},
		[405868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invoq",
			["npcID"] = 203627,
		},
		[154828] = {
			["source"] = "Primal Growth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81769,
		},
		[393582] = {
			["source"] = "Cindershard Igniter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198382,
		},
		[412012] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infinite Timeslicer",
			["npcID"] = 205408,
		},
		[389487] = {
			["source"] = "Lookout Mordren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193668,
		},
		[407917] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[387440] = {
			["source"] = "Ukhel Beastcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195878,
		},
		[389488] = {
			["source"] = "Srivantor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201555,
		},
		[393584] = {
			["source"] = "Horned Armoredon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190339,
		},
		[274815] = {
			["source"] = "Seer Drannix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146443,
		},
		[250050] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["npcID"] = 122968,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2087,
		},
		[418159] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Varian Wrynn",
			["npcID"] = 205308,
		},
		[111723] = {
			["encounterName"] = "Raigonn",
			["source"] = "Raigonn",
			["npcID"] = 56877,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1419,
		},
		[200905] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Inquisitor Tormentorum",
			["npcID"] = 96015,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1850,
		},
		[418161] = {
			["source"] = "Kirkessen the Zealous",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207821,
		},
		[428400] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Burning Colossus",
			["npcID"] = 207796,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[303488] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wekemara",
			["npcID"] = 152671,
		},
		[428401] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["npcID"] = 213770,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[260291] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bladeguard Elite",
			["npcID"] = 130451,
		},
		[195787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keeper Selentia",
			["npcID"] = 99524,
		},
		[389495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terillod the Devout",
			["npcID"] = 193171,
		},
		[167119] = {
			["source"] = "Scavenger Wasp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83447,
		},
		[395639] = {
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194401,
		},
		[389496] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[32829] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unliving Stalker",
			["npcID"] = 18501,
		},
		[395640] = {
			["isChanneled"] = true,
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194401,
		},
		[389497] = {
			["source"] = "Eternal Sand",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187475,
		},
		[167120] = {
			["source"] = "Grom'kar Flameslinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81279,
		},
		[409975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Commander",
			["npcID"] = 202109,
		},
		[59706] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 2025,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23954,
		},
		[256198] = {
			["encounterName"] = "Overseer Korgus",
			["source"] = "Overseer Korgus",
			["npcID"] = 127503,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2104,
		},
		[387453] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Maxdormu",
			["npcID"] = 189668,
		},
		[256199] = {
			["encounterName"] = "Overseer Korgus",
			["source"] = "Overseer Korgus",
			["npcID"] = 127503,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2104,
		},
		[393597] = {
			["source"] = "Kraunot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186401,
		},
		[412027] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Infinite Keeper",
			["npcID"] = 205212,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2673,
		},
		[332165] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Howling Spectre",
			["npcID"] = 170414,
		},
		[63802] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Sara",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33134,
		},
		[11921] = {
			["source"] = "Hellfire Familiar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19016,
		},
		[175314] = {
			["source"] = "Vindicator Maraad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78554,
		},
		[360835] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Engorged Annelid",
			["npcID"] = 180722,
		},
		[313737] = {
			["encounterName"] = "Ra-den the Despoiled",
			["source"] = "Abyssal Watcher",
			["encounterID"] = 2331,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161173,
		},
		[395648] = {
			["source"] = "Sogglmoggl",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188859,
		},
		[389505] = {
			["source"] = "Vernon Whitlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212812,
		},
		[399744] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellsworn Construct",
			["npcID"] = 200598,
		},
		[407936] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[395650] = {
			["source"] = "Conjured Nightmare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199014,
		},
		[399746] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Warp Crystal",
			["npcID"] = 201082,
		},
		[200913] = {
			["source"] = "Wyrmtongue Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98792,
		},
		[251083] = {
			["source"] = "Hanzabu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 124513,
		},
		[395652] = {
			["source"] = "Sogglmoggl",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188859,
		},
		[303504] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Herald of the Queen",
			["npcID"] = 154950,
		},
		[152792] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["npcID"] = 75829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1688,
		},
		[309648] = {
			["encounterName"] = "Magister Umbric",
			["source"] = "Magister Umbric",
			["encounterID"] = 2377,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158035,
		},
		[64059] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Brain of Yogg-Saron",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33890,
		},
		[418180] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glorious Vanguard",
			["npcID"] = 208670,
		},
		[313746] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Reaper",
			["npcID"] = 163044,
		},
		[393609] = {
			["source"] = "Krojek The Shoreprowler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187645,
		},
		[210131] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Killclaw the Terrible",
			["npcID"] = 153266,
		},
		[389514] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bazual",
			["npcID"] = 193532,
		},
		[276888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zara'thik Depthspeaker",
			["npcID"] = 162887,
		},
		[385419] = {
			["source"] = "Overseer Stonetongue",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201552,
		},
		[264603] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[257231] = {
			["source"] = "Necrotic Echo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145121,
		},
		[200918] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wrath-Lord Lekos",
			["npcID"] = 97069,
		},
		[313751] = {
			["source"] = "Infused Amber Ooze",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160930,
		},
		[389518] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormshackler Rynea",
			["npcID"] = 189391,
		},
		[416139] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 199000,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2673,
		},
		[418187] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208363,
		},
		[418188] = {
			["source"] = "Shackled Flames of the Betrayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207815,
		},
		[169179] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83846,
		},
		[260304] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qy'telek",
			["npcID"] = 130726,
		},
		[412046] = {
			["source"] = "Monstrous Magmaclaw Snapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204214,
		},
		[430476] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hallowed Monstrosity",
			["npcID"] = 211933,
		},
		[151774] = {
			["encounterName"] = "Charlga Razorflank",
			["source"] = "Molten Inferno Crystal",
			["encounterID"] = 1661,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75308,
		},
		[405905] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amniotic Ooze",
			["npcID"] = 203072,
		},
		[208088] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Necrodark Greysworn",
			["npcID"] = 104565,
		},
		[418192] = {
			["source"] = "Shackled Flames of the Betrayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207815,
		},
		[144608] = {
			["source"] = "Niuzao",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 71954,
		},
		[114291] = {
			["source"] = "Hopper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59464,
		},
		[360856] = {
			["source"] = "Dominated Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185314,
		},
		[305567] = {
			["encounterName"] = "Ravnyr",
			["source"] = "Ravnyr",
			["npcID"] = 156501,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2326,
		},
		[405908] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kartoros",
			["npcID"] = 202977,
		},
		[309664] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Onyx Warserpent",
			["npcID"] = 153208,
		},
		[369049] = {
			["encounterName"] = "Emberon",
			["source"] = "Vault Keeper",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186107,
		},
		[395670] = {
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194401,
		},
		[276901] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Commander I'juk",
			["npcID"] = 157985,
		},
		[369050] = {
			["source"] = "Primalist Stormsurger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188343,
		},
		[152801] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["npcID"] = 75829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1688,
		},
		[356764] = {
			["source"] = "Mawsworn Herald",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181408,
		},
		[383385] = {
			["source"] = "Filth Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185656,
		},
		[295332] = {
			["encounterName"] = "Abyssal Commander Sivara",
			["source"] = "Abyssal Commander Sivara",
			["encounterID"] = 2298,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151881,
		},
		[385434] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[313763] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Baruk Stoneshaper",
			["npcID"] = 155957,
		},
		[170208] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kargath Bladefist",
			["npcID"] = 84053,
		},
		[59710] = {
			["source"] = "Vereesa Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207816,
		},
		[416152] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 199000,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2673,
		},
		[418200] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Riftmage",
			["npcID"] = 208698,
		},
		[395675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Embar Firepath",
			["npcID"] = 187767,
		},
		[405914] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["npcID"] = 201934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[171233] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Biolante",
			["npcID"] = 75207,
		},
		[369055] = {
			["source"] = "Djaradin Crustshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186110,
		},
		[299432] = {
			["source"] = "Malfunctioning Scraphound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151301,
		},
		[418202] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Riftmage",
			["npcID"] = 208698,
		},
		[38209] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scarlet Purifier",
			["npcID"] = 210969,
		},
		[63038] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Guardian of Yogg-Saron",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33136,
		},
		[395678] = {
			["source"] = "Spellforged Brute",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184456,
		},
		[397726] = {
			["source"] = "Shrieking Whelp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187159,
		},
		[375201] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Divebeak Ohuna",
			["npcID"] = 189373,
		},
		[309674] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Torsheg",
			["npcID"] = 157156,
		},
		[385442] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["npcID"] = 189722,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2616,
		},
		[412063] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Epoch Ripper",
			["npcID"] = 205435,
		},
		[397729] = {
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199502,
		},
		[393634] = {
			["source"] = "Rakkesh of the Flow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193849,
		},
		[165093] = {
			["source"] = "Verdant Mandragora",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81983,
		},
		[150759] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74787,
		},
		[418208] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Prophet",
			["npcID"] = 206474,
		},
		[405922] = {
			["source"] = "Kartoros",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202977,
		},
		[301487] = {
			["source"] = "OOX-Avenger/MG",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151296,
		},
		[395685] = {
			["source"] = "Spellforged Brute",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184456,
		},
		[405924] = {
			["source"] = "Krono Sandtongue",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205622,
		},
		[118903] = {
			["source"] = "Glintrok Hexxer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61216,
		},
		[181477] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nightfallen Construct",
			["npcID"] = 90005,
		},
		[14034] = {
			["source"] = "Murkblood Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17771,
		},
		[360875] = {
			["source"] = "Engorged Annelid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180722,
		},
		[81020] = {
			["source"] = "Blackscale Raider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45984,
		},
		[360876] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Custos",
			["npcID"] = 185755,
		},
		[387497] = {
			["source"] = "Time-Lost Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187244,
		},
		[59712] = {
			["source"] = "Lady Sylvanas Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46026,
		},
		[405929] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellsworn Crecheguard",
			["npcID"] = 203368,
		},
		[399786] = {
			["isChanneled"] = true,
			["source"] = "Unknown",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201117,
		},
		[381357] = {
			["source"] = "Hunting Ottuk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190267,
		},
		[407978] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Ahnzon",
			["npcID"] = 201792,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2668,
		},
		[196838] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99868,
		},
		[315830] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anubisath Sentinel",
			["npcID"] = 161571,
		},
		[309687] = {
			["encounterName"] = "Prophet Skitra",
			["source"] = "Shredded Psyche",
			["npcID"] = 158781,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2334,
		},
		[369072] = {
			["source"] = "Plainswalker Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187937,
		},
		[118905] = {
			["source"] = "Capacitor Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61245,
		},
		[395694] = {
			["source"] = "Primalist Shocktrooper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199037,
		},
		[364978] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["source"] = "Halondrus",
			["encounterID"] = 2529,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181047,
		},
		[395695] = {
			["source"] = "Sleeping Whelp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196073,
		},
		[364979] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["source"] = "Halondrus",
			["encounterID"] = 2529,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180906,
		},
		[198888] = {
			["source"] = "Storm Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97068,
		},
		[285118] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Laminaria",
			["encounterID"] = 2280,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146256,
		},
		[418222] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gillidan",
			["npcID"] = 205036,
		},
		[152814] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Bone-Mender",
			["npcID"] = 75713,
		},
		[362934] = {
			["source"] = "Creeping Brambles",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182215,
		},
		[295359] = {
			["source"] = "Scrapbone Trashtosser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151660,
		},
		[412081] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Colossal Draconic Golem",
			["npcID"] = 203826,
		},
		[178412] = {
			["source"] = "Ogron Laborer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83578,
		},
		[418225] = {
			["source"] = "Vorus'arak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205862,
		},
		[403891] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["npcID"] = 198999,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2671,
		},
		[150768] = {
			["encounterName"] = "Roogug",
			["source"] = "Roogug",
			["encounterID"] = 438,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74948,
		},
		[418226] = {
			["source"] = "Vorus'arak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205862,
		},
		[299457] = {
			["source"] = "Malfunctioning Scrapboss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151683,
		},
		[47939] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Xink's Shredder",
			["npcID"] = 27061,
		},
		[80512] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Redridge Drudger",
			["npcID"] = 580,
		},
		[389560] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Reaver",
			["npcID"] = 200756,
		},
		[309698] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "Basher Tentacle",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158367,
		},
		[198892] = {
			["source"] = "Storm Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97068,
		},
		[287174] = {
			["source"] = "Rustfeather",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152182,
		},
		[152818] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Bone-Mender",
			["npcID"] = 75713,
		},
		[389562] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Great Shellkhan",
			["npcID"] = 191305,
		},
		[391610] = {
			["source"] = "Gusting Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190401,
		},
		[225514] = {
			["source"] = "Irontide Brinecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131303,
		},
		[395707] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raszageth",
			["npcID"] = 199031,
		},
		[389564] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Steamgill",
			["npcID"] = 193123,
		},
		[418233] = {
			["source"] = "Vorus'arak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205862,
		},
		[313798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Abyssal Watcher",
			["npcID"] = 161173,
		},
		[391613] = {
			["source"] = "Subterranean Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190404,
		},
		[79490] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Muckdweller",
			["npcID"] = 43532,
		},
		[412093] = {
			["source"] = "Contaminated Titan Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203834,
		},
		[418237] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prophet Skitra",
			["npcID"] = 208491,
		},
		[150774] = {
			["encounterName"] = "Roogug",
			["source"] = "Roogug",
			["encounterID"] = 438,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74948,
		},
		[75907] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["npcID"] = 40633,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[289230] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ancestral Avenger",
			["npcID"] = 148483,
		},
		[183539] = {
			["source"] = "Rotdrool Grabber",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91002,
		},
		[88194] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Young Storm Dragon",
			["npcID"] = 45919,
		},
		[389572] = {
			["source"] = "Time-Lost Devilsaur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187262,
		},
		[418241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prophet Skitra",
			["npcID"] = 208491,
		},
		[420289] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Stormchaser",
			["npcID"] = 207276,
		},
		[150776] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74790,
		},
		[221424] = {
			["source"] = "Tormented Magister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146809,
		},
		[289235] = {
			["source"] = "Kal'ia Pa'kuaya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148607,
		},
		[387528] = {
			["source"] = "Earthbound Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193795,
		},
		[373194] = {
			["source"] = "Windyfin Windbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187432,
		},
		[140539] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Defender",
			["npcID"] = 200527,
		},
		[412104] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lead Researcher Sytorian",
			["npcID"] = 203067,
		},
		[174328] = {
			["source"] = "Soulbinder Nyami",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76177,
		},
		[405962] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bronogg the Bully",
			["npcID"] = 203386,
		},
		[401867] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Obsidian Guard",
			["npcID"] = 200836,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[191735] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felsworn Myrmidon",
			["npcID"] = 98954,
		},
		[279003] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horde Vanguard",
			["npcID"] = 142082,
		},
		[7978] = {
			["source"] = "Goblin Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 35333,
		},
		[389583] = {
			["source"] = "Dragonspawn Spell Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196119,
		},
		[375249] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bluebill Waddler",
			["npcID"] = 192947,
		},
		[369107] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Construct",
			["npcID"] = 200286,
		},
		[197880] = {
			["source"] = "Bonespeaker Runeaxe",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 93066,
		},
		[198904] = {
			["source"] = "Rotheart Dryad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99358,
		},
		[375251] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181861,
		},
		[391634] = {
			["source"] = "Glacial Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190403,
		},
		[369110] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184422,
		},
		[107140] = {
			["encounterName"] = "Gu Cloudstrike",
			["source"] = "Azure Serpent",
			["npcID"] = 56754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1303,
		},
		[183548] = {
			["source"] = "Stoneclaw Grubmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102404,
		},
		[418258] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imperial Vizier Zor'lok",
			["npcID"] = 208500,
		},
		[420306] = {
			["source"] = "Primalist Chainmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211058,
		},
		[393686] = {
			["source"] = "Turboris",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187886,
		},
		[255220] = {
			["source"] = "Hexbone Raiser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134816,
		},
		[412117] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[397783] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["npcID"] = 56448,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1418,
		},
		[410070] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[173311] = {
			["source"] = "Thunderlord Wrangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83390,
		},
		[10452] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vermillion Flamelash",
			["npcID"] = 45569,
		},
		[58438] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unbound Trickster",
			["npcID"] = 30856,
		},
		[34121] = {
			["encounterName"] = "Al'ar",
			["source"] = "Al'ar",
			["npcID"] = 19514,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 730,
		},
		[383452] = {
			["source"] = "Rugren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201563,
		},
		[80009] = {
			["source"] = "Monishot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82001,
		},
		[424408] = {
			["source"] = "Bodwin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209153,
		},
		[344546] = {
			["source"] = "Mistress Dyrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162880,
		},
		[165122] = {
			["encounterName"] = "Grimrail Enforcers",
			["source"] = "Ahri'ok Dugru",
			["encounterID"] = 1748,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80816,
		},
		[342500] = {
			["source"] = "Champion of Humility",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 170836,
		},
		[408029] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Loszkeleth",
			["npcID"] = 201790,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2668,
		},
		[88201] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Young Storm Dragon",
			["npcID"] = 45919,
		},
		[201983] = {
			["source"] = "Emberhusk Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113537,
		},
		[393696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vadne Bleakheart",
			["npcID"] = 195764,
		},
		[163077] = {
			["source"] = "Grievous Depthworm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85942,
		},
		[299502] = {
			["source"] = "Phleep",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193210,
		},
		[412129] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lerai, Timesworn Maiden",
			["npcID"] = 205152,
		},
		[367079] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["source"] = "Halondrus",
			["encounterID"] = 2529,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180906,
		},
		[164102] = {
			["source"] = "Grimrail Laborer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81235,
		},
		[257275] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Briarwood Bulwark",
			["npcID"] = 133072,
		},
		[46153] = {
			["encounterName"] = "Selin Fireheart",
			["source"] = "Selin Fireheart",
			["encounterID"] = 1897,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24723,
		},
		[369129] = {
			["source"] = "Modak Flamespit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186509,
		},
		[387559] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[111752] = {
			["encounterName"] = "Instructor Chillheart",
			["source"] = "Scholomance Neophyte",
			["npcID"] = 58823,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1426,
		},
		[80012] = {
			["source"] = "Forsaken Sharpshooter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45376,
		},
		[346605] = {
			["source"] = "Chained Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182296,
		},
		[291316] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirror Image",
			["npcID"] = 175313,
		},
		[65351] = {
			["source"] = "Wolvar Orphan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33532,
		},
		[403943] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Veltrax",
			["npcID"] = 200904,
		},
		[365036] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["source"] = "Defense Matrix Automa",
			["encounterID"] = 2539,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184126,
		},
		[420326] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamesworn Ashwalker",
			["npcID"] = 210504,
		},
		[397801] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["npcID"] = 56448,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1418,
		},
		[221442] = {
			["source"] = "Spectral Mortar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111212,
		},
		[412136] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valow, Timesworn Keeper",
			["npcID"] = 201222,
		},
		[414184] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["npcID"] = 198933,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2669,
		},
		[387564] = {
			["source"] = "Conjured Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196102,
		},
		[162058] = {
			["encounterName"] = "Skylord Tovra",
			["source"] = "Skylord Tovra",
			["encounterID"] = 1736,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80005,
		},
		[285177] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Lady Jaina Proudmoore",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146409,
		},
		[385517] = {
			["source"] = "Rotbow Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187021,
		},
		[395756] = {
			["source"] = "Qalashi Flameslinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196336,
		},
		[257279] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Briarwood Bulwark",
			["npcID"] = 133072,
		},
		[32422] = {
			["encounterName"] = "Exarch Maladaar",
			["source"] = "Exarch Maladaar",
			["npcID"] = 18373,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1889,
		},
		[414189] = {
			["source"] = "Krrrn Trr Pyromancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205821,
		},
		[391665] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ash Bugsbane",
			["npcID"] = 197292,
		},
		[319994] = {
			["source"] = "Satiated Sawtooth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 164587,
		},
		[420334] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keeper Adranas",
			["npcID"] = 209931,
		},
		[397809] = {
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199502,
		},
		[268801] = {
			["source"] = "Sandfury Axe Thrower",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 121017,
		},
		[387571] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[414192] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Krrrn Trr Cryomancer",
			["npcID"] = 204451,
		},
		[276993] = {
			["source"] = "Ruul Onestone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 142683,
		},
		[200969] = {
			["source"] = "King Tor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97084,
		},
		[395763] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Flameslinger",
			["npcID"] = 196336,
		},
		[81039] = {
			["encounterName"] = "Viscous Fallout",
			["source"] = "Irradiated Slime",
			["encounterID"] = 378,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6218,
		},
		[305663] = {
			["encounterName"] = "Maut",
			["source"] = "Maut",
			["npcID"] = 156523,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2327,
		},
		[381430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Protector",
			["npcID"] = 186849,
		},
		[377335] = {
			["source"] = "Kob'rok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203462,
		},
		[393718] = {
			["source"] = "Huntmaster Amaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188715,
		},
		[428530] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["npcID"] = 213770,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[249093] = {
			["source"] = "Nokali the Scarred",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 125485,
		},
		[161040] = {
			["source"] = "Pack Boar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80174,
		},
		[291332] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirror Image",
			["npcID"] = 175313,
		},
		[377338] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqualing",
			["npcID"] = 190406,
		},
		[291334] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirror Image",
			["npcID"] = 175313,
		},
		[34637] = {
			["encounterName"] = "Thorngrin the Tender",
			["source"] = "Sunseeker Channeler",
			["encounterID"] = 1928,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19505,
		},
		[385531] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["npcID"] = 189722,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2616,
		},
		[291335] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirror Image",
			["npcID"] = 175313,
		},
		[377341] = {
			["source"] = "Aqua Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190407,
		},
		[338434] = {
			["source"] = "Devmorta",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162875,
		},
		[162066] = {
			["encounterName"] = "Skylord Tovra",
			["source"] = "Skylord Tovra",
			["encounterID"] = 1736,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80005,
		},
		[154899] = {
			["encounterName"] = "Orebender Gor'ashan",
			["source"] = "Orebender Gor'ashan",
			["encounterID"] = 1761,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76413,
		},
		[360960] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["source"] = "Dausegne",
			["encounterID"] = 2540,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181224,
		},
		[381438] = {
			["source"] = "Angered Steam",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190694,
		},
		[175377] = {
			["source"] = "Limbflayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86652,
		},
		[37965] = {
			["source"] = "Underbog Shambler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17871,
		},
		[375296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Collier",
			["npcID"] = 195605,
		},
		[377344] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Territorial Eagle",
			["npcID"] = 192329,
		},
		[412156] = {
			["source"] = "Time-Lost Aerobot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205723,
		},
		[385536] = {
			["isChanneled"] = true,
			["source"] = "Primalist Flamedancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 190206,
		},
		[259336] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frostmange",
			["npcID"] = 127794,
		},
		[387585] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["npcID"] = 189729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[158997] = {
			["source"] = "Acidtooth Devourer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79416,
		},
		[258313] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashvane Jailer",
			["npcID"] = 135699,
		},
		[346631] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Necrobinder",
			["npcID"] = 175930,
		},
		[369157] = {
			["source"] = "Embertooth Harvester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188948,
		},
		[428542] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Sentinel",
			["npcID"] = 40577,
		},
		[307725] = {
			["encounterName"] = "Prophet Skitra",
			["source"] = "Prophet Skitra",
			["npcID"] = 157238,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2334,
		},
		[416256] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron's Creation",
			["npcID"] = 204918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2669,
		},
		[61515] = {
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28580,
		},
		[309776] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dokani Shadewalker",
			["npcID"] = 153107,
		},
		[196883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Etheldrin Ravencrest",
			["npcID"] = 98521,
		},
		[198931] = {
			["source"] = "Valarjar Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207026,
		},
		[383496] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[426500] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarlroot",
			["npcID"] = 81984,
		},
		[395784] = {
			["source"] = "Raszageth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199031,
		},
		[274968] = {
			["source"] = "Grimscowl the Harebrained",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 141059,
		},
		[34639] = {
			["source"] = "Sunseeker Harvester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19509,
		},
		[416264] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 199000,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2673,
		},
		[387596] = {
			["source"] = "Risen Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195877,
		},
		[162074] = {
			["source"] = "Fireblade Invoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77047,
		},
		[379406] = {
			["source"] = "Qalashi Lavabearer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189472,
		},
		[274971] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mala'kili",
			["npcID"] = 128935,
		},
		[360977] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["source"] = "Halondrus",
			["encounterID"] = 2529,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180906,
		},
		[23337] = {
			["source"] = "Booty Bay Bruiser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4624,
		},
		[385551] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[264734] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[32424] = {
			["encounterName"] = "Exarch Maladaar",
			["source"] = "Exarch Maladaar",
			["npcID"] = 18373,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1889,
		},
		[285213] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "Bwonsamdi",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145644,
		},
		[385553] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Stormseeker Acolyte",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194990,
		},
		[216342] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Koralune Ettin",
			["npcID"] = 99791,
		},
		[418318] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless One",
			["npcID"] = 206463,
		},
		[408080] = {
			["source"] = "Kob'rok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203462,
		},
		[315932] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iron-Willed Enforcer",
			["npcID"] = 162718,
		},
		[320028] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boneshard Breacher",
			["npcID"] = 167458,
		},
		[412177] = {
			["source"] = "Carcaxas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202836,
		},
		[162078] = {
			["source"] = "Blademaster Bralok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76981,
		},
		[385558] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[395797] = {
			["source"] = "Primalist Frostsculptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198424,
		},
		[393752] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vadne Bleakheart",
			["npcID"] = 195764,
		},
		[428564] = {
			["isChanneled"] = true,
			["source"] = "Firelands Flameguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210290,
		},
		[169248] = {
			["encounterName"] = "Xeri'tac",
			["source"] = "Xeri'tac",
			["encounterID"] = 1752,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84550,
		},
		[181535] = {
			["source"] = "Sea Skrog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88094,
		},
		[225562] = {
			["encounterName"] = "Dresaron",
			["source"] = "Bloodtainted Burster",
			["encounterID"] = 1838,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100532,
		},
		[30633] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Protector",
			["npcID"] = 26792,
		},
		[418329] = {
			["source"] = "Queen Angerboda",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207823,
		},
		[387613] = {
			["source"] = "Ukhel Corruptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195842,
		},
		[373279] = {
			["source"] = "Thing From Beyond",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189988,
		},
		[375327] = {
			["source"] = "Subterranean Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190404,
		},
		[387614] = {
			["source"] = "Ukhel Deathspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195851,
		},
		[363042] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vine-Choked Protector",
			["npcID"] = 182350,
		},
		[47696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crazed Mana-Surge",
			["npcID"] = 26737,
		},
		[277037] = {
			["source"] = "Elven Shambler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146329,
		},
		[168227] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["source"] = "Skulloc",
			["encounterID"] = 1754,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83612,
		},
		[418333] = {
			["source"] = "Queen Angerboda",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207823,
		},
		[198944] = {
			["source"] = "Valarjar Shieldmaiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95832,
		},
		[375331] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[200992] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Savage Felstalker",
			["npcID"] = 92782,
		},
		[387618] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primalist Infuser",
			["npcID"] = 196043,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[315947] = {
			["encounterName"] = "Carapace of N'Zoth",
			["source"] = "Fury of N'Zoth",
			["encounterID"] = 2337,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157439,
		},
		[418335] = {
			["source"] = "Queen Angerboda",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207823,
		},
		[395811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Pillager",
			["npcID"] = 190983,
		},
		[342570] = {
			["source"] = "Champion of Loyalty",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 170832,
		},
		[159015] = {
			["source"] = "Voracious Stonemuncher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84253,
		},
		[377383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alpha Eagle",
			["npcID"] = 192333,
		},
		[264757] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[85147] = {
			["source"] = "Forsaken Catapult",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45601,
		},
		[377384] = {
			["source"] = "Aqua Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190407,
		},
		[202019] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Dantalionax",
			["npcID"] = 98970,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1835,
		},
		[130198] = {
			["source"] = "Heavy Mook",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67399,
		},
		[3606] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Searing Totem",
			["npcID"] = 2523,
		},
		[159017] = {
			["source"] = "Zipteq",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78734,
		},
		[385578] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[309812] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zror'um the Infinite",
			["npcID"] = 154087,
		},
		[369197] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Firebinder",
			["npcID"] = 186599,
		},
		[412200] = {
			["source"] = "Time-Lost Aerobot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205723,
		},
		[391723] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamegullet",
			["npcID"] = 197697,
		},
		[377389] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alpha Eagle",
			["npcID"] = 192333,
		},
		[395819] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Scaleripper",
			["npcID"] = 187602,
		},
		[15254] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["source"] = "Ethereal Beacon",
			["npcID"] = 18431,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1899,
		},
		[393772] = {
			["source"] = "Hihveer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188717,
		},
		[387629] = {
			["source"] = "Desecrated Ohuna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195876,
		},
		[208165] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[391726] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderhead",
			["npcID"] = 197698,
		},
		[387631] = {
			["source"] = "Molkeej",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195430,
		},
		[422443] = {
			["source"] = "Sickened Growth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207926,
		},
		[89757] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defias Cannon",
			["npcID"] = 48266,
		},
		[222501] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Grub Redcut",
			["npcID"] = 199351,
		},
		[159021] = {
			["source"] = "Durag the Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77890,
		},
		[426541] = {
			["source"] = "Runic Disciple",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131685,
		},
		[375348] = {
			["source"] = "Gusting Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190401,
		},
		[309821] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zror'um the Infinite",
			["npcID"] = 154087,
		},
		[303678] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lumbering Creation",
			["npcID"] = 155824,
		},
		[338490] = {
			["source"] = "Devmorta",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162875,
		},
		[393780] = {
			["source"] = "Flame Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192764,
		},
		[375351] = {
			["source"] = "Glacial Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190403,
		},
		[393781] = {
			["source"] = "Flame Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192764,
		},
		[389686] = {
			["source"] = "Crystal Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196116,
		},
		[420403] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decaymonger Rotpaw",
			["npcID"] = 205995,
		},
		[397878] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupt Living Water",
			["npcID"] = 59873,
		},
		[393783] = {
			["source"] = "Iskakx",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192761,
		},
		[153905] = {
			["source"] = "Whirling Dervish",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77605,
		},
		[195884] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Feltotem Bloodsinger",
			["npcID"] = 96423,
		},
		[377402] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[420405] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Caller",
			["npcID"] = 207041,
		},
		[412215] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spurlok, Timesworn Sentinel",
			["npcID"] = 205158,
		},
		[397881] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupt Living Water",
			["npcID"] = 59873,
		},
		[285255] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kul Tiran Strongarm",
			["npcID"] = 146553,
		},
		[118940] = {
			["encounterName"] = "Gekkan",
			["source"] = "Glintrok Oracle",
			["encounterID"] = 2129,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61339,
		},
		[395834] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197121,
		},
		[393787] = {
			["source"] = "Iskakx",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192761,
		},
		[169265] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83846,
		},
		[303687] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boggac Skullbash",
			["npcID"] = 151308,
		},
		[404027] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[46164] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Kael'thas Sunstrider",
			["npcID"] = 24664,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1894,
		},
		[399933] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tukkaraq's Boat",
			["npcID"] = 201121,
		},
		[397886] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupt Droplet",
			["npcID"] = 62358,
		},
		[96416] = {
			["source"] = "Hakkari Witch Doctor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 52086,
		},
		[90273] = {
			["source"] = "Captain Balinda Stonehearth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48507,
		},
		[397888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fallen Waterspeaker",
			["npcID"] = 200126,
		},
		[377411] = {
			["source"] = "Mature Slyvern",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192169,
		},
		[395841] = {
			["source"] = "Bracken Warscourge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197120,
		},
		[397889] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fallen Waterspeaker",
			["npcID"] = 200126,
		},
		[270929] = {
			["source"] = "Harpy Boltcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152843,
		},
		[111775] = {
			["source"] = "Lilian Voss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58722,
		},
		[159030] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glut",
			["npcID"] = 80868,
		},
		[387652] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frozen Revenant",
			["npcID"] = 187203,
		},
		[397892] = {
			["source"] = "Imacu'tya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104275,
		},
		[367176] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Euv'ouk",
			["npcID"] = 184409,
		},
		[428609] = {
			["source"] = "Stormforged Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207024,
		},
		[420419] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Caller",
			["npcID"] = 207041,
		},
		[381512] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[90275] = {
			["source"] = "Captain Balinda Stonehearth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48507,
		},
		[387657] = {
			["source"] = "Earthbound Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193795,
		},
		[100002] = {
			["encounterName"] = "Shannox",
			["source"] = "Shannox",
			["npcID"] = 53691,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1205,
		},
		[420422] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[397897] = {
			["source"] = "Jazshariu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104273,
		},
		[387659] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Melkhop",
			["npcID"] = 193311,
		},
		[381516] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["npcID"] = 190485,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2623,
		},
		[393803] = {
			["source"] = "Trakhan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193783,
		},
		[412233] = {
			["source"] = "Time-Lost Rocketeer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205727,
		},
		[397899] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sha-Touched Guardian",
			["npcID"] = 200131,
		},
		[393804] = {
			["source"] = "Whirglgurgl",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188860,
		},
		[373327] = {
			["encounterName"] = "Eranog",
			["source"] = "Primal Flame",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187593,
		},
		[159035] = {
			["source"] = "Shaadum",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78728,
		},
		[381519] = {
			["source"] = "Embertooth Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187426,
		},
		[399949] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Tempest",
			["npcID"] = 200673,
		},
		[7948] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deviate Shambler",
			["npcID"] = 5761,
		},
		[373329] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[408141] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Dazhak",
			["npcID"] = 201788,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2668,
		},
		[395855] = {
			["source"] = "The Blue Gulper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195976,
		},
		[381521] = {
			["source"] = "Encroaching Downpour",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191324,
		},
		[279134] = {
			["source"] = "Risen Abomination",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145120,
		},
		[397904] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sha-Touched Guardian",
			["npcID"] = 200131,
		},
		[395857] = {
			["source"] = "Qalashi Stonemender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187600,
		},
		[8600] = {
			["encounterName"] = "Theka the Martyr",
			["source"] = "Theka the Martyr",
			["encounterID"] = 596,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7272,
		},
		[126625] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Violence",
			["npcID"] = 64656,
		},
		[307805] = {
			["encounterName"] = "Maut",
			["source"] = "Maut",
			["npcID"] = 156523,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2327,
		},
		[285280] = {
			["source"] = "Kul Tiran Tideweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146552,
		},
		[393811] = {
			["source"] = "Maiden of Diligence",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192718,
		},
		[387668] = {
			["source"] = "Awakened Crag",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195243,
		},
		[397907] = {
			["source"] = "Baalgar the Watchful",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104274,
		},
		[393812] = {
			["source"] = "Whirglgurgl",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188860,
		},
		[395860] = {
			["source"] = "The Black Gulper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195975,
		},
		[150848] = {
			["source"] = "Blood-Branded Razorfen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74553,
		},
		[387670] = {
			["source"] = "Qu'ruk the Time-Lost",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195322,
		},
		[375384] = {
			["source"] = "Primalist Earthshaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190371,
		},
		[369241] = {
			["source"] = "Searing Flame Harchek",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191476,
		},
		[307809] = {
			["encounterName"] = "Carapace of N'Zoth",
			["source"] = "Fury of N'Zoth",
			["encounterID"] = 2337,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157439,
		},
		[150849] = {
			["source"] = "Razorfen Huntmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74552,
		},
		[328287] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Honored Duelist",
			["npcID"] = 165265,
		},
		[40536] = {
			["encounterName"] = "Illidan Stormrage",
			["source"] = "Akama",
			["encounterID"] = 609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23089,
		},
		[361052] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Engorged Annelid",
			["npcID"] = 180722,
		},
		[381530] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Thunderfist",
			["npcID"] = 193373,
		},
		[377435] = {
			["source"] = "Time-Lost Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187265,
		},
		[58966] = {
			["source"] = "Drakkari Battle Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29836,
		},
		[375388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Watercaller",
			["npcID"] = 190995,
		},
		[51287] = {
			["source"] = "Y'kish the Deceiver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81266,
		},
		[297574] = {
			["encounterName"] = "Oblivion Elemental",
			["source"] = "Oblivion Elemental",
			["encounterID"] = 2372,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153244,
		},
		[397914] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Depraved Mistweaver",
			["npcID"] = 200137,
		},
		[161090] = {
			["encounterName"] = "Rocketspark and Borka",
			["source"] = "Borka the Brute",
			["encounterID"] = 1715,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77816,
		},
		[252215] = {
			["source"] = "Crimson Cultist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138274,
		},
		[253239] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dazar'ai Juggernaut",
			["npcID"] = 122971,
		},
		[389725] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bazual",
			["npcID"] = 193532,
		},
		[270956] = {
			["source"] = "Disciple of Jan'alai",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120950,
		},
		[31405] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[381535] = {
			["source"] = "Earthen Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186849,
		},
		[148805] = {
			["source"] = "Bladespire Raider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80172,
		},
		[32173] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Enchantress",
			["npcID"] = 17961,
		},
		[395871] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Stonemender",
			["npcID"] = 187600,
		},
		[56919] = {
			["source"] = "Lord Walden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45879,
		},
		[12248] = {
			["source"] = "Murkblood Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17771,
		},
		[32858] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Auchenai Soulpriest",
			["npcID"] = 18493,
		},
		[395872] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Talking Fish",
			["npcID"] = 59546,
		},
		[414303] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["npcID"] = 198996,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2667,
		},
		[387683] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Sorcerer",
			["npcID"] = 200758,
		},
		[387684] = {
			["source"] = "Earthen Spire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195348,
		},
		[277106] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Gastrinax",
			["npcID"] = 203521,
		},
		[200002] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bastillax",
			["npcID"] = 96783,
		},
		[377447] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Obsidian Wingguard",
			["npcID"] = 192220,
		},
		[414307] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["encounterID"] = 2667,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198996,
		},
		[301681] = {
			["source"] = "Mechagon Cavalry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150292,
		},
		[102569] = {
			["encounterName"] = "Murozond",
			["source"] = "Murozond",
			["encounterID"] = 1271,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54432,
		},
		[395878] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Talking Fish",
			["npcID"] = 59546,
		},
		[167239] = {
			["source"] = "Grom'kar Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83028,
		},
		[371306] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186741,
		},
		[49241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ruby Watcher",
			["npcID"] = 27542,
		},
		[412262] = {
			["source"] = "Time-Lost Rocketeer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205727,
		},
		[167240] = {
			["source"] = "Grom'kar Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83028,
		},
		[406120] = {
			["source"] = "Keeper Tyr",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198982,
		},
		[384473] = {
			["source"] = "Icegnaw Mantacorn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187826,
		},
		[179101] = {
			["source"] = "Hatecoil Enchantress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88089,
		},
		[173384] = {
			["source"] = "Rampaging Clefthoof",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83392,
		},
		[195344] = {
			["source"] = "Drogbar Manathirster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95866,
		},
		[219913] = {
			["source"] = "Violent Crageater",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95916,
		},
		[179017] = {
			["source"] = "Fathom-Commander Zarrin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88090,
		},
		[400842] = {
			["source"] = "Zaqali Blazestalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199828,
		},
		[397931] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Minion of Doubt",
			["npcID"] = 57109,
		},
		[367215] = {
			["source"] = "Toadious",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184395,
		},
		[195585] = {
			["source"] = "Helarjar Soulthief",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 115291,
		},
		[131940] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Giant Siftworm",
			["npcID"] = 67084,
		},
		[365168] = {
			["source"] = "Eternal Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184530,
		},
		[268924] = {
			["source"] = "Arathor Arbalest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 142733,
		},
		[37979] = {
			["source"] = "Murkblood Healer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17730,
		},
		[307008] = {
			["encounterName"] = "Carapace of N'Zoth",
			["source"] = "Gaze of Madness",
			["encounterID"] = 2337,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157442,
		},
		[194887] = {
			["source"] = "Drogbar Wormhook",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95013,
		},
		[391790] = {
			["source"] = "Seismic Stomps",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197829,
		},
		[193376] = {
			["encounterName"] = "Ularogg Cragshaper",
			["source"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91004,
		},
		[371313] = {
			["source"] = "Blazing Manifestation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186336,
		},
		[181536] = {
			["source"] = "Sea Skrog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88094,
		},
		[391791] = {
			["source"] = "Furious Deluge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197220,
		},
		[135503] = {
			["source"] = "Tidesage Defector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152301,
		},
		[313977] = {
			["source"] = "Abyssal Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161173,
		},
		[319910] = {
			["source"] = "Ravenous Etherwyrm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158771,
		},
		[261440] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lord Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131527,
		},
		[32860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Auchenai Soulpriest",
			["npcID"] = 18493,
		},
		[255814] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reanimated Honor Guard",
			["npcID"] = 127757,
		},
		[300777] = {
			["source"] = "Slime Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151792,
		},
		[391793] = {
			["source"] = "Furious Deluge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197220,
		},
		[393841] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Web-Queen Ashkaz",
			["npcID"] = 192983,
		},
		[86620] = {
			["encounterName"] = "Hogger",
			["source"] = "Hogger",
			["npcID"] = 46254,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1144,
		},
		[373364] = {
			["source"] = "Gerenth the Vile",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107435,
		},
		[285311] = {
			["source"] = "Kul Tiran Stormbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146831,
		},
		[233421] = {
			["source"] = "Algerson Bodyguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 149036,
		},
		[197961] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95676,
		},
		[133990] = {
			["source"] = "Thane Stonehearth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67636,
		},
		[299167] = {
			["source"] = "Mechagonian Nullifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151124,
		},
		[385652] = {
			["source"] = "Awakened Crag",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195243,
		},
		[133321] = {
			["source"] = "Shieldwall Rifleman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67297,
		},
		[208929] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Corruptor Tentacle",
			["npcID"] = 105383,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1873,
		},
		[399987] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[270979] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Briarwood Invader",
			["npcID"] = 131373,
		},
		[223423] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Tainted Bloodpetal",
			["npcID"] = 112118,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1873,
		},
		[106933] = {
			["encounterName"] = "Striker Ga'dok",
			["source"] = "Striker Ga'dok",
			["encounterID"] = 1405,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56589,
		},
		[107044] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Aqua Dancer",
			["npcID"] = 56865,
		},
		[298945] = {
			["source"] = "Great Mua'kin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 169520,
		},
		[412275] = {
			["source"] = "Captain Reykal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203355,
		},
		[162127] = {
			["source"] = "Grimfrost Drudge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72955,
		},
		[391798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Incinerator",
			["npcID"] = 195062,
		},
		[102573] = {
			["encounterName"] = "Gu Cloudstrike",
			["source"] = "Azure Serpent",
			["encounterID"] = 1303,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56754,
		},
		[363130] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["source"] = "Lihuvim",
			["encounterID"] = 2539,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182169,
		},
		[392659] = {
			["source"] = "Crazed Alpha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194224,
		},
		[391799] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Morlash",
			["npcID"] = 201549,
		},
		[133432] = {
			["source"] = "Domination Point Demolisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67671,
		},
		[245706] = {
			["source"] = "Shadowguard Champion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122403,
		},
		[404932] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mad-Eye Carrey",
			["npcID"] = 201181,
		},
		[80382] = {
			["source"] = "Bilgewater Miner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67871,
		},
		[78828] = {
			["isChanneled"] = true,
			["source"] = "Blood Guard Gro'tash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 67927,
		},
		[425995] = {
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210423,
		},
		[45101] = {
			["source"] = "Dawnblade Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24979,
		},
		[367228] = {
			["source"] = "Subjugated Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184767,
		},
		[135508] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Rootshaper",
			["npcID"] = 68821,
		},
		[312782] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "N'Zoth the Corruptor",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158041,
		},
		[422518] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[375420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverbend Chomper",
			["npcID"] = 190886,
		},
		[39126] = {
			["source"] = "Sunseeker Botanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 18422,
		},
		[77721] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thule Ravenclaw",
			["npcID"] = 47023,
		},
		[167883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terokk",
			["npcID"] = 83554,
		},
		[264038] = {
			["source"] = "Coven Thornshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131666,
		},
		[427657] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nuoberon",
			["npcID"] = 209113,
		},
		[395899] = {
			["source"] = "Primalist Chillblaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199124,
		},
		[44503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wretched Husk",
			["npcID"] = 24690,
		},
		[375422] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverbend Gnasher",
			["npcID"] = 189337,
		},
		[410234] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["npcID"] = 203679,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[171873] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmane Earthbinder",
			["npcID"] = 85897,
		},
		[414330] = {
			["encounterName"] = "Iridikron",
			["source"] = "Chromie",
			["npcID"] = 204449,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2669,
		},
		[100015] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void-Twisted Spellweaver",
			["npcID"] = 152135,
		},
		[201038] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kethrazor",
			["npcID"] = 96997,
		},
		[412283] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alcanon",
			["npcID"] = 203515,
		},
		[365185] = {
			["source"] = "Dominated Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184659,
		},
		[169233] = {
			["encounterName"] = "Xeri'tac",
			["source"] = "Venom-Crazed Pale One",
			["encounterID"] = 1752,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84554,
		},
		[410236] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["encounterID"] = 2672,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203679,
		},
		[412284] = {
			["source"] = "Captain Reykal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203355,
		},
		[119981] = {
			["encounterName"] = "Trial of the King",
			["source"] = "Ming the Cunning",
			["encounterID"] = 1442,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61444,
		},
		[183633] = {
			["source"] = "Rockbound Pelter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91008,
		},
		[377473] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[152917] = {
			["source"] = "Solar Magnifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77559,
		},
		[225042] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupted Feeler",
			["npcID"] = 113088,
		},
		[179538] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Spitespeaker",
			["npcID"] = 89025,
		},
		[196944] = {
			["source"] = "Balnazzar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90981,
		},
		[157013] = {
			["source"] = "Thunderlord Eagle-Eye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78806,
		},
		[381570] = {
			["source"] = "Earthen Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186849,
		},
		[417241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gill'dan",
			["npcID"] = 204808,
		},
		[313583] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Meredy Huntswell",
			["npcID"] = 156943,
		},
		[420478] = {
			["source"] = "Deceiver Hr'qoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206784,
		},
		[260425] = {
			["source"] = "Muddy Riverbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130757,
		},
		[172005] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ralshira",
			["npcID"] = 86135,
		},
		[118958] = {
			["isChanneled"] = true,
			["source"] = "Kargesh Ribcrusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 61242,
		},
		[294349] = {
			["source"] = "Living Waste",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144301,
		},
		[166778] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terokk",
			["npcID"] = 82820,
		},
		[408193] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["npcID"] = 201934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[393859] = {
			["source"] = "Bustled Beetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193705,
		},
		[79933] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Utroka the Keymistress",
			["npcID"] = 43350,
		},
		[6605] = {
			["source"] = "Plaguebat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8600,
		},
		[207865] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Genn Greymane",
			["npcID"] = 214073,
		},
		[213975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellwyrm",
			["npcID"] = 105884,
		},
		[395908] = {
			["source"] = "Primal Icebulk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192767,
		},
		[170910] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sethe",
			["npcID"] = 80644,
		},
		[265679] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sandfury Assassin",
			["npcID"] = 129525,
		},
		[426273] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Strange Winged Goblin",
			["npcID"] = 214483,
		},
		[272364] = {
			["source"] = "Congealed Oil",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150698,
		},
		[381575] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rustpine Immolator",
			["npcID"] = 187396,
		},
		[79939] = {
			["source"] = "Blackrock Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43535,
		},
		[196947] = {
			["encounterName"] = "Helya",
			["source"] = "Helya",
			["npcID"] = 96759,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1824,
		},
		[387719] = {
			["encounterName"] = "Kurog Grimtotem",
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Snail",
			["npcID"] = 191790,
		},
		[223417] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grisly Trapper",
			["npcID"] = 112162,
		},
		[120495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Agitated Seedstealer",
			["npcID"] = 61302,
		},
		[177460] = {
			["source"] = "Corrupted Wind Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80381,
		},
		[200757] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Volatile Minion",
			["npcID"] = 96280,
		},
		[154356] = {
			["source"] = "Sargerei Soulpriest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76595,
		},
		[361023] = {
			["source"] = "Cartel Xy Saboteur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181005,
		},
		[393864] = {
			["source"] = "Trap-Layer Kerwal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186516,
		},
		[420485] = {
			["source"] = "Deceiver Hr'qoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206784,
		},
		[360589] = {
			["source"] = "Iska, Outrider of Ruin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182114,
		},
		[424581] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["encounterID"] = 2786,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209090,
		},
		[430218] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Inquisitor Fairbell",
			["npcID"] = 211930,
		},
		[398780] = {
			["source"] = "Farscale Myrmidon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200485,
		},
		[58972] = {
			["source"] = "Drakkari Fire Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29822,
		},
		[285335] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coldheart Javelineer",
			["npcID"] = 185221,
		},
		[309451] = {
			["encounterName"] = "Magister Umbric",
			["source"] = "Magister Umbric",
			["npcID"] = 158035,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2377,
		},
		[420487] = {
			["source"] = "Deceiver Hr'qoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206784,
		},
		[381580] = {
			["source"] = "Sundered Flame Brawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203620,
		},
		[163687] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sethekk Prophet",
			["npcID"] = 80638,
		},
		[410249] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[30691] = {
			["encounterName"] = "Vazruden the Herald",
			["source"] = "Vazruden the Herald",
			["npcID"] = 17307,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1892,
		},
		[299394] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tisiphon",
			["npcID"] = 157468,
		},
		[79964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jorgensen",
			["npcID"] = 43305,
		},
		[377486] = {
			["source"] = "Infinite Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184335,
		},
		[197974] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Soul-torn Vanguard",
			["npcID"] = 100485,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1833,
		},
		[381582] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutal Motivator",
			["npcID"] = 184453,
		},
		[391821] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Sorcerer",
			["npcID"] = 200758,
		},
		[420490] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crustbreaker Conduit",
			["npcID"] = 207038,
		},
		[210261] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Sentry",
			["npcID"] = 104251,
		},
		[373392] = {
			["source"] = "Nokhud Hornsounder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192796,
		},
		[31664] = {
			["source"] = "Frenzied Gargoyle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 27691,
		},
		[377488] = {
			["source"] = "Rune Seal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187155,
		},
		[157020] = {
			["source"] = "Blinding Solar Flare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79462,
		},
		[104318] = {
			["source"] = "Wild Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 55659,
		},
		[172818] = {
			["source"] = "Covenant Paladin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184073,
		},
		[364495] = {
			["source"] = "Oracle Zoketh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181625,
		},
		[270595] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Savage Fathomjaw",
			["npcID"] = 130916,
		},
		[260432] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Tendril",
			["npcID"] = 125136,
		},
		[79930] = {
			["source"] = "Darbel Montrose",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 142688,
		},
		[377490] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderspine Crasher",
			["npcID"] = 191057,
		},
		[387729] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Goopal",
			["npcID"] = 203477,
		},
		[373395] = {
			["source"] = "Batak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193462,
		},
		[391825] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shiobhan Waterborn",
			["npcID"] = 201559,
		},
		[279199] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scarlet Siegemaster",
			["npcID"] = 211937,
		},
		[84662] = {
			["source"] = "Korok the Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45301,
		},
		[58973] = {
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29820,
		},
		[59734] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 2025,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23954,
		},
		[207861] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Genn Greymane",
			["npcID"] = 214073,
		},
		[165213] = {
			["source"] = "Everbloom Tender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81985,
		},
		[8858] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Iron Geologist",
			["npcID"] = 5839,
		},
		[150879] = {
			["encounterName"] = "Hunter Bonetusk",
			["source"] = "Hunter Bonetusk",
			["encounterID"] = 1656,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75001,
		},
		[215241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Executor",
			["npcID"] = 115595,
		},
		[387732] = {
			["source"] = "Titan Defense Matrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193244,
		},
		[428471] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Manifested Dream",
			["npcID"] = 213143,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2708,
		},
		[375446] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunhide Stomphoof",
			["npcID"] = 190953,
		},
		[418449] = {
			["source"] = "Druid of the Claw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210684,
		},
		[368295] = {
			["source"] = "Corrupted Architect",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183953,
		},
		[390940] = {
			["source"] = "Gnarls",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197354,
		},
		[285346] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "King Rastakhan",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145616,
		},
		[106877] = {
			["encounterName"] = "Sha of Violence",
			["source"] = "Sha of Violence",
			["encounterID"] = 1305,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56719,
		},
		[330397] = {
			["source"] = "Blistering Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160345,
		},
		[54878] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Elemental",
			["encounterID"] = 1983,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29573,
		},
		[187706] = {
			["source"] = "Dark Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91697,
		},
		[118963] = {
			["source"] = "Glintrok Skulker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61240,
		},
		[368379] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Engulfer",
			["npcID"] = 183516,
		},
		[406165] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[200027] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bastillax",
			["npcID"] = 96783,
		},
		[426643] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Abominable Greench",
			["npcID"] = 54499,
		},
		[194284] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Iron Grenadier",
			["npcID"] = 131814,
		},
		[381593] = {
			["source"] = "Ebonstone Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184300,
		},
		[425819] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Tainted Treant",
			["npcID"] = 211904,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[41056] = {
			["source"] = "Yorus the Flesh Harvester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24214,
		},
		[420501] = {
			["source"] = "Wildfire Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209200,
		},
		[355945] = {
			["source"] = "Explosive Mawsphere",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 179940,
		},
		[368277] = {
			["isChanneled"] = true,
			["source"] = "Corrupted Architect",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 183953,
		},
		[393881] = {
			["source"] = "Nezascar the Sightless",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196535,
		},
		[198379] = {
			["encounterName"] = "Archdruid Glaidalis",
			["source"] = "Archdruid Glaidalis",
			["encounterID"] = 1836,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96512,
		},
		[275112] = {
			["source"] = "Blisterhide",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197353,
		},
		[58053] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crusader of Virtue",
			["npcID"] = 30189,
		},
		[377500] = {
			["source"] = "Infinite Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184335,
		},
		[302816] = {
			["source"] = "Crazed Earth Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151638,
		},
		[373405] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[301734] = {
			["source"] = "Mechanized Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153068,
		},
		[360213] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defective Colossus",
			["npcID"] = 181839,
		},
		[412313] = {
			["source"] = "Emberdusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203664,
		},
		[290437] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Laminaria",
			["npcID"] = 146256,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2280,
		},
		[361913] = {
			["encounterName"] = "Lords of Dread",
			["source"] = "Mal'Ganis",
			["encounterID"] = 2543,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181398,
		},
		[377502] = {
			["source"] = "Cliffdrip Fallstriker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189815,
		},
		[356088] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Myrmidon",
			["npcID"] = 183131,
		},
		[41032] = {
			["encounterName"] = "Illidan Stormrage",
			["source"] = "Illidan Stormrage",
			["encounterID"] = 609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 22917,
		},
		[391837] = {
			["source"] = "Emerald Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191252,
		},
		[377503] = {
			["source"] = "Rune Seal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187155,
		},
		[360863] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dominated Worldbreaker",
			["npcID"] = 183249,
		},
		[413704] = {
			["source"] = "Ducks Devil",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200751,
		},
		[83901] = {
			["source"] = "King Mukla",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 1559,
		},
		[11802] = {
			["source"] = "Dark Iron Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6212,
		},
		[395934] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197119,
		},
		[87225] = {
			["source"] = "Ambermill Witchalok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 1889,
		},
		[375457] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Juvenile Frost Proto-Dragon",
			["npcID"] = 191222,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[377505] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[287037] = {
			["encounterName"] = "Opulence",
			["source"] = "Opulence",
			["npcID"] = 145261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2271,
		},
		[388532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "O'nank Shorescour",
			["npcID"] = 193118,
		},
		[202634] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimhorn the Enslaver",
			["npcID"] = 102566,
		},
		[331402] = {
			["source"] = "Popo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180028,
		},
		[165220] = {
			["source"] = "Captain Brak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81254,
		},
		[381602] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[375459] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderspine Rumbler",
			["npcID"] = 192941,
		},
		[308669] = {
			["encounterName"] = "Overlord Mathias Shaw",
			["source"] = "Eye of Chaos",
			["encounterID"] = 2376,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158315,
		},
		[360569] = {
			["source"] = "Overgrown Geomental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 179007,
		},
		[345554] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Myrmidon",
			["npcID"] = 184471,
		},
		[383651] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193944,
		},
		[211999] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmtongue Scavenger",
			["npcID"] = 105629,
		},
		[12890] = {
			["encounterName"] = "Shade of Eranikus",
			["source"] = "Shade of Eranikus",
			["encounterID"] = 493,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5709,
		},
		[174436] = {
			["source"] = "Grom'kar Shadowblade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75753,
		},
		[17843] = {
			["source"] = "Novice Timewalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189583,
		},
		[286915] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Indomitable",
			["npcID"] = 147745,
		},
		[395939] = {
			["source"] = "Clearwater Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192652,
		},
		[381605] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[59160] = {
			["source"] = "Stormforged Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28582,
		},
		[336066] = {
			["source"] = "Blind Souldrinker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182686,
		},
		[226269] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forgotten Spirit",
			["npcID"] = 113699,
		},
		[286619] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Laminaria",
			["npcID"] = 146256,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2280,
		},
		[388529] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Seabreaker Skrog",
			["npcID"] = 192931,
		},
		[372858] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["encounterID"] = 2606,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189232,
		},
		[395941] = {
			["source"] = "Clearwater Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192652,
		},
		[282209] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Akunda's Aspect",
			["encounterID"] = 2268,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 148962,
		},
		[408228] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["npcID"] = 203678,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[393894] = {
			["source"] = "Nezascar the Sightless",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196535,
		},
		[372863] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["npcID"] = 189232,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2606,
		},
		[225289] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Ranger",
			["npcID"] = 101106,
		},
		[263961] = {
			["source"] = "Heartsbane Soulcharmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131812,
		},
		[289420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kal'ia Pa'kuaya",
			["npcID"] = 148607,
		},
		[314033] = {
			["source"] = "K'thir Doomsayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156572,
		},
		[406182] = {
			["isChanneled"] = true,
			["source"] = "Corruptor Tentacle",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203338,
		},
		[368294] = {
			["source"] = "Charged Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185752,
		},
		[114872] = {
			["source"] = "Professor Slate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59613,
		},
		[188270] = {
			["source"] = "Black Rook Falcon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 93064,
		},
		[406183] = {
			["source"] = "Krono Sandtongue",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205622,
		},
		[391849] = {
			["source"] = "Surging Magma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195330,
		},
		[285305] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kul Tiran Tideweaver",
			["npcID"] = 146552,
		},
		[179996] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nightfallen Construct",
			["npcID"] = 90377,
		},
		[211299] = {
			["source"] = "Watchful Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105715,
		},
		[85692] = {
			["source"] = "Doomguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11859,
		},
		[374192] = {
			["source"] = "Mature Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191696,
		},
		[395946] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197119,
		},
		[111801] = {
			["encounterName"] = "Instructor Chillheart",
			["source"] = "Risen Guard",
			["encounterID"] = 1426,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58822,
		},
		[424615] = {
			["source"] = "Elder Cassaphine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206818,
		},
		[426663] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Vicious Snap Dragon",
			["npcID"] = 212681,
		},
		[395947] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197124,
		},
		[389804] = {
			["source"] = "Unstable Curator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187154,
		},
		[284446] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "Bwonsamdi",
			["encounterID"] = 2272,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 145644,
		},
		[114873] = {
			["source"] = "Professor Slate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59613,
		},
		[412330] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malrogg",
			["npcID"] = 202606,
		},
		[13321] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felhound Manastalker",
			["npcID"] = 17401,
		},
		[309894] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voidtender Malketh",
			["npcID"] = 154332,
		},
		[250208] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snapshell Hatchling",
			["npcID"] = 152384,
		},
		[166197] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmaul Bonecrusher",
			["npcID"] = 77995,
		},
		[373424] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[417735] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mycelial Growth",
			["npcID"] = 208525,
		},
		[285250] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kul Tiran Strongarm",
			["npcID"] = 146553,
		},
		[284276] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "King Rastakhan",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145616,
		},
		[12098] = {
			["source"] = "Illidari Dreadlord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 21166,
		},
		[391855] = {
			["source"] = "Magmatalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189538,
		},
		[418476] = {
			["source"] = "Illidan Stormrage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205306,
		},
		[285319] = {
			["source"] = "Kul Tiran Stormbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146831,
		},
		[17287] = {
			["source"] = "Bloodwarder Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19633,
		},
		[391856] = {
			["source"] = "Tenmod",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194763,
		},
		[114874] = {
			["source"] = "Professor Slate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59613,
		},
		[395952] = {
			["source"] = "Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197125,
		},
		[46150] = {
			["source"] = "Coilskar Witch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24696,
		},
		[375475] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Juvenile Frost Proto-Dragon",
			["npcID"] = 191222,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[418478] = {
			["source"] = "Druid of the Claw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210684,
		},
		[202088] = {
			["encounterName"] = "Helya",
			["source"] = "Helya",
			["npcID"] = 96759,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1824,
		},
		[162157] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dorogg the Ruthless",
			["npcID"] = 74254,
		},
		[180327] = {
			["source"] = "Felsoul Trickster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106375,
		},
		[288927] = {
			["source"] = "Vessel of Bwonsamdi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148673,
		},
		[135425] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horde Hunter",
			["npcID"] = 68334,
		},
		[282411] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Akunda's Aspect",
			["encounterID"] = 2268,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144941,
		},
		[149416] = {
			["source"] = "Vespoid Drone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183257,
		},
		[37967] = {
			["source"] = "Underbog Shambler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17871,
		},
		[201033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kethrazor",
			["npcID"] = 96997,
		},
		[316093] = {
			["source"] = "Zuythiz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162141,
		},
		[425381] = {
			["isChanneled"] = true,
			["source"] = "Firelands Flameguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210290,
		},
		[369335] = {
			["source"] = "Runic Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184107,
		},
		[371383] = {
			["source"] = "Hailbringer Theurgist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189229,
		},
		[289421] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Echo of Pa'ku",
			["npcID"] = 148624,
		},
		[400052] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Swooping Flayer",
			["npcID"] = 199809,
		},
		[378835] = {
			["source"] = "Brackenhide Rotflinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186362,
		},
		[395957] = {
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194401,
		},
		[427428] = {
			["source"] = "Greedy Gessie",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209936,
		},
		[256846] = {
			["source"] = "Dinomancer Kish'o",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129553,
		},
		[285040] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Ire of the Deep",
			["encounterID"] = 2280,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146736,
		},
		[284362] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Brother Joseph",
			["encounterID"] = 2280,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146253,
		},
		[423734] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Doomfiend",
			["npcID"] = 210910,
		},
		[367290] = {
			["encounterName"] = "The Jailer",
			["source"] = "The Jailer",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180990,
		},
		[425379] = {
			["source"] = "Flamespreader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210294,
		},
		[264903] = {
			["encounterName"] = "Aqu'sirr",
			["source"] = "Aqu'sirr",
			["encounterID"] = 2130,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134056,
		},
		[29928] = {
			["encounterName"] = "Opera Hall",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 655,
		},
		[400055] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scavenging Slicer",
			["npcID"] = 203384,
		},
		[147826] = {
			["source"] = "Huolon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 73167,
		},
		[173798] = {
			["source"] = "Ontogen the Harvester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82372,
		},
		[286389] = {
			["source"] = "Rastari Royal Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148665,
		},
		[159089] = {
			["source"] = "Emberbark Ancient",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82284,
		},
		[33111] = {
			["source"] = "Shadowmoon Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17371,
		},
		[400057] = {
			["source"] = "Deepstrider Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203727,
		},
		[273844] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shuja Grimaxe",
			["npcID"] = 167664,
		},
		[391866] = {
			["source"] = "Brackenhide Putrifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192057,
		},
		[377532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderspine Crasher",
			["npcID"] = 191057,
		},
		[417808] = {
			["source"] = "Haywire Harvester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205889,
		},
		[216800] = {
			["source"] = "Thistleleaf Menace",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91472,
		},
		[375485] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Dragonspawn Flamebender",
			["npcID"] = 191230,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[264694] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[268202] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Deathtouched Slaver",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135552,
		},
		[394660] = {
			["source"] = "Bluescale",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188723,
		},
		[30643] = {
			["encounterName"] = "Watchkeeper Gargolmar",
			["source"] = "Hellfire Watcher",
			["npcID"] = 17309,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1893,
		},
		[256922] = {
			["source"] = "Faceless Maiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131821,
		},
		[157043] = {
			["source"] = "Sargerei Ritualist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77130,
		},
		[398012] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Earthrazer",
			["npcID"] = 203739,
		},
		[167282] = {
			["source"] = "Boneseer Cold-Eye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88361,
		},
		[385239] = {
			["source"] = "Flare Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202683,
		},
		[200647] = {
			["source"] = "Felguard Butcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96494,
		},
		[300525] = {
			["source"] = "Scrapbone Trashtosser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150142,
		},
		[391870] = {
			["source"] = "Mature Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191696,
		},
		[400802] = {
			["source"] = "Kalecgos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187676,
		},
		[192631] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ash'golm",
			["npcID"] = 96681,
		},
		[199645] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crusher",
			["npcID"] = 97632,
		},
		[309961] = {
			["encounterName"] = "Il'gynoth, Corruption Reborn",
			["source"] = "Il'gynoth",
			["npcID"] = 158328,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2345,
		},
		[80066] = {
			["source"] = "Zephyrus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 49263,
		},
		[395967] = {
			["source"] = "Vicious Hyena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197123,
		},
		[265876] = {
			["source"] = "Matron Alma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135365,
		},
		[400063] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pesky Sporemoth",
			["npcID"] = 202625,
		},
		[426684] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Ravager",
			["npcID"] = 212673,
		},
		[261438] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lord Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131527,
		},
		[133496] = {
			["source"] = "Shieldwall Rifleman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67297,
		},
		[6254] = {
			["encounterName"] = "Skum",
			["source"] = "Skum",
			["npcID"] = 3674,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 589,
		},
		[34879] = {
			["source"] = "Bloodwarder Falconer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17994,
		},
		[161509] = {
			["source"] = "Mandragora Lifedrinker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80699,
		},
		[153974] = {
			["source"] = "Black Iron Leadbelcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76157,
		},
		[258777] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Oarsman",
			["npcID"] = 127111,
		},
		[196977] = {
			["source"] = "Balnazzar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90981,
		},
		[46155] = {
			["encounterName"] = "Selin Fireheart",
			["source"] = "Selin Fireheart",
			["encounterID"] = 1897,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24723,
		},
		[406209] = {
			["source"] = "Han'thul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198914,
		},
		[400066] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Preying Dustmoth",
			["npcID"] = 201068,
		},
		[282153] = {
			["encounterName"] = "Mekkatorque",
			["source"] = "High Tinker Mekkatorque",
			["encounterID"] = 2276,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144796,
		},
		[289488] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Lady Jaina Proudmoore",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146409,
		},
		[406210] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Naturalist",
			["npcID"] = 201746,
		},
		[46042] = {
			["source"] = "Sunblade Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24686,
		},
		[172771] = {
			["source"] = "Grom'kar Incinerator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86809,
		},
		[225207] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felblade Assassin",
			["npcID"] = 101100,
		},
		[174453] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invasive Razorwing",
			["npcID"] = 131558,
		},
		[150904] = {
			["encounterName"] = "Hunter Bonetusk",
			["source"] = "Hunter Bonetusk",
			["encounterID"] = 1656,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75001,
		},
		[250096] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["npcID"] = 122968,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2087,
		},
		[410223] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[365257] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["source"] = "Guardian Automa",
			["encounterID"] = 2539,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182071,
		},
		[34785] = {
			["source"] = "Tempest-Forge Peacekeeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 18405,
		},
		[169277] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Destructor",
			["npcID"] = 84337,
		},
		[12542] = {
			["source"] = "Shadowmoon Darkcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17694,
		},
		[278444] = {
			["source"] = "Devouring Maggot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134024,
		},
		[334542] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arch-Suppressor Laguas",
			["npcID"] = 185019,
		},
		[391382] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197671,
		},
		[126346] = {
			["source"] = "Rangari Jonaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86663,
		},
		[264153] = {
			["source"] = "Devouring Maggot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134024,
		},
		[360859] = {
			["source"] = "Halondrus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181047,
		},
		[264024] = {
			["source"] = "Heartsbane Soulcharmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131812,
		},
		[157049] = {
			["source"] = "Grom'tash the Destructor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77889,
		},
		[406215] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sandy Crocolisk",
			["npcID"] = 199196,
		},
		[33805] = {
			["source"] = "Wildhammer Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19384,
		},
		[427960] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Firebrand Fystia",
			["npcID"] = 209893,
		},
		[152954] = {
			["encounterName"] = "Vigilant Kaathar",
			["source"] = "Vigilant Kaathar",
			["encounterID"] = 1686,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75839,
		},
		[29492] = {
			["source"] = "Phantom Guest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16409,
		},
		[424646] = {
			["source"] = "Flametouched Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210150,
		},
		[16006] = {
			["source"] = "Farseer Drek'Thar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78996,
		},
		[412360] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spinmarrow",
			["npcID"] = 203480,
		},
		[199481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crusher",
			["npcID"] = 97632,
		},
		[303830] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Warlord Zalzjar",
			["npcID"] = 155840,
		},
		[35943] = {
			["source"] = "Shadowmoon Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16594,
		},
		[289496] = {
			["encounterName"] = "Champion of the Light",
			["source"] = "Dark Iron Primalist",
			["npcID"] = 146371,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2265,
		},
		[289497] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Iron Primalist",
			["npcID"] = 146371,
		},
		[383693] = {
			["source"] = "Nokhud Beastmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192794,
		},
		[369359] = {
			["source"] = "Infused Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194200,
		},
		[404171] = {
			["source"] = "Vakan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199855,
		},
		[332500] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fathomless Lurker",
			["npcID"] = 209580,
		},
		[322980] = {
			["source"] = "Wayward Gormling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160713,
		},
		[361169] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Antros",
			["npcID"] = 182466,
		},
		[289498] = {
			["encounterName"] = "Champion of the Light",
			["source"] = "Dark Iron Primalist",
			["npcID"] = 146371,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2265,
		},
		[162171] = {
			["encounterName"] = "Rocketspark and Borka",
			["source"] = "Railmaster Rocketspark",
			["encounterID"] = 1715,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77803,
		},
		[400077] = {
			["source"] = "Deeplung Glowsplasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204013,
		},
		[44224] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24664,
		},
		[421616] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["encounterID"] = 2737,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208478,
		},
		[199389] = {
			["encounterName"] = "Dresaron",
			["source"] = "Dresaron",
			["encounterID"] = 1838,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99200,
		},
		[400078] = {
			["source"] = "Deeplung Glowsplasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204013,
		},
		[417634] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[264520] = {
			["source"] = "Maddened Survivalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131850,
		},
		[8142] = {
			["encounterName"] = "Verdan the Everliving",
			["source"] = "Verdan the Everliving",
			["npcID"] = 5775,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 591,
		},
		[261446] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lady Waycrest",
			["encounterID"] = 2116,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 131545,
		},
		[426524] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Fiery Treant",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208459,
		},
		[412366] = {
			["source"] = "Subterrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203662,
		},
		[189467] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malace Shade",
			["npcID"] = 97090,
		},
		[199567] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Image of Latosius",
			["npcID"] = 101028,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1835,
		},
		[428004] = {
			["isChanneled"] = true,
			["source"] = "Dream Seedling",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210423,
		},
		[330457] = {
			["source"] = "Jovraal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161271,
		},
		[422606] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Volgoth The Flamebringer",
			["npcID"] = 209129,
		},
		[412368] = {
			["source"] = "Underlight Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203593,
		},
		[369365] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184132,
		},
		[86726] = {
			["encounterName"] = "Randolph Moloch",
			["source"] = "Randolph Moloch",
			["npcID"] = 46383,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1146,
		},
		[33806] = {
			["source"] = "Wildhammer Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19384,
		},
		[395987] = {
			["source"] = "Jumping Spiderling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199182,
		},
		[328411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Audat",
			["npcID"] = 185123,
		},
		[404178] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Veltrax",
			["npcID"] = 200904,
		},
		[260466] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow of the Darkness",
			["npcID"] = 132090,
		},
		[309982] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voidtender Malketh",
			["npcID"] = 154332,
		},
		[131178] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pandaren Scarecrow",
			["npcID"] = 66768,
		},
		[406934] = {
			["encounterName"] = "Echo of Neltharion",
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Lavamancer",
			["npcID"] = 202256,
		},
		[406227] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[9232] = {
			["encounterName"] = "High Inquisitor Whitemane",
			["source"] = "High Inquisitor Whitemane",
			["encounterID"] = 450,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209254,
		},
		[377559] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[412371] = {
			["source"] = "Underlight Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203593,
		},
		[422610] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tithris",
			["npcID"] = 210674,
		},
		[171390] = {
			["source"] = "Volatile Fire Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80380,
		},
		[328414] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Royal Arcanist",
			["npcID"] = 165270,
		},
		[395594] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zurgaz Corebreaker",
			["npcID"] = 193680,
		},
		[307937] = {
			["encounterName"] = "Prophet Skitra",
			["source"] = "Prophet Skitra",
			["npcID"] = 157238,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2334,
		},
		[197696] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Illysanna Ravencrest",
			["npcID"] = 98696,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1833,
		},
		[225313] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Ranger",
			["npcID"] = 101106,
		},
		[395991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Awakened Revenant",
			["npcID"] = 191129,
		},
		[56934] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26731,
		},
		[100549] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Magma",
			["npcID"] = 53901,
		},
		[422611] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[427885] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["npcID"] = 82682,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1751,
		},
		[406231] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lingering Wrath",
			["npcID"] = 201758,
		},
		[257397] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Bonesaw",
			["npcID"] = 129788,
		},
		[264931] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[152962] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["npcID"] = 75829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1688,
		},
		[381659] = {
			["source"] = "Cascade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186962,
		},
		[391898] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Failed Scalecommander Haerothal",
			["npcID"] = 201822,
		},
		[229753] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Felsworn Overseer",
			["npcID"] = 115273,
		},
		[289511] = {
			["source"] = "Char'golm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146367,
		},
		[111813] = {
			["encounterName"] = "Instructor Chillheart",
			["source"] = "Risen Guard",
			["encounterID"] = 1426,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58822,
		},
		[201839] = {
			["source"] = "Taintheart Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99366,
		},
		[387192] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Hammer",
			["npcID"] = 209831,
		},
		[289512] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Char'golm",
			["npcID"] = 146367,
		},
		[194942] = {
			["encounterName"] = "Glazer",
			["source"] = "Glazer",
			["npcID"] = 95887,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1817,
		},
		[318181] = {
			["source"] = "Vyrm the Ravenous",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158179,
		},
		[385757] = {
			["source"] = "Mender Eskros",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195303,
		},
		[412378] = {
			["source"] = "Infinite Timebender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205337,
		},
		[158083] = {
			["source"] = "Adorned Bladetalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79303,
		},
		[200498] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Burning Soulstalker",
			["npcID"] = 96278,
		},
		[46184] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Zelfan",
			["encounterID"] = 1895,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24556,
		},
		[404188] = {
			["source"] = "Static Charge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202847,
		},
		[381663] = {
			["source"] = "Apex Blazewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193291,
		},
		[171394] = {
			["source"] = "Liquid Life",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81942,
		},
		[382573] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earthen Guardian",
			["npcID"] = 184131,
		},
		[428762] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shado-Pan Archer",
			["npcID"] = 162931,
		},
		[337556] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unbreakable Urtz",
			["npcID"] = 162853,
		},
		[128708] = {
			["source"] = "Bubbling Brew Alemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59521,
		},
		[204574] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["encounterID"] = 1837,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103344,
		},
		[415373] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Great Glorious Alliance Footman",
			["npcID"] = 207578,
		},
		[56935] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26731,
		},
		[200963] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fel Shocktrooper",
			["npcID"] = 92776,
		},
		[428345] = {
			["source"] = "Molten Scorpid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213696,
		},
		[322281] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sparring Aspirant",
			["npcID"] = 159505,
		},
		[111668] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raigonn",
			["npcID"] = 56877,
		},
		[427760] = {
			["source"] = "Envoy of Winter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209929,
		},
		[412383] = {
			["source"] = "Colossian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204093,
		},
		[396001] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Songbird Queen",
			["npcID"] = 59553,
		},
		[200007] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bastillax",
			["npcID"] = 96783,
		},
		[416048] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["encounterID"] = 2709,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200926,
		},
		[277920] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jessibelle Moonshield",
			["npcID"] = 148390,
		},
		[201039] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Inquisitor",
			["npcID"] = 97044,
		},
		[373477] = {
			["source"] = "Bound Shoresnapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190193,
		},
		[257402] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[418528] = {
			["source"] = "Illidan Stormrage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205306,
		},
		[281329] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Jolly",
			["npcID"] = 126845,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[426519] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[426596] = {
			["source"] = "Coven Diviner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131819,
		},
		[359829] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["source"] = "Skolex",
			["encounterID"] = 2542,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181395,
		},
		[200720] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soul Fragment",
			["npcID"] = 101753,
		},
		[423610] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208445,
		},
		[420236] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["encounterID"] = 2786,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209090,
		},
		[46185] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Zelfan",
			["encounterID"] = 1895,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24556,
		},
		[164187] = {
			["source"] = "Grimrail Bombardier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81407,
		},
		[332525] = {
			["source"] = "Kyrian Goliath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 171396,
		},
		[303310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Theurgist Nitara",
			["npcID"] = 155836,
		},
		[102601] = {
			["source"] = "Infinite Suppressor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54920,
		},
		[412388] = {
			["source"] = "Underlight Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203593,
		},
		[332526] = {
			["source"] = "Kyrian Goliath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 171396,
		},
		[285428] = {
			["encounterName"] = "Jadefire Masters",
			["source"] = "Manceroy Flamefist",
			["npcID"] = 144693,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2266,
		},
		[414425] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["encounterID"] = 2709,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200926,
		},
		[396007] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Songbird Queen",
			["npcID"] = 59553,
		},
		[420509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamesworn Infernomancer",
			["npcID"] = 210503,
		},
		[428077] = {
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210423,
		},
		[417431] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[373483] = {
			["source"] = "Soggymaw Wavebringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187263,
		},
		[99530] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten Lord",
			["npcID"] = 53115,
		},
		[50025] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Catapult",
			["npcID"] = 34793,
		},
		[304537] = {
			["source"] = "Expedition Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152147,
		},
		[425873] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lingering Torment",
			["npcID"] = 209564,
		},
		[427510] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Dulhu",
			["npcID"] = 83894,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1757,
		},
		[169690] = {
			["source"] = "Diving Chakram Spinner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76116,
		},
		[386675] = {
			["source"] = "Novice Timewalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189583,
		},
		[414394] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nixke Voltscroll",
			["npcID"] = 200965,
		},
		[256382] = {
			["source"] = "Mountain Greatstag",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127806,
		},
		[391915] = {
			["source"] = "Shapemaster Za'lani",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201545,
		},
		[401447] = {
			["source"] = "Horrific Aberration",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198965,
		},
		[200805] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Queen's Centurion",
			["npcID"] = 103432,
		},
		[365295] = {
			["encounterName"] = "Anduin Wrynn",
			["source"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181954,
		},
		[419790] = {
			["source"] = "Druid of the Moon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210686,
		},
		[36971] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Grand Astromancer Capernian",
			["npcID"] = 20062,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 733,
		},
		[427899] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["npcID"] = 82682,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1751,
		},
		[374158] = {
			["source"] = "Mature Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191696,
		},
		[257407] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["npcID"] = 122963,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2086,
		},
		[317791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
		},
		[255041] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Feasting Skyscreamer",
			["npcID"] = 128434,
		},
		[389870] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Colossal Stormfiend",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197145,
		},
		[422614] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[427964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Incarnation",
			["npcID"] = 213559,
		},
		[305913] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ogre Shadowcaster",
			["npcID"] = 153242,
		},
		[365298] = {
			["source"] = "Automated Eliminator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184539,
		},
		[196403] = {
			["source"] = "Doom Commander Beliash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 93221,
		},
		[426731] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Oracle",
			["npcID"] = 41096,
		},
		[152973] = {
			["source"] = "Defense Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76087,
		},
		[381681] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rustpine Immolator",
			["npcID"] = 187396,
		},
		[15611] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormsnout",
			["npcID"] = 3240,
		},
		[377522] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Raging Ember",
			["encounterID"] = 2611,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192464,
		},
		[404207] = {
			["source"] = "Lieutenant Narlena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202244,
		},
		[124854] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sele'na",
			["npcID"] = 50766,
		},
		[67280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overlord Agmar",
			["npcID"] = 34922,
		},
		[410351] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[387826] = {
			["source"] = "Ukhel Beastcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195878,
		},
		[381683] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192791,
		},
		[192706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Channeler Varisz",
			["npcID"] = 100249,
		},
		[182667] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sentry Brute",
			["npcID"] = 88888,
		},
		[396018] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Crybaby Hozen",
			["npcID"] = 59552,
		},
		[389875] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[424352] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["encounterID"] = 2820,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209333,
		},
		[417953] = {
			["source"] = "Galok Wingslicer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206460,
		},
		[396019] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Golden Beetle",
			["npcID"] = 59545,
		},
		[74613] = {
			["source"] = "Dark Ranger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48269,
		},
		[427498] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["npcID"] = 83892,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[369399] = {
			["source"] = "Earthen Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186420,
		},
		[412402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flowfy",
			["npcID"] = 203660,
		},
		[199050] = {
			["source"] = "Valarjar Shieldmaiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95832,
		},
		[361209] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Antros",
			["npcID"] = 182466,
		},
		[369400] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184132,
		},
		[130414] = {
			["source"] = "Ed",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82003,
		},
		[307968] = {
			["encounterName"] = "The Hivemind",
			["source"] = "Tek'ris",
			["npcID"] = 157254,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2333,
		},
		[287490] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Frozen Ballista",
			["encounterID"] = 2281,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 148522,
		},
		[421971] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["encounterID"] = 2820,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209333,
		},
		[240006] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sav'thul",
			["npcID"] = 182863,
		},
		[215433] = {
			["source"] = "Valarjar Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95834,
		},
		[326399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elder Longbranch",
			["npcID"] = 185021,
		},
		[212031] = {
			["source"] = "Bound Energy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105705,
		},
		[396023] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[56938] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26928,
		},
		[386555] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
		},
		[377594] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[330496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decayspeaker",
			["npcID"] = 185022,
		},
		[421402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Pyremancer",
			["npcID"] = 209963,
		},
		[375547] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten Eruption",
			["npcID"] = 191286,
		},
		[426741] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Sentinel",
			["npcID"] = 40577,
		},
		[404216] = {
			["source"] = "Lieutenant Narlena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202244,
		},
		[327054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Epilon",
			["npcID"] = 158869,
		},
		[412408] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Field Despair Bot K156",
			["npcID"] = 205612,
		},
		[118988] = {
			["encounterName"] = "Gekkan",
			["source"] = "Gekkan",
			["encounterID"] = 2129,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61243,
		},
		[255366] = {
			["source"] = "Zulian Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 124549,
		},
		[310780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eye of the Depths",
			["npcID"] = 159510,
		},
		[150753] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74787,
		},
		[402170] = {
			["source"] = "Vengeful Research",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201490,
		},
		[259462] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sandskitter Crab",
			["npcID"] = 129318,
		},
		[314855] = {
			["source"] = "Gryth'ax the Executioner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159224,
		},
		[426576] = {
			["source"] = "Dream Seedling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211339,
		},
		[197797] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Risen Arcanist",
			["npcID"] = 100486,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1833,
		},
		[330500] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decayspeaker",
			["npcID"] = 185022,
		},
		[381694] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186124,
		},
		[424178] = {
			["source"] = "Sickened Growth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207926,
		},
		[100559] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Majordomo Staghelm",
			["npcID"] = 54015,
		},
		[404220] = {
			["source"] = "Lieutenant Narlena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202244,
		},
		[369026] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184422,
		},
		[426206] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[369409] = {
			["source"] = "Earthen Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184130,
		},
		[157931] = {
			["source"] = "Sargerei Magus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76263,
		},
		[307977] = {
			["encounterName"] = "Prophet Skitra",
			["source"] = "Prophet Skitra",
			["npcID"] = 157238,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2334,
		},
		[87761] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Executor of the Caliph",
			["npcID"] = 45928,
		},
		[421672] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["encounterID"] = 2737,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208478,
		},
		[412413] = {
			["source"] = "Skornak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203643,
		},
		[372202] = {
			["isChanneled"] = true,
			["source"] = "Qalashi Irontorch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189464,
		},
		[310026] = {
			["source"] = "Summoned Boggart",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158943,
		},
		[369411] = {
			["source"] = "Cavern Seeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184301,
		},
		[412414] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Gastrinax",
			["npcID"] = 203521,
		},
		[87622] = {
			["encounterName"] = "Asaad",
			["source"] = "Asaad",
			["npcID"] = 43875,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1042,
		},
		[396674] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ripsaw the Stalker",
			["npcID"] = 193153,
		},
		[262929] = {
			["source"] = "Torraske the Eternal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127939,
		},
		[270334] = {
			["source"] = "Portal Breacher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209821,
		},
		[414463] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "MR-7 Tangler",
			["npcID"] = 205824,
		},
		[163541] = {
			["encounterName"] = "Nitrogg Thundertower",
			["source"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 79545,
		},
		[91263] = {
			["encounterName"] = "General Husam",
			["source"] = "General Husam",
			["npcID"] = 44577,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1052,
		},
		[387843] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spectral Invoker",
			["npcID"] = 196202,
		},
		[420495] = {
			["source"] = "Deceiver Hr'qoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206784,
		},
		[87762] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Minister of Air",
			["npcID"] = 45930,
		},
		[35950] = {
			["encounterName"] = "Warbringer O'mrogg",
			["source"] = "Shattered Hand Houndmaster",
			["encounterID"] = 1937,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17670,
		},
		[427992] = {
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210423,
		},
		[381701] = {
			["source"] = "Force of the Springs",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197008,
		},
		[394680] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Failed Scalecommander Elarthresh",
			["npcID"] = 201820,
		},
		[398720] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Bulwark",
			["npcID"] = 200850,
		},
		[255371] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["npcID"] = 122963,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2086,
		},
		[414466] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "MR-7 Gutcutter",
			["npcID"] = 204515,
		},
		[201902] = {
			["source"] = "Taintheart Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100539,
		},
		[164168] = {
			["source"] = "Grimrail Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81212,
		},
		[351621] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Woebringer",
			["npcID"] = 176573,
		},
		[339768] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Athanos",
			["npcID"] = 158891,
		},
		[428082] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["npcID"] = 82682,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1751,
		},
		[377608] = {
			["source"] = "Frigellus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189217,
		},
		[362410] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cipherclad",
			["npcID"] = 181349,
		},
		[414468] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "MR-7 Shadowflipper",
			["npcID"] = 205825,
		},
		[151253] = {
			["encounterName"] = "Warlord Ramtusk",
			["source"] = "Death Speaker Jargba",
			["encounterID"] = 1659,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75152,
		},
		[377609] = {
			["source"] = "Worldbreaker Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185594,
		},
		[427672] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[316855] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkwing Commander",
			["npcID"] = 165267,
		},
		[391944] = {
			["source"] = "Gnawbone Splintershield",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197847,
		},
		[312712] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Forgotten",
			["npcID"] = 157176,
		},
		[396040] = {
			["encounterName"] = "Eranog",
			["source"] = "Flamescale Captain",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199233,
		},
		[20793] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blackrock Summoner",
			["npcID"] = 4463,
		},
		[200084] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ghostly Retainer",
			["npcID"] = 98366,
		},
		[428103] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Frost Witch",
			["npcID"] = 44404,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[193941] = {
			["source"] = "Embershard Scorpion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98406,
		},
		[415262] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Headless Horseman",
			["npcID"] = 207438,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2725,
		},
		[404896] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["npcID"] = 201773,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[377612] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[414473] = {
			["source"] = "Greaves",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207278,
		},
		[267034] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Vol'zith the Whisperer",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134069,
		},
		[310037] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarlbranch Boggart",
			["npcID"] = 165910,
		},
		[396044] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2609,
		},
		[289560] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Kimbul's Aspect",
			["encounterID"] = 2268,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144963,
		},
		[194966] = {
			["encounterName"] = "Amalgam of Souls",
			["source"] = "Amalgam of Souls",
			["encounterID"] = 1832,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98542,
		},
		[391948] = {
			["source"] = "Sulfuric Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191682,
		},
		[369423] = {
			["source"] = "Skittering Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184303,
		},
		[371471] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Violetwing Stagbeetle",
			["encounterID"] = 2609,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187969,
		},
		[174489] = {
			["source"] = "Solar Magnifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77559,
		},
		[195944] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skrog Wavecrasher",
			["npcID"] = 91796,
		},
		[151964] = {
			["source"] = "Cave Bat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75467,
		},
		[387711] = {
			["isChanneled"] = true,
			["source"] = "Enraged Watcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200407,
		},
		[414475] = {
			["source"] = "Greaves",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207278,
		},
		[411002] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cloud Prince",
			["npcID"] = 45917,
		},
		[7951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deviate Venomwing",
			["npcID"] = 5756,
		},
		[256401] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadraspawn Lurker",
			["npcID"] = 133857,
		},
		[414476] = {
			["source"] = "Greaves",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207278,
		},
		[310041] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summoned Boggart",
			["npcID"] = 158955,
		},
		[151965] = {
			["source"] = "Bloodmaul Slaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75191,
		},
		[169371] = {
			["encounterName"] = "Xeri'tac",
			["source"] = "Venom-Crazed Pale Hulk",
			["encounterID"] = 1752,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84554,
		},
		[414477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greaves",
			["npcID"] = 207278,
		},
		[310042] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "Basher Tentacle",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158367,
		},
		[90325] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naga Brute",
			["npcID"] = 91459,
		},
		[412430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gastrite",
			["npcID"] = 205801,
		},
		[283422] = {
			["encounterName"] = "Tussle Tonks",
			["source"] = "Gnomercy 4.U.",
			["encounterID"] = 2257,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145185,
		},
		[208279] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Igrul the Scalebane",
			["npcID"] = 105159,
		},
		[250258] = {
			["encounterName"] = "Vol'kaal",
			["source"] = "Vol'kaal",
			["npcID"] = 122965,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2085,
		},
		[43291] = {
			["source"] = "Dragonflayer Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24216,
		},
		[411763] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Infinite Keeper",
			["npcID"] = 205212,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2673,
		},
		[299460] = {
			["source"] = "Pistonhead Blaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150250,
		},
		[194860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overgrown Larva",
			["npcID"] = 94691,
		},
		[273185] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shieldbearer of Zul",
			["npcID"] = 127879,
		},
		[271138] = {
			["source"] = "Bombarding Zeppelin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129867,
		},
		[257426] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Enforcer",
			["npcID"] = 129602,
		},
		[385812] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192934,
		},
		[60781] = {
			["source"] = "Forgotten Depths Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30205,
		},
		[373526] = {
			["source"] = "Shimmerwing Monarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210767,
		},
		[400954] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Volgoth The Flamebringer",
			["npcID"] = 209129,
		},
		[426768] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Tempest Witch",
			["npcID"] = 40634,
		},
		[422416] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Protector",
			["npcID"] = 209450,
		},
		[335233] = {
			["source"] = "Ravenous Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 169499,
		},
		[375575] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Dragonspawn Flamebender",
			["npcID"] = 191230,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[75992] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Tempest Witch",
			["npcID"] = 40634,
		},
		[406058] = {
			["source"] = "Tentacle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203406,
		},
		[388474] = {
			["source"] = "Quiescent Threshadon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194803,
		},
		[391958] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cloying Gale",
			["npcID"] = 198126,
		},
		[424401] = {
			["source"] = "Winterskorn Vrykul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206037,
		},
		[392569] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamegullet",
			["npcID"] = 197697,
		},
		[256404] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ravenous Gull",
			["npcID"] = 127530,
		},
		[391959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Storm",
			["npcID"] = 195846,
		},
		[393323] = {
			["source"] = "Iskaaran Apprentice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198298,
		},
		[169375] = {
			["encounterName"] = "Xeri'tac",
			["source"] = "Xeri'tac",
			["encounterID"] = 1752,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84550,
		},
		[381721] = {
			["source"] = "Nokhud Wardog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185465,
		},
		[130770] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "White Orchid",
			["npcID"] = 62650,
		},
		[257315] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Irontide Grenadier",
			["npcID"] = 129758,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[384474] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fathomless Lurker",
			["npcID"] = 209580,
		},
		[256405] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[269096] = {
			["source"] = "Sandfury Dunerider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130230,
		},
		[249919] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["npcID"] = 122968,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2087,
		},
		[169376] = {
			["encounterName"] = "Xeri'tac",
			["source"] = "Xeri'tac",
			["encounterID"] = 1752,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84550,
		},
		[289572] = {
			["source"] = "7th Legion Cavalier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147828,
		},
		[269097] = {
			["encounterName"] = "Lord Stormsong",
			["source"] = "Lord Stormsong",
			["encounterID"] = 2132,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134060,
		},
		[375580] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[265002] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[292903] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Guard",
			["npcID"] = 150958,
		},
		[285020] = {
			["encounterName"] = "Tussle Tonks",
			["source"] = "The Platinum Pummeler",
			["encounterID"] = 2257,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144244,
		},
		[292227] = {
			["source"] = "Algerson Bodyguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 149036,
		},
		[428823] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["npcID"] = 83846,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1756,
		},
		[314149] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Ritualist",
			["npcID"] = 161286,
		},
		[22458] = {
			["source"] = "Blackwing Taskmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 12458,
		},
		[413387] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Executor of the Caliph",
			["npcID"] = 45928,
		},
		[165282] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Apexis Turret",
			["npcID"] = 82153,
		},
		[207261] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[320067] = {
			["source"] = "Masked Faerie",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160293,
		},
		[259187] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["npcID"] = 122968,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2087,
		},
		[314151] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shoth the Darkened",
			["npcID"] = 160532,
		},
		[68664] = {
			["source"] = "Zapper Gnome",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36384,
		},
		[31673] = {
			["encounterName"] = "Hungarfen",
			["source"] = "Hungarfen",
			["encounterID"] = 1946,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17770,
		},
		[371489] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Infused Whelp",
			["encounterID"] = 2609,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188067,
		},
		[412444] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brullo the Strong",
			["npcID"] = 203621,
		},
		[422683] = {
			["source"] = "Oxis of Fire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210319,
		},
		[359203] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Archaic Curator",
			["npcID"] = 181857,
		},
		[385824] = {
			["source"] = "Rageclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187192,
		},
		[426645] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Ravager",
			["npcID"] = 212673,
		},
		[406302] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Caster",
			["npcID"] = 200824,
		},
		[292225] = {
			["source"] = "Algerson Bodyguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 149036,
		},
		[147878] = {
			["source"] = "Cinderfall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 73175,
		},
		[90329] = {
			["source"] = "Ramkahen Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48514,
		},
		[422685] = {
			["source"] = "Oxis of Fire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210319,
		},
		[419185] = {
			["source"] = "Invading Infernal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206765,
		},
		[214989] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Vengeance",
			["npcID"] = 100364,
		},
		[152998] = {
			["source"] = "Grand Defense Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76145,
		},
		[101592] = {
			["source"] = "Murozond",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54432,
		},
		[395642] = {
			["isChanneled"] = true,
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194401,
		},
		[402209] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vengeful Research",
			["npcID"] = 201490,
		},
		[412448] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deepflayer Broodmatron",
			["npcID"] = 200115,
		},
		[201781] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mushroom Merchant",
			["npcID"] = 101823,
		},
		[3256] = {
			["encounterName"] = "Theka the Martyr",
			["source"] = "Scarab",
			["encounterID"] = 596,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7269,
		},
		[426783] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless Seer",
			["npcID"] = 212775,
		},
		[404258] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reisa the Drowned",
			["npcID"] = 200600,
		},
		[255373] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["npcID"] = 122963,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2086,
		},
		[289585] = {
			["source"] = "Stormbound Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148582,
		},
		[147880] = {
			["source"] = "Cinderfall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 73175,
		},
		[404259] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pyrachniss",
			["npcID"] = 200978,
		},
		[292223] = {
			["source"] = "Algerson Bodyguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 149036,
		},
		[375591] = {
			["source"] = "Bubbling Sapling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191313,
		},
		[191900] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Warlord Parjesh",
			["encounterID"] = 1810,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91784,
		},
		[169382] = {
			["encounterName"] = "Xeri'tac",
			["source"] = "Xeri'tac",
			["encounterID"] = 1752,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84550,
		},
		[417928] = {
			["source"] = "Invading Flameclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206805,
		},
		[400165] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Twilight Magus",
			["npcID"] = 201223,
		},
		[260508] = {
			["encounterName"] = "Soulbound Goliath",
			["source"] = "Soulbound Goliath",
			["encounterID"] = 2114,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131667,
		},
		[165287] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Apexis Turret",
			["npcID"] = 82153,
		},
		[422691] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["encounterID"] = 2824,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200927,
		},
		[200099] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ghostly Protector",
			["npcID"] = 98368,
		},
		[385832] = {
			["source"] = "Rageclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187192,
		},
		[396071] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197142,
		},
		[308018] = {
			["source"] = "Aqir Scarab",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157904,
		},
		[408358] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[419684] = {
			["source"] = "Molten Runebear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207101,
		},
		[265016] = {
			["source"] = "Chosen Blood Matron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131436,
		},
		[422693] = {
			["source"] = "Oxis of Fire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210319,
		},
		[298894] = {
			["source"] = "Malfunctioning Scraphound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151301,
		},
		[164218] = {
			["source"] = "Grimrail Bombardier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81407,
		},
		[412455] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alcanon",
			["npcID"] = 203515,
		},
		[120502] = {
			["source"] = "Sandfury Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130242,
		},
		[198024] = {
			["encounterName"] = "Rokmora",
			["source"] = "Rokmora",
			["encounterID"] = 1790,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91003,
		},
		[34931] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ethereal Darkcaster",
			["npcID"] = 18331,
		},
		[173480] = {
			["source"] = "Ironwing Flamespitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83389,
		},
		[373549] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hot Springs Damselfly",
			["npcID"] = 198592,
		},
		[419595] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten General",
			["npcID"] = 207941,
		},
		[294726] = {
			["source"] = "Abyssal Commander Sivara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151881,
		},
		[396075] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Awakened Revenant",
			["npcID"] = 191129,
		},
		[422696] = {
			["source"] = "Avius Flamebeak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210305,
		},
		[130775] = {
			["source"] = "Kunzen Rockflinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59120,
		},
		[36979] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Netherstrand Longbow",
			["npcID"] = 21268,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 733,
		},
		[200898] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Inquisitor Tormentorum",
			["npcID"] = 96015,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[414506] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashen Emberwing",
			["npcID"] = 209098,
		},
		[375599] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mature Hornswog",
			["npcID"] = 191315,
		},
		[147652] = {
			["source"] = "Primal Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72805,
		},
		[404846] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[407122] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horde Warlock",
			["npcID"] = 203857,
		},
		[391982] = {
			["source"] = "Magmatalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189538,
		},
		[316216] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupt Egg Tender",
			["npcID"] = 163112,
		},
		[396078] = {
			["source"] = "Summoned Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193288,
		},
		[422699] = {
			["source"] = "Phebis of the Burning Sea",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210306,
		},
		[34342] = {
			["encounterName"] = "Al'ar",
			["source"] = "Al'ar",
			["npcID"] = 19514,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 730,
		},
		[289596] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "7th Legion Cavalier",
			["npcID"] = 147828,
		},
		[305978] = {
			["encounterName"] = "Wrathion",
			["source"] = "Wrathion",
			["npcID"] = 156818,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2329,
		},
		[170411] = {
			["source"] = "Infested Venomfang",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85232,
		},
		[391939] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormbound Reaver",
			["npcID"] = 201153,
		},
		[418605] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Future Self",
			["npcID"] = 208959,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[115418] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Krik'thik Wind Shaper",
			["npcID"] = 59801,
		},
		[316218] = {
			["source"] = "Darkhaven Dredger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156064,
		},
		[100060] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Flamewaker Cauterizer",
			["npcID"] = 53639,
		},
		[65301] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Sara",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33134,
		},
		[427509] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["npcID"] = 83893,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[410254] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["npcID"] = 203678,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[400177] = {
			["isChanneled"] = true,
			["source"] = "Zaqali Ritualist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199971,
		},
		[402225] = {
			["source"] = "Vengeful Research",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201490,
		},
		[308875] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Heixi the Stonelord",
			["npcID"] = 157171,
		},
		[298898] = {
			["encounterName"] = "Trixie & Naeno",
			["source"] = "Naeno Megacrash",
			["encounterID"] = 2312,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153755,
		},
		[375605] = {
			["source"] = "Unstable Arcanogolem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201554,
		},
		[421746] = {
			["source"] = "The Stonewarmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210235,
		},
		[165578] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["npcID"] = 75452,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1679,
		},
		[130265] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunder Hold Soldier",
			["npcID"] = 66291,
		},
		[12549] = {
			["source"] = "Sparktouched Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28112,
		},
		[36980] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Netherstrand Longbow",
			["npcID"] = 21268,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 733,
		},
		[396084] = {
			["source"] = "Force of the Springs",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197008,
		},
		[400747] = {
			["source"] = "Damaged Titan Matrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201441,
		},
		[55098] = {
			["encounterName"] = "Moorabi",
			["source"] = "Moorabi",
			["encounterID"] = 1980,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29305,
		},
		[394037] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Walker",
			["npcID"] = 201063,
		},
		[294884] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malfunctioning Scrapboss",
			["npcID"] = 151683,
		},
		[423523] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anguished Dream Spirit",
			["npcID"] = 210304,
		},
		[300972] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boggac Skullbash",
			["npcID"] = 151308,
		},
		[369465] = {
			["source"] = "Earthen Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186420,
		},
		[196402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deeprock Wormtamer",
			["npcID"] = 97999,
		},
		[158128] = {
			["source"] = "Captain Brak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81254,
		},
		[326463] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkwarren Slicer",
			["npcID"] = 164036,
		},
		[262983] = {
			["source"] = "Azsh'ari Stormbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155629,
		},
		[420428] = {
			["source"] = "Deceiver Hr'qoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206784,
		},
		[130266] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunder Hold Soldier",
			["npcID"] = 66200,
		},
		[326464] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkwarren Slicer",
			["npcID"] = 164036,
		},
		[377658] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[386411] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[270543] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "7th Legion Battlemage",
			["npcID"] = 134091,
		},
		[42723] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 2025,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23954,
		},
		[381585] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutal Motivator",
			["npcID"] = 184453,
		},
		[196587] = {
			["encounterName"] = "Amalgam of Souls",
			["source"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1832,
		},
		[161150] = {
			["source"] = "Grom'kar Grenadier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80936,
		},
		[271174] = {
			["source"] = "Pallid Gorger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 137830,
		},
		[423626] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Headless Horseman",
			["encounterID"] = 2725,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207438,
		},
		[204905] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Mogu'shan Secret-Keeper",
			["npcID"] = 99676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[389947] = {
			["source"] = "Sirena the Fangbreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185907,
		},
		[224682] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scarlet Houndsmaster",
			["npcID"] = 211882,
		},
		[377661] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Garden Herdmare",
			["npcID"] = 188277,
		},
		[303693] = {
			["source"] = "Deepwater Maw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151569,
		},
		[423775] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amerinth",
			["npcID"] = 210675,
		},
		[269131] = {
			["encounterName"] = "Lord Stormsong",
			["source"] = "Lord Stormsong",
			["encounterID"] = 2132,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134060,
		},
		[415419] = {
			["source"] = "Larodar, Keeper of the Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205136,
		},
		[115421] = {
			["isChanneled"] = true,
			["source"] = "Krik'thik Wind Shaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 59801,
		},
		[389949] = {
			["source"] = "Nokhud Brute",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187299,
		},
		[91872] = {
			["encounterName"] = "Siamat",
			["source"] = "Servant of Siamat",
			["npcID"] = 45259,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1055,
		},
		[394045] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vadne Bleakheart",
			["npcID"] = 195764,
		},
		[201411] = {
			["source"] = "Dreadfire Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100527,
		},
		[406333] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[391998] = {
			["source"] = "Erupting Magma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191917,
		},
		[402237] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vengeful Research",
			["npcID"] = 201490,
		},
		[281420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Brinescale",
			["npcID"] = 129600,
		},
		[207278] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[359235] = {
			["source"] = "Halondrus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180906,
		},
		[391999] = {
			["source"] = "Nokhud Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185445,
		},
		[324425] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elite Queensguard",
			["npcID"] = 158555,
		},
		[414525] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Morchie",
			["npcID"] = 205708,
		},
		[359236] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["source"] = "Halondrus",
			["encounterID"] = 2529,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180906,
		},
		[418621] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Fanatic",
			["npcID"] = 207896,
		},
		[422717] = {
			["source"] = "Phebis of the Burning Sea",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210306,
		},
		[389953] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[367428] = {
			["source"] = "Gnarled Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184962,
		},
		[418622] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Scarab",
			["npcID"] = 207910,
		},
		[412479] = {
			["source"] = "Dinn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203646,
		},
		[351047] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Armored Overseer",
			["npcID"] = 177808,
		},
		[310092] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Escaped Mutation",
			["npcID"] = 157267,
		},
		[34934] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ethereal Wraith",
			["npcID"] = 18394,
		},
		[420671] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208365,
		},
		[373573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sprite Dreamer",
			["npcID"] = 207617,
		},
		[166981] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invading Warsinger",
			["npcID"] = 79753,
		},
		[418624] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klaxxi Assassin",
			["npcID"] = 207915,
		},
		[59433] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["encounterID"] = 1973,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29120,
		},
		[381765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Avalantus",
			["npcID"] = 201543,
		},
		[417763] = {
			["source"] = "Overlord Mechagon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205309,
		},
		[303951] = {
			["source"] = "Prince Erazmin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153670,
		},
		[59146] = {
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29820,
		},
		[199090] = {
			["source"] = "Angerhoof Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96611,
		},
		[423265] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["encounterID"] = 2786,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209090,
		},
		[95970] = {
			["source"] = "D-1000",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 49268,
		},
		[396101] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Brackenhide Shaper",
			["npcID"] = 197128,
		},
		[271731] = {
			["isChanneled"] = true,
			["source"] = "Gnomish Gyro-Engineer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 148441,
		},
		[392006] = {
			["source"] = "Sickly Brute",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186668,
		},
		[196290] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Stormwake Hydra",
			["encounterID"] = 1813,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91792,
		},
		[330574] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Conjured Death",
			["npcID"] = 171317,
		},
		[398150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Dominator",
			["npcID"] = 76446,
		},
		[424771] = {
			["source"] = "Harbinger of Incineration",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210147,
		},
		[201139] = {
			["source"] = "Wrathguard Bladelord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98810,
		},
		[314193] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voidwarped Watcher",
			["npcID"] = 160491,
		},
		[162232] = {
			["source"] = "Ogron Spinecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81240,
		},
		[419274] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashbound Captain",
			["npcID"] = 207952,
		},
		[412486] = {
			["source"] = "Warchanter Ronvath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200128,
		},
		[428868] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["npcID"] = 213770,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[381770] = {
			["encounterName"] = "Treemouth",
			["source"] = "Decaying Slime",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192481,
		},
		[155909] = {
			["source"] = "Slavemaster Ok'mok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75864,
		},
		[219569] = {
			["source"] = "Wyrmtongue Collector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102778,
		},
		[314195] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnashing Terror",
			["npcID"] = 161334,
		},
		[414535] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["npcID"] = 198933,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2669,
		},
		[42870] = {
			["source"] = "Dragonflayer Invader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24051,
		},
		[398690] = {
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199502,
		},
		[412488] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crawling Goo",
			["npcID"] = 205820,
		},
		[406345] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Remnants of Sindragosa",
			["npcID"] = 201089,
		},
		[149947] = {
			["source"] = "Pale Spider Worshipper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80530,
		},
		[201141] = {
			["isChanneled"] = true,
			["source"] = "Wrathguard Bladelord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98810,
		},
		[396107] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hungry Hungry Lava",
			["npcID"] = 194878,
		},
		[79881] = {
			["source"] = "Worgen Rebel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45292,
		},
		[375630] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Drakonid Stormbringer",
			["npcID"] = 191232,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[73958] = {
			["source"] = "Drowned Thunder Lizard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39464,
		},
		[413622] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Infiltrator",
			["npcID"] = 206214,
		},
		[99555] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten Lord",
			["npcID"] = 53115,
		},
		[392013] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Walker",
			["npcID"] = 201063,
		},
		[196508] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Deranged Mindflayer",
			["npcID"] = 99657,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[396641] = {
			["source"] = "Elusive Elder Rockfang",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194085,
		},
		[59347] = {
			["source"] = "Anub'ar Crypt Fiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29063,
		},
		[383823] = {
			["source"] = "Nokhud Hornsounder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192796,
		},
		[384961] = {
			["source"] = "Rotbow Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186208,
		},
		[412492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brullo the Strong",
			["npcID"] = 203621,
		},
		[174787] = {
			["source"] = "Infested Ogron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82062,
		},
		[314730] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tisiphon",
			["npcID"] = 157468,
		},
		[22695] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Growing Squashling",
			["npcID"] = 96545,
		},
		[272272] = {
			["source"] = "Ravenous Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 169499,
		},
		[423260] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["encounterID"] = 2786,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209090,
		},
		[199915] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Faceless Voidcaster",
			["npcID"] = 99651,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[32888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Soul",
			["npcID"] = 18506,
		},
		[394591] = {
			["source"] = "Tombcaller Arban",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190047,
		},
		[158141] = {
			["source"] = "Icehoof Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78920,
		},
		[320081] = {
			["source"] = "Masked Faerie",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160293,
		},
		[34871] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Umbrafen Witchdoctor",
			["npcID"] = 20115,
		},
		[251703] = {
			["source"] = "Imp Mother Laglath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 125820,
		},
		[378208] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186124,
		},
		[418637] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[365921] = {
			["source"] = "Bound Realmbreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183416,
		},
		[198073] = {
			["encounterName"] = "Smashspite the Hateful",
			["source"] = "Smashspite the Hateful",
			["npcID"] = 98949,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1834,
		},
		[396637] = {
			["source"] = "Elusive Elder Rockfang",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194085,
		},
		[257458] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[59430] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["encounterID"] = 1973,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29120,
		},
		[314205] = {
			["source"] = "Shadow-Walker Yash'gth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159318,
		},
		[362405] = {
			["encounterName"] = "Anduin Wrynn",
			["source"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181954,
		},
		[317511] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sandstone Burrower",
			["npcID"] = 158477,
		},
		[361304] = {
			["encounterName"] = "Prototype Pantheon",
			["source"] = "Wild Stampede",
			["encounterID"] = 2544,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183421,
		},
		[417640] = {
			["source"] = "Fel-Touched Shu'halo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206182,
		},
		[365400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shifting Stargorger",
			["npcID"] = 184413,
		},
		[274400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cutwater Duelist",
			["npcID"] = 129559,
		},
		[76008] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[403203] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["npcID"] = 201773,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[68841] = {
			["source"] = "Apothecary Frye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36272,
		},
		[196027] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Arcanist",
			["npcID"] = 97171,
		},
		[406357] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Remnants of Sindragosa",
			["npcID"] = 201089,
		},
		[148929] = {
			["source"] = "Stonemaul Slaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75835,
		},
		[324447] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elite Queensguard",
			["npcID"] = 158555,
		},
		[87222] = {
			["source"] = "Ambermill Witchalok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 1889,
		},
		[168383] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Dulhu",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83894,
		},
		[166335] = {
			["source"] = "Grom'kar Far Seer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82579,
		},
		[406358] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[196028] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Arcanist",
			["npcID"] = 97171,
		},
		[180670] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "K'ute",
			["npcID"] = 90215,
		},
		[79721] = {
			["source"] = "Forsaken Sharpshooter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45376,
		},
		[368890] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Herald",
			["npcID"] = 181408,
		},
		[55633] = {
			["source"] = "Drakkari Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29832,
		},
		[369500] = {
			["source"] = "Halondrus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180906,
		},
		[330593] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Engorged Fearspinner",
			["npcID"] = 168724,
		},
		[365299] = {
			["source"] = "Automated Eliminator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184539,
		},
		[319298] = {
			["source"] = "Torgok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162817,
		},
		[385883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Custodian",
			["npcID"] = 192703,
		},
		[198077] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95676,
		},
		[276884] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amber-shaper Gokilak",
			["npcID"] = 155985,
		},
		[389040] = {
			["source"] = "Thondrozus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192769,
		},
		[145860] = {
			["source"] = "Thunderlord Talon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72232,
		},
		[412505] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tyr's Vanguard",
			["npcID"] = 205151,
		},
		[398171] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Senegos",
			["npcID"] = 199923,
		},
		[197418] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Illysanna Ravencrest",
			["npcID"] = 98696,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1833,
		},
		[84713] = {
			["source"] = "Master Apothecary Lydon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48020,
		},
		[371551] = {
			["source"] = "Stormfang Dustcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187551,
		},
		[398172] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stellagosa",
			["npcID"] = 200099,
		},
		[359265] = {
			["source"] = "Automa Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182799,
		},
		[273767] = {
			["source"] = "7th Legion Stalwart",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147168,
		},
		[428889] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["npcID"] = 213770,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[357218] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Colossus",
			["npcID"] = 188673,
		},
		[106853] = {
			["encounterName"] = "Master Snowdrift",
			["source"] = "Master Snowdrift",
			["encounterID"] = 1304,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56541,
		},
		[86249] = {
			["source"] = "7th Legion Submariner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45403,
		},
		[198079] = {
			["encounterName"] = "Smashspite the Hateful",
			["source"] = "Smashspite the Hateful",
			["npcID"] = 98949,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1834,
		},
		[166205] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmaul Bonecrusher",
			["npcID"] = 77995,
		},
		[318312] = {
			["source"] = "Stitchyard Surgeon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159679,
		},
		[196591] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coldscale Gazecrawler",
			["npcID"] = 108185,
		},
		[407121] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Warlock",
			["npcID"] = 203857,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[406366] = {
			["source"] = "Primal Nightflame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200931,
		},
		[196870] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Stormweaver",
			["npcID"] = 91783,
		},
		[54850] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Colossus",
			["encounterID"] = 1983,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29307,
		},
		[289645] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "7th Legion Battlemage",
			["npcID"] = 147787,
		},
		[34170] = {
			["source"] = "Sunseeker Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 18420,
		},
		[314720] = {
			["source"] = "Gamon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158588,
		},
		[426845] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infested Icecaller",
			["npcID"] = 84989,
		},
		[297837] = {
			["source"] = "Deeptide Frenzy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144647,
		},
		[33860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Annihilator",
			["npcID"] = 18856,
		},
		[375652] = {
			["source"] = "Arcane Tender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196115,
		},
		[406369] = {
			["source"] = "Primal Nightflame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200931,
		},
		[289647] = {
			["source"] = "Breakwater Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148569,
		},
		[166341] = {
			["source"] = "Grom'kar Far Seer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82579,
		},
		[375653] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Drakonid Stormbringer",
			["npcID"] = 191232,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[411589] = {
			["source"] = "Jalgon Stoutburn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204426,
		},
		[161222] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pridelands Stalker",
			["npcID"] = 88579,
		},
		[372056] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Opalfang",
			["npcID"] = 187772,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[402772] = {
			["source"] = "Deepstrider Alpha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202312,
		},
		[342462] = {
			["source"] = "Champion of Humility",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 170836,
		},
		[289649] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Echo of Krag'wa",
			["npcID"] = 148625,
		},
		[166342] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Echo Hunter",
			["npcID"] = 79895,
		},
		[383846] = {
			["source"] = "Furious Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196540,
		},
		[271220] = {
			["source"] = "Scrapbone Grunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152960,
		},
		[169414] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ironmarch Warcaster",
			["npcID"] = 78670,
		},
		[323438] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greater Ardenmoth",
			["npcID"] = 166073,
		},
		[157375] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Primal Storm Elemental",
			["encounterID"] = 2820,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 77942,
		},
		[304479] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Writhing Soulmass",
			["npcID"] = 185017,
		},
		[179900] = {
			["source"] = "Darkmoon Tonk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90304,
		},
		[376829] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[310129] = {
			["encounterName"] = "Maut",
			["source"] = "Maut",
			["npcID"] = 156523,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2327,
		},
		[325802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keeneye Bowman",
			["npcID"] = 166936,
		},
		[427343] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[162248] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pridelands Stalker",
			["npcID"] = 88579,
		},
		[408422] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[361324] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["source"] = "Halondrus",
			["encounterID"] = 2529,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180906,
		},
		[255421] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["npcID"] = 122963,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2086,
		},
		[256445] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Saurolisk",
			["npcID"] = 123647,
		},
		[191941] = {
			["encounterName"] = "Tirathon Saltheril",
			["source"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1815,
		},
		[188292] = {
			["source"] = "Dark Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91697,
		},
		[265081] = {
			["source"] = "Chosen Blood Matron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131436,
		},
		[332657] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Satiated Sawtooth",
			["npcID"] = 164587,
		},
		[331845] = {
			["source"] = "Lightbound Scorcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 165687,
		},
		[221634] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Braxas the Fleshcarver",
			["npcID"] = 111290,
		},
		[371565] = {
			["source"] = "Ohn'ir Windcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191244,
		},
		[79085] = {
			["source"] = "Ionis",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 50790,
		},
		[342897] = {
			["source"] = "Crazed Maw-shroom",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 174130,
		},
		[426855] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[202181] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rockback Gnasher",
			["npcID"] = 91006,
		},
		[406378] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Remnants of Sindragosa",
			["npcID"] = 201089,
		},
		[299746] = {
			["source"] = "Waveblade Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 154304,
		},
		[402769] = {
			["source"] = "Sundered Flame Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202260,
		},
		[82669] = {
			["source"] = "Bloodfang Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45536,
		},
		[265084] = {
			["source"] = "Devout Blood Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131492,
		},
		[375237] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Commander",
			["npcID"] = 190776,
		},
		[405415] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Shaz'ra",
			["npcID"] = 200885,
		},
		[259519] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brinefang Saurolisk",
			["npcID"] = 136901,
		},
		[373614] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazebound Destroyer",
			["npcID"] = 190034,
		},
		[359282] = {
			["source"] = "Automated Eliminator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184539,
		},
		[151432] = {
			["encounterName"] = "Groyat, the Blind Hunter",
			["source"] = "Groyat, the Blind Hunter",
			["encounterID"] = 1660,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75247,
		},
		[173514] = {
			["source"] = "Ironwing Flamespitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83389,
		},
		[311116] = {
			["source"] = "Spiked Tentacle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159416,
		},
		[57781] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30625,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1968,
		},
		[225732] = {
			["source"] = "Lady Velandras Ravencrest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98538,
		},
		[312666] = {
			["source"] = "High Executor Yothrim",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158597,
		},
		[373618] = {
			["source"] = "Hypnosis Bat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190174,
		},
		[398154] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defiled Spirit",
			["npcID"] = 75451,
		},
		[53333] = {
			["source"] = "Anub'ar Necromancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29064,
		},
		[99052] = {
			["encounterName"] = "Beth'tilac",
			["source"] = "Beth'tilac",
			["npcID"] = 52498,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1197,
		},
		[200551] = {
			["encounterName"] = "Dargrul the Underking",
			["source"] = "Dargrul",
			["encounterID"] = 1793,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91007,
		},
		[150990] = {
			["source"] = "Razorfen Scarblade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74554,
		},
		[201399] = {
			["source"] = "Dreadfire Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100527,
		},
		[265089] = {
			["source"] = "Devout Blood Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131492,
		},
		[48054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crazed Mana-Surge",
			["npcID"] = 26737,
		},
		[212423] = {
			["source"] = "Risen Skulker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99541,
		},
		[288281] = {
			["source"] = "Lieutenant Maliyra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146458,
		},
		[387955] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ethereal Restorer",
			["npcID"] = 196203,
		},
		[128233] = {
			["source"] = "Scarlet Evangelist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58685,
		},
		[191946] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Warlord Parjesh",
			["encounterID"] = 1810,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91784,
		},
		[385024] = {
			["source"] = "Salty Salamander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188027,
		},
		[265091] = {
			["source"] = "Devout Blood Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131492,
		},
		[47731] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26929,
		},
		[309062] = {
			["source"] = "Baruk Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153099,
		},
		[395196] = {
			["source"] = "Volcanakk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200911,
		},
		[387950] = {
			["source"] = "Caldera Stomper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187919,
		},
		[166350] = {
			["isChanneled"] = true,
			["source"] = "Iron Infantry",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 82590,
		},
		[375671] = {
			["source"] = "Calving Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189312,
		},
		[168398] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["source"] = "Blackhand's Might Turret",
			["encounterID"] = 1754,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84215,
		},
		[289662] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "7th Legion Battlemage",
			["npcID"] = 147787,
		},
		[211401] = {
			["source"] = "Blazing Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104295,
		},
		[367481] = {
			["source"] = "Cruel Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186206,
		},
		[388897] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scavenging Pincher",
			["npcID"] = 200949,
		},
		[174777] = {
			["source"] = "Infested Ogron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82062,
		},
		[199652] = {
			["source"] = "King Haldor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95843,
		},
		[175566] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Fury",
			["npcID"] = 87701,
		},
		[196787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel-Infused Fury",
			["npcID"] = 99956,
		},
		[56698] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ahn'kahar Spell Flinger",
			["npcID"] = 30278,
		},
		[314843] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "N'Zoth the Corruptor",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158041,
		},
		[365903] = {
			["source"] = "Dominated Eradicator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185346,
		},
		[411700] = {
			["source"] = "Time-Lost Tidehunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205365,
		},
		[285572] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "Phantom of Slaughter",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146493,
		},
		[183350] = {
			["source"] = "Eredar Deathspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96196,
		},
		[383866] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Incarnated Wick",
			["npcID"] = 205407,
		},
		[35511] = {
			["source"] = "Shattered Hand Sharpshooter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16704,
		},
		[314708] = {
			["source"] = "HK-3 Aerial Dissuasion Unit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159261,
		},
		[85232] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ramkahen Field Worker",
			["npcID"] = 47699,
		},
		[110945] = {
			["encounterName"] = "Gu Cloudstrike",
			["source"] = "Gu Cloudstrike",
			["encounterID"] = 1303,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56747,
		},
		[422776] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["encounterID"] = 2709,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200926,
		},
		[165329] = {
			["source"] = "Thundering Goliath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 141616,
		},
		[324483] = {
			["source"] = "Vorkai Trainee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 170033,
		},
		[257478] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Mastiff",
			["npcID"] = 128551,
		},
		[418680] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vexemia",
			["npcID"] = 206967,
		},
		[365901] = {
			["source"] = "Dominated Eradicator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185346,
		},
		[260550] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uul'gyneth",
			["npcID"] = 126001,
		},
		[221357] = {
			["source"] = "Cannoneer Dargal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 110635,
		},
		[76133] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["npcID"] = 40792,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[387965] = {
			["source"] = "Time-Lost Bladewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187232,
		},
		[385916] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[424825] = {
			["source"] = "Sylvanesh the Ascended",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207107,
		},
		[264608] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[371584] = {
			["source"] = "Embertooth Pooltender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187445,
		},
		[260551] = {
			["encounterName"] = "Soulbound Goliath",
			["source"] = "Soulbound Goliath",
			["encounterID"] = 2114,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131667,
		},
		[57780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Steelforged Defender",
			["npcID"] = 33236,
		},
		[296276] = {
			["source"] = "Juvenile Snapdragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 154181,
		},
		[401297] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Haleh",
			["npcID"] = 199370,
		},
		[398206] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Exhumed Spirit",
			["npcID"] = 75979,
		},
		[150997] = {
			["source"] = "Razorfen Thornbolt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74652,
		},
		[418684] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Destroyer",
			["npcID"] = 208208,
		},
		[40317] = {
			["source"] = "Murkblood Spearman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17729,
		},
		[211406] = {
			["source"] = "Blazing Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104295,
		},
		[406854] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Arcanist",
			["npcID"] = 201736,
		},
		[396615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunscale Behemoth",
			["npcID"] = 193133,
		},
		[112992] = {
			["encounterName"] = "Hoptallus",
			["source"] = "Hoptallus",
			["encounterID"] = 1413,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56717,
		},
		[406399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Arcanist",
			["npcID"] = 201736,
		},
		[424227] = {
			["source"] = "Priestess of the Moon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211076,
		},
		[167379] = {
			["source"] = "Boneseer Cold-Eye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88361,
		},
		[311399] = {
			["source"] = "Armsmaster Terenson",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156949,
		},
		[373636] = {
			["source"] = "Konkhular",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194544,
		},
		[59259] = {
			["encounterName"] = "General Bjarngrim",
			["source"] = "Hardened Steel Berserker",
			["encounterID"] = 1987,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28579,
		},
		[377732] = {
			["source"] = "Refti Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184319,
		},
		[428926] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless Watcher",
			["npcID"] = 40936,
		},
		[182739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sinister Shrieker",
			["npcID"] = 101900,
		},
		[383872] = {
			["source"] = "Destructive Fire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194179,
		},
		[102241] = {
			["encounterName"] = "Echo of Tyrande",
			["source"] = "Echo of Tyrande",
			["encounterID"] = 1884,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54544,
		},
		[396159] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Worldcarver Wurmling",
			["npcID"] = 187366,
		},
		[298488] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Bonecrusher",
			["npcID"] = 153531,
		},
		[316996] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sun Prophet Tenhamen",
			["npcID"] = 154727,
		},
		[36990] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Staff of Disintegration",
			["npcID"] = 21274,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 733,
		},
		[363400] = {
			["source"] = "Vespoid Drone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 178159,
		},
		[268233] = {
			["source"] = "Guardian Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136249,
		},
		[375687] = {
			["source"] = "Decay Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190426,
		},
		[267604] = {
			["source"] = "Deadrot Budling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136129,
		},
		[387974] = {
			["isChanneled"] = true,
			["source"] = "Spectral Invoker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 196202,
		},
		[406404] = {
			["source"] = "Calibrating Scent Matrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203606,
		},
		[369442] = {
			["source"] = "Infused Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194200,
		},
		[225100] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[420737] = {
			["source"] = "Elder Cassaphine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206818,
		},
		[365895] = {
			["source"] = "Dominated Saboteur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185574,
		},
		[268239] = {
			["source"] = "Guardian Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136249,
		},
		[40062] = {
			["source"] = "Shadowmoon Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17414,
		},
		[259531] = {
			["encounterName"] = "Vol'kaal",
			["source"] = "Reanimation Totem",
			["npcID"] = 125977,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2085,
		},
		[319294] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Torgok",
			["npcID"] = 162817,
		},
		[98034] = {
			["encounterName"] = "Lord Rhyolith",
			["source"] = "Lord Rhyolith",
			["npcID"] = 52558,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1204,
		},
		[397094] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malsegan",
			["npcID"] = 193212,
		},
		[196516] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Channeler Varisz",
			["npcID"] = 100249,
		},
		[381834] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186122,
		},
		[224721] = {
			["source"] = "Spiritwalker Ebonhorn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152385,
		},
		[33919] = {
			["encounterName"] = "Tavarok",
			["source"] = "Tavarok",
			["npcID"] = 18343,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1901,
		},
		[424836] = {
			["source"] = "Sylvanesh the Ascended",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207107,
		},
		[313400] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "Corruptor Tentacle",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158375,
		},
		[367500] = {
			["source"] = "Bracken Warscourge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185529,
		},
		[12167] = {
			["encounterName"] = "Lord Serpentis",
			["source"] = "Lord Serpentis",
			["npcID"] = 3673,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 590,
		},
		[83926] = {
			["encounterName"] = "Ozumat",
			["source"] = "Vicious Mindlasher",
			["npcID"] = 44715,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[418469] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Minion of Deathwingurlugull",
			["npcID"] = 205037,
		},
		[367502] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pocopoc",
			["npcID"] = 181059,
		},
		[80117] = {
			["source"] = "Crazed Gyreworm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151639,
		},
		[297879] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eye of the Corruptor",
			["npcID"] = 153347,
		},
		[317639] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "N'Zoth the Corruptor",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158041,
		},
		[367503] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[299771] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Neri Sharpfin",
			["npcID"] = 152108,
		},
		[417499] = {
			["source"] = "Malfunctioning Robotic Cauldron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207111,
		},
		[386866] = {
			["source"] = "Gorging Stagbeetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195709,
		},
		[359313] = {
			["source"] = "Vine-Choked Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182350,
		},
		[305011] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tidemistress Ethendriss",
			["npcID"] = 153934,
		},
		[420746] = {
			["source"] = "Kaldorei Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207117,
		},
		[29579] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[367505] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pocopoc",
			["npcID"] = 181059,
		},
		[309420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rei Lun",
			["npcID"] = 157162,
		},
		[367496] = {
			["source"] = "Foul Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183497,
		},
		[365458] = {
			["source"] = "Subjugator Zeltoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184651,
		},
		[327280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valinor",
			["npcID"] = 167524,
		},
		[59147] = {
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28580,
		},
		[263502] = {
			["source"] = "Ritual Mask",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134123,
		},
		[260483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Necrogg the Darkspeaker",
			["npcID"] = 104890,
		},
		[392080] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverwalker Tamopo",
			["npcID"] = 193240,
		},
		[306874] = {
			["encounterName"] = "Ra-den the Despoiled",
			["source"] = "Crackling Stalker",
			["encounterID"] = 2331,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157365,
		},
		[57725] = {
			["encounterName"] = "Salram the Fleshcrafter",
			["source"] = "Salramm the Fleshcrafter",
			["npcID"] = 26530,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2004,
		},
		[166364] = {
			["isChanneled"] = true,
			["source"] = "Grom'kar Boomer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 82579,
		},
		[396605] = {
			["source"] = "Fulgurb",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193170,
		},
		[201176] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmtongue Scavenger",
			["npcID"] = 98792,
		},
		[192985] = {
			["encounterName"] = "Wrath of Azshara",
			["source"] = "Wrath of Azshara",
			["npcID"] = 96028,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1814,
		},
		[16033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Injured Warsong Shaman",
			["npcID"] = 27108,
		},
		[174769] = {
			["source"] = "Steamscar Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81747,
		},
		[329310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Disobedient Citizen",
			["npcID"] = 158813,
		},
		[52238] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["encounterID"] = 1985,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28587,
		},
		[388743] = {
			["source"] = "Risen Bakar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188510,
		},
		[79607] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skitterweb Matriarch",
			["npcID"] = 44906,
		},
		[314115] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Manipulator Shrog'lth",
			["npcID"] = 159103,
		},
		[362028] = {
			["encounterName"] = "The Jailer",
			["source"] = "The Jailer",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180990,
		},
		[302477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Haunt",
			["npcID"] = 151754,
		},
		[408466] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drogbar Crystal-collector",
			["npcID"] = 204407,
		},
		[384316] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[396180] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Worldcarver Wurmling",
			["npcID"] = 187366,
		},
		[275363] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malfunctioning Beastbot",
			["npcID"] = 151933,
		},
		[200154] = {
			["source"] = "Understone Demolisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102253,
		},
		[174768] = {
			["source"] = "Steamscar Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81747,
		},
		[315772] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "N'Zoth the Corruptor",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158041,
		},
		[275364] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Abrasive Reconfigulator 8000",
			["npcID"] = 140530,
		},
		[299937] = {
			["source"] = "HK-8 Aerial Oppression Unit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153824,
		},
		[410516] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[243568] = {
			["source"] = "Savage Cursespitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122078,
		},
		[157051] = {
			["source"] = "Grom'tash the Destructor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77889,
		},
		[392087] = {
			["source"] = "Bossy Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190998,
		},
		[40064] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Technician",
			["npcID"] = 17414,
		},
		[389951] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[151570] = {
			["encounterName"] = "Charlga Razorflank",
			["source"] = "Venomous Discharge Crystal",
			["encounterID"] = 1661,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74942,
		},
		[400279] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Flamewalker",
			["npcID"] = 199826,
		},
		[369563] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184581,
		},
		[28993] = {
			["source"] = "Nightlash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46981,
		},
		[324513] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Experimental Misstep",
			["npcID"] = 199859,
		},
		[42772] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Strategist",
			["npcID"] = 23956,
		},
		[372027] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Embar Firepath",
			["npcID"] = 187767,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[207806] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[195037] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Oracle",
			["npcID"] = 95861,
		},
		[309757] = {
			["source"] = "Zan-Tien Pikeman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156325,
		},
		[34945] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Scale-Healer",
			["npcID"] = 21126,
		},
		[255446] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amaki Bloodsinger",
			["npcID"] = 128773,
		},
		[393259] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Inferno",
			["npcID"] = 189043,
		},
		[33787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Collaborator",
			["npcID"] = 17962,
		},
		[392014] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rokzul",
			["npcID"] = 194458,
		},
		[275370] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malfunctioning Beastbot",
			["npcID"] = 151933,
		},
		[373662] = {
			["isChanneled"] = true,
			["source"] = "Sentinel Talondras",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186420,
		},
		[400283] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Preserver",
			["npcID"] = 199972,
		},
		[352223] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vault Sentinel",
			["npcID"] = 185027,
		},
		[263085] = {
			["source"] = "Vilebone Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134852,
		},
		[76026] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[257495] = {
			["encounterName"] = "The Sand Queen",
			["source"] = "The Sand Queen",
			["npcID"] = 127479,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2101,
		},
		[426905] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Minion of Ghur'sha",
			["npcID"] = 212778,
		},
		[408476] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Erratic Remnant",
			["npcID"] = 202824,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[367521] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[310184] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "Psychus",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158376,
		},
		[366629] = {
			["source"] = "Overthrown Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185155,
		},
		[411236] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[299946] = {
			["source"] = "HK-8 Aerial Oppression Unit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153824,
		},
		[351976] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Torment Golem",
			["npcID"] = 176598,
		},
		[395163] = {
			["source"] = "Gethdazr",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196165,
		},
		[371618] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Farseer",
			["npcID"] = 201117,
		},
		[99576] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Spawn",
			["npcID"] = 53622,
		},
		[316331] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wastewander Exterminator",
			["npcID"] = 154434,
		},
		[43649] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Dalronn the Controller",
			["npcID"] = 24201,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2024,
		},
		[388001] = {
			["source"] = "Bertinuat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196288,
		},
		[422813] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Ordan",
			["npcID"] = 208727,
		},
		[400288] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Pain",
			["npcID"] = 201290,
		},
		[176611] = {
			["source"] = "Lesser Brimfury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85924,
		},
		[388002] = {
			["source"] = "Bertinuat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196288,
		},
		[365477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadlord Commander",
			["npcID"] = 181797,
		},
		[359334] = {
			["source"] = "Ancient Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184954,
		},
		[336809] = {
			["source"] = "Azmogal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162873,
		},
		[422815] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Ordan",
			["npcID"] = 208727,
		},
		[231901] = {
			["source"] = "Test Subject",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116285,
		},
		[370225] = {
			["source"] = "Shrieking Whelp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187159,
		},
		[377765] = {
			["source"] = "Windborne Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189485,
		},
		[169445] = {
			["source"] = "Twisted Abomination",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84767,
		},
		[69068] = {
			["source"] = "Soulguard Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36620,
		},
		[164907] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reanimated Ritual Bones",
			["npcID"] = 75715,
		},
		[377512] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Basalt Shell",
			["npcID"] = 186622,
		},
		[375719] = {
			["source"] = "Steam Reaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190700,
		},
		[404388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatching Egg",
			["npcID"] = 202897,
		},
		[408483] = {
			["source"] = "Elder Magma Serpent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203846,
		},
		[385958] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["npcID"] = 194181,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2562,
		},
		[194019] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deeprock Scrapper",
			["npcID"] = 98003,
		},
		[276441] = {
			["source"] = "Irontide Skyrider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 141485,
		},
		[382555] = {
			["source"] = "Bracken Warscourge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185529,
		},
		[385959] = {
			["source"] = "Defense Orb",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195184,
		},
		[106428] = {
			["source"] = "Shado-Pan Novice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56395,
		},
		[388008] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["encounterID"] = 2583,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186737,
		},
		[400688] = {
			["source"] = "Wyrmslayer Angvardi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201013,
		},
		[209378] = {
			["source"] = "Imacu'tya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104275,
		},
		[428963] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Burning Colossus",
			["npcID"] = 207796,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[162280] = {
			["source"] = "Blook",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78030,
		},
		[384868] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192789,
		},
		[271287] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unbound Stormsurge",
			["npcID"] = 141123,
		},
		[400296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Preserver",
			["npcID"] = 199972,
		},
		[240095] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel Commander Urgoz",
			["npcID"] = 118006,
		},
		[392105] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Haleh",
			["npcID"] = 199370,
		},
		[401318] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[315927] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "N'Zoth the Corruptor",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158041,
		},
		[195240] = {
			["source"] = "Drogbar Rivertroller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96124,
		},
		[193611] = {
			["encounterName"] = "Lady Hatecoil",
			["source"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1811,
		},
		[353588] = {
			["source"] = "Nathrezim Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182426,
		},
		[111631] = {
			["encounterName"] = "Instructor Chillheart",
			["source"] = "Instructor Chillheart",
			["encounterID"] = 1426,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58633,
		},
		[153067] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["npcID"] = 75829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1688,
		},
		[167401] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jabberback",
			["npcID"] = 79726,
		},
		[410537] = {
			["source"] = "Scalecommander Sarkareth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199984,
		},
		[404394] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reisa the Drowned",
			["npcID"] = 200600,
		},
		[373678] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[98043] = {
			["encounterName"] = "Lord Rhyolith",
			["source"] = "Lord Rhyolith",
			["npcID"] = 52558,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1204,
		},
		[271291] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blacktooth Scrapper",
			["npcID"] = 129097,
		},
		[39347] = {
			["source"] = "Sunseeker Gene-Splicer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19507,
		},
		[15586] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Scale-Binder",
			["npcID"] = 26735,
		},
		[375727] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[36227] = {
			["source"] = "Unamused Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 110721,
		},
		[404396] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pyrachniss",
			["npcID"] = 200978,
		},
		[31554] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Defender",
			["npcID"] = 17958,
		},
		[57825] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frostbringer",
			["npcID"] = 30286,
		},
		[398254] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Winterpelt Defender",
			["npcID"] = 200362,
		},
		[15970] = {
			["source"] = "Nightmare Wyrmkin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5280,
		},
		[199143] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Dantalionax",
			["npcID"] = 98970,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1835,
		},
		[392111] = {
			["source"] = "Shiverweb Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185814,
		},
		[400300] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200681,
		},
		[153485] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Carrion Worm",
			["npcID"] = 76057,
		},
		[275012] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hunting Worg",
			["npcID"] = 152998,
		},
		[157355] = {
			["source"] = "Shadowmoon Ritualist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81711,
		},
		[376426] = {
			["source"] = "Summoned Ripple",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192463,
		},
		[157165] = {
			["source"] = "Sargerei Zealot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77132,
		},
		[166380] = {
			["source"] = "Grom'kar Captain",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82597,
		},
		[408495] = {
			["source"] = "Elder Magma Serpent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203846,
		},
		[404400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pyrachniss",
			["npcID"] = 200978,
		},
		[420782] = {
			["isChanneled"] = true,
			["source"] = "Zaqali Lavatongue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208661,
		},
		[368545] = {
			["source"] = "Thrall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184599,
		},
		[396208] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rotbow Stalker",
			["npcID"] = 197126,
		},
		[51586] = {
			["source"] = "Dragonflayer Spiritualist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28410,
		},
		[289727] = {
			["source"] = "Gnomish Commando",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148442,
		},
		[128249] = {
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58756,
		},
		[170825] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Warlock Soulstealer",
			["npcID"] = 79482,
		},
		[365870] = {
			["source"] = "Eternal Assembler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183404,
		},
		[36228] = {
			["source"] = "Rental Shredder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 38650,
		},
		[267905] = {
			["encounterName"] = "Tidesage Council",
			["source"] = "Brother Ironhull",
			["encounterID"] = 2131,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134063,
		},
		[372562] = {
			["source"] = "Brackenhide Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188542,
		},
		[188907] = {
			["source"] = "Darkfiend Dreadbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92789,
		},
		[404403] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[199146] = {
			["source"] = "Gildedfur Stag",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96609,
		},
		[115650] = {
			["source"] = "Fizzy Brew Alemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59520,
		},
		[385974] = {
			["encounterName"] = "Vexamus",
			["source"] = "Professor Maxdormu",
			["npcID"] = 189668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2562,
		},
		[394114] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "S.A.V.I.O.R.",
			["npcID"] = 195328,
		},
		[375385] = {
			["source"] = "Steam Reaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190700,
		},
		[9053] = {
			["source"] = "Shadowforge Surveyor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4844,
		},
		[417782] = {
			["source"] = "Mechanized Mekgineer Hologram",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207539,
		},
		[79616] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Felhunter Minion",
			["npcID"] = 175166,
		},
		[297923] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zanj'ir Myrmidon",
			["npcID"] = 152883,
		},
		[293827] = {
			["source"] = "Mechagon Tinkerer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144294,
		},
		[312257] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zara'thik Depthspeaker",
			["npcID"] = 162887,
		},
		[97022] = {
			["encounterName"] = "Jin'do the Godbreaker",
			["source"] = "Shredtooth Frenzy",
			["encounterID"] = 1182,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 52430,
		},
		[316353] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wastewander Warrior",
			["npcID"] = 154462,
		},
		[171503] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Adherent Wind-Lasher",
			["npcID"] = 81934,
		},
		[394536] = {
			["source"] = "Chief Dead Eye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195337,
		},
		[289733] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jek'kwa",
			["npcID"] = 148621,
		},
		[422837] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[100094] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Harbinger of Flame",
			["npcID"] = 53793,
		},
		[170480] = {
			["source"] = "Shadowmoon Voidaxe",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79589,
		},
		[382249] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185528,
		},
		[373692] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazebound Destroyer",
			["npcID"] = 190034,
		},
		[157170] = {
			["source"] = "Sargerei Soulbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77812,
		},
		[385980] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[404409] = {
			["source"] = "Reisa the Drowned",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200600,
		},
		[373693] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazebound Destroyer",
			["npcID"] = 190034,
		},
		[294195] = {
			["source"] = "Defense Bot Mk I",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151649,
		},
		[336834] = {
			["source"] = "Monstrous Riftcrasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184606,
		},
		[428983] = {
			["isChanneled"] = true,
			["source"] = "Pip",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210518,
		},
		[52611] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Master Necromancer",
			["npcID"] = 27732,
		},
		[196078] = {
			["encounterName"] = "Amalgam of Souls",
			["source"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1832,
		},
		[312262] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zara'thik Depthspeaker",
			["npcID"] = 162887,
		},
		[146327] = {
			["source"] = "Broken Clefthoof",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72881,
		},
		[347073] = {
			["source"] = "Bound Excavator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 176254,
		},
		[277451] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tech Scavenger",
			["npcID"] = 155195,
		},
		[100095] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Harbinger of Flame",
			["npcID"] = 53793,
		},
		[15305] = {
			["source"] = "Thrall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78553,
		},
		[395893] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[414652] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[131575] = {
			["source"] = "Monk Trainee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 66947,
		},
		[373698] = {
			["source"] = "Brackenhide Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186220,
		},
		[199151] = {
			["source"] = "Angerhoof Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96611,
		},
		[408509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Portalkeeper Cimbra",
			["npcID"] = 202613,
		},
		[271310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pathfinder Tacha",
			["npcID"] = 200263,
		},
		[256489] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[299979] = {
			["source"] = "Sawblade Clearcutter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151871,
		},
		[318409] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shath'Yar Scribe",
			["npcID"] = 163690,
		},
		[304075] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deathspeaker",
			["npcID"] = 155908,
		},
		[265168] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[283598] = {
			["encounterName"] = "Champion of the Light",
			["source"] = "Frida Ironbellows",
			["npcID"] = 144680,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2265,
		},
		[369602] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Olaf",
			["encounterID"] = 2555,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184580,
		},
		[392130] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Maxdormu",
			["npcID"] = 189668,
		},
		[265169] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Archelion Great Turtle",
			["npcID"] = 130918,
		},
		[308172] = {
			["source"] = "Fallen Voidspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152722,
		},
		[326602] = {
			["source"] = "Engorged Borer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 170767,
		},
		[197105] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Arcanist",
			["npcID"] = 97171,
		},
		[73564] = {
			["encounterName"] = "Siamat",
			["source"] = "Siamat",
			["npcID"] = 44819,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1055,
		},
		[182333] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Stormcaller",
			["npcID"] = 88087,
		},
		[169823] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Spore Image",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84983,
		},
		[329383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nascent Shade",
			["npcID"] = 178013,
		},
		[167589] = {
			["encounterName"] = "Nitrogg Thundertower",
			["source"] = "Assault Cannon",
			["encounterID"] = 1732,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79548,
		},
		[267969] = {
			["source"] = "Temple Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134137,
		},
		[387037] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Torch Revenant",
			["npcID"] = 201472,
		},
		[325232] = {
			["source"] = "Sylvari Tenderhoof",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 170031,
		},
		[114859] = {
			["source"] = "Bored Student",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59614,
		},
		[398276] = {
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199502,
		},
		[31281] = {
			["source"] = "Chet the Slime-Breeder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48322,
		},
		[150326] = {
			["source"] = "Razorfen Stonechanter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74549,
		},
		[54916] = {
			["source"] = "Sparktouched Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28112,
		},
		[162295] = {
			["source"] = "Trained Bonestripper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72650,
		},
		[389056] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[320463] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Steelskin Linebreaker",
			["npcID"] = 160479,
		},
		[361300] = {
			["encounterName"] = "Prototype Pantheon",
			["source"] = "Prototype of War",
			["encounterID"] = 2544,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181549,
		},
		[270987] = {
			["source"] = "Disciple of Nalorakk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120949,
		},
		[115030] = {
			["source"] = "Muck Brawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192630,
		},
		[50648] = {
			["source"] = "Relios the Relic Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45734,
		},
		[209587] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dread Falke",
			["npcID"] = 105750,
		},
		[369193] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Dusttwister",
			["npcID"] = 192371,
		},
		[7154] = {
			["encounterName"] = "Antu'sul",
			["source"] = "Sandfury Soul Eater",
			["encounterID"] = 595,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7247,
		},
		[320465] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Torturer",
			["npcID"] = 202555,
		},
		[314322] = {
			["source"] = "Kzit'kovok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160867,
		},
		[20805] = {
			["source"] = "Mudsnout Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2373,
		},
		[271866] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Angry Dreadcroc",
			["npcID"] = 123090,
		},
		[156722] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Exhumer",
			["npcID"] = 77700,
		},
		[120149] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirror Image",
			["npcID"] = 194853,
		},
		[157348] = {
			["source"] = "Primal Storm Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77942,
		},
		[359374] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defective Reformatter",
			["npcID"] = 181862,
		},
		[3396] = {
			["source"] = "Hungry Mine Creeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 47662,
		},
		[157794] = {
			["source"] = "Sargerei Magus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76263,
		},
		[256494] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[194038] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gleamhoof Stag",
			["npcID"] = 93313,
		},
		[331045] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Savagewing Teroclaw",
			["npcID"] = 170067,
		},
		[314325] = {
			["source"] = "Kzit'kovok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160867,
		},
		[414665] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murloc Gillbeater",
			["npcID"] = 205823,
		},
		[187895] = {
			["source"] = "Risen Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146341,
		},
		[287705] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Defender",
			["npcID"] = 148393,
		},
		[314326] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crushing Tendril",
			["npcID"] = 161312,
		},
		[123648] = {
			["source"] = "Harthak Stormcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61946,
		},
		[15587] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anvilrage Medic",
			["npcID"] = 8894,
		},
		[338011] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Violent Muckmare",
			["npcID"] = 166318,
		},
		[388046] = {
			["source"] = "Stinkbreath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187033,
		},
		[404415] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Damned Warrior",
			["npcID"] = 202922,
		},
		[400333] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cliffkeeper Bouldani",
			["npcID"] = 202612,
		},
		[331044] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Savagewing Teroclaw",
			["npcID"] = 170067,
		},
		[159802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frostwolf Champion",
			["npcID"] = 72940,
		},
		[57047] = {
			["source"] = "Crazed Mana-Surge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26737,
		},
		[121601] = {
			["source"] = "Harthak Stormcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61946,
		},
		[96516] = {
			["source"] = "Lesser Priest of Bethekk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 52339,
		},
		[314329] = {
			["source"] = "Kzit'kovok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160867,
		},
		[394620] = {
			["source"] = "Nightrot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188707,
		},
		[400335] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vraken the Hunter",
			["npcID"] = 200584,
		},
		[374724] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[123649] = {
			["source"] = "Kargesh Ribcrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61947,
		},
		[154110] = {
			["encounterName"] = "Araknath",
			["source"] = "Araknath",
			["encounterID"] = 1699,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76141,
		},
		[167420] = {
			["source"] = "Lady Liadrin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79823,
		},
		[304093] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deathspeaker",
			["npcID"] = 155908,
		},
		[314331] = {
			["source"] = "Kzit'kovok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160867,
		},
		[68872] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["encounterID"] = 2006,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36497,
		},
		[310236] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kilxl the Gaping Maw",
			["npcID"] = 157266,
		},
		[271329] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pathfinder Tacha",
			["npcID"] = 200263,
		},
		[158014] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gruffy",
			["npcID"] = 193251,
		},
		[406481] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["npcID"] = 198999,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2671,
		},
		[200185] = {
			["encounterName"] = "Shade of Xavius",
			["source"] = "Shade of Xavius",
			["encounterID"] = 1839,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99192,
		},
		[193018] = {
			["encounterName"] = "King Deepbeard",
			["source"] = "King Deepbeard",
			["npcID"] = 91797,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1812,
		},
		[410904] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 199000,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2673,
		},
		[308190] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Harrier Nir'verash",
			["npcID"] = 160868,
		},
		[15547] = {
			["source"] = "Stormpike Mountaineer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48482,
		},
		[336859] = {
			["source"] = "Azmogal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162873,
		},
		[412626] = {
			["source"] = "General Zskorro",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203592,
		},
		[174917] = {
			["source"] = "Infested Behemoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82841,
		},
		[173169] = {
			["source"] = "Turbulent Steamfury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81685,
		},
		[159847] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ironmarch Grunt",
			["npcID"] = 76556,
		},
		[420817] = {
			["source"] = "Kaldorei Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207117,
		},
		[316383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anubisath Sentinel",
			["npcID"] = 162534,
		},
		[366685] = {
			["source"] = "Stellar Mote",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185271,
		},
		[221688] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Braxas the Fleshcarver",
			["npcID"] = 111290,
		},
		[397383] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["npcID"] = 199703,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[59696] = {
			["source"] = "Proto-Drake Handler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24082,
		},
		[378832] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Collier",
			["npcID"] = 195605,
		},
		[365851] = {
			["source"] = "Eternal Assembler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183404,
		},
		[259572] = {
			["encounterName"] = "Vol'kaal",
			["source"] = "Vol'kaal",
			["npcID"] = 122965,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2085,
		},
		[259732] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131383,
		},
		[375770] = {
			["source"] = "Frozion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193655,
		},
		[170828] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Warlock Soulstealer",
			["npcID"] = 79482,
		},
		[389250] = {
			["source"] = "Blacktalon Slayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201831,
		},
		[398296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shambling Infester",
			["npcID"] = 200387,
		},
		[293861] = {
			["source"] = "Ernst",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151629,
		},
		[395427] = {
			["source"] = "Overseer Lahar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189235,
		},
		[185854] = {
			["source"] = "Nightmare Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92792,
		},
		[391842] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Mender",
			["npcID"] = 195060,
		},
		[34697] = {
			["encounterName"] = "Laj",
			["source"] = "Laj",
			["encounterID"] = 1927,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17980,
		},
		[197117] = {
			["encounterName"] = "Helya",
			["source"] = "Piercing Tentacle",
			["npcID"] = 100188,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1824,
		},
		[405043] = {
			["source"] = "Primal Nightflame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200931,
		},
		[193022] = {
			["source"] = "Eredar Deathspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96196,
		},
		[277481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Armed Prisoner",
			["npcID"] = 154011,
		},
		[386012] = {
			["source"] = "Stormcaller Boroo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194317,
		},
		[388060] = {
			["source"] = "Stinkbreath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187033,
		},
		[283626] = {
			["encounterName"] = "Champion of the Light",
			["source"] = "Anointed Disciple",
			["encounterID"] = 2265,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145898,
		},
		[310246] = {
			["encounterName"] = "Drest'agath",
			["source"] = "Drest'agath",
			["npcID"] = 157602,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2343,
		},
		[188927] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkfiend Dreadbringer",
			["npcID"] = 92789,
		},
		[123652] = {
			["source"] = "Kargesh Ribcrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61947,
		},
		[398300] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shambling Infester",
			["npcID"] = 200387,
		},
		[314655] = {
			["source"] = "Henry Garrick",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161504,
		},
		[336868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Riftcrasher",
			["npcID"] = 184606,
		},
		[167966] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83893,
		},
		[390111] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["npcID"] = 189727,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2617,
		},
		[102151] = {
			["encounterName"] = "Echo of Tyrande",
			["source"] = "Echo of Tyrande",
			["encounterID"] = 1884,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54544,
		},
		[386015] = {
			["source"] = "Primalist Stormspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194894,
		},
		[222716] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taintheart Befouler",
			["npcID"] = 111354,
		},
		[406493] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spinmarrow",
			["npcID"] = 203480,
		},
		[32197] = {
			["source"] = "Shadowmoon Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17371,
		},
		[32325] = {
			["encounterName"] = "Pandemonius",
			["source"] = "Pandemonius",
			["npcID"] = 18341,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1900,
		},
		[185857] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashvane Marine",
			["npcID"] = 130027,
		},
		[417641] = {
			["source"] = "Felbolg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206189,
		},
		[256083] = {
			["encounterName"] = "Overseer Korgus",
			["source"] = "Overseer Korgus",
			["npcID"] = 127503,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2104,
		},
		[209404] = {
			["source"] = "Duskwatch Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104247,
		},
		[83915] = {
			["encounterName"] = "Ozumat",
			["source"] = "Vicious Mindlasher",
			["npcID"] = 44715,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[406495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ookbeard",
			["npcID"] = 200956,
		},
		[351206] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Soulwarden",
			["npcID"] = 176575,
		},
		[406802] = {
			["source"] = "Cavern Flayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202307,
		},
		[429021] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless Watcher",
			["npcID"] = 40936,
		},
		[275440] = {
			["source"] = "Blight Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146564,
		},
		[404754] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Null Glimmer",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202971,
		},
		[426974] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Addled Arcanomancer",
			["npcID"] = 84990,
		},
		[297966] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maw of the Maw",
			["npcID"] = 185013,
		},
		[256506] = {
			["source"] = "Horker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 169460,
		},
		[150023] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74475,
		},
		[418784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Supreme General Pa'valak",
			["npcID"] = 208211,
		},
		[361016] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Empowered Attendant",
			["npcID"] = 183988,
		},
		[373733] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[163334] = {
			["encounterName"] = "Grimrail Enforcers",
			["source"] = "Neesa Nox",
			["encounterID"] = 1748,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80808,
		},
		[322541] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Horrific Bonemauler",
			["npcID"] = 162109,
		},
		[123654] = {
			["encounterName"] = "Trial of the King",
			["source"] = "Ming the Cunning",
			["encounterID"] = 1442,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61444,
		},
		[149463] = {
			["source"] = "Burning Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72895,
		},
		[192003] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Blazing Hydra Spawn",
			["npcID"] = 97259,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1813,
		},
		[85846] = {
			["source"] = "Forsaken Catapult",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46052,
		},
		[390115] = {
			["source"] = "Sarana",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190161,
		},
		[37591] = {
			["source"] = "Ambermill Brewmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3577,
		},
		[383975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Windlord",
			["npcID"] = 200390,
		},
		[13860] = {
			["source"] = "Baron Ashbury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45880,
		},
		[325205] = {
			["source"] = "Keeneye Bowman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 166936,
		},
		[240126] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel Commander Urgoz",
			["npcID"] = 118006,
		},
		[164357] = {
			["encounterName"] = "Witherbark",
			["source"] = "Witherbark",
			["encounterID"] = 1746,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81522,
		},
		[209410] = {
			["source"] = "Duskwatch Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104247,
		},
		[256039] = {
			["encounterName"] = "Overseer Korgus",
			["source"] = "Overseer Korgus",
			["npcID"] = 127503,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2104,
		},
		[20295] = {
			["encounterName"] = "Lady Anacondra",
			["source"] = "Lady Anacondra",
			["npcID"] = 3671,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 585,
		},
		[318449] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "N'Zoth the Corruptor",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158041,
		},
		[361452] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Engorged Annelid",
			["npcID"] = 180722,
		},
		[418338] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Morchie",
			["npcID"] = 205708,
		},
		[340975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarlbranch Wrecker",
			["npcID"] = 163967,
		},
		[192005] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Arcane Hydra Spawn",
			["npcID"] = 97260,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1813,
		},
		[386026] = {
			["source"] = "Unstable Squall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194895,
		},
		[404456] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[59528] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["encounterID"] = 1985,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28587,
		},
		[416743] = {
			["source"] = "Hungering Ghoul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206016,
		},
		[418791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Supreme General Pa'valak",
			["npcID"] = 208211,
		},
		[408551] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Walker",
			["npcID"] = 201063,
		},
		[29427] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Healer",
			["npcID"] = 17730,
		},
		[403890] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duzalgor",
			["npcID"] = 200610,
		},
		[386028] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[78509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodfang Scavenger",
			["npcID"] = 44547,
		},
		[373742] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[383981] = {
			["source"] = "Rising Tempest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194575,
		},
		[170035] = {
			["encounterName"] = "Yalnu",
			["source"] = "Lady Baihu",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84358,
		},
		[12058] = {
			["source"] = "Iron Dwarf Magus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29979,
		},
		[403855] = {
			["source"] = "Vakan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199855,
		},
		[209413] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[295929] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oddly Large Mawrat",
			["npcID"] = 154030,
		},
		[31704] = {
			["encounterName"] = "The Black Stalker",
			["source"] = "The Black Stalker",
			["encounterID"] = 1948,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17882,
		},
		[275452] = {
			["source"] = "Blight Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146564,
		},
		[387135] = {
			["source"] = "Primalist Arcblade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194898,
		},
		[371984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flashfrost Chillweaver",
			["npcID"] = 188067,
		},
		[152894] = {
			["source"] = "Initiate of the Rising Sun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79466,
		},
		[39207] = {
			["source"] = "Bloodvenom",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 49264,
		},
		[269310] = {
			["encounterName"] = "Unbound Abomination",
			["source"] = "Titan Keeper Hezrel",
			["encounterID"] = 2123,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134419,
		},
		[418796] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Supreme General Pa'valak",
			["npcID"] = 208211,
		},
		[381444] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186122,
		},
		[56969] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Scale-Binder",
			["npcID"] = 26735,
		},
		[380174] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[418269] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imperial Vizier Zor'lok",
			["npcID"] = 208500,
		},
		[381470] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186125,
		},
		[199176] = {
			["encounterName"] = "Naraxas",
			["source"] = "Naraxas",
			["encounterID"] = 1792,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91005,
		},
		[413136] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[76047] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[429037] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["npcID"] = 40825,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1046,
		},
		[59529] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["encounterID"] = 1985,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28587,
		},
		[416751] = {
			["source"] = "Vargul Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207805,
		},
		[377844] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186122,
		},
		[404465] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galakhad",
			["npcID"] = 200717,
		},
		[372539] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[401205] = {
			["source"] = "Carcaxas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202836,
		},
		[387243] = {
			["source"] = "Time-Lost Murhulk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187677,
		},
		[60236] = {
			["source"] = "Storming Vortex",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28547,
		},
		[211464] = {
			["source"] = "Felbound Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104278,
		},
		[202108] = {
			["source"] = "Blightshard Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90998,
		},
		[387708] = {
			["source"] = "Phenran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193688,
		},
		[338939] = {
			["source"] = "Decrepit Bilespawn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 166928,
		},
		[150032] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74475,
		},
		[310271] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Will of N'Zoth",
			["npcID"] = 154495,
		},
		[201226] = {
			["encounterName"] = "Dresaron",
			["source"] = "Bloodtainted Fury",
			["encounterID"] = 1838,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100531,
		},
		[406792] = {
			["source"] = "Agitated Magmaclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202288,
		},
		[406516] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[372201] = {
			["source"] = "Qalashi Irontorch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189464,
		},
		[336893] = {
			["source"] = "Azmogal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162873,
		},
		[222728] = {
			["source"] = "Wisp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112252,
		},
		[176218] = {
			["source"] = "Smokemaster Snarl",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81749,
		},
		[294165] = {
			["source"] = "Ebon Chainguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185316,
		},
		[295939] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["source"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150190,
		},
		[412661] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invoq",
			["npcID"] = 203627,
		},
		[178702] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bittertide Brinetail",
			["npcID"] = 131674,
		},
		[333612] = {
			["source"] = "Encroaching Mite",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160811,
		},
		[10277] = {
			["source"] = "Torn Fin Coastrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2375,
		},
		[61730] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snowplain Disciple",
			["npcID"] = 26705,
		},
		[308227] = {
			["encounterName"] = "The Hivemind",
			["source"] = "Tek'ris",
			["npcID"] = 157254,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2333,
		},
		[418578] = {
			["source"] = "Illidan Stormrage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205306,
		},
		[268050] = {
			["source"] = "Tidesage Spiritualist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136186,
		},
		[404472] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[162321] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bladespire Ogron",
			["npcID"] = 78173,
		},
		[365835] = {
			["source"] = "Eternal Artisan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183407,
		},
		[200205] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reaves",
			["npcID"] = 101462,
		},
		[404473] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galakhad",
			["npcID"] = 200717,
		},
		[330755] = {
			["source"] = "Octolus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182690,
		},
		[310277] = {
			["encounterName"] = "Drest'agath",
			["source"] = "Drest'agath",
			["npcID"] = 157602,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2343,
		},
		[376073] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[420856] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208365,
		},
		[359960] = {
			["encounterName"] = "Lords of Dread",
			["source"] = "Mal'Ganis",
			["encounterID"] = 2543,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181398,
		},
		[88421] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forest Ettin",
			["npcID"] = 44367,
		},
		[271371] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ogre Taskmaster",
			["npcID"] = 156986,
		},
		[20296] = {
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4289,
		},
		[395458] = {
			["source"] = "Harkyn Grymstone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186200,
		},
		[178837] = {
			["source"] = "Cackling Pyromaniac",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79510,
		},
		[173563] = {
			["encounterName"] = "Yalnu",
			["source"] = "Feral Lasher",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86684,
		},
		[161299] = {
			["source"] = "Mandragora Lifedrinker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80699,
		},
		[302089] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sean Wilkers",
			["npcID"] = 155261,
		},
		[196111] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Seaspray Crab",
			["npcID"] = 91793,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1813,
		},
		[32364] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["source"] = "Nexus-Prince Shaffar",
			["npcID"] = 18344,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1899,
		},
		[389532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Morlash",
			["npcID"] = 201549,
		},
		[417573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gill'dan",
			["npcID"] = 204808,
		},
		[392192] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Blazing Fiend",
			["npcID"] = 190688,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[359688] = {
			["source"] = "Oracle Zoketh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181625,
		},
		[412669] = {
			["source"] = "Klakatak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203618,
		},
		[211470] = {
			["source"] = "Shadow Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104300,
		},
		[408574] = {
			["source"] = "Kalecgos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202692,
		},
		[113999] = {
			["encounterName"] = "Rattlegore",
			["source"] = "Rattlegore",
			["encounterID"] = 1428,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59153,
		},
		[260617] = {
			["source"] = "Zuvembi Brewer Zekal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130260,
		},
		[166420] = {
			["source"] = "Blackrock Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81422,
		},
		[375812] = {
			["isChanneled"] = true,
			["source"] = "Infused Whelp",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187083,
		},
		[400642] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[404480] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ebon Lieutenant",
			["npcID"] = 201647,
		},
		[59019] = {
			["source"] = "Spitting Cobra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29774,
		},
		[408576] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[197137] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Wrangler",
			["npcID"] = 100216,
		},
		[23601] = {
			["source"] = "Bolgaff",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 47003,
		},
		[412928] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forgemaster Algrin",
			["npcID"] = 203709,
		},
		[192018] = {
			["encounterName"] = "Hyrja",
			["source"] = "Hyrja",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95833,
		},
		[112911] = {
			["source"] = "Fragment of Hatred",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58810,
		},
		[170517] = {
			["source"] = "Iron Explosive",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78479,
		},
		[154135] = {
			["encounterName"] = "Araknath",
			["source"] = "Araknath",
			["encounterID"] = 1699,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76141,
		},
		[16561] = {
			["source"] = "Infused Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82857,
		},
		[374020] = {
			["source"] = "Containment Apparatus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190342,
		},
		[388374] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ravenous Dreadsquall",
			["npcID"] = 191831,
		},
		[429051] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["npcID"] = 40825,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1046,
		},
		[211473] = {
			["source"] = "Shadow Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104300,
		},
		[414974] = {
			["source"] = "Blazing Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205140,
		},
		[169494] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarlroot",
			["npcID"] = 81984,
		},
		[390150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmeater",
			["npcID"] = 186612,
		},
		[363525] = {
			["source"] = "Mawsworn Purger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183652,
		},
		[312336] = {
			["encounterName"] = "Dark Inquisitor Xanesh",
			["source"] = "Dark Inquisitor Xanesh",
			["npcID"] = 156575,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2328,
		},
		[174529] = {
			["source"] = "Captain Brak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81254,
		},
		[166032] = {
			["source"] = "Ogron Warcrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80775,
		},
		[272592] = {
			["source"] = "Faceless Corruptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138281,
		},
		[369674] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184022,
		},
		[397048] = {
			["source"] = "Frostbreath Arachnid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199333,
		},
		[250505] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voidtender Malketh",
			["npcID"] = 154332,
		},
		[185425] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Steeljaw Grizzly",
			["npcID"] = 96677,
		},
		[369675] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184022,
		},
		[412678] = {
			["source"] = "Klakatak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203618,
		},
		[267288] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Ring Shaman",
			["npcID"] = 135671,
		},
		[335720] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Ritualist",
			["npcID"] = 155812,
		},
		[265241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lazy Drudge",
			["npcID"] = 135190,
		},
		[363533] = {
			["encounterName"] = "Rygelon",
			["source"] = "Rygelon",
			["encounterID"] = 2549,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182777,
		},
		[59020] = {
			["source"] = "Spitting Cobra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29774,
		},
		[343056] = {
			["source"] = "Heraclor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 172025,
		},
		[369677] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Olaf",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184580,
		},
		[378112] = {
			["source"] = "Encroaching Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189314,
		},
		[172567] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frostwall Grunt",
			["npcID"] = 81368,
		},
		[59685] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Dragonflayer Strategist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23956,
		},
		[406282] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Naturalist",
			["npcID"] = 201746,
		},
		[394493] = {
			["source"] = "Ko'jo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186367,
		},
		[376063] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Smoldering Hellion",
			["npcID"] = 191510,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[197141] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Wrangler",
			["npcID"] = 100216,
		},
		[412922] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spurlok, Timesworn Sentinel",
			["npcID"] = 205158,
		},
		[336910] = {
			["source"] = "Xantuth the Blighted",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162872,
		},
		[316439] = {
			["source"] = "Swarmguard Kzaz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155723,
		},
		[384014] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[15653] = {
			["source"] = "Nightmare Wyrmkin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5280,
		},
		[406778] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Blaze Hound",
			["npcID"] = 205234,
		},
		[211477] = {
			["source"] = "Legion Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104277,
		},
		[385172] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wind Serpent",
			["npcID"] = 191645,
		},
		[386063] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[306953] = {
			["encounterName"] = "Shad'har the Insatiable",
			["source"] = "Shad'har the Insatiable",
			["npcID"] = 157231,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2335,
		},
		[114864] = {
			["source"] = "Bored Student",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59614,
		},
		[392207] = {
			["source"] = "Gareed",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200722,
		},
		[410629] = {
			["source"] = "Scalecommander Sarkareth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199984,
		},
		[278755] = {
			["source"] = "Befouled Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133685,
		},
		[79971] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drill Sergeant Magnus",
			["npcID"] = 48923,
		},
		[310298] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sinister Soulcarver",
			["npcID"] = 162717,
		},
		[197144] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Wrangler",
			["npcID"] = 100216,
		},
		[355349] = {
			["source"] = "Reality Breacher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184185,
		},
		[188046] = {
			["source"] = "Denizen of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198489,
		},
		[200216] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reaves",
			["npcID"] = 101462,
		},
		[160285] = {
			["source"] = "Goren Gouger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80690,
		},
		[404496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ebon Lieutenant",
			["npcID"] = 201383,
		},
		[260741] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Briar",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131825,
		},
		[167385] = {
			["source"] = "Dungeoneer's Training Dummy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194644,
		},
		[124048] = {
			["source"] = "Osul Sharphorn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 60647,
		},
		[157053] = {
			["source"] = "Durag the Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77890,
		},
		[199193] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Dantalionax",
			["npcID"] = 98970,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1835,
		},
		[174735] = {
			["source"] = "Grulkor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86157,
		},
		[290053] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Unexploded Ordnance",
			["encounterID"] = 2281,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 149535,
		},
		[427252] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[31717] = {
			["encounterName"] = "The Black Stalker",
			["source"] = "The Black Stalker",
			["npcID"] = 17882,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1948,
		},
		[396751] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gahz'raxes",
			["npcID"] = 200537,
		},
		[193826] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[420881] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Ashwarden",
			["npcID"] = 208659,
		},
		[147998] = {
			["source"] = "Blazebound Chanter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72897,
		},
		[200218] = {
			["source"] = "Reaves",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101462,
		},
		[394261] = {
			["source"] = "Gurblbrblr the Invader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197211,
		},
		[154442] = {
			["encounterName"] = "Ner'zhul",
			["source"] = "Ner'zhul",
			["npcID"] = 76407,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1682,
		},
		[166543] = {
			["encounterName"] = "Nitrogg Thundertower",
			["source"] = "Blackrock Turret",
			["encounterID"] = 1732,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82721,
		},
		[31407] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Spearman",
			["npcID"] = 17729,
		},
		[172574] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ironwing Flamespitter",
			["npcID"] = 86373,
		},
		[314400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Living Blood",
			["npcID"] = 159312,
		},
		[385569] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[153679] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74787,
		},
		[386072] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Intinosa",
			["npcID"] = 195354,
		},
		[412693] = {
			["source"] = "Magtembo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200111,
		},
		[387748] = {
			["source"] = "Lurgan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201540,
		},
		[375834] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[394264] = {
			["source"] = "Hyenamaster Durgun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186515,
		},
		[148001] = {
			["source"] = "Blazebound Chanter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72897,
		},
		[390169] = {
			["source"] = "Magmaclaw Raider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187218,
		},
		[157001] = {
			["source"] = "Durag the Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77890,
		},
		[400407] = {
			["source"] = "Nidharr",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201310,
		},
		[396313] = {
			["source"] = "Nokhud Stormcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185147,
		},
		[291878] = {
			["encounterName"] = "King Mechagon",
			["source"] = "Aerial Unit R-21/X",
			["encounterID"] = 2260,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150396,
		},
		[343072] = {
			["source"] = "Heraclor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 172025,
		},
		[148003] = {
			["source"] = "Eternal Kilnmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72896,
		},
		[169418] = {
			["source"] = "Twisted Abomination",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84767,
		},
		[387224] = {
			["source"] = "Dracthyr Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201069,
		},
		[161314] = {
			["source"] = "Mandrakor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84406,
		},
		[61353] = {
			["source"] = "Dagna Flintlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29476,
		},
		[144932] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderlord Invader",
			["npcID"] = 74329,
		},
		[393411] = {
			["source"] = "Rakkesh of the Flow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193849,
		},
		[61326] = {
			["source"] = "Azure Scale-Binder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26735,
		},
		[148004] = {
			["source"] = "Eternal Kilnmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72896,
		},
		[396316] = {
			["source"] = "Nokhud Huntmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185353,
		},
		[169613] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83846,
		},
		[298025] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Wraith",
			["npcID"] = 158707,
		},
		[38033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Spitespeaker",
			["npcID"] = 89025,
		},
		[396317] = {
			["source"] = "Loamas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199030,
		},
		[195103] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Wandering Shellback",
			["npcID"] = 91785,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1810,
		},
		[196127] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mak'rana Siltwalker",
			["npcID"] = 91790,
		},
		[304169] = {
			["source"] = "Aqir Mindhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153532,
		},
		[412700] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magtembo",
			["npcID"] = 200111,
		},
		[192138] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Hatecoil Crestrider",
			["npcID"] = 97269,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1810,
		},
		[384032] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amethyzar the Glittering",
			["npcID"] = 193132,
		},
		[32329] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Underbog Shambler",
			["npcID"] = 17871,
		},
		[196126] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Feltotem Demonkindre",
			["npcID"] = 96615,
		},
		[359459] = {
			["source"] = "Empowered Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183947,
		},
		[172578] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Melded Berserker",
			["npcID"] = 86372,
		},
		[382712] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186229,
		},
		[16587] = {
			["source"] = "Vile Tutor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8548,
		},
		[150054] = {
			["source"] = "Pale Flinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76465,
		},
		[413806] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cenrrrn Cirrgl Tideshifter",
			["npcID"] = 204516,
		},
		[410655] = {
			["source"] = "Scalecommander Sarkareth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199984,
		},
		[408605] = {
			["source"] = "Sundered Devastator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198869,
		},
		[374544] = {
			["source"] = "Fetid Rotsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186226,
		},
		[271406] = {
			["source"] = "Maw of Shul-Nagruth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128610,
		},
		[153528] = {
			["encounterName"] = "Roogug",
			["source"] = "Roogug",
			["encounterID"] = 438,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74948,
		},
		[420895] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[398370] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Calcifying Crawler",
			["npcID"] = 203342,
		},
		[334538] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arch-Suppressor Laguas",
			["npcID"] = 185019,
		},
		[79850] = {
			["source"] = "Aquarius the Unbound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 47009,
		},
		[167092] = {
			["source"] = "Cackling Pyromaniac",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79510,
		},
		[43665] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Heartsplitter",
			["npcID"] = 24071,
		},
		[314405] = {
			["source"] = "Ramkahen Citizen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157795,
		},
		[369703] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[419052] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Future Self",
			["npcID"] = 208959,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[395827] = {
			["source"] = "Parched Broadhoof Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194352,
		},
		[406564] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ookbeard",
			["npcID"] = 200956,
		},
		[361513] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["source"] = "Dausegne",
			["encounterID"] = 2540,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181224,
		},
		[298033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "SI:7 Informant",
			["npcID"] = 156795,
		},
		[260635] = {
			["source"] = "Queen Tzxi'kik",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128974,
		},
		[407296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Erupting Shadowflame",
			["npcID"] = 199838,
		},
		[39058] = {
			["source"] = "Grannok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 93057,
		},
		[404517] = {
			["source"] = "Vakan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199855,
		},
		[300082] = {
			["source"] = "Volatile Tide Surger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150371,
		},
		[56937] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26930,
		},
		[173172] = {
			["source"] = "Turbulent Steamfury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81685,
		},
		[396327] = {
			["source"] = "Glacias",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199028,
		},
		[406566] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Primal Lava Elemental",
			["npcID"] = 202264,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[408614] = {
			["source"] = "Sundered Devastator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198869,
		},
		[316463] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "Mindgate",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158374,
		},
		[87179] = {
			["source"] = "Dalaran Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2358,
		},
		[20811] = {
			["source"] = "Magistrate Burnside",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 47790,
		},
		[424997] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Fiery Treant",
			["encounterID"] = 2731,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208459,
		},
		[209443] = {
			["encounterName"] = "Xavius",
			["source"] = "Xavius",
			["npcID"] = 103769,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1864,
		},
		[306228] = {
			["encounterName"] = "Dark Inquisitor Xanesh",
			["source"] = "Flayed Soul",
			["npcID"] = 157005,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2328,
		},
		[195109] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Stormweaver",
			["npcID"] = 91783,
		},
		[310324] = {
			["encounterName"] = "Vexiona",
			["source"] = "Vexiona",
			["npcID"] = 157354,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2336,
		},
		[377900] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Skullhauler",
			["npcID"] = 199298,
		},
		[396330] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Sentry",
			["npcID"] = 185357,
		},
		[386700] = {
			["source"] = "Rimebound Froststalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199795,
		},
		[192135] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Hatecoil Shellbreaker",
			["npcID"] = 97264,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1810,
		},
		[195108] = {
			["source"] = "Hatecoil Stormweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111638,
		},
		[298691] = {
			["encounterName"] = "Alleria Windrunner",
			["source"] = "Alleria Windrunner",
			["encounterID"] = 2338,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152718,
		},
		[308278] = {
			["encounterName"] = "Alleria Windrunner",
			["source"] = "Alleria Windrunner",
			["encounterID"] = 2338,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152718,
		},
		[305515] = {
			["encounterName"] = "Ravnyr",
			["source"] = "Ravnyr",
			["npcID"] = 156501,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2326,
		},
		[336947] = {
			["source"] = "Unbreakable Urtz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162853,
		},
		[273467] = {
			["source"] = "Nerubis Invader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145660,
		},
		[378420] = {
			["source"] = "Provoked Geode",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189040,
		},
		[375068] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Lava Tentacles",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190023,
		},
		[218755] = {
			["isChanneled"] = true,
			["source"] = "Festerhide Grizzly",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 95779,
		},
		[387317] = {
			["source"] = "Ruby Culler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190093,
		},
		[68895] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spiteful Apparition",
			["npcID"] = 36551,
		},
		[408620] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Obsidian Guard",
			["npcID"] = 200836,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[400430] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[420907] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[386096] = {
			["source"] = "Screechflight Cursewife",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184816,
		},
		[310329] = {
			["encounterName"] = "Drest'agath",
			["source"] = "Drest'agath",
			["npcID"] = 157602,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2343,
		},
		[32330] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lykul Wasp",
			["npcID"] = 17732,
		},
		[404713] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[296182] = {
			["source"] = "Venomous Snapdragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152356,
		},
		[351285] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prince Renathal",
			["npcID"] = 178006,
		},
		[394288] = {
			["source"] = "Gurblbrblr the Invader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197211,
		},
		[355381] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reality Breacher",
			["npcID"] = 184185,
		},
		[382002] = {
			["source"] = "Apex Blazewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193291,
		},
		[310331] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "Mind's Eye",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158122,
		},
		[279615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Iron Grenadier",
			["npcID"] = 131814,
		},
		[260322] = {
			["source"] = "Nol'ixwan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130741,
		},
		[390194] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uranto the Swift",
			["npcID"] = 191103,
		},
		[365805] = {
			["encounterName"] = "Anduin Wrynn",
			["source"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181954,
		},
		[172588] = {
			["source"] = "Melded Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86372,
		},
		[396069] = {
			["source"] = "Primal Earthshard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185647,
		},
		[43667] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Prince Keleseth",
			["npcID"] = 23953,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2026,
		},
		[279614] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Iron Grenadier",
			["npcID"] = 131814,
		},
		[407733] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[259618] = {
			["source"] = "Vicious Diemetradon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130756,
		},
		[316477] = {
			["source"] = "Ysedra the Darkener",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157483,
		},
		[318525] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shath'Yar Scribe",
			["npcID"] = 163690,
		},
		[392239] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mosshair Mammoth",
			["npcID"] = 193395,
		},
		[422961] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["encounterID"] = 2709,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200926,
		},
		[199210] = {
			["source"] = "Valarjar Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96640,
		},
		[167470] = {
			["source"] = "Thrall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78553,
		},
		[171773] = {
			["source"] = "Lorry Warmheart",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159211,
		},
		[3110] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nalmir",
			["npcID"] = 416,
		},
		[314433] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Living Blood",
			["npcID"] = 159312,
		},
		[102173] = {
			["encounterName"] = "Echo of Tyrande",
			["source"] = "Echo of Tyrande",
			["encounterID"] = 1884,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54544,
		},
		[377912] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Sentry",
			["npcID"] = 192680,
		},
		[289859] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnomish Commando",
			["npcID"] = 148442,
		},
		[406581] = {
			["encounterName"] = "Echo of Neltharion",
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Lava Elemental",
			["npcID"] = 202264,
		},
		[359483] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["source"] = "Dausegne",
			["encounterID"] = 2540,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181224,
		},
		[336958] = {
			["source"] = "Unbreakable Urtz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162853,
		},
		[169519] = {
			["source"] = "Thornling Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81730,
		},
		[422964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[400439] = {
			["source"] = "Wyrmslayer Angvardi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201013,
		},
		[64145] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Crusher Tentacle",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33966,
		},
		[429108] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Cycle Warden",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209800,
		},
		[398392] = {
			["source"] = "Sulfira Wanderling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205808,
		},
		[63032] = {
			["source"] = "Keeper Heartwise",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33443,
		},
		[193069] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felsworn Infester",
			["npcID"] = 96587,
		},
		[408805] = {
			["source"] = "Incorporeal Being",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204560,
		},
		[422966] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nolaki",
			["npcID"] = 208706,
		},
		[377017] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[386107] = {
			["source"] = "Screechflight Hexclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183995,
		},
		[396346] = {
			["source"] = "Sirena the Fangbreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185907,
		},
		[398394] = {
			["source"] = "Deep Krolusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203898,
		},
		[412900] = {
			["source"] = "Zakajz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198953,
		},
		[415435] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coalesced Moment",
			["npcID"] = 206064,
		},
		[256551] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Sawtooth Shark",
			["npcID"] = 129359,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[68899] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["npcID"] = 36502,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2007,
		},
		[400443] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crumbling Scoria",
			["npcID"] = 201339,
		},
		[328772] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vault Weaver",
			["npcID"] = 200375,
		},
		[396348] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gutchewer Bear",
			["npcID"] = 197134,
		},
		[11431] = {
			["encounterName"] = "Lord Pythas",
			["source"] = "Lord Pythas",
			["npcID"] = 3670,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 588,
		},
		[375871] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[328773] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vault Weaver",
			["npcID"] = 200375,
		},
		[396349] = {
			["source"] = "Bloodbeak the Ravenous",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201535,
		},
		[398397] = {
			["source"] = "Magmaclaw Supplicant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203933,
		},
		[163379] = {
			["encounterName"] = "Grimrail Enforcers",
			["source"] = "Bombsquad",
			["encounterID"] = 1748,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80875,
		},
		[365632] = {
			["source"] = "Dominated Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184742,
		},
		[396350] = {
			["source"] = "Bloodbeak the Ravenous",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201535,
		},
		[375870] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[200238] = {
			["encounterName"] = "Shade of Xavius",
			["source"] = "Shade of Xavius",
			["encounterID"] = 1839,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 99192,
		},
		[420925] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[396351] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[422972] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valunei",
			["npcID"] = 208709,
		},
		[196144] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mak'rana Siltwalker",
			["npcID"] = 91790,
		},
		[271439] = {
			["source"] = "Bombarding Zeppelin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136957,
		},
		[429116] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Inquisitor Fairbell",
			["npcID"] = 211930,
		},
		[158498] = {
			["source"] = "Windroc",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79398,
		},
		[392257] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thousandmile",
			["npcID"] = 193676,
		},
		[377923] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Spark",
			["npcID"] = 186624,
		},
		[411916] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Devourer",
			["npcID"] = 205673,
		},
		[390210] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudgatu",
			["npcID"] = 197346,
		},
		[112084] = {
			["encounterName"] = "Lorewalker Stonestep",
			["source"] = "Zao Sunseeker",
			["encounterID"] = 1417,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58826,
		},
		[384065] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amethyzar the Glittering",
			["npcID"] = 193132,
		},
		[393615] = {
			["source"] = "Huntmaster Amaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188715,
		},
		[191026] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirana Starlight",
			["npcID"] = 99451,
		},
		[192050] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Serpentrix",
			["npcID"] = 91808,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1813,
		},
		[211501] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enchanted Broodling",
			["npcID"] = 105876,
		},
		[396355] = {
			["source"] = "Ritual Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186787,
		},
		[36246] = {
			["source"] = "Station Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 51879,
		},
		[209033] = {
			["source"] = "Duskwatch Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111563,
		},
		[271443] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cornered Operative",
			["npcID"] = 142072,
		},
		[404209] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Veltrax",
			["npcID"] = 200904,
		},
		[394466] = {
			["source"] = "Primordial Hail",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189039,
		},
		[80003] = {
			["source"] = "Worgen Commando",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45861,
		},
		[328781] = {
			["source"] = "Vault Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199126,
		},
		[406752] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Betrayer",
			["npcID"] = 200828,
		},
		[260651] = {
			["source"] = "Karkinus the Capsizer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200907,
		},
		[351307] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Accursed",
			["npcID"] = 176572,
		},
		[393458] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malifron",
			["npcID"] = 190278,
		},
		[417497] = {
			["source"] = "Rude Crude",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206617,
		},
		[316496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Heartpiercer",
			["npcID"] = 162305,
		},
		[377927] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Feather",
			["npcID"] = 192690,
		},
		[160312] = {
			["source"] = "Sargerei Cleric",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77134,
		},
		[396360] = {
			["source"] = "Ritual Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186787,
		},
		[7124] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lost Son of Arugal",
			["npcID"] = 47015,
		},
		[269399] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Vol'zith the Whisperer",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134069,
		},
		[377930] = {
			["source"] = "Smoldering Feather",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192692,
		},
		[420933] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["encounterID"] = 2737,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208478,
		},
		[99618] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamewaker Cauterizer",
			["npcID"] = 53639,
		},
		[196512] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95674,
		},
		[394464] = {
			["source"] = "Piercer Gigra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186511,
		},
		[210150] = {
			["encounterName"] = "Naraxas",
			["source"] = "Naraxas",
			["encounterID"] = 1792,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91005,
		},
		[308308] = {
			["source"] = "Fallen Heartpiercer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158092,
		},
		[425030] = {
			["source"] = "Zaqali Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210172,
		},
		[14887] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Firebrand Darkweaver",
			["npcID"] = 9261,
		},
		[164261] = {
			["source"] = "Stonemaul Slaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75835,
		},
		[365646] = {
			["source"] = "Subjugator Zeltoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184651,
		},
		[302166] = {
			["source"] = "HK-8 Aerial Oppression Unit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150190,
		},
		[304214] = {
			["source"] = "Yox'ith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155706,
		},
		[150677] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74790,
		},
		[260654] = {
			["source"] = "Karkinus the Capsizer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200907,
		},
		[114646] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Haunting Sha",
			["npcID"] = 59555,
		},
		[39849] = {
			["encounterName"] = "Illidan Stormrage",
			["source"] = "Illidan Stormrage",
			["encounterID"] = 609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 22917,
		},
		[420937] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["npcID"] = 208365,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2728,
		},
		[79886] = {
			["source"] = "Instructor Rufus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48922,
		},
		[425033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ignit the Firebranded",
			["npcID"] = 209620,
		},
		[195253] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Restless Tides",
			["npcID"] = 97173,
		},
		[298073] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kosarus the Fallen",
			["npcID"] = 185016,
		},
		[365649] = {
			["source"] = "Sacred Matrix Automa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184734,
		},
		[384079] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amethyzar the Glittering",
			["npcID"] = 193132,
		},
		[31948] = {
			["encounterName"] = "Rokmar the Crackler",
			["source"] = "Rokmar the Crackler",
			["npcID"] = 17991,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1941,
		},
		[396366] = {
			["source"] = "Tikarr Frostclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201542,
		},
		[390223] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flashfrost Tarasek",
			["npcID"] = 187089,
		},
		[425035] = {
			["source"] = "Ancient Core Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210288,
		},
		[320600] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huwerath",
			["npcID"] = 162965,
		},
		[202295] = {
			["source"] = "Feltongue Corruptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116784,
		},
		[351459] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Woebringer",
			["npcID"] = 176573,
		},
		[392272] = {
			["source"] = "Grove Forager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186457,
		},
		[361556] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarachnid",
			["npcID"] = 181685,
		},
		[396991] = {
			["source"] = "Drakonid Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187240,
		},
		[267360] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Vol'zith the Whisperer",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134069,
		},
		[200248] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Arcanist",
			["npcID"] = 98280,
		},
		[401319] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[392273] = {
			["source"] = "Ergburk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194409,
		},
		[195129] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Crusher",
			["npcID"] = 91782,
		},
		[204344] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blacktalon Assassin",
			["npcID"] = 191955,
		},
		[276991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ogre Overseer",
			["npcID"] = 156676,
		},
		[396370] = {
			["source"] = "Rimebound Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195836,
		},
		[403671] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[159290] = {
			["source"] = "Solar Familiar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76097,
		},
		[369750] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Scaleripper",
			["npcID"] = 187602,
		},
		[363607] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["source"] = "Domination Core",
			["encounterID"] = 2540,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181244,
		},
		[154175] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["npcID"] = 75452,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1679,
		},
		[163390] = {
			["encounterName"] = "Grimrail Enforcers",
			["source"] = "Neesa Nox",
			["encounterID"] = 1748,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80808,
		},
		[369751] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Soldier",
			["npcID"] = 186604,
		},
		[278919] = {
			["source"] = "Decrepit Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146227,
		},
		[173307] = {
			["source"] = "Thunderlord Wrangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83390,
		},
		[396367] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197142,
		},
		[388316] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oppressive Artificer",
			["npcID"] = 184444,
		},
		[362806] = {
			["encounterName"] = "Rygelon",
			["source"] = "Rygelon",
			["encounterID"] = 2549,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182777,
		},
		[84037] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["npcID"] = 40792,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[153521] = {
			["source"] = "Adept of the Dawn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79467,
		},
		[172606] = {
			["source"] = "Goc",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85580,
		},
		[420947] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208363,
		},
		[155961] = {
			["source"] = "Slavemaster Ok'mok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75864,
		},
		[392279] = {
			["source"] = "Wild Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194089,
		},
		[328799] = {
			["source"] = "Veteran Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160959,
		},
		[141427] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spiteleaf Squirt",
			["npcID"] = 84655,
		},
		[203323] = {
			["source"] = "Gornoth the Lost",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103656,
		},
		[392280] = {
			["source"] = "Kaurdyth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197835,
		},
		[164592] = {
			["source"] = "Bloodmaul Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75198,
		},
		[268030] = {
			["source"] = "Tidesage Spiritualist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136186,
		},
		[166464] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[425045] = {
			["source"] = "Splinterlimb",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209365,
		},
		[260258] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Fragment",
			["npcID"] = 126538,
		},
		[79860] = {
			["source"] = "Forsaken Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46048,
		},
		[275560] = {
			["source"] = "Blight Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146564,
		},
		[196157] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Shadowmoon Technician",
			["npcID"] = 99645,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[315697] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zara'thik Soldier",
			["npcID"] = 162885,
		},
		[392283] = {
			["source"] = "Wild Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191413,
		},
		[166465] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[384092] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Timetender Athekk",
			["npcID"] = 193042,
		},
		[82760] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Neferset Darkcaster",
			["npcID"] = 44982,
		},
		[412761] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[365661] = {
			["source"] = "Subjugator Zeltoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184651,
		},
		[392284] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ravenous Proto-Drake",
			["npcID"] = 193145,
		},
		[361568] = {
			["encounterName"] = "Prototype Pantheon",
			["source"] = "Prototype of Renewal",
			["encounterID"] = 2544,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181546,
		},
		[366001] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["source"] = "Acquisitions Automa",
			["encounterID"] = 2539,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182074,
		},
		[150448] = {
			["source"] = "Pale Flinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76465,
		},
		[372296] = {
			["source"] = "Irontorch Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189466,
		},
		[160323] = {
			["source"] = "Pale Spider Worshipper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80530,
		},
		[377270] = {
			["source"] = "Cliffdrip Wavemender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189814,
		},
		[34163] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Underbog Shambler",
			["npcID"] = 17871,
		},
		[384095] = {
			["source"] = "Ohuna Companion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194254,
		},
		[275110] = {
			["source"] = "Bloodbeak the Ravenous",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201535,
		},
		[363772] = {
			["encounterName"] = "The Jailer",
			["source"] = "The Jailer",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180990,
		},
		[367484] = {
			["source"] = "Claw Fighter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185508,
		},
		[11981] = {
			["source"] = "Hakkari Sapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8336,
		},
		[48280] = {
			["source"] = "Blingtron 5000",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77789,
		},
		[194112] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[106823] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["npcID"] = 56732,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[360845] = {
			["encounterName"] = "Prototype Pantheon",
			["source"] = "Prototype of Duty",
			["encounterID"] = 2544,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181551,
		},
		[271588] = {
			["source"] = "Kael'thas Sunstrider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144913,
		},
		[311544] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sanguimar",
			["npcID"] = 159767,
		},
		[386146] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Intinosa",
			["npcID"] = 195354,
		},
		[200256] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Minion",
			["npcID"] = 101549,
		},
		[209471] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Nightmare Ichor",
			["npcID"] = 105721,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1873,
		},
		[177731] = {
			["encounterName"] = "Witherbark",
			["source"] = "Enchanted Waters",
			["encounterID"] = 1746,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88862,
		},
		[275568] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glimmerhoof Cloudstrider",
			["npcID"] = 160606,
		},
		[425054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Portalkeeper",
			["npcID"] = 211756,
		},
		[366187] = {
			["source"] = "Hired Muscle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183499,
		},
		[119922] = {
			["encounterName"] = "Trial of the King",
			["source"] = "Kuai the Brute",
			["encounterID"] = 1442,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61442,
		},
		[275569] = {
			["source"] = "Glimmerhoof Cloudstrider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160606,
		},
		[175684] = {
			["source"] = "Sunclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86137,
		},
		[70074] = {
			["source"] = "Crown Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 114275,
		},
		[173479] = {
			["source"] = "Cannon Turret",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86690,
		},
		[260666] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilded Priestess",
			["npcID"] = 132126,
		},
		[275570] = {
			["source"] = "Vilebone Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134852,
		},
		[390245] = {
			["source"] = "Embertooth Spearhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188725,
		},
		[396388] = {
			["source"] = "Glacias",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199028,
		},
		[99625] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamewaker Cauterizer",
			["npcID"] = 53121,
		},
		[299437] = {
			["source"] = "Malfunctioning Scraphound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151301,
		},
		[199034] = {
			["source"] = "Valarjar Aspirant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101637,
		},
		[306289] = {
			["encounterName"] = "Wrathion",
			["source"] = "Wrathion",
			["encounterID"] = 2329,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156818,
		},
		[275572] = {
			["source"] = "Binder Sa'thress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134341,
		},
		[34984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Ray",
			["npcID"] = 21128,
		},
		[400486] = {
			["isChanneled"] = true,
			["source"] = "Zaqali Shrineguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 202803,
		},
		[214593] = {
			["source"] = "Amberfall Greatstag",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107758,
		},
		[365676] = {
			["source"] = "Sacred Matrix Automa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184734,
		},
		[408677] = {
			["source"] = "Sundered Scaleguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198871,
		},
		[193092] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 94960,
		},
		[153161] = {
			["source"] = "Jungle Wastetalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86423,
		},
		[275574] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Awakened Tidesage",
			["npcID"] = 137220,
		},
		[316532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Willing Sacrifice",
			["npcID"] = 162647,
		},
		[377962] = {
			["source"] = "Violent Yeti",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197178,
		},
		[396392] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dueling Student",
			["npcID"] = 199377,
		},
		[20815] = {
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4289,
		},
		[400488] = {
			["isChanneled"] = true,
			["source"] = "Zaqali Shrineguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 202803,
		},
		[193093] = {
			["encounterName"] = "King Deepbeard",
			["source"] = "King Deepbeard",
			["npcID"] = 91797,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1812,
		},
		[265337] = {
			["source"] = "Gorestained Piglet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135048,
		},
		[267385] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Tentacle",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135987,
		},
		[425062] = {
			["source"] = "Zaqali Steelshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210173,
		},
		[410728] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sabellian",
			["npcID"] = 201411,
		},
		[59800] = {
			["encounterName"] = "Ionar",
			["source"] = "Ionar",
			["encounterID"] = 1984,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28546,
		},
		[365678] = {
			["source"] = "Sacred Matrix Automa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184734,
		},
		[200261] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soul-Torn Champion",
			["npcID"] = 98243,
		},
		[198934] = {
			["source"] = "Valarjar Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95834,
		},
		[412777] = {
			["isChanneled"] = true,
			["source"] = "Kith'ix",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198952,
		},
		[55704] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29981,
		},
		[371824] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Custodial Protector",
			["npcID"] = 192694,
		},
		[164426] = {
			["encounterName"] = "Fleshrender Nok'gar",
			["source"] = "Fleshrender Nok'gar",
			["encounterID"] = 1749,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81305,
		},
		[289914] = {
			["source"] = "Vessel of Bwonsamdi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148673,
		},
		[115010] = {
			["encounterName"] = "Taran Zhu",
			["source"] = "Gripping Hatred",
			["encounterID"] = 1306,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59804,
		},
		[400492] = {
			["source"] = "Zaqali Cindershaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199824,
		},
		[209477] = {
			["source"] = "Mana Wyrm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105703,
		},
		[76590] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless Watcher",
			["npcID"] = 40936,
		},
		[373872] = {
			["source"] = "Monstrous Decay",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186227,
		},
		[310392] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Synod",
			["npcID"] = 159190,
		},
		[75645] = {
			["source"] = "Corla, Herald of Twilight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39679,
		},
		[153794] = {
			["encounterName"] = "Rukhran",
			["source"] = "Rukhran",
			["encounterID"] = 1700,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76143,
		},
		[365682] = {
			["encounterName"] = "Artificer Xy'mox",
			["source"] = "Cartel Overseer",
			["encounterID"] = 2553,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184792,
		},
		[192072] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Warlord Parjesh",
			["npcID"] = 91784,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1810,
		},
		[160332] = {
			["source"] = "Shiverblood Slasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78758,
		},
		[57753] = {
			["source"] = "Onyx Blaze Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30681,
		},
		[390256] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Apprentice",
			["npcID"] = 192340,
		},
		[312537] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deeplord Zrihj",
			["npcID"] = 154559,
		},
		[271487] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tentacle of Shul-Nagruth",
			["npcID"] = 128609,
		},
		[396400] = {
			["source"] = "Glacias",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199028,
		},
		[406639] = {
			["source"] = "Response Team Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202318,
		},
		[192073] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Warlord Parjesh",
			["npcID"] = 91784,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1810,
		},
		[377971] = {
			["source"] = "Massive Thresher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191951,
		},
		[296060] = {
			["source"] = "Snapling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145339,
		},
		[369781] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184582,
		},
		[375924] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184581,
		},
		[304253] = {
			["source"] = "Blackwater Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155272,
		},
		[388211] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oshigol",
			["npcID"] = 193235,
		},
		[8873] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snarlflare",
			["npcID"] = 14272,
		},
		[387337] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Earthrazer",
			["npcID"] = 203739,
		},
		[394355] = {
			["source"] = "Frigidpelt Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193063,
		},
		[298111] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crushtide Orb",
			["npcID"] = 153500,
		},
		[296510] = {
			["source"] = "Crawling Corruption",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152704,
		},
		[365686] = {
			["source"] = "Overthrown Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184533,
		},
		[375919] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Scythid",
			["npcID"] = 191104,
		},
		[68799] = {
			["source"] = "Apothecary Frye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36272,
		},
		[166478] = {
			["source"] = "Tormented Soul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82647,
		},
		[384292] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Thunder Caller",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194647,
		},
		[406644] = {
			["source"] = "Response Team Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202318,
		},
		[355450] = {
			["source"] = "Fierce Gromit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 178528,
		},
		[308352] = {
			["source"] = "Anima Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155970,
		},
		[294491] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Timeling",
			["npcID"] = 186479,
		},
		[359547] = {
			["source"] = "Dominated Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185314,
		},
		[328831] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Undying Blademaster",
			["npcID"] = 182268,
		},
		[64153] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Corruptor Tentacle",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33985,
		},
		[375929] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[176718] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wastewander Tracker",
			["npcID"] = 154461,
		},
		[38556] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkspear Headhunter",
			["npcID"] = 74228,
		},
		[429172] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["npcID"] = 40788,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1046,
		},
		[256581] = {
			["source"] = "Scheming Street Scamp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129394,
		},
		[106797] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["npcID"] = 56732,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[265352] = {
			["source"] = "Blight Toad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135052,
		},
		[308355] = {
			["source"] = "Dokani Bloodshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153106,
		},
		[410743] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Ignited Plume",
			["npcID"] = 205167,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[369788] = {
			["source"] = "Qalashi Drakehunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197788,
		},
		[273544] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brother Meller",
			["npcID"] = 154447,
		},
		[227913] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felspite Dominator",
			["npcID"] = 102788,
		},
		[309666] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Onyx Warserpent",
			["npcID"] = 153208,
		},
		[394362] = {
			["source"] = "Rasnar the War Ender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193232,
		},
		[277308] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hex Priest Haraka",
			["npcID"] = 141959,
		},
		[381592] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutal Motivator",
			["npcID"] = 184453,
		},
		[59716] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thrall",
			["npcID"] = 76242,
		},
		[260879] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[369921] = {
			["source"] = "Eldoren the Reborn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193234,
		},
		[84804] = {
			["source"] = "Forsaken Catapult",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45282,
		},
		[235310] = {
			["source"] = "Mistress Matilda",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118511,
		},
		[386173] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["npcID"] = 194181,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2562,
		},
		[429176] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilgoblin Aquamage",
			["npcID"] = 40943,
		},
		[150100] = {
			["source"] = "Razorfen Huntmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74552,
		},
		[83780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pygmy Scout",
			["npcID"] = 44897,
		},
		[209485] = {
			["source"] = "Arcane Manifestation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105704,
		},
		[308361] = {
			["source"] = "Dokani Bloodshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153106,
		},
		[38557] = {
			["source"] = "Thaelin Darkanvil",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80886,
		},
		[196175] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mak'rana Hardshell",
			["npcID"] = 95947,
		},
		[404679] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mad-Eye Carrey",
			["npcID"] = 201181,
		},
		[361676] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["source"] = "Halondrus",
			["encounterID"] = 2529,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180906,
		},
		[414844] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Headless Horseman",
			["npcID"] = 207438,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2725,
		},
		[375937] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[317894] = {
			["source"] = "Stoneborn Rebel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160823,
		},
		[396415] = {
			["source"] = "Galestrike Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190061,
		},
		[300171] = {
			["source"] = "Heavy Scrapbot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150276,
		},
		[406652] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ookbeard",
			["npcID"] = 200956,
		},
		[213582] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sinister Shrieker",
			["npcID"] = 101900,
		},
		[429180] = {
			["source"] = "Cycle Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210518,
		},
		[398464] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystal Wormling",
			["npcID"] = 205613,
		},
		[398463] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magma Burster",
			["npcID"] = 200801,
		},
		[257608] = {
			["encounterName"] = "The Sand Queen",
			["source"] = "The Sand Queen",
			["npcID"] = 127479,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2101,
		},
		[273547] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cornered Operative",
			["npcID"] = 142072,
		},
		[404442] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vraken the Hunter",
			["npcID"] = 200584,
		},
		[421059] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[399086] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[253548] = {
			["isChanneled"] = true,
			["source"] = "Dazar'ai Augur",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 122972,
		},
		[191058] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirana Starlight",
			["npcID"] = 99451,
		},
		[384132] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[258634] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashvane Flamecaster",
			["npcID"] = 127488,
		},
		[308432] = {
			["source"] = "Forge-Guard Hurrul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158158,
		},
		[308366] = {
			["source"] = "Inquisitor Darkspeak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158136,
		},
		[294362] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deathspeaker",
			["npcID"] = 155908,
		},
		[160375] = {
			["source"] = "Maggle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78896,
		},
		[306319] = {
			["encounterName"] = "Dark Inquisitor Xanesh",
			["source"] = "Dark Inquisitor Xanesh",
			["npcID"] = 156575,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2328,
		},
		[114571] = {
			["encounterName"] = "Lorewalker Stonestep",
			["source"] = "Strife",
			["npcID"] = 59051,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1417,
		},
		[375943] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[201298] = {
			["encounterName"] = "Dresaron",
			["source"] = "Bloodtainted Burster",
			["encounterID"] = 1838,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100532,
		},
		[11922] = {
			["source"] = "Constrictor Vine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130272,
		},
		[38558] = {
			["source"] = "Hillsbrad Miner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2269,
		},
		[102193] = {
			["encounterName"] = "Echo of Tyrande",
			["source"] = "Echo of Tyrande",
			["encounterID"] = 1884,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54544,
		},
		[152893] = {
			["source"] = "Herald of Sunrise",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78933,
		},
		[394436] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shas'ith",
			["npcID"] = 189822,
		},
		[215633] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thistleleaf Menace",
			["npcID"] = 108259,
		},
		[375945] = {
			["source"] = "Fleecepelt Argali",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187975,
		},
		[112944] = {
			["encounterName"] = "Hoptallus",
			["source"] = "Hoptallus",
			["encounterID"] = 1413,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56717,
		},
		[396423] = {
			["source"] = "Galestrike Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190061,
		},
		[398471] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[253517] = {
			["source"] = "Dazar'ai Confessor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122973,
		},
		[49309] = {
			["source"] = "Gold Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 32340,
		},
		[412806] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Dragon",
			["npcID"] = 205804,
		},
		[365708] = {
			["source"] = "Manifestor Krugan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185363,
		},
		[377991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Sentry",
			["npcID"] = 192680,
		},
		[160345] = {
			["source"] = "Pale Spider Worshipper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80530,
		},
		[373897] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189531,
		},
		[203348] = {
			["source"] = "Gornoth the Lost",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103656,
		},
		[256589] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Raoul",
			["npcID"] = 126847,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[410760] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Vortex",
			["npcID"] = 45912,
		},
		[384134] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192791,
		},
		[260684] = {
			["source"] = "Zuvembi Brewer Zekal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130260,
		},
		[159322] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frostwolf Shaman",
			["npcID"] = 74622,
		},
		[369806] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[265371] = {
			["source"] = "Enthralled Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131585,
		},
		[375950] = {
			["source"] = "Primalist Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190377,
		},
		[392332] = {
			["source"] = "Zumakh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194624,
		},
		[265372] = {
			["source"] = "Bewitched Captain",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131587,
		},
		[255567] = {
			["source"] = "T'lonja",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128455,
		},
		[298528] = {
			["encounterName"] = "Oblivion Elemental",
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Swarmer",
			["npcID"] = 153526,
		},
		[265368] = {
			["source"] = "Bewitched Captain",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131587,
		},
		[388623] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["npcID"] = 196482,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2563,
		},
		[384385] = {
			["source"] = "Frostsnout Bear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199354,
		},
		[15785] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["source"] = "Mana Leech",
			["npcID"] = 19306,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1899,
		},
		[128304] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shado-Pan Disciple",
			["npcID"] = 58198,
		},
		[408767] = {
			["source"] = "Ritualmaster Skarna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202274,
		},
		[396430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malfunctioning Protector",
			["npcID"] = 198343,
		},
		[64156] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Corruptor Tentacle",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33985,
		},
		[398479] = {
			["source"] = "Hibernating Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204742,
		},
		[304282] = {
			["encounterName"] = "Rexxar",
			["source"] = "Rexxar",
			["npcID"] = 155098,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2370,
		},
		[209495] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[365715] = {
			["source"] = "Eternal Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184530,
		},
		[392336] = {
			["source"] = "Uncontrolled Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181775,
		},
		[172635] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shattered Hand Reaper",
			["npcID"] = 84086,
		},
		[265376] = {
			["source"] = "Fanatical Headhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133663,
		},
		[8362] = {
			["encounterName"] = "Nekrum Gutchewer",
			["source"] = "Shadowpriest Sezz'ziz",
			["encounterID"] = 598,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7275,
		},
		[167516] = {
			["source"] = "Grom'kar Incinerator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86809,
		},
		[378003] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Sentry",
			["npcID"] = 192680,
		},
		[265377] = {
			["source"] = "Fanatical Headhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133663,
		},
		[390290] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[394972] = {
			["source"] = "Qalashi Lavabearer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197148,
		},
		[369813] = {
			["source"] = "Raging Inferno",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194095,
		},
		[412816] = {
			["isChanneled"] = true,
			["source"] = "Malygos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198974,
		},
		[396432] = {
			["source"] = "Ancient Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189798,
		},
		[369811] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[273570] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ringtail Bandicoon",
			["npcID"] = 139166,
		},
		[88886] = {
			["source"] = "Spiritbound Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 68070,
		},
		[382101] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Conjurer",
			["npcID"] = 195063,
		},
		[125056] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Clefthoof",
			["npcID"] = 165189,
		},
		[82742] = {
			["source"] = "Southsea Strongarm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40635,
		},
		[214692] = {
			["source"] = "Gerenth the Vile",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107435,
		},
		[382102] = {
			["source"] = "Grand Artificer Zeerak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201553,
		},
		[392341] = {
			["source"] = "Tevgai",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195132,
		},
		[137427] = {
			["source"] = "Sylvari Tenderhoof",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 170031,
		},
		[159382] = {
			["encounterName"] = "Rukhran",
			["source"] = "Rukhran",
			["encounterID"] = 1700,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76143,
		},
		[373912] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[207816] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Necrodark Defiler",
			["npcID"] = 104888,
		},
		[63138] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Sara",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33134,
		},
		[147704] = {
			["source"] = "Eternal Kilnmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72896,
		},
		[64157] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Corruptor Tentacle",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33985,
		},
		[425107] = {
			["source"] = "Ancient Core Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211241,
		},
		[369818] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[169567] = {
			["source"] = "Primal Growth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81769,
		},
		[406678] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["npcID"] = 202375,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2689,
		},
		[367771] = {
			["encounterName"] = "Anduin Wrynn",
			["source"] = "Lost Soul",
			["encounterID"] = 2546,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185607,
		},
		[421013] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["encounterID"] = 2820,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209333,
		},
		[10346] = {
			["source"] = "Mechano-Tank",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6225,
		},
		[95002] = {
			["source"] = "The Ray-Getz-Kalaba Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 47793,
		},
		[394391] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rhuzast the Tempest",
			["npcID"] = 197409,
		},
		[50335] = {
			["source"] = "Abomination",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46058,
		},
		[412823] = {
			["source"] = "Neltharion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198968,
		},
		[396476] = {
			["source"] = "Piskato",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195973,
		},
		[258202] = {
			["source"] = "Awakened Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128302,
		},
		[361630] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["source"] = "Dausegne",
			["encounterID"] = 2540,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181224,
		},
		[165473] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apexis Destroyer",
			["npcID"] = 82229,
		},
		[410776] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Protector",
			["npcID"] = 204658,
		},
		[317792] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
		},
		[427159] = {
			["source"] = "Amalgamation of Dreams",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209915,
		},
		[388284] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arcane Commander",
			["npcID"] = 190776,
		},
		[252503] = {
			["source"] = "Assault Infernal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127189,
		},
		[414993] = {
			["source"] = "Elder Cassaphine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206818,
		},
		[369823] = {
			["source"] = "Vicious Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184023,
		},
		[115509] = {
			["source"] = "Shado-Pan Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59751,
		},
		[353443] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Empowered Mawsworn Cremator",
			["npcID"] = 179080,
		},
		[400542] = {
			["source"] = "Kalecgos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193460,
		},
		[54431] = {
			["source"] = "Bilgefin Invader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98502,
		},
		[404636] = {
			["source"] = "Lieutenant Narlena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202244,
		},
		[63134] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Sara",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33134,
		},
		[260696] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Malady",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131823,
		},
		[427162] = {
			["source"] = "Amalgamation of Dreams",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209915,
		},
		[394426] = {
			["source"] = "Council Flamecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198503,
		},
		[398494] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ember Shalewing",
			["npcID"] = 204381,
		},
		[425115] = {
			["source"] = "Fruitface",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209913,
		},
		[172643] = {
			["encounterName"] = "Xeri'tac",
			["source"] = "Xeri'tac",
			["encounterID"] = 1752,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84550,
		},
		[396447] = {
			["source"] = "Shardwing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201562,
		},
		[406686] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Djaradin Magmashaper",
			["npcID"] = 202257,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[384161] = {
			["source"] = "Qalashi Irontorch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189464,
		},
		[106807] = {
			["encounterName"] = "Ook-Ook",
			["source"] = "Ook-Ook",
			["encounterID"] = 1412,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56637,
		},
		[371875] = {
			["source"] = "Qalashi Trainee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189266,
		},
		[260307] = {
			["source"] = "Venomous Diemetradon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144496,
		},
		[263345] = {
			["encounterName"] = "Overseer Korgus",
			["source"] = "Heavy Cannon",
			["npcID"] = 134025,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2104,
		},
		[369828] = {
			["source"] = "Vicious Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184023,
		},
		[260697] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Briar",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131825,
		},
		[398497] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Praying Stingray",
			["npcID"] = 205065,
		},
		[404695] = {
			["source"] = "First Mate Ovdah",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201182,
		},
		[398500] = {
			["source"] = "Conflagrated Rock Cobra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203328,
		},
		[341163] = {
			["source"] = "Kyrian Goliath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 171396,
		},
		[316588] = {
			["source"] = "Dreliana",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157709,
		},
		[200289] = {
			["encounterName"] = "Shade of Xavius",
			["source"] = "Shade of Xavius",
			["encounterID"] = 1839,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99192,
		},
		[154216] = {
			["source"] = "Sun Trinket",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76094,
		},
		[421024] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208367,
		},
		[260698] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Solena",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131824,
		},
		[196194] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Steeljaw Grizzly",
			["npcID"] = 96677,
		},
		[114999] = {
			["encounterName"] = "Taran Zhu",
			["source"] = "Taran Zhu",
			["encounterID"] = 1306,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56884,
		},
		[255579] = {
			["encounterName"] = "Priestess Alun'za",
			["source"] = "Priestess Alun'za",
			["npcID"] = 122967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2084,
		},
		[75068] = {
			["source"] = "Grimfrost Lavaslinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72987,
		},
		[134762] = {
			["source"] = "Muerta",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 68322,
		},
		[427169] = {
			["source"] = "Amalgamation of Dreams",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209915,
		},
		[169574] = {
			["source"] = "Dionor Seedpriest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81721,
		},
		[260699] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Solena",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131824,
		},
		[326830] = {
			["source"] = "Darkwarren Bulwark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 164037,
		},
		[86331] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Grand Vizier Ertan",
			["npcID"] = 43878,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1043,
		},
		[396454] = {
			["source"] = "Insatiable Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185715,
		},
		[212586] = {
			["source"] = "Stormwing Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91795,
		},
		[200291] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Scout",
			["npcID"] = 98691,
		},
		[316609] = {
			["source"] = "Terror Tendril",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157137,
		},
		[162407] = {
			["encounterName"] = "Rocketspark and Borka",
			["source"] = "Railmaster Rocketspark",
			["encounterID"] = 1715,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77803,
		},
		[195172] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Crusher",
			["npcID"] = 91782,
		},
		[257629] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unfinished Stone Golem",
			["npcID"] = 201586,
		},
		[361644] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["source"] = "Dausegne",
			["encounterID"] = 2540,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181224,
		},
		[421029] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208367,
		},
		[20819] = {
			["source"] = "Scarlet Sorcerer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4294,
		},
		[285878] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Akunda's Aspect",
			["encounterID"] = 2268,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144941,
		},
		[421020] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208363,
		},
		[390834] = {
			["source"] = "Sarana",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190161,
		},
		[373932] = {
			["encounterName"] = "Azureblade",
			["source"] = "Draconic Image",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190187,
		},
		[260700] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Malady",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131823,
		},
		[398504] = {
			["source"] = "Sulfurous Viper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205814,
		},
		[198245] = {
			["encounterName"] = "Smashspite the Hateful",
			["source"] = "Smashspite the Hateful",
			["encounterID"] = 1834,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98949,
		},
		[260701] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Briar",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131825,
		},
		[389430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Storm",
			["npcID"] = 195846,
		},
		[427175] = {
			["source"] = "Amalgamation of Dreams",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209915,
		},
		[210537] = {
			["source"] = "Nathrezim Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182426,
		},
		[308406] = {
			["source"] = "Forge-Guard Hurrul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158158,
		},
		[15530] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Magus",
			["npcID"] = 26722,
		},
		[172649] = {
			["source"] = "Grom'kar Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83763,
		},
		[365744] = {
			["source"] = "Subjugator Zeltoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184651,
		},
		[316598] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Amberclaw",
			["npcID"] = 162641,
		},
		[116027] = {
			["source"] = "Hopper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59464,
		},
		[330940] = {
			["source"] = "Altered Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 168244,
		},
		[365745] = {
			["encounterName"] = "Artificer Xy'mox",
			["source"] = "Cartel Overseer",
			["encounterID"] = 2553,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184792,
		},
		[260703] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Malady",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131823,
		},
		[392366] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Awakened Juggernaut",
			["npcID"] = 197793,
		},
		[386223] = {
			["source"] = "Primal Stormshield",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194896,
		},
		[322743] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lumbering Creation",
			["npcID"] = 155824,
		},
		[395859] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Haunting Sha",
			["npcID"] = 59555,
		},
		[408749] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grrrmrrsh Hrrnglscrrrm",
			["npcID"] = 204412,
		},
		[373942] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[404654] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grugoth the Hullcrusher",
			["npcID"] = 200721,
		},
		[154221] = {
			["source"] = "Zipteq",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78734,
		},
		[265407] = {
			["source"] = "Banquet Steward",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131586,
		},
		[115002] = {
			["encounterName"] = "Taran Zhu",
			["source"] = "Taran Zhu",
			["encounterID"] = 1306,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56884,
		},
		[322745] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Runestag",
			["npcID"] = 159030,
		},
		[373939] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Rotburst Totem",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190381,
		},
		[378029] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186124,
		},
		[373936] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186229,
		},
		[84799] = {
			["encounterName"] = "Lockmaw",
			["source"] = "Augh",
			["npcID"] = 45379,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1054,
		},
		[203368] = {
			["source"] = "Felblaze Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120535,
		},
		[375988] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimblewing Slyvern",
			["npcID"] = 191051,
		},
		[394416] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Flamewrought Eradicator",
			["npcID"] = 198311,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[31975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unliving Stalker",
			["npcID"] = 18501,
		},
		[404807] = {
			["source"] = "Contamination Investigator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202320,
		},
		[367798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tethos",
			["npcID"] = 181249,
		},
		[36004] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Disembodied Exarch",
			["npcID"] = 21058,
		},
		[60833] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forgotten One",
			["npcID"] = 30414,
		},
		[267459] = {
			["encounterName"] = "Vol'zith the Whisperer",
			["source"] = "Forgotten Denizen",
			["encounterID"] = 2133,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136083,
		},
		[285889] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Gonk's Aspect",
			["npcID"] = 144767,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2268,
		},
		[115003] = {
			["encounterName"] = "Yan-Zhu the Uncasked",
			["source"] = "Yan-Zhu the Uncasked",
			["encounterID"] = 1414,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59479,
		},
		[247396] = {
			["source"] = "Zulian Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 124549,
		},
		[373943] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186229,
		},
		[302272] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["source"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150190,
		},
		[62625] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ulduar Colossus",
			["npcID"] = 33237,
		},
		[273604] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutus Thornton",
			["npcID"] = 139136,
		},
		[406708] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sindragosa",
			["npcID"] = 201094,
		},
		[262577] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Diremaw",
			["npcID"] = 128620,
		},
		[386757] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["encounterID"] = 2617,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189727,
		},
		[392660] = {
			["source"] = "Ancient Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187111,
		},
		[145552] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Coin Counter",
			["npcID"] = 202398,
		},
		[255597] = {
			["source"] = "Wailing Siren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 126440,
		},
		[3611] = {
			["source"] = "Grand Magus Doane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 397,
		},
		[260292] = {
			["encounterName"] = "Cragmaw the Infested",
			["source"] = "Cragmaw the Infested",
			["encounterID"] = 2118,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131817,
		},
		[203371] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hill Ettin",
			["npcID"] = 102886,
		},
		[285893] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Gonk's Aspect",
			["npcID"] = 144767,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2268,
		},
		[398501] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hunting Rock Viper",
			["npcID"] = 203783,
		},
		[412835] = {
			["source"] = "Nozdormu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198971,
		},
		[373947] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skaara",
			["npcID"] = 192949,
		},
		[404639] = {
			["source"] = "Han'thul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198914,
		},
		[427189] = {
			["source"] = "Amalgamation of Dreams",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209915,
		},
		[396020] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Golden Beetle",
			["npcID"] = 59545,
		},
		[255577] = {
			["encounterName"] = "Priestess Alun'za",
			["source"] = "Priestess Alun'za",
			["npcID"] = 122967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2084,
		},
		[400569] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Haleh",
			["npcID"] = 199370,
		},
		[369853] = {
			["source"] = "Burly Rock-Thrower",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184019,
		},
		[388283] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[169571] = {
			["source"] = "Dionor Seedpriest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81721,
		},
		[359587] = {
			["source"] = "Basal Raptora",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 179004,
		},
		[425149] = {
			["source"] = "Zaqali Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210172,
		},
		[396475] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apex Proto-Dragon",
			["npcID"] = 191705,
		},
		[203373] = {
			["source"] = "Observant Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107449,
		},
		[367807] = {
			["source"] = "Worldbreaker Escapee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185626,
		},
		[378012] = {
			["source"] = "Magmasworn Flameweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193414,
		},
		[255591] = {
			["encounterName"] = "Priestess Alun'za",
			["source"] = "Priestess Alun'za",
			["npcID"] = 122967,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2084,
		},
		[250454] = {
			["source"] = "Kel'vax Skeleton Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 126107,
		},
		[392381] = {
			["source"] = "Fledgling Thunder Lizard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198815,
		},
		[394429] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarolekk, the Stomper",
			["npcID"] = 197650,
		},
		[402775] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Shrineguard",
			["npcID"] = 202803,
		},
		[382143] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Turi Flickerflame",
			["npcID"] = 199740,
		},
		[253544] = {
			["source"] = "Dazar'ai Confessor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122973,
		},
		[377277] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Volethi",
			["npcID"] = 200727,
		},
		[55715] = {
			["source"] = "Earthen Elite",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29980,
		},
		[398483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[257640] = {
			["source"] = "Unfinished Stone Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201586,
		},
		[160372] = {
			["source"] = "Shiverblood Frostbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78869,
		},
		[404626] = {
			["source"] = "Han'thul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198914,
		},
		[397014] = {
			["source"] = "Qalashi Emissary",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197146,
		},
		[196208] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Shadowmoon Warlock",
			["npcID"] = 99704,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[115006] = {
			["source"] = "Hozen Gutripper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58943,
		},
		[365717] = {
			["source"] = "Manifestor Krugan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185363,
		},
		[316618] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Swarmkeeper",
			["npcID"] = 162303,
		},
		[384194] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Cinderweaver",
			["npcID"] = 190207,
		},
		[267977] = {
			["source"] = "Shrine Templar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134139,
		},
		[173180] = {
			["source"] = "Stoneshamble Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74962,
		},
		[6358] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pahamand",
			["npcID"] = 184600,
		},
		[206459] = {
			["encounterName"] = "Cordana Felsong",
			["source"] = "Avatar of Shadow",
			["npcID"] = 104293,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1818,
		},
		[292826] = {
			["source"] = "Etruvis the Vassal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151041,
		},
		[314518] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "R'khuzj the Unfathomable",
			["npcID"] = 156299,
		},
		[316620] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anubisath Sentinel",
			["npcID"] = 162508,
		},
		[257642] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zara'thik Hive-Guard",
			["npcID"] = 162886,
		},
		[152183] = {
			["source"] = "Slagna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75406,
		},
		[340414] = {
			["source"] = "Forgotten Research",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202446,
		},
		[260313] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qy'telek",
			["npcID"] = 130726,
		},
		[56898] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Darkcaster",
			["npcID"] = 30319,
		},
		[427200] = {
			["source"] = "Amalgamation of Dreams",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209915,
		},
		[374624] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frozen Destroyer",
			["npcID"] = 190686,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[260480] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Tendril",
			["npcID"] = 125136,
		},
		[289937] = {
			["source"] = "Rastari Punisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148667,
		},
		[76100] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[159318] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frostwolf Axethrower",
			["npcID"] = 74799,
		},
		[373960] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[163447] = {
			["encounterName"] = "Skylord Tovra",
			["source"] = "Skylord Tovra",
			["encounterID"] = 1736,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80005,
		},
		[369865] = {
			["source"] = "Nokhud Spearman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191227,
		},
		[412868] = {
			["source"] = "Karokta",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203625,
		},
		[423107] = {
			["source"] = "Hymdall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206644,
		},
		[110117] = {
			["source"] = "Ethereal Sha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 65414,
		},
		[365572] = {
			["source"] = "Dominated Grunt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184733,
		},
		[374112] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Frostbreath Arachnid",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189234,
		},
		[391913] = {
			["source"] = "Gnawbone Splintershield",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197847,
		},
		[259298] = {
			["source"] = "Vilescale Behemoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 123461,
		},
		[394440] = {
			["source"] = "Huntmaster Yrgena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201538,
		},
		[14443] = {
			["source"] = "Gai-Cho Boltshooter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 62589,
		},
		[126354] = {
			["source"] = "Ramkahen Citizen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157795,
		},
		[359629] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawtouched Bull",
			["npcID"] = 181359,
		},
		[369791] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184582,
		},
		[265433] = {
			["source"] = "Bloodsworn Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133912,
		},
		[211571] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eredar Chaosbringer",
			["npcID"] = 105617,
		},
		[392394] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamegullet",
			["npcID"] = 197697,
		},
		[86340] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Grand Vizier Ertan",
			["npcID"] = 43878,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1043,
		},
		[306389] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkmaul Centurion",
			["npcID"] = 156825,
		},
		[304261] = {
			["source"] = "Blackwater Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155272,
		},
		[392395] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderhead",
			["npcID"] = 197698,
		},
		[412346] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Corsair",
			["npcID"] = 126928,
		},
		[393540] = {
			["source"] = "Zhurtan the Riverboiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188687,
		},
		[360775] = {
			["source"] = "Sandskim Serpent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185511,
		},
		[302295] = {
			["source"] = "Scuttleclaw Sandshell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 169436,
		},
		[115009] = {
			["isChanneled"] = true,
			["source"] = "Shado-Pan Stormbringer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 59808,
		},
		[132734] = {
			["source"] = "Refining Specialist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67283,
		},
		[311019] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Behemoth",
			["npcID"] = 159303,
		},
		[309669] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Onyx Warserpent",
			["npcID"] = 153208,
		},
		[388911] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellbound Battleaxe",
			["npcID"] = 196577,
		},
		[388302] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[23381] = {
			["encounterName"] = "Lady Anacondra",
			["source"] = "Lady Anacondra",
			["npcID"] = 3671,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 585,
		},
		[392398] = {
			["source"] = "Primal Thundercloud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197509,
		},
		[39079] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Falconer",
			["npcID"] = 20037,
		},
		[198263] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95676,
		},
		[406733] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Traitorous Sister",
			["npcID"] = 200826,
		},
		[159356] = {
			["source"] = "Malevolent Breath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78791,
		},
		[258672] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crackshot",
			["npcID"] = 126918,
		},
		[304251] = {
			["encounterName"] = "Thrall the Corrupted",
			["source"] = "Void Boar",
			["npcID"] = 157349,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2332,
		},
		[393793] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hacklung",
			["npcID"] = 187752,
		},
		[359538] = {
			["source"] = "Cradle Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181943,
		},
		[197240] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prolifica",
			["npcID"] = 98986,
		},
		[314586] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "R'khuzj the Unfathomable",
			["npcID"] = 156299,
		},
		[423117] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["encounterID"] = 2737,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208478,
		},
		[65648] = {
			["encounterName"] = "Mimiron",
			["source"] = "Aerial Command Unit",
			["npcID"] = 33670,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1138,
		},
		[150214] = {
			["source"] = "Razorfen Geomagus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74545,
		},
		[304245] = {
			["source"] = "Abyssal Spearhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155271,
		},
		[373972] = {
			["isChanneled"] = true,
			["source"] = "Primalist Flamedancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 190206,
		},
		[121468] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raigonn",
			["npcID"] = 61177,
		},
		[386259] = {
			["source"] = "Basrikron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193535,
		},
		[423010] = {
			["source"] = "Dionaessa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210813,
		},
		[406737] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Betrayer",
			["npcID"] = 200828,
		},
		[302302] = {
			["source"] = "Scuttleclaw Skimmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 169434,
		},
		[412889] = {
			["source"] = "Zakajz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198953,
		},
		[209027] = {
			["source"] = "Duskwatch Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111563,
		},
		[354586] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Troz'igal the Oppressor",
			["npcID"] = 179526,
		},
		[418024] = {
			["source"] = "Hand of the Lich King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207386,
		},
		[107120] = {
			["encounterName"] = "Commander Ri'mok",
			["source"] = "Commander Ri'mok",
			["npcID"] = 56636,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1406,
		},
		[201959] = {
			["source"] = "Emberhusk Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113536,
		},
		[371812] = {
			["source"] = "Menial Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192702,
		},
		[125506] = {
			["source"] = "Commander Lindon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59191,
		},
		[160383] = {
			["source"] = "Shiverblood Frostbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78869,
		},
		[388310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Custodial Protector",
			["npcID"] = 192694,
		},
		[150755] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["encounterID"] = 1654,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74790,
		},
		[392406] = {
			["source"] = "Storm Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197982,
		},
		[307639] = {
			["encounterName"] = "Vexiona",
			["source"] = "Vexiona",
			["npcID"] = 157354,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2336,
		},
		[412884] = {
			["source"] = "Ysera",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198970,
		},
		[39592] = {
			["source"] = "Summoned Searing Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67380,
		},
		[377950] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186125,
		},
		[410837] = {
			["source"] = "Ritualmaster Skarna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202274,
		},
		[396503] = {
			["source"] = "Loamas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199030,
		},
		[12471] = {
			["source"] = "Atal'ai High Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5273,
		},
		[381517] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[60227] = {
			["source"] = "Dragonflayer Strategist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23956,
		},
		[10348] = {
			["source"] = "Leprous Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6222,
		},
		[257383] = {
			["source"] = "Warlord Malaja",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122664,
		},
		[313691] = {
			["source"] = "Aysa Cloudsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159129,
		},
		[375439] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181861,
		},
		[418121] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klaxxi Monstrosity",
			["npcID"] = 207923,
		},
		[369061] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184422,
		},
		[278961] = {
			["source"] = "Diseased Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133870,
		},
		[369754] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[412888] = {
			["source"] = "Ysera",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198970,
		},
		[393607] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodclaw",
			["npcID"] = 187553,
		},
		[386993] = {
			["source"] = "Cascade Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194939,
		},
		[427223] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Putrid Pyromancer",
			["npcID"] = 84957,
		},
		[202365] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Runecarver Slave",
			["npcID"] = 102375,
		},
		[396640] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Ancient Branch",
			["npcID"] = 196548,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2563,
		},
		[373084] = {
			["source"] = "Irontorch Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189466,
		},
		[172673] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sun Prophet Tenhamen",
			["npcID"] = 154727,
		},
		[425037] = {
			["source"] = "Ancient Core Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210288,
		},
		[308455] = {
			["encounterName"] = "Tunk",
			["source"] = "Tunk",
			["npcID"] = 157300,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2325,
		},
		[198959] = {
			["source"] = "Valarjar Runecarver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96664,
		},
		[332239] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Goxul the Devourer",
			["npcID"] = 170418,
		},
		[22121] = {
			["source"] = "Timberstep Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194041,
		},
		[68939] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36502,
		},
		[384223] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[11820] = {
			["source"] = "Mechanized Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6234,
		},
		[373051] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Salamancer",
			["npcID"] = 186669,
		},
		[423131] = {
			["source"] = "Wrathion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210077,
		},
		[257656] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unfinished Stone Golem",
			["npcID"] = 201586,
		},
		[193152] = {
			["encounterName"] = "King Deepbeard",
			["source"] = "King Deepbeard",
			["npcID"] = 91797,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1812,
		},
		[311035] = {
			["source"] = "Xari the Kind",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159119,
		},
		[388886] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellbound Scepter",
			["npcID"] = 196576,
		},
		[270976] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Briarwood Invader",
			["npcID"] = 131373,
		},
		[172675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shuja Grimaxe",
			["npcID"] = 167301,
		},
		[11986] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Apostle",
			["npcID"] = 30179,
		},
		[308459] = {
			["source"] = "Zardeth of the Black Claw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158371,
		},
		[40598] = {
			["encounterName"] = "Illidan Stormrage",
			["source"] = "Illidan Stormrage",
			["encounterID"] = 609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 22917,
		},
		[396041] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cracked Concretion",
			["npcID"] = 197074,
		},
		[412895] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forgemaster Algrin",
			["npcID"] = 203709,
		},
		[382179] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Senior Researcher Alydrus",
			["npcID"] = 208734,
		},
		[253562] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dazar'ai Augur",
			["npcID"] = 122972,
		},
		[410848] = {
			["source"] = "Neltharion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[198962] = {
			["source"] = "Valarjar Runecarver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96664,
		},
		[340412] = {
			["source"] = "Forgotten Research",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202446,
		},
		[377204] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[85685] = {
			["source"] = "Lord Godfrey",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45878,
		},
		[113479] = {
			["source"] = "Master Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59175,
		},
		[387504] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[258199] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 130400,
		},
		[337131] = {
			["source"] = "Xantuth the Blighted",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162872,
		},
		[401810] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[398399] = {
			["source"] = "Chittering Acidclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201093,
		},
		[365272] = {
			["encounterName"] = "Prototype Pantheon",
			["source"] = "Prototype of Duty",
			["encounterID"] = 2544,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181551,
		},
		[135818] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Footman",
			["npcID"] = 68485,
		},
		[260349] = {
			["source"] = "Ten'gor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130713,
		},
		[336964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ember Worm",
			["npcID"] = 168515,
		},
		[318534] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Umbral Gatekeeper",
			["npcID"] = 163708,
		},
		[394470] = {
			["source"] = "Ko'jo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186367,
		},
		[165511] = {
			["source"] = "Miserain Starsorrow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82017,
		},
		[161533] = {
			["source"] = "Mandragora Lifedrinker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80699,
		},
		[416996] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["encounterID"] = 2709,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200926,
		},
		[160392] = {
			["source"] = "Maggle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78896,
		},
		[407775] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[365627] = {
			["source"] = "Ancient Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184954,
		},
		[367851] = {
			["encounterName"] = "The Jailer",
			["source"] = "The Jailer",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180990,
		},
		[172679] = {
			["source"] = "Skothwa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79500,
		},
		[396520] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quilmo the Ancient",
			["npcID"] = 196386,
		},
		[20823] = {
			["source"] = "Scarlet Conjuror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4297,
		},
		[392425] = {
			["source"] = "Molkeej",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195430,
		},
		[398385] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blaze Hound Matron",
			["npcID"] = 204379,
		},
		[314611] = {
			["source"] = "Insurgent Machinist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159758,
		},
		[406760] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Master",
			["npcID"] = 200827,
		},
		[416999] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Paladin of the Silver Hand",
			["npcID"] = 208193,
		},
		[369901] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Feather",
			["npcID"] = 186965,
		},
		[255614] = {
			["source"] = "Violetsail Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 179936,
		},
		[16102] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Summoner",
			["npcID"] = 17395,
		},
		[151475] = {
			["encounterName"] = "Groyat, the Blind Hunter",
			["source"] = "Groyat, the Blind Hunter",
			["encounterID"] = 1660,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75247,
		},
		[419048] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["encounterID"] = 2709,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200926,
		},
		[388332] = {
			["source"] = "Kalecgos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196439,
		},
		[82797] = {
			["source"] = "Snickerfang Hyena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5985,
		},
		[89932] = {
			["source"] = "Teracula",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 49265,
		},
		[360414] = {
			["encounterName"] = "Vigilant Guardian",
			["source"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180773,
		},
		[82765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Neferset Darkcaster",
			["npcID"] = 44982,
		},
		[259597] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Child of Gonk",
			["npcID"] = 127254,
		},
		[408811] = {
			["source"] = "Sundered Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198874,
		},
		[373803] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Infused Whelp",
			["npcID"] = 189893,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2609,
		},
		[259711] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Block Warden",
			["npcID"] = 131445,
		},
		[2601] = {
			["source"] = "Shadowforge Senator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8904,
		},
		[245377] = {
			["source"] = "Felsiege Infernal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 119395,
		},
		[257784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Brinescale",
			["npcID"] = 129600,
		},
		[388335] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Runebinder",
			["npcID"] = 186354,
		},
		[174730] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wandering Eye",
			["npcID"] = 85498,
		},
		[376049] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[394479] = {
			["source"] = "Primordial Hail",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189039,
		},
		[258338] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Raoul",
			["npcID"] = 126847,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[387849] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[359668] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawtouched Animate",
			["npcID"] = 181484,
		},
		[156301] = {
			["source"] = "Grom'kar Boomer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80935,
		},
		[290045] = {
			["source"] = "Rastari Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147495,
		},
		[91335] = {
			["source"] = "Woodfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83871,
		},
		[172816] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sun Prophet Tenhamen",
			["npcID"] = 154727,
		},
		[427245] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hapless Assistant",
			["npcID"] = 212981,
		},
		[371956] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Terrasentry",
			["npcID"] = 188011,
		},
		[414959] = {
			["source"] = "Blazing Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205140,
		},
		[42669] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2025,
		},
		[276892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amber-shaper Gokilak",
			["npcID"] = 155985,
		},
		[150801] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["encounterID"] = 1653,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74787,
		},
		[231532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pyrestar Demolisher",
			["npcID"] = 114845,
		},
		[392435] = {
			["source"] = "Molkeej",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195430,
		},
		[400413] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200681,
		},
		[388340] = {
			["source"] = "Kalecgos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196439,
		},
		[396315] = {
			["source"] = "Nokhud Stormcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185147,
		},
		[18392] = {
			["encounterName"] = "Onyxia",
			["source"] = "Onyxia",
			["npcID"] = 10184,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1084,
		},
		[37036] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Master Engineer Telonicus",
			["npcID"] = 20063,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 733,
		},
		[412914] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fragment of Shadow",
			["npcID"] = 205968,
		},
		[406771] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Master",
			["npcID"] = 200827,
		},
		[263206] = {
			["source"] = "Loa-Gutter Darter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128048,
		},
		[394485] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hypoxicron",
			["npcID"] = 186334,
		},
		[369073] = {
			["source"] = "Zaqali Hauler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201341,
		},
		[148002] = {
			["source"] = "Blazebound Chanter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72897,
		},
		[417011] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Paladin of the Silver Hand",
			["npcID"] = 208193,
		},
		[312584] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Venomweaver",
			["npcID"] = 161229,
		},
		[375579] = {
			["source"] = "Primalist Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190716,
		},
		[308481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fallen Riftwalker",
			["npcID"] = 158146,
		},
		[400889] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rampant Tide",
			["npcID"] = 201463,
		},
		[143905] = {
			["source"] = "Deepfrost Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78888,
		},
		[256464] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faithless Trapper",
			["npcID"] = 129874,
		},
		[385263] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coastal Eel",
			["npcID"] = 198782,
		},
		[400631] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rampant Tide",
			["npcID"] = 201463,
		},
		[410870] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Vortex",
			["npcID"] = 45912,
		},
		[165520] = {
			["source"] = "Rainiara the Kingslayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82260,
		},
		[20824] = {
			["source"] = "Deadwind Ogre Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7379,
		},
		[285725] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Kul Tiran Marine",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148120,
		},
		[304388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Siltridge Marauder",
			["npcID"] = 152541,
		},
		[153234] = {
			["encounterName"] = "Azzakel, Vanguard of the Legion",
			["source"] = "Azzakel",
			["encounterID"] = 1678,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75927,
		},
		[126283] = {
			["source"] = "Shadowmaster Sydow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 63240,
		},
		[392442] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kholdeg",
			["npcID"] = 194608,
		},
		[238586] = {
			["source"] = "Brutal Punisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117421,
		},
		[361001] = {
			["encounterName"] = "Vigilant Guardian",
			["source"] = "Vigilant Custodian",
			["encounterID"] = 2512,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184522,
		},
		[147289] = {
			["source"] = "Death Adder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72841,
		},
		[384252] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arcane Elemental",
			["npcID"] = 190780,
		},
		[410873] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gust Soldier",
			["npcID"] = 45477,
		},
		[311015] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Behemoth",
			["npcID"] = 159303,
		},
		[316677] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Swarmkeeper",
			["npcID"] = 162303,
		},
		[171385] = {
			["source"] = "Unstable Earth Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80382,
		},
		[390952] = {
			["source"] = "Grand Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188009,
		},
		[157331] = {
			["source"] = "Primal Storm Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77942,
		},
		[300296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boggac Skullbash",
			["npcID"] = 151308,
		},
		[417018] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Conjuror",
			["npcID"] = 206351,
		},
		[271628] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Teldrassil Sentinel",
			["npcID"] = 134938,
		},
		[404732] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["npcID"] = 201773,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[362601] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["source"] = "Lihuvim",
			["encounterID"] = 2539,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182169,
		},
		[162244] = {
			["source"] = "Sharpfang Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76685,
		},
		[394494] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmaton",
			["npcID"] = 186827,
		},
		[386059] = {
			["source"] = "Basrikron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193535,
		},
		[64170] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Freya",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33410,
		},
		[246286] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vilescale Harpooner",
			["npcID"] = 123771,
		},
		[121165] = {
			["encounterName"] = "Gekkan",
			["source"] = "Harthak Flameseeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61392,
		},
		[265487] = {
			["source"] = "Bloodsworn Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133912,
		},
		[403978] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["npcID"] = 202375,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2689,
		},
		[150661] = {
			["source"] = "Gorg the Host",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76496,
		},
		[394496] = {
			["source"] = "Ruinous",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193522,
		},
		[385827] = {
			["source"] = "Rageclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187192,
		},
		[406783] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["npcID"] = 201934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[34259] = {
			["source"] = "Atal'ai Deathwalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5271,
		},
		[128999] = {
			["source"] = "Thundermaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58456,
		},
		[406527] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Banana Bomber",
			["npcID"] = 203641,
		},
		[68948] = {
			["encounterName"] = "The Crown Chemical Co.",
			["source"] = "Apothecary Baxter",
			["npcID"] = 36565,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2879,
		},
		[400641] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["npcID"] = 198998,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2670,
		},
		[369925] = {
			["source"] = "Transformed Dreadsquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197225,
		},
		[404737] = {
			["source"] = "Han'thul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198914,
		},
		[11131] = {
			["encounterName"] = "Ghaz'rilla",
			["source"] = "Gahz'rilla",
			["encounterID"] = 594,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7273,
		},
		[392451] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Channeler",
			["npcID"] = 197985,
		},
		[106646] = {
			["source"] = "Flying Snow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56473,
		},
		[150038] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["encounterID"] = 1655,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74475,
		},
		[374022] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[196242] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadlord Mendacius",
			["npcID"] = 99649,
		},
		[400144] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vraken the Hunter",
			["npcID"] = 200584,
		},
		[404739] = {
			["source"] = "First Mate Ovdah",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201182,
		},
		[357641] = {
			["source"] = "Frostsoul Automaton",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 177982,
		},
		[395936] = {
			["source"] = "Clearwater Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192652,
		},
		[217744] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blinky Gizmospark",
			["npcID"] = 148322,
		},
		[371976] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[63147] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Sara",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33134,
		},
		[417899] = {
			["source"] = "Risen Adventurer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205992,
		},
		[378120] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Rock",
			["npcID"] = 192799,
		},
		[347404] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Endbringer",
			["npcID"] = 157810,
		},
		[64171] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Thorim",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33413,
		},
		[392455] = {
			["source"] = "Uurhilt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194760,
		},
		[406918] = {
			["encounterName"] = "Echo of Neltharion",
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Lavamancer",
			["npcID"] = 202256,
		},
		[381525] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[316689] = {
			["source"] = "Ben Howell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162682,
		},
		[149179] = {
			["source"] = "Grom'kar Grunt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82047,
		},
		[93655] = {
			["encounterName"] = "Mekgineer Thermaplugg",
			["source"] = "Mekgineer Thermaplugg",
			["encounterID"] = 382,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7800,
		},
		[396552] = {
			["source"] = "Magmas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199027,
		},
		[20825] = {
			["source"] = "Guzzling Patron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9547,
		},
		[417030] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Alliance Conjuror",
			["npcID"] = 206351,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[316959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrosive Digester",
			["npcID"] = 162828,
		},
		[404744] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[68950] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["encounterID"] = 2006,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36497,
		},
		[400649] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["npcID"] = 198998,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2670,
		},
		[395816] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Wallcrasher",
			["npcID"] = 187813,
		},
		[396812] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellbound Scepter",
			["npcID"] = 196576,
		},
		[374451] = {
			["source"] = "Burning Chain Caster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195919,
		},
		[385157] = {
			["source"] = "Greenbelt Riverbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192834,
		},
		[312597] = {
			["source"] = "King Phaoris",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161112,
		},
		[373201] = {
			["source"] = "Windyfin Skybasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187431,
		},
		[420846] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[253583] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dazar'ai Augur",
			["npcID"] = 122972,
		},
		[410890] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Warder",
			["npcID"] = 205259,
		},
		[371983] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[37551] = {
			["source"] = "Shattered Hand Sharpshooter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16704,
		},
		[306735] = {
			["encounterName"] = "Wrathion",
			["source"] = "Wrathion",
			["encounterID"] = 2329,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156818,
		},
		[394509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ruinous",
			["npcID"] = 193522,
		},
		[404748] = {
			["source"] = "Navigator Bi-Yun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201184,
		},
		[400877] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flowfy",
			["npcID"] = 203660,
		},
		[102227] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enemy Tonk",
			["npcID"] = 54642,
		},
		[317284] = {
			["source"] = "Mistress Dyrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 162880,
		},
		[306457] = {
			["isChanneled"] = true,
			["source"] = "Tunk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 157328,
		},
		[346813] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tower Sentinel",
			["npcID"] = 152905,
		},
		[394948] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashbinder Tornecha",
			["npcID"] = 192344,
		},
		[405016] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["npcID"] = 201774,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[396559] = {
			["source"] = "Raszageth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199031,
		},
		[88010] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Vortex",
			["npcID"] = 45912,
		},
		[392007] = {
			["source"] = "Shadepaw Thief",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192748,
		},
		[394512] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Spawn",
			["npcID"] = 75652,
		},
		[314889] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "Exposed Synapse",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159578,
		},
		[32363] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["source"] = "Nexus-Prince Shaffar",
			["npcID"] = 18344,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1899,
		},
		[386024] = {
			["source"] = "Primalist Stormspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194894,
		},
		[144031] = {
			["source"] = "Grievous Depthworm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85942,
		},
		[161781] = {
			["source"] = "Frostfire Gronnling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79529,
		},
		[20802] = {
			["source"] = "Brackenhide Putrifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186363,
		},
		[147103] = {
			["source"] = "Grimfrost Lavaslinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72987,
		},
		[387189] = {
			["source"] = "Srivantor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201555,
		},
		[173573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fluttering Teromoth",
			["npcID"] = 79595,
		},
		[414992] = {
			["source"] = "Burning Flamespeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205138,
		},
		[200345] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Archer",
			["npcID"] = 98275,
		},
		[369942] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamewing Ascendant",
			["npcID"] = 209837,
		},
		[153247] = {
			["encounterName"] = "Roltall",
			["source"] = "Roltall",
			["encounterID"] = 1652,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75786,
		},
		[374038] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Embar Firepath",
			["npcID"] = 187767,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[309316] = {
			["encounterName"] = "Maut",
			["source"] = "Maut",
			["npcID"] = 156523,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2327,
		},
		[12492] = {
			["encounterName"] = "Jammal'an the Prophet",
			["source"] = "Jammal'an the Prophet",
			["encounterID"] = 488,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5710,
		},
		[321000] = {
			["source"] = "Prime Shieldguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 174672,
		},
		[382791] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193944,
		},
		[283628] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anointed Disciple",
			["npcID"] = 145898,
		},
		[271652] = {
			["source"] = "Kaldorei Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205892,
		},
		[404756] = {
			["source"] = "Sundered Flame Flamespinner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203686,
		},
		[366701] = {
			["source"] = "Ebonsteel Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185268,
		},
		[212773] = {
			["source"] = "Duskwatch Reinforcement",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107073,
		},
		[199772] = {
			["source"] = "Valarjar Champion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97087,
		},
		[404757] = {
			["source"] = "Sundered Flame Manaweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203681,
		},
		[150917] = {
			["encounterName"] = "Hunter Bonetusk",
			["source"] = "Hunter Bonetusk",
			["encounterID"] = 1656,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75001,
		},
		[406344] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[369946] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boneshaper Jardak",
			["npcID"] = 188693,
		},
		[265511] = {
			["source"] = "Spirit Drain Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135169,
		},
		[382233] = {
			["source"] = "Batak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193462,
		},
		[114516] = {
			["source"] = "Trail Yakker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59526,
		},
		[172703] = {
			["source"] = "Grom'kar Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83763,
		},
		[314658] = {
			["source"] = "Henry Garrick",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161504,
		},
		[173148] = {
			["source"] = "Grom'kar Flameslinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81279,
		},
		[30686] = {
			["encounterName"] = "Omor the Unscarred",
			["source"] = "Omor the Unscarred",
			["npcID"] = 17308,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1891,
		},
		[384827] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[38618] = {
			["encounterName"] = "Frozen Commander",
			["source"] = "Commander Stoutbeard",
			["encounterID"] = 519,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26796,
		},
		[314942] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Goliath",
			["npcID"] = 166869,
		},
		[383953] = {
			["source"] = "Bakar Companion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194255,
		},
		[172704] = {
			["source"] = "Infested Vinewarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80698,
		},
		[166397] = {
			["source"] = "Grimrail Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82590,
		},
		[374045] = {
			["source"] = "Containment Apparatus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190342,
		},
		[192158] = {
			["source"] = "Olmyr the Enlightened",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97202,
		},
		[316951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrosive Digester",
			["npcID"] = 162828,
		},
		[413787] = {
			["source"] = "Entropic Hatred",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203809,
		},
		[401421] = {
			["encounterName"] = "Chronikar",
			["source"] = "Chronikar",
			["npcID"] = 198995,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2666,
		},
		[384663] = {
			["source"] = "Forgewrought Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194816,
		},
		[320805] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Epilon",
			["npcID"] = 158869,
		},
		[30937] = {
			["source"] = "Shadowmoon Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17653,
		},
		[157534] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderlord Seer",
			["npcID"] = 78073,
		},
		[75610] = {
			["source"] = "Corla, Herald of Twilight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39679,
		},
		[378143] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Infiltrator",
			["npcID"] = 191841,
		},
		[76634] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tainted Sentry",
			["npcID"] = 40925,
		},
		[316711] = {
			["encounterName"] = "N'Zoth the Corruptor",
			["source"] = "Psychus",
			["encounterID"] = 2344,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158376,
		},
		[285995] = {
			["encounterName"] = "Opulence",
			["source"] = "Opulence",
			["npcID"] = 145261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2271,
		},
		[427290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galok Wingslicer",
			["npcID"] = 209047,
		},
		[388383] = {
			["source"] = "Iskaara Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186478,
		},
		[64174] = {
			["source"] = "Hodir",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33411,
		},
		[267891] = {
			["encounterName"] = "Tidesage Council",
			["source"] = "Galecaller Faye",
			["encounterID"] = 2131,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134058,
		},
		[201375] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Seacursed Slaver",
			["npcID"] = 97043,
		},
		[412614] = {
			["source"] = "Viridian King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201029,
		},
		[195232] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Wavebinder",
			["npcID"] = 97170,
		},
		[241680] = {
			["encounterName"] = "Aqu'sirr",
			["source"] = "Lord Stormsong",
			["encounterID"] = 2130,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 139737,
		},
		[353573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vil'thras",
			["npcID"] = 185110,
		},
		[57775] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30625,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1968,
		},
		[153395] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Carrion Worm",
			["npcID"] = 76057,
		},
		[396073] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Nodding Tiger",
			["npcID"] = 59544,
		},
		[391871] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskpaw Tendontearer",
			["npcID"] = 197820,
		},
		[374865] = {
			["source"] = "Konkhular",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194544,
		},
		[393309] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Flamewrought Eradicator",
			["npcID"] = 198311,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[384291] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mara'nar the Thunderous",
			["npcID"] = 196913,
		},
		[165851] = {
			["source"] = "Emberbark Ancient",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82284,
		},
		[157173] = {
			["source"] = "Felguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79507,
		},
		[166565] = {
			["encounterName"] = "Nitrogg Thundertower",
			["source"] = "Assault Cannon",
			["encounterID"] = 1732,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79548,
		},
		[17883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Observer",
			["npcID"] = 17938,
		},
		[121174] = {
			["encounterName"] = "Gekkan",
			["source"] = "Harthak Flameseeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61392,
		},
		[265523] = {
			["source"] = "Bloodsworn Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133912,
		},
		[195234] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Wavebinder",
			["npcID"] = 97170,
		},
		[392484] = {
			["source"] = "Moskhoi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195093,
		},
		[378150] = {
			["source"] = "Primalist Infiltrator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189869,
		},
		[18651] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Garrison Marksman",
			["npcID"] = 88391,
		},
		[308527] = {
			["encounterName"] = "Ravnyr",
			["source"] = "Gor'groth",
			["npcID"] = 156814,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2326,
		},
		[306111] = {
			["encounterName"] = "Wrathion",
			["source"] = "Wrathion",
			["npcID"] = 156818,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2329,
		},
		[265772] = {
			["source"] = "Atal'zul Chosen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 132967,
		},
		[404772] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grugoth the Hullcrusher",
			["npcID"] = 200721,
		},
		[52496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crypt Fiend",
			["npcID"] = 27734,
		},
		[392486] = {
			["source"] = "High Channeler Ryvati",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197535,
		},
		[51587] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Spiritualist",
			["npcID"] = 28410,
		},
		[255644] = {
			["source"] = "Farstrider Elite",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145005,
		},
		[174758] = {
			["source"] = "Grulkor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86157,
		},
		[384296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mara'nar the Thunderous",
			["npcID"] = 196913,
		},
		[271670] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Princess Talanji",
			["npcID"] = 134092,
		},
		[388392] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unruly Textbook",
			["npcID"] = 196044,
		},
		[398631] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crackshot",
			["npcID"] = 200852,
		},
		[299973] = {
			["source"] = "Killsaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152007,
		},
		[106841] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["npcID"] = 56732,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[408502] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grrrmrrsh Hrrnglscrrrm",
			["npcID"] = 204412,
		},
		[398632] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Deadshot",
			["npcID"] = 203914,
		},
		[302388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vexiona",
			["npcID"] = 151798,
		},
		[378155] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186125,
		},
		[417678] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Meantron 7000",
			["npcID"] = 206131,
		},
		[42729] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2025,
		},
		[170824] = {
			["source"] = "Khargax the Devourer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81537,
		},
		[260409] = {
			["source"] = "Bloodraged Pterrordax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 126618,
		},
		[29582] = {
			["source"] = "Phantom Guest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16409,
		},
		[398634] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Deadshot",
			["npcID"] = 203914,
		},
		[360432] = {
			["source"] = "Toadious",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184395,
		},
		[369573] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184581,
		},
		[89105] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lurking Tempest",
			["npcID"] = 45704,
		},
		[158414] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iron Grunt",
			["npcID"] = 91599,
		},
		[159085] = {
			["source"] = "Blackrock Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81422,
		},
		[289722] = {
			["source"] = "Nathanos Blightcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147187,
		},
		[404779] = {
			["source"] = "Contamination Investigator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202320,
		},
		[365872] = {
			["encounterName"] = "Anduin Wrynn",
			["source"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181954,
		},
		[169341] = {
			["source"] = "Grom'kar Footsoldier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81283,
		},
		[388000] = {
			["source"] = "Bertinuat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196288,
		},
		[303158] = {
			["source"] = "Zanj'ir Myrmidon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153960,
		},
		[16564] = {
			["source"] = "D-1000",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 49268,
		},
		[373680] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188252,
		},
		[172714] = {
			["source"] = "Botani Greensworn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80696,
		},
		[15982] = {
			["encounterName"] = "Antu'sul",
			["source"] = "Antu'sul",
			["encounterID"] = 595,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8127,
		},
		[195046] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Oracle",
			["npcID"] = 95861,
		},
		[258864] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashvane Marine",
			["npcID"] = 130027,
		},
		[32346] = {
			["encounterName"] = "Exarch Maladaar",
			["source"] = "Exarch Maladaar",
			["npcID"] = 18373,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1889,
		},
		[371358] = {
			["source"] = "Unstable Curator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187154,
		},
		[374066] = {
			["source"] = "Primalist Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190345,
		},
		[385574] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[417872] = {
			["source"] = "Freya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205304,
		},
		[57984] = {
			["source"] = "Primal Fire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61029,
		},
		[361387] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Antros",
			["npcID"] = 182466,
		},
		[359733] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cipherclad",
			["npcID"] = 181349,
		},
		[79913] = {
			["source"] = "General Marstone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45995,
		},
		[388402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Predatory Thresher",
			["npcID"] = 198779,
		},
		[151014] = {
			["source"] = "Razorfen Hidecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74555,
		},
		[359734] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malfunctioned Constructor",
			["npcID"] = 181870,
		},
		[394838] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Henlare",
			["npcID"] = 193229,
		},
		[388716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[305236] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Venomweaver",
			["npcID"] = 161229,
		},
		[169851] = {
			["source"] = "Addled Arcanomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84990,
		},
		[84013] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Agatha",
			["npcID"] = 44951,
		},
		[375716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Primalist Mage",
			["npcID"] = 191206,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[300351] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decimator Shiq'voth",
			["npcID"] = 153943,
		},
		[385955] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Intinosa",
			["npcID"] = 195354,
		},
		[392098] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[265540] = {
			["source"] = "Fetid Maggot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130909,
		},
		[198963] = {
			["encounterName"] = "Naraxas",
			["source"] = "Naraxas",
			["npcID"] = 91005,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1792,
		},
		[151566] = {
			["source"] = "Bloodmaul Magma Binder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74349,
		},
		[153581] = {
			["source"] = "Soaring Chakram Master",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76132,
		},
		[268028] = {
			["source"] = "Living Current",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134144,
		},
		[54962] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Dragonflayer Strategist",
			["npcID"] = 23956,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2026,
		},
		[55218] = {
			["encounterName"] = "Gal'darah",
			["source"] = "Gal'darah",
			["encounterID"] = 1981,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29306,
		},
		[419123] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[402050] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[374073] = {
			["source"] = "Primalist Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190345,
		},
		[374699] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[417683] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fury of N'zoth",
			["npcID"] = 205307,
		},
		[396599] = {
			["source"] = "Fulgurb",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193170,
		},
		[365883] = {
			["source"] = "Dominated Architect",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181045,
		},
		[393855] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Web-Queen Ashkaz",
			["npcID"] = 192983,
		},
		[304451] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Siltridge Marauder",
			["npcID"] = 152541,
		},
		[396600] = {
			["source"] = "Gorger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192759,
		},
		[396825] = {
			["source"] = "Rimebound Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195836,
		},
		[182217] = {
			["source"] = "Jailer Zerus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91672,
		},
		[40832] = {
			["encounterName"] = "Illidan Stormrage",
			["source"] = "Illidan Stormrage",
			["encounterID"] = 609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 22917,
		},
		[388410] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[176606] = {
			["source"] = "Sulfuric Ooze",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85960,
		},
		[168929] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["source"] = "Skulloc",
			["encounterID"] = 1754,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83612,
		},
		[260072] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pa'kura Priest",
			["npcID"] = 131834,
		},
		[200700] = {
			["encounterName"] = "Dargrul the Underking",
			["source"] = "Dargrul",
			["encounterID"] = 1793,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91007,
		},
		[199341] = {
			["encounterName"] = "Fenryr",
			["source"] = "Valarjar Trapper",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96934,
		},
		[359743] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malfunctioned Constructor",
			["npcID"] = 181870,
		},
		[306866] = {
			["encounterName"] = "Ra-den the Despoiled",
			["source"] = "Ra-den",
			["encounterID"] = 2331,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156866,
		},
		[387740] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tyrhold Watcher",
			["npcID"] = 192696,
		},
		[365887] = {
			["source"] = "Eternal Forger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184878,
		},
		[79884] = {
			["source"] = "Instructor Rufus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48922,
		},
		[407504] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["npcID"] = 198999,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2671,
		},
		[374361] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["npcID"] = 190609,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2565,
		},
		[365888] = {
			["source"] = "Dominated Eradicator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184879,
		},
		[303563] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lesser Zoatroid",
			["npcID"] = 152067,
		},
		[402748] = {
			["source"] = "Molten Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202284,
		},
		[153268] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Exhumer",
			["npcID"] = 77700,
		},
		[374080] = {
			["source"] = "Primalist Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190348,
		},
		[31707] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Elemental",
			["npcID"] = 78116,
		},
		[394558] = {
			["source"] = "Unstable Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198577,
		},
		[404364] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["npcID"] = 202789,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2671,
		},
		[390463] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[151548] = {
			["source"] = "Bloodmaul Ogre Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75272,
		},
		[15585] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Healer",
			["npcID"] = 17730,
		},
		[259752] = {
			["source"] = "Hand of Fate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131613,
		},
		[302964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ma'haat the Indomitable",
			["npcID"] = 151739,
		},
		[147646] = {
			["source"] = "Crag Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72807,
		},
		[313945] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Crusher",
			["npcID"] = 161218,
		},
		[152964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Spawn",
			["npcID"] = 75652,
		},
		[377421] = {
			["source"] = "Amberfur Prowler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187455,
		},
		[88308] = {
			["encounterName"] = "Altairus",
			["source"] = "Altairus",
			["npcID"] = 43873,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1041,
		},
		[307303] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zan-Tien Caller",
			["npcID"] = 153095,
		},
		[12039] = {
			["encounterName"] = "Watchkeeper Gargolmar",
			["source"] = "Hellfire Watcher",
			["npcID"] = 17309,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1893,
		},
		[266285] = {
			["source"] = "Stillwater Crocolisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156760,
		},
		[106856] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["npcID"] = 56732,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[414041] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Goblin Shredder",
			["npcID"] = 200964,
		},
		[20801] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imp Minion",
			["npcID"] = 12922,
		},
		[199345] = {
			["encounterName"] = "Dresaron",
			["source"] = "Dresaron",
			["encounterID"] = 1838,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99200,
		},
		[204243] = {
			["isChanneled"] = true,
			["source"] = "Nightmare Dweller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 101991,
		},
		[390715] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[52660] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Agent",
			["npcID"] = 28341,
		},
		[382277] = {
			["source"] = "Balara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193457,
		},
		[31999] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void-Twisted Invader",
			["npcID"] = 151742,
		},
		[394564] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gillidan",
			["npcID"] = 205036,
		},
		[292910] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Shackler",
			["npcID"] = 167322,
		},
		[406851] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[313938] = {
			["source"] = "Aqir Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 161218,
		},
		[165875] = {
			["source"] = "Keli'dan the Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79702,
		},
		[396613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunscale Behemoth",
			["npcID"] = 193133,
		},
		[215178] = {
			["source"] = "Trained Nightsaber",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148933,
		},
		[294226] = {
			["source"] = "Ma'haat the Indomitable",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151739,
		},
		[417725] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fury of N'zoth",
			["npcID"] = 205307,
		},
		[111854] = {
			["source"] = "Instructor Chillheart",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58633,
		},
		[365898] = {
			["source"] = "Dominated Eradicator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183413,
		},
		[408901] = {
			["source"] = "Animated Contaminant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202270,
		},
		[394567] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gillidan",
			["npcID"] = 205036,
		},
		[388424] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[415045] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nixke Voltscroll",
			["npcID"] = 200965,
		},
		[387960] = {
			["source"] = "Caldera Stomper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187919,
		},
		[402759] = {
			["source"] = "Molten Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202284,
		},
		[173751] = {
			["source"] = "Malkor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83452,
		},
		[174775] = {
			["source"] = "Infested Ogron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82062,
		},
		[157387] = {
			["source"] = "Thunderlord Eagle-Eye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78962,
		},
		[427333] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rydra Scalegorger",
			["npcID"] = 209048,
		},
		[412999] = {
			["source"] = "Winglord Dezran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201677,
		},
		[415047] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Headless Horseman",
			["npcID"] = 207438,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2725,
		},
		[7967] = {
			["encounterName"] = "Mutanus the Devourer",
			["source"] = "Mutanus the Devourer",
			["npcID"] = 3654,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 592,
		},
		[172728] = {
			["source"] = "Creeping Vine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85538,
		},
		[372045] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Caustic Spiderling",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189233,
		},
		[120160] = {
			["encounterName"] = "Trial of the King",
			["source"] = "Haiyan the Unstoppable",
			["encounterID"] = 1442,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61445,
		},
		[400714] = {
			["source"] = "Nidharr",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201310,
		},
		[419144] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[169657] = {
			["source"] = "Twisted Abomination",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84767,
		},
		[195254] = {
			["encounterName"] = "Amalgam of Souls",
			["source"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1832,
		},
		[335187] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Engulfer",
			["npcID"] = 183516,
		},
		[266106] = {
			["source"] = "Feral Bloodswarmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133835,
		},
		[372047] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defier Draghar",
			["npcID"] = 187897,
		},
		[223923] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupted Totem",
			["npcID"] = 112474,
		},
		[296372] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Subjugator Klontzas",
			["npcID"] = 152612,
		},
		[205231] = {
			["encounterName"] = "Terros",
			["source"] = "Darkglare",
			["npcID"] = 103673,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[259759] = {
			["source"] = "Hand of Fate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131613,
		},
		[54965] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Runecaster",
			["npcID"] = 23960,
		},
		[60211] = {
			["source"] = "Dragonflayer Forge Master",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24079,
		},
		[265088] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[149181] = {
			["source"] = "Grom'kar Grunt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82047,
		},
		[118297] = {
			["source"] = "Primal Fire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61029,
		},
		[384336] = {
			["source"] = "Nokhud Plainstomper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191847,
		},
		[402766] = {
			["source"] = "Sundered Flame Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203616,
		},
		[413005] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Additive",
			["npcID"] = 205672,
		},
		[194611] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Hunter",
			["npcID"] = 98926,
		},
		[179898] = {
			["source"] = "Darkmoon Tonk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90304,
		},
		[106851] = {
			["source"] = "Stout Brew Alemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59519,
		},
		[265568] = {
			["source"] = "Befouled Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133685,
		},
		[390481] = {
			["source"] = "Uranto the Swift",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191103,
		},
		[214988] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Vengeance",
			["npcID"] = 100364,
		},
		[427341] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rydra Scalegorger",
			["npcID"] = 209048,
		},
		[34232] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Elf Mage-Priest",
			["npcID"] = 27747,
		},
		[330604] = {
			["source"] = "Vault Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200375,
		},
		[392530] = {
			["source"] = "Quarry Infuser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197799,
		},
		[271713] = {
			["source"] = "Azerite Leviathan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152572,
		},
		[413008] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Highmountain Seer",
			["npcID"] = 201578,
		},
		[390483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverbend Gnasher",
			["npcID"] = 189337,
		},
		[196808] = {
			["source"] = "Mo'arg Brutalizer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95984,
		},
		[361815] = {
			["encounterName"] = "Anduin Wrynn",
			["source"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181954,
		},
		[265019] = {
			["source"] = "Chosen Blood Matron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131436,
		},
		[314083] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crazed Huojin Defender",
			["npcID"] = 159335,
		},
		[155327] = {
			["encounterName"] = "Soulbinder Nyami",
			["source"] = "Soulbinder Nyami",
			["encounterID"] = 1685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76177,
		},
		[213688] = {
			["source"] = "Fel Lord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107024,
		},
		[149184] = {
			["source"] = "Grom'kar Grunt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82047,
		},
		[308575] = {
			["source"] = "Fallen Riftwalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158146,
		},
		[56933] = {
			["encounterName"] = "Frozen Commander",
			["source"] = "Alliance Ranger",
			["encounterID"] = 519,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26802,
		},
		[271716] = {
			["source"] = "Infused Bedrock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 137906,
		},
		[396629] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Territorial Coastling",
			["npcID"] = 193163,
		},
		[398677] = {
			["source"] = "Irontide Cutthroat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200849,
		},
		[366326] = {
			["source"] = "Foul Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183497,
		},
		[83877] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oathsworn Wanderer",
			["npcID"] = 44926,
		},
		[413012] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Additive",
			["npcID"] = 205671,
		},
		[200105] = {
			["source"] = "Ghostly Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98368,
		},
		[151274] = {
			["encounterName"] = "Warlord Ramtusk",
			["source"] = "Aggem Thorncurse",
			["encounterID"] = 1659,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75149,
		},
		[214004] = {
			["source"] = "Crazed Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97587,
		},
		[413013] = {
			["encounterName"] = "Chronikar",
			["source"] = "Chronikar",
			["npcID"] = 198995,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2666,
		},
		[397096] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malsegan",
			["npcID"] = 193212,
		},
		[425300] = {
			["isChanneled"] = true,
			["source"] = "Zaqali Flamemancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210170,
		},
		[312674] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Necromantic Scourer",
			["npcID"] = 161388,
		},
		[149186] = {
			["source"] = "Grom'kar Grunt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82047,
		},
		[191527] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blade Dancer Illianna",
			["npcID"] = 96657,
		},
		[280462] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Watcher Aum-ka",
			["npcID"] = 154619,
		},
		[419158] = {
			["source"] = "Invading Infernal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206765,
		},
		[273768] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wastewander Mender",
			["npcID"] = 154499,
		},
		[398681] = {
			["source"] = "Frigid Binder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200623,
		},
		[194545] = {
			["source"] = "Kael'thas Sunstrider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144913,
		},
		[173265] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amorph Annihilator",
			["npcID"] = 86620,
		},
		[223100] = {
			["source"] = "Dreadheart Ruiner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112021,
		},
		[29927] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spell Shade",
			["npcID"] = 16525,
		},
		[392539] = {
			["source"] = "Awakened Terrasentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197801,
		},
		[289635] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "7th Legion Medic",
			["npcID"] = 147825,
		},
		[273770] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wastewander Mender",
			["npcID"] = 154499,
		},
		[406874] = {
			["source"] = "Contaminated Krolusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204310,
		},
		[394763] = {
			["source"] = "Private Shikzar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193127,
		},
		[195473] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gritslime Snail",
			["npcID"] = 91786,
		},
		[331108] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bubbleblood",
			["npcID"] = 162727,
		},
		[423257] = {
			["source"] = "Druid of the Moon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210686,
		},
		[299110] = {
			["source"] = "Annihilator Lak'hal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153942,
		},
		[312679] = {
			["isChanneled"] = true,
			["source"] = "Tidal Corruptor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 153910,
		},
		[101223] = {
			["encounterName"] = "Alysrazor",
			["source"] = "Blazing Talon Initiate",
			["npcID"] = 53369,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1206,
		},
		[382303] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[384351] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[312680] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless Dominator",
			["npcID"] = 160550,
		},
		[173762] = {
			["source"] = "Malkor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83452,
		},
		[423259] = {
			["source"] = "Wildfire Blazekin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210685,
		},
		[306828] = {
			["encounterName"] = "Thrall the Corrupted",
			["source"] = "Thrall",
			["encounterID"] = 2332,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152089,
		},
		[112998] = {
			["source"] = "Residual Hatred",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58803,
		},
		[307863] = {
			["encounterName"] = "Inquisitor Gnshal",
			["source"] = "Inquisitor Gnshal",
			["encounterID"] = 2371,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 156161,
		},
		[162500] = {
			["encounterName"] = "Rocketspark and Borka",
			["source"] = "Railmaster Rocketspark",
			["encounterID"] = 1715,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77803,
		},
		[384353] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[279264] = {
			["source"] = "Kaldorei Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205892,
		},
		[82794] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oathsworn Wanderer",
			["npcID"] = 44926,
		},
		[223933] = {
			["source"] = "Violetsail Bruisebringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 179737,
		},
		[408927] = {
			["source"] = "Animated Contaminant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202270,
		},
		[17274] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Injured Warsong Mage",
			["npcID"] = 27107,
		},
		[413023] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lerai, Timesworn Maiden",
			["npcID"] = 205152,
		},
		[260793] = {
			["encounterName"] = "Cragmaw the Infested",
			["source"] = "Cragmaw the Infested",
			["encounterID"] = 2118,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131817,
		},
		[300514] = {
			["source"] = "Scrapbone Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150146,
		},
		[59575] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Dalronn the Controller",
			["encounterID"] = 2024,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24201,
		},
		[413024] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valow, Timesworn Keeper",
			["npcID"] = 201222,
		},
		[199361] = {
			["encounterName"] = "Fenryr",
			["source"] = "Valarjar Trapper",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96934,
		},
		[289623] = {
			["source"] = "7th Legion Medic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147825,
		},
		[417868] = {
			["source"] = "Druid of the Claw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210684,
		},
		[194242] = {
			["source"] = "Witchwood Hag",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95310,
		},
		[87779] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Temple Adept",
			["npcID"] = 45935,
		},
		[18399] = {
			["source"] = "Shadowmoon Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17395,
		},
		[410978] = {
			["encounterName"] = "Echo of Neltharion",
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Dragonhunter",
			["npcID"] = 202108,
		},
		[387910] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Algeth'ar Echoknight",
			["npcID"] = 196200,
		},
		[398692] = {
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199502,
		},
		[395833] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mara'nar the Thunderous",
			["npcID"] = 196913,
		},
		[193951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Barbed Spiderling",
			["npcID"] = 97677,
		},
		[396645] = {
			["source"] = "Elusive Elder Rockfang",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194085,
		},
		[323048] = {
			["source"] = "Blistering Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 160345,
		},
		[190898] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirana Starlight",
			["npcID"] = 99451,
		},
		[394598] = {
			["source"] = "Shade of Grief",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187559,
		},
		[396646] = {
			["source"] = "Loamas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199030,
		},
		[287565] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Lady Jaina Proudmoore",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146409,
		},
		[376169] = {
			["source"] = "High Thaumaturge Fural",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189905,
		},
		[209602] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[359233] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["source"] = "Halondrus",
			["encounterID"] = 2529,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181047,
		},
		[406886] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["npcID"] = 198997,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2668,
		},
		[376170] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[312690] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anq'uri the Titanic",
			["npcID"] = 155703,
		},
		[299431] = {
			["source"] = "Malfunctioning Scraphound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151301,
		},
		[174791] = {
			["source"] = "Ironwing Flamespitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86373,
		},
		[376171] = {
			["source"] = "Primalist Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190377,
		},
		[386410] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[313363] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terror Tendril",
			["npcID"] = 160676,
		},
		[193502] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glayvianna Soulrender",
			["npcID"] = 98177,
		},
		[393385] = {
			["source"] = "Chalsec of the Earth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193847,
		},
		[402793] = {
			["source"] = "Gholna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199853,
		},
		[322931] = {
			["source"] = "Predatory Bloodtusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158752,
		},
		[174792] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ironwing Flamespitter",
			["npcID"] = 86373,
		},
		[59359] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'ar Venomancer",
			["encounterID"] = 1973,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29217,
		},
		[315900] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Dunewalker",
			["npcID"] = 162171,
		},
		[194956] = {
			["encounterName"] = "Amalgam of Souls",
			["source"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1832,
		},
		[374126] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Plains Bull",
			["npcID"] = 195261,
		},
		[384365] = {
			["source"] = "Nokhud Plainstomper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191847,
		},
		[378222] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cascade Swog",
			["npcID"] = 191561,
		},
		[15472] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Warlock",
			["npcID"] = 17371,
		},
		[15536] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Flamecaller",
			["npcID"] = 38926,
		},
		[384366] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hunting Redbeak",
			["npcID"] = 198824,
		},
		[58967] = {
			["source"] = "Drakkari Battle Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29836,
		},
		[428526] = {
			["encounterName"] = "Ozumat",
			["source"] = "Splotch",
			["npcID"] = 213806,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[191524] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blade Dancer Illianna",
			["npcID"] = 96657,
		},
		[203163] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felspite Dominator",
			["npcID"] = 102788,
		},
		[300414] = {
			["source"] = "Scrapbone Grinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150143,
		},
		[157388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderlord Looter",
			["npcID"] = 78365,
		},
		[403201] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ishyra",
			["npcID"] = 200579,
		},
		[312884] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deeplord Zrihj",
			["npcID"] = 154559,
		},
		[271841] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imperial Enforcer",
			["npcID"] = 157002,
		},
		[372082] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[183202] = {
			["source"] = "Dread-Rider Malwick",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90902,
		},
		[196296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormwake Hydra",
			["npcID"] = 91792,
		},
		[312118] = {
			["source"] = "Guardian of the Tombs",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127072,
		},
		[420347] = {
			["source"] = "Kaldorei Archdruid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211066,
		},
		[420647] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashendir Hartwood",
			["npcID"] = 211258,
		},
		[400752] = {
			["source"] = "Travard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198947,
		},
		[391903] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ruby Egg Guardian",
			["npcID"] = 190171,
		},
		[202913] = {
			["encounterName"] = "Tirathon Saltheril",
			["source"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1815,
		},
		[409018] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Failed Prototype",
			["npcID"] = 203927,
		},
		[201123] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vilethorn Blossom",
			["npcID"] = 99360,
		},
		[373545] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tranquil Tideskipper",
			["npcID"] = 192148,
		},
		[157390] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderlord Packleader",
			["npcID"] = 78960,
		},
		[166605] = {
			["source"] = "Frenzied Forager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83449,
		},
		[319465] = {
			["source"] = "Ambitious Duelist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 164184,
		},
		[342168] = {
			["source"] = "Champion of Wisdom",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 170833,
		},
		[44475] = {
			["source"] = "Sunblade Mage Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24683,
		},
		[418591] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208367,
		},
		[408946] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Preserver",
			["npcID"] = 198870,
		},
		[427376] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilgoblin Hunter",
			["npcID"] = 40935,
		},
		[372087] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defier Draghar",
			["npcID"] = 187897,
		},
		[374135] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pinehoof Bull",
			["npcID"] = 193595,
		},
		[422078] = {
			["source"] = "Emerald Wingguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210278,
		},
		[251683] = {
			["source"] = "Imp Mother Laglath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 125820,
		},
		[63830] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Sara",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33134,
		},
		[394843] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oshigol",
			["npcID"] = 193235,
		},
		[147516] = {
			["source"] = "Eroded Cliffdweller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72809,
		},
		[11538] = {
			["source"] = "Marius Sunshard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113542,
		},
		[413044] = {
			["source"] = "Grotesque Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138187,
		},
		[374137] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Parched Broadhoof Bull",
			["npcID"] = 194352,
		},
		[257732] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Enforcer",
			["npcID"] = 129602,
		},
		[174912] = {
			["source"] = "Skothwa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79500,
		},
		[256222] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gentle Goat",
			["npcID"] = 129110,
		},
		[417227] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blood Horde Reaver",
			["npcID"] = 207585,
		},
		[376186] = {
			["source"] = "Overseer Lahar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189235,
		},
		[402807] = {
			["source"] = "Glittering Shard Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202326,
		},
		[82800] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Footman",
			["npcID"] = 68485,
		},
		[398712] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[83824] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Venture Co. Geologist",
			["npcID"] = 1096,
		},
		[410999] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Armored Mistral",
			["npcID"] = 45915,
		},
		[396665] = {
			["source"] = "Magmas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199027,
		},
		[274631] = {
			["source"] = "Ironhull Apprentice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 139799,
		},
		[204492] = {
			["source"] = "Jandvik Bonepiercer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100948,
		},
		[411000] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Armored Mistral",
			["npcID"] = 45915,
		},
		[372093] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Blister",
			["npcID"] = 197413,
		},
		[56858] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Worshipper",
			["npcID"] = 30111,
		},
		[429615] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[411001] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lurking Tempest",
			["npcID"] = 45704,
		},
		[374343] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["npcID"] = 190609,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2565,
		},
		[202661] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Fel Scorcher",
			["npcID"] = 102583,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[376190] = {
			["isChanneled"] = true,
			["source"] = "Brackenhide Rotflinger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186362,
		},
		[427384] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilgoblin Hunter",
			["npcID"] = 40935,
		},
		[335505] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stygian Behemoth",
			["npcID"] = 181064,
		},
		[300424] = {
			["source"] = "Scrapbone Bully",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150160,
		},
		[83825] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Venture Co. Shredder",
			["npcID"] = 4260,
		},
		[420525] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208363,
		},
		[323058] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Salvage Dredger",
			["npcID"] = 165609,
		},
		[200050] = {
			["encounterName"] = "Shade of Xavius",
			["source"] = "Shade of Xavius",
			["encounterID"] = 1839,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99192,
		},
		[392574] = {
			["source"] = "High Channeler Ryvati",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197535,
		},
		[394622] = {
			["source"] = "Gnarls",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197354,
		},
		[419975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Splinterlimb",
			["npcID"] = 209365,
		},
		[58980] = {
			["source"] = "Drakkari Medicine Man",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29826,
		},
		[257736] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Stormcaller",
			["npcID"] = 126919,
		},
		[427727] = {
			["source"] = "Reefbreaker Moruud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209898,
		},
		[423410] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lethka",
			["npcID"] = 208740,
		},
		[65210] = {
			["encounterName"] = "Yogg-Saron",
			["source"] = "Mimiron",
			["encounterID"] = 1143,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33412,
		},
		[392576] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Channeler",
			["npcID"] = 198047,
		},
		[369328] = {
			["isChanneled"] = true,
			["source"] = "Runic Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184107,
		},
		[414280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eternus",
			["npcID"] = 208168,
		},
		[406911] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Champion",
			["npcID"] = 201288,
		},
		[408959] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[378886] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Turi Flickerflame",
			["npcID"] = 199740,
		},
		[418531] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["encounterID"] = 2709,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200926,
		},
		[406083] = {
			["isChanneled"] = true,
			["source"] = "Flesh Spawn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203338,
		},
		[188114] = {
			["encounterName"] = "Rokmora",
			["source"] = "Rokmora",
			["encounterID"] = 1790,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91003,
		},
		[164192] = {
			["source"] = "Grimrail Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81236,
		},
		[59835] = {
			["encounterName"] = "Loken",
			["source"] = "Loken",
			["encounterID"] = 1986,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28923,
		},
		[390531] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uranto the Swift",
			["npcID"] = 191103,
		},
		[392579] = {
			["source"] = "Quarry Stonebreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197831,
		},
		[370054] = {
			["source"] = "Battleseared Magmatusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196772,
		},
		[396675] = {
			["source"] = "Sundered Flame Cleaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203682,
		},
		[427670] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[31287] = {
			["source"] = "Smokemaster Snarl",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81749,
		},
		[106864] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["npcID"] = 56732,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[201872] = {
			["source"] = "Lurking Observer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 154529,
		},
		[415106] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["npcID"] = 198997,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2668,
		},
		[257739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blacktooth Scrapper",
			["npcID"] = 129529,
		},
		[193235] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 94960,
		},
		[413059] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Canister",
			["npcID"] = 206019,
		},
		[365961] = {
			["source"] = "Bound Realmbreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183416,
		},
		[376200] = {
			["source"] = "Forgewrought Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194816,
		},
		[411012] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Young Storm Dragon",
			["npcID"] = 45919,
		},
		[413060] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fire Canister",
			["npcID"] = 206022,
		},
		[300434] = {
			["source"] = "Scrapbone Bully",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150160,
		},
		[428472] = {
			["isChanneled"] = true,
			["source"] = "Ancient Core Hound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210295,
		},
		[175997] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Dulhu",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83894,
		},
		[282676] = {
			["source"] = "Blightgut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145811,
		},
		[195284] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Restless Tides",
			["npcID"] = 97173,
		},
		[46187] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Zelfan",
			["encounterID"] = 1895,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24556,
		},
		[417752] = {
			["source"] = "Overlord Mechagon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205309,
		},
		[372107] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["npcID"] = 189232,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2606,
		},
		[300436] = {
			["source"] = "Scrapbone Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150146,
		},
		[200404] = {
			["encounterName"] = "Dargrul the Underking",
			["source"] = "Dargrul",
			["encounterID"] = 1793,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91007,
		},
		[152282] = {
			["source"] = "Kraulshaped Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75384,
		},
		[394798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azra's Prized Peony",
			["npcID"] = 193135,
		},
		[68982] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36502,
		},
		[400777] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[263578] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilnean Battlemage",
			["npcID"] = 134192,
		},
		[428695] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["encounterID"] = 2786,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209090,
		},
		[204852] = {
			["isChanneled"] = true,
			["source"] = "Nightmare Dweller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 101991,
		},
		[408969] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Mud",
			["npcID"] = 192519,
		},
		[194951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scarlet Siegemaster",
			["npcID"] = 211937,
		},
		[169689] = {
			["source"] = "Diving Chakram Spinner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76116,
		},
		[154331] = {
			["source"] = "Grove Cultivator Kados",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133104,
		},
		[408970] = {
			["source"] = "Sundered Preserver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205735,
		},
		[20787] = {
			["source"] = "Blazing Fireguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8910,
		},
		[88186] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Empyrean Assassin",
			["npcID"] = 45922,
		},
		[15537] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Necromancer",
			["npcID"] = 28200,
		},
		[427638] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nuoberon",
			["npcID"] = 209113,
		},
		[168666] = {
			["encounterName"] = "Yalnu",
			["source"] = "Lady Baihu",
			["npcID"] = 84358,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1756,
		},
		[210645] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Withered Fiend",
			["npcID"] = 98733,
		},
		[428139] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["npcID"] = 82682,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1751,
		},
		[376208] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[419211] = {
			["source"] = "Felbark the Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207094,
		},
		[222932] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Gorroc",
			["npcID"] = 111856,
		},
		[427694] = {
			["source"] = "Reefbreaker Moruud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209898,
		},
		[427579] = {
			["source"] = "Stalwart Bristlebruin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210507,
		},
		[150658] = {
			["source"] = "Kraulshaper Tukaar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74900,
		},
		[421260] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[410225] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2677,
		},
		[288301] = {
			["source"] = "Tyrande Whisperwind",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146989,
		},
		[304539] = {
			["source"] = "Expedition Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 152147,
		},
		[428674] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["npcID"] = 40792,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[319966] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lobber Jalrax",
			["npcID"] = 161016,
		},
		[408975] = {
			["source"] = "Sundered Edgelord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198873,
		},
		[345495] = {
			["source"] = "Frothing Pustule",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 175519,
		},
		[396689] = {
			["source"] = "Worldcarver A'tir",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186859,
		},
		[421570] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208365,
		},
		[392594] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Meatgrinder Sotok",
			["npcID"] = 186777,
		},
		[35008] = {
			["encounterName"] = "Rokmar the Crackler",
			["source"] = "Rokmar the Crackler",
			["npcID"] = 17991,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1941,
		},
		[423491] = {
			["source"] = "Raelas Firewind",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209152,
		},
		[428765] = {
			["source"] = "Tindral Sageswift",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209090,
		},
		[302494] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grip of Horror",
			["npcID"] = 151872,
		},
		[426147] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[12468] = {
			["encounterName"] = "Jammal'an the Prophet",
			["source"] = "Jammal'an the Prophet",
			["encounterID"] = 488,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5710,
		},
		[390548] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[163550] = {
			["encounterName"] = "Nitrogg Thundertower",
			["source"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79545,
		},
		[421340] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Anvil",
			["npcID"] = 206478,
		},
		[260907] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Solena",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131824,
		},
		[200674] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Vile Soulmaster",
			["npcID"] = 97014,
		},
		[420476] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crustbreaker Conduit",
			["npcID"] = 207038,
		},
		[301177] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["source"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150190,
		},
		[422039] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["encounterID"] = 2820,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209333,
		},
		[255824] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dazar'ai Juggernaut",
			["npcID"] = 122971,
		},
		[169929] = {
			["encounterName"] = "Yalnu",
			["source"] = "Flourishing Ancient",
			["npcID"] = 84400,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1756,
		},
		[387465] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arcane Commander",
			["npcID"] = 190776,
		},
		[197745] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilskar Sea-Caller",
			["npcID"] = 96884,
		},
		[421400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Spear",
			["npcID"] = 209973,
		},
		[424315] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Druid of the Moon",
			["npcID"] = 211086,
		},
		[296355] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Subjugator Klontzas",
			["npcID"] = 152612,
		},
		[264150] = {
			["source"] = "Thornguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131858,
		},
		[415125] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["npcID"] = 207639,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2668,
		},
		[114548] = {
			["encounterName"] = "Yan-Zhu the Uncasked",
			["source"] = "Yan-Zhu the Uncasked",
			["encounterID"] = 1414,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59479,
		},
		[419221] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cho'gall",
			["npcID"] = 208212,
		},
		[173791] = {
			["source"] = "Tangleheart Cultivator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82322,
		},
		[308643] = {
			["source"] = "Haywire Clockwork Rocket Bot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158279,
		},
		[199758] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Immolanth",
			["npcID"] = 96682,
		},
		[421398] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["encounterID"] = 2786,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209090,
		},
		[176280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Everbloom Waterspeaker",
			["npcID"] = 88261,
		},
		[395017] = {
			["source"] = "Massive Magmashell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193152,
		},
		[204666] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["encounterID"] = 1837,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103344,
		},
		[419223] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cho'gall",
			["npcID"] = 208212,
		},
		[204896] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spellfiend Devourer",
			["npcID"] = 114406,
		},
		[308645] = {
			["source"] = "Reprogrammed Warbot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158286,
		},
		[84165] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempered War Golem",
			["npcID"] = 5853,
		},
		[209628] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[153315] = {
			["encounterName"] = "Ranjit",
			["source"] = "Ranjit",
			["encounterID"] = 1698,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75964,
		},
		[275882] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ettin Earthcrusher",
			["npcID"] = 136421,
		},
		[264923] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[394652] = {
			["source"] = "Infernum",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193648,
		},
		[222939] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Gorroc",
			["npcID"] = 111856,
		},
		[327296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Archilon",
			["npcID"] = 158867,
		},
		[216796] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Seirdr",
			["npcID"] = 93444,
		},
		[427417] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prophet of the Flame",
			["npcID"] = 207315,
		},
		[87180] = {
			["source"] = "Summoned Water Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46820,
		},
		[398749] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Bulwark",
			["npcID"] = 200850,
		},
		[38391] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Searing Destroyer",
			["npcID"] = 46260,
		},
		[382576] = {
			["isChanneled"] = true,
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184131,
		},
		[372129] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[27634] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Garaxxas",
			["encounterID"] = 1895,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24555,
		},
		[384416] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[288410] = {
			["encounterName"] = "Mekkatorque",
			["source"] = "High Tinker Mekkatorque",
			["encounterID"] = 2276,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144796,
		},
		[35124] = {
			["source"] = "Sunseeker Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 18420,
		},
		[390560] = {
			["source"] = "Norbett",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190968,
		},
		[120416] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Agitated Seedstealer",
			["npcID"] = 61302,
		},
		[419229] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cho'gall",
			["npcID"] = 208212,
		},
		[396877] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enraged Air Elemental",
			["npcID"] = 196155,
		},
		[12466] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unliving Sorcerer",
			["npcID"] = 18499,
		},
		[39121] = {
			["source"] = "Bloodwarder Greenkeeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 18419,
		},
		[296365] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Subjugator Klontzas",
			["npcID"] = 152612,
		},
		[282031] = {
			["encounterName"] = "Jadefire Masters",
			["source"] = "Mestrah",
			["npcID"] = 144690,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2266,
		},
		[68988] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["encounterID"] = 2006,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36497,
		},
		[191848] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Serpentrix",
			["npcID"] = 91808,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1813,
		},
		[35010] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Mennu the Betrayer",
			["npcID"] = 17941,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1939,
		},
		[59839] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran",
			["encounterID"] = 1978,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29304,
		},
		[267824] = {
			["source"] = "Soul Essence",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135240,
		},
		[417184] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eviscerator Kintara",
			["npcID"] = 207596,
		},
		[34661] = {
			["encounterName"] = "Thorngrin the Tender",
			["source"] = "Thorngrin the Tender",
			["encounterID"] = 1928,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17978,
		},
		[161510] = {
			["source"] = "Mandrakor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84406,
		},
		[264525] = {
			["source"] = "Maddened Survivalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131850,
		},
		[417185] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eviscerator Kintara",
			["npcID"] = 207596,
		},
		[263604] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Haunted Servitor",
			["npcID"] = 137587,
		},
		[165606] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sol-Shaper Krashyx",
			["npcID"] = 82285,
		},
		[424234] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amirdrassil Sentinel",
			["npcID"] = 207769,
		},
		[200418] = {
			["encounterName"] = "Dargrul the Underking",
			["source"] = "Dargrul",
			["npcID"] = 91007,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1793,
		},
		[165193] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stele",
			["npcID"] = 72627,
		},
		[396709] = {
			["source"] = "Servant of Kruul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206861,
		},
		[391268] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Earthwrought Smasher",
			["npcID"] = 197595,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[268306] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lady Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131545,
		},
		[172774] = {
			["source"] = "Gronn Rockthrower",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80689,
		},
		[282036] = {
			["encounterName"] = "Jadefire Masters",
			["source"] = "Manceroy Flamefist",
			["npcID"] = 144693,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2266,
		},
		[44538] = {
			["source"] = "Ethereum Smuggler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24698,
		},
		[257756] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Buccaneer",
			["npcID"] = 129527,
		},
		[34762] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["encounterID"] = 1926,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17975,
		},
		[314801] = {
			["source"] = "Agustus Moulaine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157700,
		},
		[65215] = {
			["source"] = "Lord Magmathar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 34295,
		},
		[46036] = {
			["source"] = "Sunblade Magister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24685,
		},
		[378282] = {
			["source"] = "Qalashi Thaumaturge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192788,
		},
		[284831] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "King Rastakhan",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145616,
		},
		[289360] = {
			["source"] = "Div'yane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148615,
		},
		[175847] = {
			["source"] = "Y'kish the Deceiver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81266,
		},
		[152298] = {
			["source"] = "Vengeful Magma Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75820,
		},
		[314803] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amahtet",
			["npcID"] = 159320,
		},
		[290955] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "Headhunter Gal'wana",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146326,
		},
		[423771] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[13952] = {
			["source"] = "Lightsworn Vindicator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 22861,
		},
		[287333] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "Bwonsamdi",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145644,
		},
		[265880] = {
			["source"] = "Matron Alma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135365,
		},
		[134059] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilgewater Blastgineer",
			["npcID"] = 67884,
		},
		[113017] = {
			["encounterName"] = "Sha of Doubt",
			["source"] = "Zao Sunseeker",
			["encounterID"] = 1439,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58826,
		},
		[418059] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["npcID"] = 203679,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[286779] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "Phantom of Slaughter",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146493,
		},
		[359856] = {
			["encounterName"] = "The Jailer",
			["source"] = "The Jailer",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180990,
		},
		[427432] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prophet of the Flame",
			["npcID"] = 207315,
		},
		[250114] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Emerald Dragon Whelp",
			["npcID"] = 8776,
		},
		[22883] = {
			["source"] = "Atal'ai High Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5273,
		},
		[244665] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ember of Azzinoth",
			["npcID"] = 122712,
		},
		[333929] = {
			["source"] = "Ylva",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 177444,
		},
		[396717] = {
			["source"] = "Cyclas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199029,
		},
		[308664] = {
			["source"] = "Craggle Wobbletop",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 158284,
		},
		[360373] = {
			["encounterName"] = "The Jailer",
			["source"] = "The Jailer",
			["encounterID"] = 2537,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180990,
		},
		[288441] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Lady Jaina Proudmoore",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146409,
		},
		[284399] = {
			["encounterName"] = "Jadefire Masters",
			["source"] = "Living Bomb",
			["npcID"] = 146102,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2266,
		},
		[254959] = {
			["source"] = "Dazar'ai Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122984,
		},
		[32863] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Warlock",
			["npcID"] = 17371,
		},
		[388796] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["encounterID"] = 2563,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 196482,
		},
		[421292] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208365,
		},
		[69056] = {
			["source"] = "Soulguard Watchman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36478,
		},
		[425388] = {
			["source"] = "Flamewaker Infernoguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210295,
		},
		[311267] = {
			["source"] = "Cultist Shadowblade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 159632,
		},
		[372147] = {
			["source"] = "Balara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193457,
		},
		[336037] = {
			["source"] = "Mawsworn Oppressor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181186,
		},
		[290568] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dazari Worshipper",
			["npcID"] = 149569,
		},
		[360949] = {
			["source"] = "Fettered Gunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182430,
		},
		[286695] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "Phantom of Retribution",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146491,
		},
		[316859] = {
			["source"] = "Stoneborn Recruit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 170042,
		},
		[96346] = {
			["encounterName"] = "Zanzil",
			["source"] = "Zanzil",
			["encounterID"] = 1181,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 52053,
		},
		[79937] = {
			["source"] = "Anruin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81998,
		},
		[360737] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dematerializing Worldeater",
			["npcID"] = 181116,
		},
		[398770] = {
			["source"] = "Akiormi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200702,
		},
		[409009] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summitshaper Lorac",
			["npcID"] = 201522,
		},
		[360577] = {
			["isChanneled"] = true,
			["source"] = "Vespoid Worker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 183283,
		},
		[413105] = {
			["encounterName"] = "Chronikar",
			["source"] = "Chronikar",
			["npcID"] = 198995,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2666,
		},
		[406962] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Axe Thrower",
			["npcID"] = 203799,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[425392] = {
			["source"] = "Flamewaker Infernoguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210295,
		},
		[394676] = {
			["source"] = "Council Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198501,
		},
		[372151] = {
			["source"] = "Gutchewer Bear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186284,
		},
		[332272] = {
			["source"] = "Popo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 180028,
		},
		[368085] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sorranos",
			["npcID"] = 183722,
		},
		[370104] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Protector",
			["npcID"] = 186600,
		},
		[404916] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["npcID"] = 198999,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2671,
		},
		[166766] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mawsworn Plunderer",
			["npcID"] = 181061,
		},
		[176127] = {
			["source"] = "Grom'kar Boomer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80935,
		},
		[362976] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Menacing Vespoid Worker",
			["npcID"] = 183721,
		},
		[388535] = {
			["source"] = "Gnawbone Chainchewer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196521,
		},
		[390583] = {
			["source"] = "Norbett",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190968,
		},
		[198833] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Latosius",
			["npcID"] = 98970,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1835,
		},
		[101907] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Strange Snowman",
			["npcID"] = 54523,
		},
		[88959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Temple Adept",
			["npcID"] = 45935,
		},
		[424217] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sparring Sentinel",
			["npcID"] = 216676,
		},
		[36645] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Temperamental Rumbler",
			["npcID"] = 43480,
		},
		[427444] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prophet of the Flame",
			["npcID"] = 207315,
		},
		[388537] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["npcID"] = 194181,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2562,
		},
		[430247] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hallowed Monstrosity",
			["npcID"] = 211933,
		},
		[425397] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Fiery Treant",
			["encounterID"] = 2731,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208459,
		},
		[386490] = {
			["encounterName"] = "Granyth",
			["source"] = "Nokhud Saboteur",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195821,
		},
		[342317] = {
			["source"] = "Cartel Xy Saboteur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181005,
		},
		[304822] = {
			["source"] = "Deepwater Maw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151569,
		},
		[409016] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summitshaper Lorac",
			["npcID"] = 201522,
		},
		[288199] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Lady Jaina Proudmoore",
			["encounterID"] = 2281,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 146409,
		},
		[59842] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran",
			["encounterID"] = 1978,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29304,
		},
		[361088] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cartel Xy Plunderer",
			["npcID"] = 182378,
		},
		[392635] = {
			["source"] = "Kaurdyth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197835,
		},
		[263627] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Jaina Proudmoore",
			["npcID"] = 134201,
		},
		[388540] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "O'nank Shorescour",
			["npcID"] = 193118,
		},
		[397134] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Opalfang",
			["npcID"] = 187772,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[36805] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Kael'thas Sunstrider",
			["npcID"] = 19622,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 733,
		},
		[205549] = {
			["encounterName"] = "Naraxas",
			["source"] = "Naraxas",
			["encounterID"] = 1792,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91005,
		},
		[82064] = {
			["source"] = "John J. Keeshan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43812,
		},
		[284106] = {
			["encounterName"] = "Stormwall Blockade",
			["source"] = "Sister Katherine",
			["npcID"] = 146251,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2280,
		},
		[417210] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Great Glorious Alliance Lieutenant",
			["npcID"] = 207581,
		},
		[86574] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fungal Behemoth",
			["npcID"] = 42475,
		},
		[169714] = {
			["source"] = "Gnarlroot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81984,
		},
		[170738] = {
			["source"] = "Undermage Kesalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85496,
		},
		[430503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Doomshadow",
			["npcID"] = 208029,
		},
		[55811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iron Sentinel",
			["npcID"] = 29984,
		},
		[388918] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[398782] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Farscale Hunter",
			["npcID"] = 200484,
		},
		[376257] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Tarasek Earthreaver",
			["npcID"] = 191225,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[361923] = {
			["encounterName"] = "Lords of Dread",
			["source"] = "Inchoate Shadow",
			["encounterID"] = 2543,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183138,
		},
		[388544] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["npcID"] = 196482,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2563,
		},
		[407245] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shrinekeeper Qanosh",
			["npcID"] = 199839,
		},
		[392640] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderhead",
			["npcID"] = 197698,
		},
		[166714] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terokk",
			["npcID"] = 82820,
		},
		[273871] = {
			["source"] = "Ankylodon Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 123093,
		},
		[177088] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmane Hunter",
			["npcID"] = 82938,
		},
		[151286] = {
			["encounterName"] = "Warlord Ramtusk",
			["source"] = "Aggem Thorncurse",
			["encounterID"] = 1659,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75149,
		},
		[69562] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulguard Bonecaster",
			["npcID"] = 36564,
		},
		[368522] = {
			["source"] = "Zatojin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183764,
		},
		[221059] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gelatinized Decay",
			["npcID"] = 111004,
		},
		[417215] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blood Horde Reaver",
			["npcID"] = 207585,
		},
		[164597] = {
			["source"] = "Bloodmaul Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75198,
		},
		[396738] = {
			["source"] = "The Blue Gulper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195976,
		},
		[170887] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sethek Supplicant",
			["npcID"] = 85570,
		},
		[204677] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Doomguard Firecaller",
			["npcID"] = 114399,
		},
		[210099] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Dominator Tentacle",
			["npcID"] = 105721,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1873,
		},
		[396739] = {
			["source"] = "The Red Gulper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195974,
		},
		[406978] = {
			["source"] = "Contamination Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202319,
		},
		[196916] = {
			["source"] = "Lady Velandras Ravencrest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98538,
		},
		[427456] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[134164] = {
			["source"] = "Alliance Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67900,
		},
		[374215] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[111772] = {
			["source"] = "Scholomance Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 58757,
		},
		[288210] = {
			["source"] = "Arena Challenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 163032,
		},
		[413123] = {
			["source"] = "Forgemaster Kraglin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201625,
		},
		[109952] = {
			["source"] = "Time-Twisted Geist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54511,
		},
		[117372] = {
			["source"] = "Polluted Viseclaw Scuttler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 68584,
		},
		[288211] = {
			["encounterName"] = "Lady Jaina Proudmoore",
			["source"] = "Lady Jaina Proudmoore",
			["encounterID"] = 2281,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146409,
		},
		[396742] = {
			["source"] = "Slobberclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195972,
		},
		[134058] = {
			["source"] = "Bilgewater Blastgineer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67884,
		},
		[132955] = {
			["source"] = "Shieldwall Huntress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 67317,
		},
		[427459] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["npcID"] = 83893,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[421316] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[129617] = {
			["source"] = "Duyi Edgewater",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 65745,
		},
		[107175] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Aqua Dancer",
			["npcID"] = 56867,
		},
		[402887] = {
			["source"] = "Gholna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199853,
		},
		[256865] = {
			["source"] = "Crimsonwood Witch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 137150,
		},
		[382410] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185528,
		},
		[158549] = {
			["source"] = "Rustwing Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 153293,
		},
		[402888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonesifter Marwak",
			["npcID"] = 200681,
		},
		[84868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ferocious Grizzled Bear",
			["npcID"] = 1778,
		},
		[204611] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["encounterID"] = 1837,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103344,
		},
		[34759] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["encounterID"] = 1926,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17975,
		},
		[186302] = {
			["source"] = "Helhound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105532,
		},
		[214771] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Faceless Voidcaster",
			["npcID"] = 99651,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[422023] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2820,
		},
		[30180] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Homunculus",
			["npcID"] = 16539,
		},
		[300764] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Slime Elemental",
			["npcID"] = 151792,
		},
		[163689] = {
			["encounterName"] = "Grimrail Enforcers",
			["source"] = "Ahri'ok Dugru",
			["encounterID"] = 1748,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80816,
		},
		[298485] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scrapbone Trashtosser",
			["npcID"] = 151660,
		},
		[425889] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
	},
}
PlaterLanguage = {
	["language"] = "enUS",
	["version"] = 1,
}
PlaterLogs = {
	["_general_logs"] = {
		"2024-03-06 13:43:09 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [1]
		"2024-03-06 11:58:22 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [2]
		"2024-03-06 00:50:04 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [3]
		"2024-03-05 22:51:49 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [4]
		"2024-03-05 15:11:49 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [5]
		"2024-03-04 19:56:56 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [6]
		"2024-03-04 16:45:55 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [7]
		"2024-03-03 19:59:04 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [8]
		"2024-03-03 19:57:50 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [9]
		"2024-03-03 18:08:36 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [10]
		"2024-03-03 14:48:54 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [11]
		"2024-03-03 14:28:07 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [12]
		"2024-03-03 13:42:55 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [13]
		"2024-03-02 17:56:50 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [14]
		"2024-03-02 17:37:25 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [15]
		"2024-03-02 14:20:51 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [16]
		"2024-03-02 12:53:26 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [17]
		"2024-03-02 12:31:00 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [18]
		"2024-03-01 21:10:02 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Qpfromage", -- [19]
	},
	["_error_logs"] = {
	},
}
