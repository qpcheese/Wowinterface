
PlaterDB = {
["captured_spells"] = {
[16827] = {
["isChanneled"] = false,
["source"] = "Rodent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[421672] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["isChanneled"] = true,
["encounterID"] = 2737,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208478,
},
[421675] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["isChanneled"] = false,
["encounterID"] = 2737,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208478,
},
[260249] = {
["type"] = "BUFF",
["source"] = "Unknown",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[421616] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["isChanneled"] = false,
["encounterID"] = 2737,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208478,
},
[423494] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["isChanneled"] = false,
["encounterID"] = 2737,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208478,
},
[386176] = {
["type"] = "BUFF",
["source"] = "Unknown",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[263856] = {
["isChanneled"] = false,
["source"] = "Rodent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[108446] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[423117] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["isChanneled"] = false,
["encounterID"] = 2737,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208478,
},
[419054] = {
["encounterName"] = "Volcoross",
["type"] = "DEBUFF",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 208478,
},
[420933] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["isChanneled"] = true,
["encounterID"] = 2737,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208478,
},
[420934] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["isChanneled"] = false,
["encounterID"] = 2737,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208478,
},
[421284] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["isChanneled"] = false,
["encounterID"] = 2737,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208478,
},
},
["profileKeys"] = {
["Qpaladin - Ragnaros"] = "qpaladin",
["Qpcheese - Chamber of Aspects"] = "Default",
["Qpcheese - Ragnaros"] = "Mage-MOD",
["Qpc - Draenor"] = "Default",
["Zelen√≠ - Draenor"] = "Default",
["Flurrq - Ragnaros"] = "Default",
["Dogson - Ragnaros"] = "Default",
["Qpfromage - Sylvanas"] = "Default",
["Qtte - Sylvanas"] = "Default",
["Djagon - Ragnaros"] = "Default",
["Qubit - Ragnaros"] = "Mage-MOD",
["Qute - Sylvanas"] = "Default",
["Myfficraider - Ragnaros"] = "Default",
["Fishanus - Ragnaros"] = "Default",
["Cyclosarin - Ragnaros"] = "Default",
["Jerwin - Ragnaros"] = "Default",
["Qpe - Ravencrest"] = "Default",
["Qpebank - Draenor"] = "Default",
["Laurs - Ragnaros"] = "Default",
["Qpfromage - Ragnaros"] = "Default",
["Qpew - Ragnaros"] = "Default",
["Sikducker - Sylvanas"] = "Default",
},
["captured_casts"] = {
[386509] = {
["source"] = "Ezrigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187666,
},
[37319] = {
["encounterName"] = "Al'ar",
["source"] = "Phoenix-Hawk Hatchling",
["encounterID"] = 730,
["event"] = "SPELL_CAST_START",
["npcID"] = 20038,
},
[124800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Warcaller",
["npcID"] = 61502,
},
[394701] = {
["source"] = "The Great Shellkhan",
["event"] = "SPELL_CAST_START",
["npcID"] = 191305,
},
[413131] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[15795] = {
["source"] = "Smolderthorn Axe Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 9267,
},
[376272] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191225,
},
[413133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[195320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Manathirster",
["npcID"] = 95866,
},
[288221] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Unexploded Ordnance",
["npcID"] = 148631,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[421325] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[316890] = {
["source"] = "Ogre Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 153239,
},
[257777] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["encounterID"] = 2102,
["event"] = "SPELL_CAST_START",
["npcID"] = 127484,
},
[413135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[196345] = {
["source"] = "Deeprock Scrapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 98003,
},
[394706] = {
["source"] = "Unstable Frost",
["event"] = "SPELL_CAST_START",
["npcID"] = 198702,
},
[404945] = {
["source"] = "Winglord Iyazael",
["event"] = "SPELL_CAST_START",
["npcID"] = 199401,
},
[275937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigidus",
["npcID"] = 204425,
},
[409041] = {
["source"] = "Failed Prototype",
["event"] = "SPELL_CAST_START",
["npcID"] = 203927,
},
[269795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jungo, Herald of G'huun",
["npcID"] = 128184,
},
[320989] = {
["event"] = "SPELL_CAST_START",
["source"] = "Altered Sentinel",
["npcID"] = 168244,
},
[390613] = {
["source"] = "Snarglebone",
["event"] = "SPELL_CAST_START",
["npcID"] = 197344,
},
[376279] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[306656] = {
["encounterName"] = "Vez'okk the Lightless",
["source"] = "Vez'okk the Lightless",
["npcID"] = 152874,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2373,
},
[384471] = {
["source"] = "Magma Skitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 196758,
},
[398806] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[97158] = {
["encounterName"] = "Jin'do the Godbreaker",
["source"] = "Jin'do the Godbreaker",
["npcID"] = 52150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1182,
},
[260852] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[40904] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[404951] = {
["source"] = "Mad-Eye Carrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 201181,
},
[392665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Thunderhide",
["npcID"] = 187258,
},
[34761] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["npcID"] = 17975,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1926,
},
[119684] = {
["encounterName"] = "Xin the Weaponmaster",
["source"] = "Xin the Weaponmaster",
["npcID"] = 61398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1441,
},
[384476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[413145] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[122244] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Engineer",
["npcID"] = 62632,
},
[400859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skornak",
["npcID"] = 203643,
},
[437719] = {
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 190373,
},
[386526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nullmagic Hornswog",
["npcID"] = 187246,
},
[413147] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[54983] = {
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24082,
},
[417243] = {
["source"] = "Great Glorious Alliance Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 207581,
},
[353763] = {
["source"] = "Sath'zuul",
["event"] = "SPELL_CAST_START",
["npcID"] = 179135,
},
[392671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icebreaker",
["npcID"] = 199279,
},
[394719] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Stormwrought Despoiler",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198326,
},
[56775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Magus",
["npcID"] = 26722,
},
[390624] = {
["source"] = "Snarglebone",
["event"] = "SPELL_CAST_START",
["npcID"] = 197344,
},
[392672] = {
["source"] = "Failed Scalecommander Elarthresh",
["event"] = "SPELL_CAST_START",
["npcID"] = 201820,
},
[314858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scoutmaster Moswen",
["npcID"] = 152040,
},
[382434] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[425437] = {
["source"] = "Surging Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 210111,
},
[413151] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 43878,
},
[382435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[421343] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[407009] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignara",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 202791,
},
[310766] = {
["source"] = "Eye of the Depths",
["event"] = "SPELL_CAST_START",
["npcID"] = 159510,
},
[353769] = {
["source"] = "Karthazel",
["event"] = "SPELL_CAST_START",
["npcID"] = 179136,
},
[282098] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Pa'ku's Aspect",
["npcID"] = 144747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2268,
},
[13748] = {
["source"] = "Twilight Emissary",
["event"] = "SPELL_CAST_START",
["npcID"] = 8913,
},
[164615] = {
["encounterName"] = "Gug'rokk",
["source"] = "Bloodmaul Flamespeaker",
["npcID"] = 81767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1654,
},
[396774] = {
["source"] = "Primal Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190996,
},
[396775] = {
["source"] = "Primal Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190996,
},
[423396] = {
["source"] = "Lethka",
["event"] = "SPELL_CAST_START",
["npcID"] = 208740,
},
[312818] = {
["source"] = "Shoth the Darkened",
["event"] = "SPELL_CAST_START",
["npcID"] = 160532,
},
[255741] = {
["source"] = "Fangcaller Sraka",
["event"] = "SPELL_CAST_START",
["npcID"] = 130466,
},
[167688] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["npcID"] = 82721,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[265721] = {
["source"] = "Terrorachna",
["event"] = "SPELL_CAST_START",
["npcID"] = 200349,
},
[34763] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["npcID"] = 17975,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1926,
},
[164617] = {
["encounterName"] = "Gug'rokk",
["source"] = "Bloodmaul Flamespeaker",
["npcID"] = 81767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1654,
},
[29926] = {
["source"] = "Spell Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 16525,
},
[366062] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["npcID"] = 181551,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[384492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Beastmaster",
["npcID"] = 192794,
},
[394731] = {
["source"] = "Unstable Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 198709,
},
[384493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shikaar Hunter",
["npcID"] = 184657,
},
[396780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Subjugator",
["npcID"] = 195837,
},
[22887] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[257791] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["encounterID"] = 2102,
["event"] = "SPELL_CAST_START",
["npcID"] = 127484,
},
[76686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Obsidian Borer",
["npcID"] = 40019,
},
[392686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tevgai",
["npcID"] = 195132,
},
[172810] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion Druna",
["npcID"] = 81603,
},
[421355] = {
["source"] = "The Anvil",
["event"] = "SPELL_CAST_START",
["npcID"] = 206478,
},
[32358] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["encounterID"] = 1900,
["event"] = "SPELL_CAST_START",
["npcID"] = 18341,
},
[298491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Trashtosser",
["npcID"] = 151660,
},
[188169] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[282110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vindictive Archer",
["npcID"] = 146616,
},
[150286] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Geomagus",
["npcID"] = 74545,
},
[257793] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["encounterID"] = 2102,
["event"] = "SPELL_CAST_START",
["npcID"] = 127484,
},
[386546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[251650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loti's Totem",
["npcID"] = 126790,
},
[415215] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 206352,
},
[269825] = {
["source"] = "Nisha",
["event"] = "SPELL_CAST_START",
["npcID"] = 130455,
},
[386547] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[396786] = {
["source"] = "Chillwind Yeti",
["event"] = "SPELL_CAST_START",
["npcID"] = 215141,
},
[199433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Bonecaster",
["npcID"] = 187931,
},
[425455] = {
["source"] = "Surging Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 210111,
},
[400883] = {
["source"] = "Zaqali Blazestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199828,
},
[151312] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Warlord Ramtusk",
["npcID"] = 74462,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1659,
},
[404980] = {
["source"] = "Mad-Eye Carrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 201181,
},
[316927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barrow Spider",
["npcID"] = 160394,
},
[310784] = {
["source"] = "Eye of the Depths",
["event"] = "SPELL_CAST_START",
["npcID"] = 159510,
},
[404982] = {
["source"] = "Mad-Eye Carrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 201181,
},
[300547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Trashtosser",
["npcID"] = 150142,
},
[214794] = {
["source"] = "Forsaken Deathguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 135886,
},
[150290] = {
["encounterName"] = "Magmolatus",
["source"] = "Calamity",
["npcID"] = 74571,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1655,
},
[21096] = {
["encounterName"] = "Mennu the Betrayer",
["source"] = "Coilfang Technician",
["encounterID"] = 1939,
["event"] = "SPELL_CAST_START",
["npcID"] = 17940,
},
[310788] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Organ of Corruption",
["encounterID"] = 2345,
["event"] = "SPELL_CAST_START",
["npcID"] = 158343,
},
[394746] = {
["source"] = "Liskron the Dazzling",
["event"] = "SPELL_CAST_START",
["npcID"] = 193273,
},
[298502] = {
["source"] = "Aqir Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 153531,
},
[417272] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Lich King",
["npcID"] = 205305,
},
[209676] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[30695] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["encounterID"] = 1891,
["event"] = "SPELL_CAST_START",
["npcID"] = 17308,
},
[372223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[392701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormshroud Defender",
["npcID"] = 192536,
},
[394749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Storm",
["npcID"] = 198716,
},
[265741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[269837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani Thug",
["npcID"] = 120843,
},
[386559] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[372225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[166675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Gunner",
["npcID"] = 80937,
},
[372226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[114062] = {
["encounterName"] = "Jandice Barov",
["source"] = "Jandice Barov",
["npcID"] = 59184,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1427,
},
[57547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brynja",
["npcID"] = 146447,
},
[275983] = {
["source"] = "Mawsworn Flametender",
["event"] = "SPELL_CAST_START",
["npcID"] = 185227,
},
[400896] = {
["source"] = "Rampant Tide",
["event"] = "SPELL_CAST_START",
["npcID"] = 201463,
},
[361989] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["npcID"] = 181954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[34254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Botanist",
["npcID"] = 18422,
},
[275984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vigil Hill Marine",
["npcID"] = 130695,
},
[419327] = {
["source"] = "Timeline Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 199748,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["npcID"] = 133007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2123,
},
[300560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Trashtosser",
["npcID"] = 150142,
},
[46029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Blood Knight",
["npcID"] = 24684,
},
[396805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[407045] = {
["source"] = "Ookbeard",
["event"] = "SPELL_CAST_START",
["npcID"] = 200956,
},
[409093] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[396807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[366091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Guardian",
["npcID"] = 181011,
},
[171799] = {
["source"] = "Bloodmane Bonereaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 85896,
},
[372235] = {
["source"] = "Blood Horde Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 207583,
},
[382474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[265754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rastakhan's Might Mutineer",
["npcID"] = 133136,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[419336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Watcher Mara",
["npcID"] = 206925,
},
[252687] = {
["source"] = "Shadowblade Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 122970,
},
[419337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Watcher Mara",
["npcID"] = 206925,
},
[7739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magistrate Burnside",
["npcID"] = 47790,
},
[400908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Suffocating Menace",
["npcID"] = 201644,
},
[394765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Stonemauler",
["npcID"] = 210043,
},
[314903] = {
["source"] = "Khateph",
["event"] = "SPELL_CAST_START",
["npcID"] = 159321,
},
[154396] = {
["encounterName"] = "High Sage Viryx",
["source"] = "High Sage Viryx",
["npcID"] = 76266,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1701,
},
[278044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathful Orchid",
["npcID"] = 186321,
},
[396814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 195836,
},
[325143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strategist Palladia",
["npcID"] = 162613,
},
[185113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistleleaf Menace",
["npcID"] = 91472,
},
[265759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[265760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[407055] = {
["source"] = "High Seer Jhatal",
["event"] = "SPELL_CAST_START",
["npcID"] = 199842,
},
[267809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Denizen",
["npcID"] = 136297,
},
[384531] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[419343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2731,
},
[366102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Guardian",
["npcID"] = 181011,
},
[392724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadzigeth",
["npcID"] = 188447,
},
[372247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskpaw Hidestitcher",
["npcID"] = 187941,
},
[407060] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Seer Jhatal",
["npcID"] = 199842,
},
[394775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eldoren the Reborn",
["npcID"] = 193234,
},
[122259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Engineer",
["npcID"] = 62632,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[98710] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[198428] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[319010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloudtail",
["npcID"] = 161530,
},
[68506] = {
["source"] = "Overlord Agmar",
["event"] = "SPELL_CAST_START",
["npcID"] = 34922,
},
[417303] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Lich King",
["npcID"] = 205305,
},
[419351] = {
["source"] = "Infinite Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 208438,
},
[388635] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Volatile Spark",
["npcID"] = 194999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[267818] = {
["encounterName"] = "Tidesage Council",
["source"] = "Galecaller Faye",
["npcID"] = 134058,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2131,
},
[257814] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["encounterID"] = 2102,
["event"] = "SPELL_CAST_START",
["npcID"] = 127484,
},
[378397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshard",
["npcID"] = 185647,
},
[306726] = {
["encounterName"] = "Vez'okk the Lightless",
["source"] = "Vez'okk the Lightless",
["npcID"] = 152874,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2373,
},
[204573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathguard Cleaver",
["npcID"] = 97566,
},
[255767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jungo",
["npcID"] = 127929,
},
[392733] = {
["source"] = "Sleepless Fickleshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 191329,
},
[405020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Watcher",
["npcID"] = 200407,
},
[392734] = {
["source"] = "Sundered Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 199374,
},
[70043] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[407069] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[192288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olmyr the Enlightened",
["npcID"] = 97202,
},
[405022] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[253721] = {
["isChanneled"] = true,
["source"] = "Shieldbearer of Zul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 127879,
},
[296492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Globule",
["npcID"] = 152669,
},
[364068] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Sylvanas Windrunner",
["npcID"] = 183666,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[12470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gold Shaman",
["npcID"] = 32340,
},
[417310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unknown",
["npcID"] = 208380,
},
[370212] = {
["source"] = "Qalashi Wallcrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187813,
},
[392738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargpaw the Fetid",
["npcID"] = 186660,
},
[388643] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[359975] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["npcID"] = 181395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2542,
},
[372262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[396836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Glacier",
["npcID"] = 194798,
},
[62415] = {
["source"] = "Jormungar Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 32882,
},
[13878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ambermill Magister",
["npcID"] = 1914,
},
[423459] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Flowering Lasher",
["npcID"] = 209800,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2708,
},
[359979] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["npcID"] = 181395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2542,
},
[310834] = {
["source"] = "Demented Knife-Twister",
["event"] = "SPELL_CAST_START",
["npcID"] = 159417,
},
[402983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[314930] = {
["isChanneled"] = true,
["source"] = "Black Warden Rhothkozz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158790,
},
[161577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lernaea Vilescale",
["npcID"] = 85693,
},
[402985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[355887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Dominator",
["npcID"] = 185313,
},
[158506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windroc",
["npcID"] = 79398,
},
[394795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molka The Grinder",
["npcID"] = 193443,
},
[355888] = {
["source"] = "Customs Security",
["event"] = "SPELL_CAST_START",
["npcID"] = 177807,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[310838] = {
["source"] = "Eye of the Depths",
["event"] = "SPELL_CAST_START",
["npcID"] = 159510,
},
[197414] = {
["source"] = "Brood Queen Tyranna",
["event"] = "SPELL_CAST_START",
["npcID"] = 93802,
},
[165674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Gurran",
["npcID"] = 79585,
},
[133934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldwall Engineer",
["npcID"] = 67441,
},
[310839] = {
["source"] = "Occult Shadowmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 159425,
},
[170794] = {
["source"] = "Doombringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 79503,
},
[400941] = {
["source"] = "Dampened Bones",
["event"] = "SPELL_CAST_START",
["npcID"] = 203470,
},
[402989] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[183081] = {
["source"] = "Kirin Tor Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 104091,
},
[146222] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Blade of the Hundred Steps",
["npcID"] = 72787,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[310842] = {
["source"] = "Occult Shadowmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 159425,
},
[394800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Earthcaller",
["npcID"] = 198500,
},
[423469] = {
["source"] = "Mosa Umbramane",
["event"] = "SPELL_CAST_START",
["npcID"] = 210070,
},
[146223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellscream Annihilator",
["npcID"] = 72847,
},
[394802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Stormcaller",
["npcID"] = 198502,
},
[269890] = {
["source"] = "Irontide Ruffian",
["event"] = "SPELL_CAST_START",
["npcID"] = 126720,
},
[405042] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[154415] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["npcID"] = 76177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1685,
},
[189227] = {
["source"] = "Crawliac Cinderwitch",
["event"] = "SPELL_CAST_START",
["npcID"] = 95174,
},
[372279] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[46035] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 24685,
},
[9591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burrowing Leyworm",
["npcID"] = 106630,
},
[394806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phleep",
["npcID"] = 193210,
},
[396854] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[355900] = {
["source"] = "Customs Security",
["event"] = "SPELL_CAST_START",
["npcID"] = 177807,
},
[396856] = {
["source"] = "Firava the Rekindler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195915,
},
[327233] = {
["source"] = "Experimental Misstep",
["event"] = "SPELL_CAST_START",
["npcID"] = 199859,
},
[59346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anub'ar Crusher",
["npcID"] = 28922,
},
[378428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stonekin",
["npcID"] = 194291,
},
[407097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[351808] = {
["source"] = "Mawsworn Cremator",
["event"] = "SPELL_CAST_START",
["npcID"] = 176577,
},
[396859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gargantuan Vessel",
["npcID"] = 202835,
},
[366143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[197422] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 95888,
},
[183088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mightstone Breaker",
["npcID"] = 113998,
},
[417338] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Lich King",
["npcID"] = 205305,
},
[396861] = {
["source"] = "Unstable Arcanogolem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201554,
},
[170802] = {
["source"] = "Doombringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 79503,
},
[269901] = {
["source"] = "Sulfurous Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 133434,
},
[172850] = {
["source"] = "Arachnis",
["event"] = "SPELL_CAST_START",
["npcID"] = 96323,
},
[11895] = {
["encounterName"] = "Antu'sul",
["source"] = "Antu'sul",
["npcID"] = 8127,
["event"] = "SPELL_CAST_START",
["encounterID"] = 595,
},
[174898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acidtooth Devourer",
["npcID"] = 79416,
},
[296523] = {
["source"] = "Mawsworn Seeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 152708,
},
[384577] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[394816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shardwing",
["npcID"] = 201562,
},
[374339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[427581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Bristlebruin",
["npcID"] = 210507,
},
[360006] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["npcID"] = 181398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[59603] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Heartsplitter",
["npcID"] = 24071,
},
[165685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Gurran",
["npcID"] = 79585,
},
[415296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 205136,
},
[201521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dormant Wisp",
["npcID"] = 102422,
},
[195378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rippling Lifefury",
["npcID"] = 95869,
},
[212784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watchful Inquisitor",
["npcID"] = 105715,
},
[362056] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Guardian Sphere",
["npcID"] = 181447,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[407107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[192307] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[427585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Bristlebruin",
["npcID"] = 210507,
},
[380487] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[407108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[327246] = {
["source"] = "Valinor",
["event"] = "SPELL_CAST_START",
["npcID"] = 167524,
},
[156472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorg the Host",
["npcID"] = 76496,
},
[191284] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[260908] = {
["source"] = "Ji'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 132253,
},
[212786] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[199476] = {
["source"] = "Sledge",
["event"] = "SPELL_CAST_START",
["npcID"] = 92990,
},
[162617] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["npcID"] = 77816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[415304] = {
["source"] = "Great Glorious Alliance Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 207579,
},
[15095] = {
["encounterName"] = "Pyromancer Loregrain",
["source"] = "Pyromancer Loregrain",
["encounterID"] = 231,
["event"] = "SPELL_CAST_START",
["npcID"] = 9024,
},
[456260] = {
["event"] = "SPELL_CAST_START",
["source"] = "You?",
["npcID"] = 226694,
},
[400971] = {
["source"] = "Sulfuric Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 202622,
},
[288345] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[99235] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[382542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ice Burrower",
["npcID"] = 190319,
},
[376399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 192188,
},
[394829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osseous Broodmother",
["npcID"] = 203348,
},
[117665] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Sha of Doubt",
["encounterID"] = 1439,
["event"] = "SPELL_CAST_START",
["npcID"] = 56439,
},
[39127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Chemist",
["npcID"] = 19486,
},
[400974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebringer Elementalist",
["npcID"] = 203705,
},
[386640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Looter",
["npcID"] = 187242,
},
[396879] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[415309] = {
["source"] = "Great Glorious Alliance Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 207579,
},
[370259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earth Elemental",
["npcID"] = 187322,
},
[99236] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[8376] = {
["encounterName"] = "Jammal'an the Prophet",
["source"] = "Jammal'an the Prophet",
["npcID"] = 5710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 488,
},
[294493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeless Causality",
["npcID"] = 186464,
},
[394833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plainswalker Bull",
["npcID"] = 187937,
},
[407120] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203799,
},
[400977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[172860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Battlemaster",
["npcID"] = 83025,
},
[396882] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[191290] = {
["source"] = "Crashin' Thrashin' Mortar",
["event"] = "SPELL_CAST_START",
["npcID"] = 76642,
},
[378453] = {
["isChanneled"] = true,
["source"] = "Inferna the Bound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186735,
},
[372310] = {
["source"] = "Rimebound Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200756,
},
[162622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huezeki Windsong",
["npcID"] = 205497,
},
[384597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[378454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stonekin",
["npcID"] = 194291,
},
[372311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[208697] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Deathglare Tentacle",
["encounterID"] = 1873,
["event"] = "SPELL_CAST_START",
["npcID"] = 105322,
},
[355930] = {
["source"] = "Interrogation Specialist",
["event"] = "SPELL_CAST_START",
["npcID"] = 177816,
},
[407124] = {
["source"] = "Alliance Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 208165,
},
[327262] = {
["source"] = "Valinor",
["event"] = "SPELL_CAST_START",
["npcID"] = 167524,
},
[419411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ursoc the Destroyer",
["npcID"] = 206834,
},
[407125] = {
["source"] = "Alliance Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 208165,
},
[388696] = {
["source"] = "Gahz'raxes",
["event"] = "SPELL_CAST_START",
["npcID"] = 200537,
},
[57046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[409174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incarnation of Entropy",
["npcID"] = 203811,
},
[372315] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187771,
},
[258869] = {
["source"] = "Ashvane Flamecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 127488,
},
[374364] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[374365] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[409177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Hatred",
["npcID"] = 203809,
},
[403034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fyrakk",
["npcID"] = 200832,
},
[44504] = {
["source"] = "Wretched Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 24690,
},
[106918] = {
["source"] = "Orchard Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 56201,
},
[92072] = {
["source"] = "Or'Kalar",
["event"] = "SPELL_CAST_START",
["npcID"] = 2773,
},
[300650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toxic Lurker",
["npcID"] = 150169,
},
[382561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowhide Shaman",
["npcID"] = 189654,
},
[32749] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "Scarlet Wizard",
["npcID"] = 4300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 450,
},
[386658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molkeej",
["npcID"] = 195430,
},
[388706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invading Storm Elemental",
["npcID"] = 191235,
},
[382563] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[327274] = {
["source"] = "Valinor",
["event"] = "SPELL_CAST_START",
["npcID"] = 167524,
},
[329322] = {
["source"] = "Mawsworn Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 155831,
},
[366182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illicit Collector",
["npcID"] = 183498,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[366183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illicit Collector",
["npcID"] = 183498,
},
[106920] = {
["event"] = "SPELL_CAST_START",
["source"] = "Regenerating Sha",
["npcID"] = 56763,
},
[421473] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2708,
},
[183108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Larivi",
["npcID"] = 192747,
},
[366185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Muscle",
["npcID"] = 183499,
},
[329326] = {
["source"] = "Mawsworn Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 155831,
},
[355947] = {
["source"] = "Mawsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 181044,
},
[166727] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fireblade Invoker",
["npcID"] = 77047,
},
[390760] = {
["source"] = "Chief Grrlgllmesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 186678,
},
[400999] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[425573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[288374] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[366189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thieveing Agent",
["npcID"] = 183500,
},
[366190] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Worldeater",
["npcID"] = 183495,
},
[384620] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[22127] = {
["source"] = "Nordrassil Druid",
["event"] = "SPELL_CAST_START",
["npcID"] = 38952,
},
[396907] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Yu'lon",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56762,
},
[267899] = {
["encounterName"] = "Tidesage Council",
["source"] = "Brother Ironhull",
["npcID"] = 134063,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2131,
},
[314998] = {
["source"] = "Aqir Shadowcrafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 161416,
},
[423529] = {
["source"] = "Anguished Dream Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[417386] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valhalas Vargul",
["npcID"] = 207804,
},
[394861] = {
["source"] = "Henlare",
["event"] = "SPELL_CAST_START",
["npcID"] = 193229,
},
[390766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blitztusk",
["npcID"] = 190907,
},
[384623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Blacksmith",
["npcID"] = 189471,
},
[39131] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Thorngrin the Tender",
["npcID"] = 17978,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1928,
},
[315000] = {
["source"] = "Aqir Shadowcrafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 161416,
},
[423531] = {
["source"] = "Anguished Dream Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[170827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khargax the Devourer",
["npcID"] = 81537,
},
[16496] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Master Engineer Telonicus",
["encounterID"] = 733,
["event"] = "SPELL_CAST_START",
["npcID"] = 20063,
},
[382578] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[76719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incendiary Spark",
["npcID"] = 40021,
},
[366197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thieveing Agent",
["npcID"] = 183500,
},
[403057] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[366199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Worldeater",
["npcID"] = 183495,
},
[174925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vined Guardian",
["npcID"] = 77226,
},
[46043] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 24686,
},
[394869] = {
["source"] = "Boneshaper Jardak",
["event"] = "SPELL_CAST_START",
["npcID"] = 188693,
},
[335485] = {
["source"] = "Stygian Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 181064,
},
[394870] = {
["isChanneled"] = true,
["source"] = "Council Earthcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198501,
},
[87471] = {
["source"] = "Trained Brineshell Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 65330,
},
[97198] = {
["encounterName"] = "Jin'do the Godbreaker",
["source"] = "Gurubashi Spirit",
["npcID"] = 52730,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1182,
},
[384633] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[140115] = {
["source"] = "Zandalari Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 70557,
},
[306819] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 156866,
},
[407159] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 198997,
},
[315011] = {
["source"] = "Aqir Shadowcrafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 161416,
},
[163665] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Makogg Emberblade",
["npcID"] = 80805,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1748,
},
[312964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amathet Devoted",
["npcID"] = 152649,
},
[298630] = {
["source"] = "Voidbound Shieldbearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 156146,
},
[137045] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[390780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blitztusk",
["npcID"] = 190907,
},
[360064] = {
["source"] = "Nascence Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 181945,
},
[394876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phenran",
["npcID"] = 193688,
},
[46044] = {
["source"] = "Sunblade Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 24815,
},
[209741] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Image of Advisor Melandrus",
["npcID"] = 105754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[396925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 197149,
},
[171858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clarice Chapmann",
["npcID"] = 159210,
},
[39133] = {
["encounterName"] = "Warp Splinter",
["source"] = "Warp Splinter",
["npcID"] = 17977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1929,
},
[405117] = {
["source"] = "Lady Shaz'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200885,
},
[401022] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[144214] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[382593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cruel Bonecrusher",
["npcID"] = 186206,
},
[171859] = {
["source"] = "Bloodmane Earthbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 82944,
},
[370307] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[421501] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["npcID"] = 208367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[174931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloom Weaver",
["npcID"] = 81575,
},
[417406] = {
["source"] = "Ankura Bloodhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207589,
},
[272016] = {
["source"] = "Imprisoned Cabalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 154014,
},
[17137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Apothecary Lydon",
["npcID"] = 48020,
},
[409216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Manaweaver",
["npcID"] = 198872,
},
[165717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alya",
["npcID"] = 82002,
},
[398978] = {
["source"] = "Memory of a Caster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200824,
},
[409217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Manaweaver",
["npcID"] = 198872,
},
[388741] = {
["source"] = "Ghostly Researcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 203013,
},
[386694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormsurge Totem",
["npcID"] = 194897,
},
[398981] = {
["source"] = "Stalwart Broodwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 198263,
},
[163671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nar'thalas Nightwatcher",
["npcID"] = 88782,
},
[355979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Dominator",
["npcID"] = 185313,
},
[174934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloom Weaver",
["npcID"] = 81575,
},
[384648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarls",
["npcID"] = 197354,
},
[360076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugated Colossus",
["npcID"] = 184767,
},
[388745] = {
["source"] = "Icy Blue Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 197862,
},
[392841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Degmakh",
["npcID"] = 194251,
},
[337552] = {
["source"] = "Unbreakable Urtz",
["event"] = "SPELL_CAST_START",
["npcID"] = 162853,
},
[265881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[398985] = {
["source"] = "Broodguardian Ziruss",
["event"] = "SPELL_CAST_START",
["npcID"] = 198214,
},
[116] = {
["npcID"] = 188027,
},
[388747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boggy Bullfrog",
["npcID"] = 193699,
},
[174936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voice of Iyu",
["npcID"] = 81634,
},
[257870] = {
["source"] = "Irontide Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 130011,
},
[394891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Braekkas",
["npcID"] = 196855,
},
[317077] = {
["source"] = "Harpy Snatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 152571,
},
[331412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepscar",
["npcID"] = 162797,
},
[46046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Physician",
["npcID"] = 24687,
},
[394893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[15801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smolderthorn Seer",
["npcID"] = 9269,
},
[319127] = {
["source"] = "Goldenback Grazer",
["event"] = "SPELL_CAST_START",
["npcID"] = 169123,
},
[372369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Hunter",
["npcID"] = 186490,
},
[142174] = {
["source"] = "Small Illusionary Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 71079,
},
[394895] = {
["source"] = "Phenran",
["event"] = "SPELL_CAST_START",
["npcID"] = 193688,
},
[366227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foul Gorger",
["npcID"] = 183496,
},
[172891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander Gar",
["npcID"] = 85571,
},
[256849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinomancer Kish'o",
["npcID"] = 129553,
},
[409231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Draconic Golem",
["npcID"] = 203826,
},
[59357] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Shadowcaster",
["npcID"] = 28733,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1971,
},
[405137] = {
["source"] = "Lady Shaz'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200885,
},
[337562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devmorta",
["npcID"] = 162875,
},
[227158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Headhunter",
["npcID"] = 113034,
},
[256851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defiled Worshiper",
["npcID"] = 126090,
},
[392854] = {
["source"] = "Primal Scythid Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 184853,
},
[368282] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corrupted Architect",
["npcID"] = 183953,
},
[394903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[388760] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[106421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Guardian",
["npcID"] = 59741,
},
[427668] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[274087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zekhan",
["npcID"] = 153789,
},
[191325] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1838,
},
[169824] = {
["encounterName"] = "Archmage Sol",
["source"] = "Spore Image",
["npcID"] = 84984,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[85944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Godfrey",
["npcID"] = 46028,
},
[205660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Observant Inquisitor",
["npcID"] = 107449,
},
[382620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[321188] = {
["source"] = "Quilboar Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 150238,
},
[169825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[374430] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190588,
},
[368287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[156515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirling Dervish",
["npcID"] = 77605,
},
[356001] = {
["source"] = "Armored Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 177808,
},
[308903] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[193375] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[11642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murta Grimgut",
["npcID"] = 7608,
},
[69051] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[184] = {
["source"] = "Blackrock Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 4463,
},
[403101] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[11962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oro Eyegouge",
["npcID"] = 7606,
},
[48096] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["encounterID"] = 2011,
["event"] = "SPELL_CAST_START",
["npcID"] = 26723,
},
[272046] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Sharkbait",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126841,
},
[407198] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[82362] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["npcID"] = 50284,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1038,
},
[198496] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[407199] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[386722] = {
["source"] = "Stormbound Striker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199800,
},
[194401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defiled Grovewalker",
["npcID"] = 113646,
},
[407200] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[69564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Adept",
["npcID"] = 36620,
},
[3263] = {
["source"] = "Hand of Ravenclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 1870,
},
[343722] = {
["source"] = "Huwerath",
["event"] = "SPELL_CAST_START",
["npcID"] = 162965,
},
[388773] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[317102] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[302768] = {
["source"] = "Spawn of Wekemara",
["event"] = "SPELL_CAST_START",
["npcID"] = 155702,
},
[394917] = {
["encounterName"] = "Eranog",
["source"] = "Flamescale Captain",
["npcID"] = 199233,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[392870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uurhilt",
["npcID"] = 194760,
},
[411300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Waveshaper",
["npcID"] = 205363,
},
[306865] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["npcID"] = 156866,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2331,
},
[407205] = {
["source"] = "Alliance Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208208,
},
[120759] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["npcID"] = 61634,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1502,
},
[258908] = {
["source"] = "Sethrak Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 130411,
},
[372394] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[278198] = {
["source"] = "Ancient Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 148393,
},
[41186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 22847,
},
[407207] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[162665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Deadeye",
["npcID"] = 75749,
},
[278200] = {
["source"] = "Ancient Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 148393,
},
[59616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[372397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Scrapper",
["npcID"] = 186359,
},
[120760] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["npcID"] = 61634,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1502,
},
[152427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Lord",
["npcID"] = 75211,
},
[337587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistress Dyrax",
["npcID"] = 162880,
},
[142189] = {
["source"] = "Large Illusionary Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 71068,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[407212] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Djaradin Dragonhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 202108,
},
[204646] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[256864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinomancer Kish'o",
["npcID"] = 129553,
},
[409261] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[396975] = {
["source"] = "Firava the Rekindler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195915,
},
[162668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Deadeye",
["npcID"] = 75749,
},
[147310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brilliant Windfeather",
["npcID"] = 72762,
},
[41187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 22847,
},
[165740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesaw",
["npcID"] = 82010,
},
[399024] = {
["source"] = "Farscale Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 200486,
},
[17140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ambermill Watcher",
["npcID"] = 1888,
},
[399025] = {
["source"] = "Arcane Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 200720,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[59617] = {
["encounterName"] = "Prince Keleseth",
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[165741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Challe Tebrilinde",
["npcID"] = 82005,
},
[142192] = {
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 61783,
},
[96189] = {
["source"] = "Shattered Sun Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 24938,
},
[415409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rupturing Firevine",
["npcID"] = 207699,
},
[392884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tevgai",
["npcID"] = 195132,
},
[116155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Brew Alemental",
["npcID"] = 59521,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[421554] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[267973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Attendant",
["npcID"] = 134137,
},
[351931] = {
["source"] = "Torment Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 176598,
},
[306881] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Void Hunter",
["npcID"] = 157366,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2331,
},
[270022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silverback Thumpknuckle",
["npcID"] = 130543,
},
[169839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[366267] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volatile Sentry",
["npcID"] = 185008,
},
[155505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Iron Engineer",
["npcID"] = 76101,
},
[386745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prozela Galeshot",
["npcID"] = 193669,
},
[409271] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[258917] = {
["source"] = "Ashvane Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 130028,
},
[169840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[399033] = {
["source"] = "Weyrn Spellslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 200736,
},
[59362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anub'ar Webspinner",
["npcID"] = 29335,
},
[419511] = {
["source"] = "Chronaxie",
["event"] = "SPELL_CAST_START",
["npcID"] = 206070,
},
[315076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stitchyard Surgeon",
["npcID"] = 159679,
},
[423607] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[135029] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 78116,
},
[52451] = {
["encounterName"] = "Salram the Fleshcrafter",
["source"] = "Salramm the Fleshcrafter",
["encounterID"] = 2004,
["event"] = "SPELL_CAST_START",
["npcID"] = 26530,
},
[169841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[30707] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["encounterID"] = 1891,
["event"] = "SPELL_CAST_START",
["npcID"] = 17308,
},
[197486] = {
["isChanneled"] = true,
["source"] = "Brood Queen Tyranna",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 93802,
},
[366272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Xy'pro",
["npcID"] = 185032,
},
[267981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrine Templar",
["npcID"] = 134139,
},
[126908] = {
["source"] = "Shao-Tien Fist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58927,
},
[11899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandfury Witch Doctor",
["npcID"] = 5650,
},
[419516] = {
["source"] = "Chronaxie",
["event"] = "SPELL_CAST_START",
["npcID"] = 206070,
},
[169843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[278222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimscowl the Harebrained",
["npcID"] = 141059,
},
[427708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[388801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Warrior",
["npcID"] = 195855,
},
[6270] = {
["source"] = "Muyoh",
["event"] = "SPELL_CAST_START",
["npcID"] = 3678,
},
[243563] = {
["source"] = "Crusty Sean",
["event"] = "SPELL_CAST_START",
["npcID"] = 139647,
},
[171892] = {
["source"] = "Bloodmane Longclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 85900,
},
[411328] = {
["source"] = "Diganthor",
["event"] = "SPELL_CAST_START",
["npcID"] = 204434,
},
[366278] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Xy'pro",
["npcID"] = 185032,
},
[388804] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[362184] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["npcID"] = 182777,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2549,
},
[423617] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[257899] = {
["source"] = "Irontide Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 130012,
},
[218992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Legionnaire",
["npcID"] = 108830,
},
[407236] = {
["source"] = "Shrinekeeper Qanosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199839,
},
[304849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Elemental",
["npcID"] = 152164,
},
[165751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Etubrute",
["npcID"] = 82187,
},
[419524] = {
["source"] = "Loose Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 209170,
},
[169847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[252781] = {
["source"] = "Zanchuli Witch-Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122969,
},
[116160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glittering Amberfly",
["npcID"] = 54559,
},
[34791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest-Forge Peacekeeper",
["npcID"] = 18405,
},
[413385] = {
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_START",
["npcID"] = 45930,
},
[366287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Xy'pro",
["npcID"] = 185032,
},
[417481] = {
["source"] = "Timeline Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 199748,
},
[364240] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["npcID"] = 181549,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[382670] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[360145] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["npcID"] = 181399,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[364241] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Renewal",
["npcID"] = 181546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[267997] = {
["encounterName"] = "The Primal Council",
["source"] = "Vilefiend",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 135816,
},
[55269] = {
["source"] = "The Ocular",
["event"] = "SPELL_CAST_START",
["npcID"] = 29747,
},
[415436] = {
["source"] = "Coalesced Moment",
["event"] = "SPELL_CAST_START",
["npcID"] = 206064,
},
[257904] = {
["source"] = "Ludwig Von Tortollan",
["event"] = "SPELL_CAST_START",
["npcID"] = 129699,
},
[321240] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["encounterID"] = 2325,
["event"] = "SPELL_CAST_START",
["npcID"] = 157300,
},
[315097] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Il'gynoth",
["encounterID"] = 2345,
["event"] = "SPELL_CAST_START",
["npcID"] = 158328,
},
[415437] = {
["source"] = "Timestream Leech",
["event"] = "SPELL_CAST_START",
["npcID"] = 206066,
},
[131968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Battle-Mender",
["npcID"] = 67093,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[116162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fizzy Brew Alemental",
["npcID"] = 59520,
},
[397010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Honor Guard",
["npcID"] = 197147,
},
[256882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monzumi",
["npcID"] = 129552,
},
[272098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktooth Brute",
["npcID"] = 131307,
},
[397011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Honor Guard",
["npcID"] = 197147,
},
[163710] = {
["source"] = "Shimmerwing Moth",
["event"] = "SPELL_CAST_START",
["npcID"] = 79910,
},
[205689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Huntress",
["npcID"] = 155618,
},
[190331] = {
["source"] = "Shuja Grimaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 167664,
},
[99781] = {
["isChanneled"] = true,
["source"] = "Inferno Hawk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 53648,
},
[401108] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignara",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 202791,
},
[9532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muckgill",
["npcID"] = 47759,
},
[388822] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[399061] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[401109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Oldblood",
["npcID"] = 201054,
},
[372441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyenamaster Durgun",
["npcID"] = 186515,
},
[399062] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[257908] = {
["source"] = "Irontide Officer",
["event"] = "SPELL_CAST_START",
["npcID"] = 127106,
},
[419540] = {
["source"] = "Molten General",
["event"] = "SPELL_CAST_START",
["npcID"] = 207941,
},
[204667] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[131972] = {
["source"] = "Sik'thik Battle-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 67093,
},
[115652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stout Brew Alemental",
["npcID"] = 59519,
},
[243575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jambani Chosen",
["npcID"] = 130221,
},
[399065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[59366] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Watcher Silthik",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 28731,
},
[121284] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["npcID"] = 62205,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1464,
},
[284393] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Sister Katherine",
["npcID"] = 146251,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[392924] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[386781] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[409307] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Blazing Dreadsquall",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 202262,
},
[258935] = {
["source"] = "Ashvane Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 130028,
},
[399069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Tidelord",
["npcID"] = 200488,
},
[360162] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["npcID"] = 180773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2512,
},
[11836] = {
["encounterName"] = "Ghaz'rilla",
["source"] = "Gahz'rilla",
["npcID"] = 7273,
["event"] = "SPELL_CAST_START",
["encounterID"] = 594,
},
[372449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Bonecaster",
["npcID"] = 187931,
},
[145286] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Set'thik Wind Wielder",
["npcID"] = 71405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[106439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragrant Lotus",
["npcID"] = 56472,
},
[394976] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Lasher",
["npcID"] = 198757,
},
[83914] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 44715,
},
[394977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigidpelt Den Mother",
["npcID"] = 193698,
},
[372452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowstorm Rager",
["npcID"] = 194158,
},
[399073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Tidelord",
["npcID"] = 200488,
},
[403169] = {
["source"] = "Ishyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200579,
},
[409313] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[60903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Indigos",
["npcID"] = 47010,
},
[288497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huezeki Windsong",
["npcID"] = 205497,
},
[311023] = {
["source"] = "Willing Sacrifice",
["event"] = "SPELL_CAST_START",
["npcID"] = 162647,
},
[372456] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[85963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Godfrey",
["npcID"] = 46028,
},
[421603] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[382696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[167815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Wrangler",
["npcID"] = 83390,
},
[399079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Tidelord",
["npcID"] = 200488,
},
[40938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
},
[200580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Festerhide Grizzly",
["npcID"] = 95779,
},
[372460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bakra the Bully",
["npcID"] = 186517,
},
[85964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Godfrey",
["npcID"] = 46028,
},
[15228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[268027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Current",
["npcID"] = 134144,
},
[360176] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Point Defense Drone",
["npcID"] = 181856,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2512,
},
[341747] = {
["source"] = "Wailing Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 174158,
},
[425706] = {
["source"] = "Astromancer's Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 208729,
},
[382704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[386800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galzuda",
["npcID"] = 193330,
},
[405230] = {
["source"] = "Duzalgor",
["event"] = "SPELL_CAST_START",
["npcID"] = 200610,
},
[40683] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[417517] = {
["source"] = "Ankura Bloodhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207589,
},
[386801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragsworn Stoneshaper",
["npcID"] = 195838,
},
[390897] = {
["source"] = "Scalepiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186632,
},
[135056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmoon Rabbit",
["npcID"] = 58336,
},
[258945] = {
["source"] = "Fangcaller Sraka",
["event"] = "SPELL_CAST_START",
["npcID"] = 130466,
},
[427758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[78799] = {
["source"] = "Pearlfin Watershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59361,
},
[382708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[128969] = {
["isChanneled"] = true,
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61783,
},
[397043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[172941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sor the Eradicator",
["npcID"] = 80691,
},
[360185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lured Smasher",
["npcID"] = 183580,
},
[413427] = {
["source"] = "Pendule",
["event"] = "SPELL_CAST_START",
["npcID"] = 206074,
},
[407285] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Djaradin Skullcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202258,
},
[311041] = {
["source"] = "Umbral Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 159219,
},
[263943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Runeweaver",
["npcID"] = 131677,
},
[372474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shikaar Ranger",
["npcID"] = 180393,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[388857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Forest Giant",
["npcID"] = 194741,
},
[83920] = {
["source"] = "Skymane Bonobo",
["event"] = "SPELL_CAST_START",
["npcID"] = 43417,
},
[78801] = {
["encounterName"] = "Hydromancer Velratha",
["source"] = "Hydromancer Velratha",
["npcID"] = 7795,
["event"] = "SPELL_CAST_START",
["encounterID"] = 593,
},
[311045] = {
["source"] = "Void Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 160182,
},
[397051] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[308998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Taskmaster",
["npcID"] = 158437,
},
[311046] = {
["source"] = "Umbral Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 159219,
},
[392957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Vorquin",
["npcID"] = 190216,
},
[388862] = {
["source"] = "Corrupted Manafiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 196045,
},
[407292] = {
["source"] = "Erupting Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199838,
},
[388863] = {
["source"] = "Corrupted Manafiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 196045,
},
[150421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pale Flinger",
["npcID"] = 76465,
},
[427771] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[390912] = {
["source"] = "Vile Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197219,
},
[106447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[413438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Lord Aurvizk",
["npcID"] = 200865,
},
[178067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sea Skrog",
["npcID"] = 88094,
},
[179091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nar'thalas Magister",
["npcID"] = 88783,
},
[311052] = {
["source"] = "Maddened Conscript",
["event"] = "SPELL_CAST_START",
["npcID"] = 159305,
},
[296718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Willbreaker",
["npcID"] = 152987,
},
[374533] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[151447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Enforcer",
["npcID"] = 84978,
},
[411393] = {
["source"] = "Bogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 201747,
},
[372486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waste Water Elemental",
["npcID"] = 187497,
},
[390916] = {
["source"] = "Melkhop",
["event"] = "SPELL_CAST_START",
["npcID"] = 193311,
},
[411394] = {
["source"] = "Bogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 201747,
},
[150424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani Berserker",
["npcID"] = 215675,
},
[169878] = {
["encounterName"] = "Yalnu",
["source"] = "Vicious Mandragora",
["npcID"] = 84399,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[300818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnome-Eating Droplet",
["npcID"] = 154663,
},
[263959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[421636] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[131022] = {
["source"] = "Garrosh'ar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66398,
},
[411399] = {
["source"] = "Bogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 201747,
},
[409352] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Blazing Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 202262,
},
[172952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegemaster Olugar",
["npcID"] = 83026,
},
[352016] = {
["source"] = "Vault Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 185027,
},
[372494] = {
["source"] = "Stormshackler Rynea",
["event"] = "SPELL_CAST_START",
["npcID"] = 189391,
},
[115153] = {
["source"] = "Husshun",
["event"] = "SPELL_CAST_START",
["npcID"] = 54925,
},
[372495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ensnaring Current",
["npcID"] = 191328,
},
[390926] = {
["source"] = "Professor Gastrinax",
["event"] = "SPELL_CAST_START",
["npcID"] = 203521,
},
[15869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Witch Doctor",
["npcID"] = 27555,
},
[411404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Skytalon",
["npcID"] = 204430,
},
[142238] = {
["source"] = "Large Illusionary Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 71069,
},
[306971] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[116178] = {
["source"] = "Sudsy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59522,
},
[151454] = {
["encounterName"] = "Groyat, the Blind Hunter",
["source"] = "Groyat, the Blind Hunter",
["npcID"] = 75247,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1660,
},
[411407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Waveshaper",
["npcID"] = 205363,
},
[388882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[69080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Bonecaster",
["npcID"] = 36564,
},
[79831] = {
["source"] = "Pearlfin Watershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 56725,
},
[44271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garaxxas",
["npcID"] = 24555,
},
[154527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulbinder",
["npcID"] = 77812,
},
[413458] = {
["source"] = "Osthilde",
["event"] = "SPELL_CAST_START",
["npcID"] = 200867,
},
[309023] = {
["source"] = "Shith'rus the Manipulator",
["event"] = "SPELL_CAST_START",
["npcID"] = 154727,
},
[143265] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["npcID"] = 71504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1601,
},
[395029] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 195119,
},
[274212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drowned Depthbringer",
["npcID"] = 134418,
},
[390934] = {
["source"] = "Melkhop",
["event"] = "SPELL_CAST_START",
["npcID"] = 193311,
},
[274213] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[166815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warsong Overseer",
["npcID"] = 75745,
},
[186269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightshard Shaper",
["npcID"] = 90998,
},
[401175] = {
["source"] = "Ebyssian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201707,
},
[272167] = {
["encounterName"] = "The Primal Council",
["source"] = "Bilescourge",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 136404,
},
[319266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steelskin Vanguard",
["npcID"] = 157669,
},
[390938] = {
["source"] = "Aggravated Skitterfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 197406,
},
[282408] = {
["encounterName"] = "Mekkatorque",
["source"] = "Spark Bot",
["npcID"] = 144942,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2276,
},
[176032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Cinderseer",
["npcID"] = 88163,
},
[395035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulharvester Galtmaa",
["npcID"] = 195927,
},
[97239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurubashi Shadow Hunter",
["npcID"] = 52327,
},
[382749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bossy Hornswog",
["npcID"] = 190998,
},
[300840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inhuman Test Subject",
["npcID"] = 202147,
},
[266029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windcaller Ula'jan",
["npcID"] = 133140,
},
[276268] = {
["source"] = "Faceless Despoiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 156568,
},
[31865] = {
["source"] = "Seductress",
["event"] = "SPELL_CAST_START",
["npcID"] = 17399,
},
[270126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necropolis Guardian",
["npcID"] = 135253,
},
[362275] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["npcID"] = 182777,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2549,
},
[360228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugated Colossus",
["npcID"] = 184767,
},
[386849] = {
["source"] = "Unleashed Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 195846,
},
[405279] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[374563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazzling Dragonfly",
["npcID"] = 190362,
},
[360229] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["npcID"] = 181399,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[306988] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[311084] = {
["source"] = "Maddened Conscript",
["event"] = "SPELL_CAST_START",
["npcID"] = 159305,
},
[222110] = {
["source"] = "Shadow Pounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 111405,
},
[366374] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[327467] = {
["source"] = "Custodian Thonar",
["event"] = "SPELL_CAST_START",
["npcID"] = 185011,
},
[413473] = {
["source"] = "Temporal Deviation",
["event"] = "SPELL_CAST_START",
["npcID"] = 206063,
},
[147368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironfur Great Bull",
["npcID"] = 72844,
},
[266036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistle Acolyte",
["npcID"] = 135474,
},
[374567] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[272180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grotesque Horror",
["npcID"] = 138187,
},
[202658] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Malignant Defiler",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 102584,
},
[407332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Dustmoth",
["npcID"] = 202316,
},
[196515] = {
["source"] = "Binder Ashioi",
["event"] = "SPELL_CAST_START",
["npcID"] = 100250,
},
[364330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acquisitions Automa",
["npcID"] = 184737,
},
[374569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 186227,
},
[384808] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186339,
},
[160680] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[366379] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["npcID"] = 182777,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2549,
},
[294708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Telur",
["npcID"] = 151909,
},
[274231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quid",
["npcID"] = 154106,
},
[300852] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inhuman Test Subject",
["npcID"] = 202147,
},
[401192] = {
["source"] = "Quicksmack Magk",
["event"] = "SPELL_CAST_START",
["npcID"] = 204651,
},
[160681] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1732,
},
[117720] = {
["source"] = "Gormali Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 54703,
},
[401193] = {
["source"] = "Nevroll's Drogbar",
["event"] = "SPELL_CAST_START",
["npcID"] = 203041,
},
[142252] = {
["source"] = "Forgotten King",
["event"] = "SPELL_CAST_START",
["npcID"] = 67081,
},
[409385] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[411433] = {
["isChanneled"] = true,
["source"] = "Violetwing Stagbeetle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[52721] = {
["encounterName"] = "Mal'ganis",
["source"] = "Mal'Ganis",
["encounterID"] = 2005,
["event"] = "SPELL_CAST_START",
["npcID"] = 26533,
},
[203685] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99676,
},
[397100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[22907] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["encounterID"] = 1947,
["event"] = "SPELL_CAST_START",
["npcID"] = 17826,
},
[319286] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifestation of Rage",
["npcID"] = 164084,
},
[218020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Stonewarden",
["npcID"] = 108856,
},
[413483] = {
["source"] = "Apiazhus",
["event"] = "SPELL_CAST_START",
["npcID"] = 200981,
},
[372529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Thief",
["npcID"] = 192748,
},
[200615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Sorcerer",
["npcID"] = 102726,
},
[411437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[290621] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[191401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Marksman",
["npcID"] = 96640,
},
[411439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[413487] = {
["source"] = "Temporal Fusion",
["event"] = "SPELL_CAST_START",
["npcID"] = 206068,
},
[126937] = {
["source"] = "Sra'thik Ambercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 64917,
},
[319292] = {
["source"] = "Ogre Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 156676,
},
[419632] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pendule",
["npcID"] = 208945,
},
[52722] = {
["encounterName"] = "Mal'ganis",
["source"] = "Mal'Ganis",
["encounterID"] = 2005,
["event"] = "SPELL_CAST_START",
["npcID"] = 26533,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 98696,
},
[309055] = {
["source"] = "Baruk Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 155957,
},
[302912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Trapper",
["npcID"] = 153962,
},
[397109] = {
["source"] = "Air Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 203743,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[397110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Diruption",
["npcID"] = 201598,
},
[270150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feathered Viper",
["npcID"] = 132409,
},
[264007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vol'jamba",
["npcID"] = 131241,
},
[372538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Flare",
["npcID"] = 189470,
},
[374586] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[409398] = {
["source"] = "Crystalline Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 203831,
},
[397112] = {
["source"] = "Ancient Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189798,
},
[335680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Converter",
["npcID"] = 181782,
},
[42740] = {
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[401209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepbed Longwalker",
["npcID"] = 203917,
},
[388923] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196482,
},
[309061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baruk Protector",
["npcID"] = 153099,
},
[88032] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[44276] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24556,
},
[113629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneweaver",
["npcID"] = 59193,
},
[407354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slaghide Shalewing",
["npcID"] = 202303,
},
[388925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[309063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baruk Protector",
["npcID"] = 153099,
},
[401212] = {
["source"] = "Goopal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203477,
},
[153524] = {
["source"] = "Plagued Bat",
["event"] = "SPELL_CAST_START",
["npcID"] = 75459,
},
[382783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Tyrant",
["npcID"] = 202483,
},
[39413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Spearman",
["npcID"] = 17729,
},
[401214] = {
["source"] = "Elder Honeypelt",
["event"] = "SPELL_CAST_START",
["npcID"] = 202451,
},
[153525] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["npcID"] = 74948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 438,
},
[362308] = {
["source"] = "Malfunctioned Constructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 181870,
},
[115678] = {
["source"] = "Greenwood Thief",
["event"] = "SPELL_CAST_START",
["npcID"] = 54930,
},
[407359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slaghide Shalewing",
["npcID"] = 202303,
},
[401216] = {
["source"] = "Nevroll",
["event"] = "SPELL_CAST_START",
["npcID"] = 203039,
},
[307020] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 157354,
},
[382787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disease Slasher",
["npcID"] = 187315,
},
[376644] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[390979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurgan",
["npcID"] = 201540,
},
[168885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[266067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loa-Speaker Kihara",
["npcID"] = 132979,
},
[114143] = {
["isChanneled"] = true,
["source"] = "Chief Gukgut",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54868,
},
[343883] = {
["source"] = "Shuja Grimaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 167664,
},
[304976] = {
["encounterName"] = "Inquisitor Gnshal",
["source"] = "Inquisitor Gnshal",
["encounterID"] = 2371,
["event"] = "SPELL_CAST_START",
["npcID"] = 156161,
},
[405316] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[390982] = {
["source"] = "Nokhud Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 185353,
},
[147385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironfur Great Bull",
["npcID"] = 72844,
},
[172982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegemaster Olugar",
["npcID"] = 83026,
},
[372553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Howler",
["npcID"] = 195273,
},
[390983] = {
["source"] = "Primalbound Water Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 190739,
},
[335694] = {
["source"] = "Mawsworn Endbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 157810,
},
[390984] = {
["source"] = "Primal Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190996,
},
[425796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Incineration",
["npcID"] = 210147,
},
[362316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miru Jasyn",
["npcID"] = 183448,
},
[199604] = {
["source"] = "Sledge",
["event"] = "SPELL_CAST_START",
["npcID"] = 92990,
},
[403272] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[382795] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[360270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oracle Zoketh",
["npcID"] = 181625,
},
[140220] = {
["source"] = "Zandalari Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 69405,
},
[372557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Howler",
["npcID"] = 195273,
},
[390987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Brute",
["npcID"] = 185168,
},
[390988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Sentinel",
["npcID"] = 192700,
},
[45046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Sorcerer",
["npcID"] = 25033,
},
[197558] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[388941] = {
["source"] = "Hulking Wave",
["event"] = "SPELL_CAST_START",
["npcID"] = 187793,
},
[200630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mindshattered Screecher",
["npcID"] = 95769,
},
[388942] = {
["source"] = "Arcane Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 196671,
},
[276316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Abomination",
["npcID"] = 145120,
},
[419659] = {
["source"] = "Ignit the Firebranded",
["event"] = "SPELL_CAST_START",
["npcID"] = 209620,
},
[372561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Hunter",
["npcID"] = 189227,
},
[39671] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[311129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overwhelming Confusion",
["npcID"] = 161829,
},
[388944] = {
["source"] = "Hulking Wave",
["event"] = "SPELL_CAST_START",
["npcID"] = 187793,
},
[114658] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[382802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 187224,
},
[25085] = {
["source"] = "Syndicate Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 2590,
},
[137152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hidden Fog",
["npcID"] = 69375,
},
[311132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ha-Li",
["npcID"] = 157153,
},
[372565] = {
["isChanneled"] = true,
["source"] = "Flashfrost Chillweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[372566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Hunter",
["npcID"] = 189227,
},
[317277] = {
["source"] = "Magni Bronzebeard",
["event"] = "SPELL_CAST_START",
["npcID"] = 154533,
},
[302943] = {
["source"] = "Zanj'ir Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 153962,
},
[388949] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 196679,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2614,
},
[325469] = {
["source"] = "Decrepit Bilespawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 166928,
},
[401236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nidharr",
["npcID"] = 201310,
},
[405332] = {
["source"] = "Gahz'raxes",
["event"] = "SPELL_CAST_START",
["npcID"] = 200537,
},
[417619] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[427858] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[87527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dustbelcher Initiate",
["npcID"] = 46694,
},
[388952] = {
["source"] = "Echoed Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 202636,
},
[360284] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["npcID"] = 181399,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[254901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atal'Shadra Bloodletter",
["npcID"] = 122872,
},
[395097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberdusk",
["npcID"] = 203664,
},
[210875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 96574,
},
[434005] = {
["source"] = "Gilnean Alchemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 213995,
},
[59638] = {
["encounterName"] = "Terros",
["source"] = "Mirror Image",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 31216,
},
[391003] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[200637] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[427863] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[413529] = {
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[374622] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190690,
},
[425816] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Treant",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 211904,
},
[37113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[374623] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190686,
},
[319334] = {
["source"] = "Jugnug",
["event"] = "SPELL_CAST_START",
["npcID"] = 153583,
},
[388958] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellbound Scepter",
["npcID"] = 196671,
},
[391006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blisterhide",
["npcID"] = 197353,
},
[196543] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[407389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brimstone Serpent",
["npcID"] = 202272,
},
[409437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[12160] = {
["source"] = "Alliance Druid",
["event"] = "SPELL_CAST_START",
["npcID"] = 68486,
},
[32637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomwalker",
["npcID"] = 167749,
},
[147398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Pool Tender",
["npcID"] = 73342,
},
[124389] = {
["source"] = "Slitherscale Ripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 58212,
},
[401248] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[193473] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Tendril",
["npcID"] = 192337,
},
[388962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matriarch Remalla",
["npcID"] = 193246,
},
[155590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Iron Summoner",
["npcID"] = 77036,
},
[264050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistle Acolyte",
["npcID"] = 135474,
},
[78827] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Guard Gro'tash",
["npcID"] = 67927,
},
[317292] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 162480,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[360295] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["npcID"] = 181549,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[18431] = {
["encounterName"] = "Onyxia",
["source"] = "Onyxia",
["encounterID"] = 1084,
["event"] = "SPELL_CAST_START",
["npcID"] = 10184,
},
[106984] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["npcID"] = 56747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[256955] = {
["encounterName"] = "Knight Captain Valyri",
["source"] = "Knight Captain Valyri",
["event"] = "SPELL_CAST_START",
["npcID"] = 127490,
},
[200642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadsoul Ruiner",
["npcID"] = 95771,
},
[153544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soaring Chakram Master",
["npcID"] = 76132,
},
[198595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Thundercaller",
["npcID"] = 95842,
},
[39674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[409445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[305010] = {
["source"] = "Tidemistress Ethendriss",
["event"] = "SPELL_CAST_START",
["npcID"] = 153934,
},
[374634] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[360300] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["npcID"] = 181398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["npcID"] = 194367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[378731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigellus",
["npcID"] = 189217,
},
[274296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Monstrosity",
["npcID"] = 139709,
},
[127463] = {
["source"] = "Shao-Tien Antiquator",
["event"] = "SPELL_CAST_START",
["npcID"] = 58928,
},
[413544] = {
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[391019] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[401258] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[395115] = {
["source"] = "Smogswog the Firebreather",
["event"] = "SPELL_CAST_START",
["npcID"] = 193120,
},
[15232] = {
["source"] = "Sunblade Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 24762,
},
[360304] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["npcID"] = 181399,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[256959] = {
["source"] = "Reanimated Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127757,
},
[388974] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Matriarch Remalla",
["npcID"] = 193246,
},
[403309] = {
["source"] = "Expulsion Drone",
["event"] = "SPELL_CAST_START",
["npcID"] = 202592,
},
[16000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Celebrian Dryad",
["npcID"] = 130273,
},
[79854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Godfrey",
["npcID"] = 45878,
},
[388976] = {
["source"] = "Arcane Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 196671,
},
[195528] = {
["source"] = "Animated Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 95920,
},
[140239] = {
["source"] = "Zandalari Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 69405,
},
[41467] = {
["encounterName"] = "The Illidari Council",
["source"] = "Gathios the Shatterer",
["npcID"] = 22949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[207815] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[167884] = {
["source"] = "Terokk",
["event"] = "SPELL_CAST_START",
["npcID"] = 83554,
},
[411503] = {
["source"] = "Diganthor",
["event"] = "SPELL_CAST_START",
["npcID"] = 204434,
},
[391026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[409456] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[405361] = {
["source"] = "Lady Shaz'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200885,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[313213] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["npcID"] = 156866,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2331,
},
[36604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Emerald Lasher",
["npcID"] = 208750,
},
[37628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yarrog Baneshadow",
["npcID"] = 3183,
},
[117227] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["npcID"] = 60586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[372600] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[102381] = {
["encounterName"] = "Murozond",
["source"] = "Murozond",
["npcID"] = 54432,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1271,
},
[127466] = {
["source"] = "Shao-Tien Antiquator",
["event"] = "SPELL_CAST_START",
["npcID"] = 58928,
},
[79856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ambermill Magister",
["npcID"] = 1914,
},
[405366] = {
["source"] = "Lady Shaz'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200885,
},
[302979] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Scrap King",
["npcID"] = 151625,
},
[290694] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Spawn of Laminaria",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 148633,
},
[138196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightning Guardian",
["npcID"] = 69834,
},
[126955] = {
["source"] = "Mogu'shan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 64061,
},
[43516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Prisoner",
["npcID"] = 24255,
},
[51963] = {
["encounterName"] = "Terros",
["source"] = "Ebon Gargoyle",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 27829,
},
[79857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Godfrey",
["npcID"] = 45878,
},
[360320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chrysalis Shaper",
["npcID"] = 181942,
},
[413562] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Lurking Tempest",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 204337,
},
[421754] = {
["isChanneled"] = true,
["source"] = "Moltenbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206477,
},
[407420] = {
["source"] = "Primalist Runestone",
["event"] = "SPELL_CAST_START",
["npcID"] = 204001,
},
[311176] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[157652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Magus",
["npcID"] = 77694,
},
[11969] = {
["source"] = "Magistrate Burnside",
["event"] = "SPELL_CAST_START",
["npcID"] = 47790,
},
[79858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dalaran Summoner",
["npcID"] = 2358,
},
[403326] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[376706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
},
[329608] = {
["source"] = "Runecarved Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 155828,
},
[405375] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[329609] = {
["source"] = "Runecarved Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 155828,
},
[266129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'ragon",
["npcID"] = 120850,
},
[268177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windspeaker Heldis",
["npcID"] = 136214,
},
[384899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 186208,
},
[111599] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[256970] = {
["encounterName"] = "Knight Captain Valyri",
["source"] = "Knight Captain Valyri",
["event"] = "SPELL_CAST_START",
["npcID"] = 127490,
},
[409473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[138201] = {
["source"] = "Thunder Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 69821,
},
[147416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Candlekeeper",
["npcID"] = 72875,
},
[372615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tamed Phoenix",
["npcID"] = 189247,
},
[200658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadsoul Ruiner",
["npcID"] = 95771,
},
[298897] = {
["encounterName"] = "Trixie & Naeno",
["source"] = "Trixie Tazer",
["npcID"] = 150712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2312,
},
[196563] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[111600] = {
["encounterName"] = "Raigonn",
["source"] = "Krik'thik Swarm Bringer",
["encounterID"] = 1419,
["event"] = "SPELL_CAST_START",
["npcID"] = 56930,
},
[423811] = {
["source"] = "Overseer Chardryn",
["event"] = "SPELL_CAST_START",
["npcID"] = 210912,
},
[409477] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[113136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
},
[268184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windspeaker Heldis",
["npcID"] = 136214,
},
[391050] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[360334] = {
["source"] = "Dominated Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 183983,
},
[378764] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[415624] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[186327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Helarjar Mistcaller",
["npcID"] = 105748,
},
[268187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windspeaker Heldis",
["npcID"] = 136214,
},
[163802] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["npcID"] = 74790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1654,
},
[395148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mikrin of the Raging Winds",
["npcID"] = 193173,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[83445] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["encounterID"] = 1052,
["event"] = "SPELL_CAST_START",
["npcID"] = 44577,
},
[286618] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[201686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Spectre",
["npcID"] = 108815,
},
[76790] = {
["source"] = "Naz'jar Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 39616,
},
[417675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meantron 7000",
["npcID"] = 206131,
},
[255952] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126832,
},
[391055] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[423820] = {
["source"] = "Overseer Chardryn",
["event"] = "SPELL_CAST_START",
["npcID"] = 210912,
},
[360340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Accelerated Helicid",
["npcID"] = 178831,
},
[405391] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[59389] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["npcID"] = 23953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2026,
},
[362390] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["npcID"] = 182777,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2549,
},
[266146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disciple of Zul",
["npcID"] = 139543,
},
[376725] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[170973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dew Master",
["npcID"] = 81553,
},
[256979] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Eudora",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126848,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[264101] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Aqu'sirr",
["npcID"] = 134056,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2130,
},
[409492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Afflicted Soul",
["npcID"] = 204773,
},
[270246] = {
["source"] = "Mawsworn Pyremancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 176576,
},
[413590] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[256981] = {
["source"] = "Frightened Brutosaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 129668,
},
[33793] = {
["encounterName"] = "Vazruden the Herald",
["source"] = "Nazan",
["encounterID"] = 1892,
["event"] = "SPELL_CAST_START",
["npcID"] = 17307,
},
[395161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure-Mad Trambladd",
["npcID"] = 193146,
},
[429973] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[436117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[183263] = {
["source"] = "Gormling Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 155219,
},
[113141] = {
["encounterName"] = "Darkmaster Gandling",
["event"] = "SPELL_CAST_START",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
},
[364447] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Custodian",
["npcID"] = 184522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2512,
},
[417689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meantron Prototype",
["npcID"] = 206132,
},
[164834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Naturalist",
["npcID"] = 81819,
},
[421785] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Watchful Gladehind",
["npcID"] = 210170,
},
[368544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 184597,
},
[417691] = {
["source"] = "Fury of N'zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 205307,
},
[111606] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[11970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugated Firestarter",
["npcID"] = 46838,
},
[395167] = {
["source"] = "O'nank Shorescour",
["event"] = "SPELL_CAST_START",
["npcID"] = 193118,
},
[374691] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[425885] = {
["encounterName"] = "Smolderon",
["source"] = "Seeking Inferno",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 210203,
},
[193505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[382883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 187224,
},
[25602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maelgwyn",
["npcID"] = 81995,
},
[129013] = {
["source"] = "Windward Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 58213,
},
[113143] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59080,
},
[268211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runecarver Sorn",
["npcID"] = 134150,
},
[368551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sylvanas Windrunner",
["npcID"] = 184605,
},
[401316] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[315311] = {
["encounterName"] = "The Hivemind",
["source"] = "Aqir Drone",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157255,
},
[395174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gethdazr",
["npcID"] = 196165,
},
[405413] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200918,
},
[268214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runecarver Sorn",
["npcID"] = 134150,
},
[79868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Relios the Relic Keeper",
["npcID"] = 45734,
},
[417701] = {
["source"] = "Peeved",
["event"] = "SPELL_CAST_START",
["npcID"] = 205428,
},
[274359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Stormsong",
["npcID"] = 139737,
},
[391081] = {
["source"] = "Tserasor the Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190598,
},
[270264] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Breacher",
["npcID"] = 209821,
},
[395177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Massive Magmashell",
["npcID"] = 193152,
},
[413607] = {
["source"] = "Infinite Twilight Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201223,
},
[164841] = {
["encounterName"] = "Teron'gor",
["source"] = "Teron'gor",
["npcID"] = 77734,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1714,
},
[288696] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[15234] = {
["source"] = "Coilfang Enchantress",
["event"] = "SPELL_CAST_START",
["npcID"] = 17961,
},
[61184] = {
["source"] = "Krasari Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 58070,
},
[116217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mist Creeper",
["npcID"] = 56304,
},
[125432] = {
["source"] = "Sra'thik Pool-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 63570,
},
[68607] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Hummel",
["encounterID"] = 2879,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36296,
},
[203750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Chronomaton",
["npcID"] = 111622,
},
[401325] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[386991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 191395,
},
[111610] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[88061] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[386992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 192636,
},
[178154] = {
["encounterName"] = "Oshir",
["source"] = "Rylak Skyterror",
["npcID"] = 89011,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1750,
},
[374706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[376754] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Skullhauler",
["npcID"] = 191983,
},
[395184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanakk",
["npcID"] = 200911,
},
[150510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Kraulshaper",
["npcID"] = 74550,
},
[151534] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Charlga Razorflank",
["npcID"] = 4421,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1661,
},
[168940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'gall",
["npcID"] = 77020,
},
[202728] = {
["source"] = "Dreadlord Mendacius",
["event"] = "SPELL_CAST_START",
["npcID"] = 99649,
},
[218087] = {
["isChanneled"] = true,
["source"] = "OOX-Avenger/MG",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 151296,
},
[44547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sister of Torment",
["npcID"] = 24697,
},
[172013] = {
["isChanneled"] = true,
["source"] = "Sethekk Oracle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86123,
},
[370615] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[83455] = {
["encounterName"] = "Siamat",
["source"] = "Minion of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 44704,
},
[266181] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[69633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Warden",
["npcID"] = 36666,
},
[79872] = {
["source"] = "Captain Iceheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 48880,
},
[413621] = {
["source"] = "Infinite Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 206214,
},
[405431] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[168944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'gall",
["npcID"] = 77020,
},
[391098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galzuda",
["npcID"] = 193330,
},
[360382] = {
["isChanneled"] = true,
["source"] = "Mawsworn Converter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181782,
},
[405433] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[268234] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Bile Oozeling",
["npcID"] = 136541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[401338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[354240] = {
["source"] = "Vault Aegis",
["event"] = "SPELL_CAST_START",
["npcID"] = 185028,
},
[393148] = {
["source"] = "Maneet",
["event"] = "SPELL_CAST_START",
["npcID"] = 188704,
},
[30851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[374719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonejaw Basilisk",
["npcID"] = 188128,
},
[387006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Treant",
["npcID"] = 186361,
},
[389054] = {
["source"] = "Arcane Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 196694,
},
[317383] = {
["source"] = "Quilboar Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 150237,
},
[401341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[405437] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[199663] = {
["source"] = "Ghostly Councilor",
["event"] = "SPELL_CAST_START",
["npcID"] = 98370,
},
[401342] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmaclaw Queen",
["npcID"] = 203934,
},
[65026] = {
["encounterName"] = "Mimiron",
["source"] = "Leviathan Mk II",
["encounterID"] = 1138,
["event"] = "SPELL_CAST_START",
["npcID"] = 34071,
},
[57091] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["npcID"] = 26723,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2011,
},
[147446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreboding Flame",
["npcID"] = 73162,
},
[378818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[274383] = {
["source"] = "Vermin Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 130404,
},
[12675] = {
["encounterName"] = "Warder Stilgiss",
["source"] = "Warder Stilgiss",
["encounterID"] = 233,
["event"] = "SPELL_CAST_START",
["npcID"] = 9041,
},
[12739] = {
["source"] = "Twilight Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 30319,
},
[59395] = {
["source"] = "Memory of a Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200529,
},
[288719] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[198641] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Kur'talos Ravencrest",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98965,
},
[207856] = {
["isChanneled"] = true,
["source"] = "Helarjar Champion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96754,
},
[200689] = {
["source"] = "Vile Soulmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 102724,
},
[411585] = {
["source"] = "Jalgon Stoutburn",
["event"] = "SPELL_CAST_START",
["npcID"] = 204426,
},
[166902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blademaster Bralok",
["npcID"] = 76981,
},
[226287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Chunk",
["npcID"] = 101438,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "Storm Drake",
["npcID"] = 97788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[214001] = {
["source"] = "Risen Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 102095,
},
[151545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Warder",
["npcID"] = 75210,
},
[56580] = {
["source"] = "Deep Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 30279,
},
[97282] = {
["encounterName"] = "Lord Rhyolith",
["source"] = "Lord Rhyolith",
["encounterID"] = 1204,
["event"] = "SPELL_CAST_START",
["npcID"] = 52558,
},
[372683] = {
["source"] = "Infused Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187894,
},
[384970] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Hyena",
["npcID"] = 185691,
},
[378827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Plunderer",
["npcID"] = 192786,
},
[210931] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Eye of Il'gynoth",
["encounterID"] = 1873,
["event"] = "SPELL_CAST_START",
["npcID"] = 105906,
},
[407496] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[376780] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[214003] = {
["source"] = "Risen Swordsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 102094,
},
[15043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Green Mage",
["npcID"] = 32324,
},
[136189] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69078,
},
[405450] = {
["source"] = "Hungry Rock Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 203260,
},
[203765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilnean Arcanist",
["npcID"] = 102875,
},
[417737] = {
["source"] = "Aqir Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 207893,
},
[387021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Essence",
["npcID"] = 192238,
},
[374735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[417738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Peeved",
["npcID"] = 205428,
},
[356306] = {
["source"] = "Mawsworn Annihilator",
["event"] = "SPELL_CAST_START",
["npcID"] = 182214,
},
[391118] = {
["encounterName"] = "Azureblade",
["source"] = "Scalebane Lieutenant",
["npcID"] = 191739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[319447] = {
["source"] = "Empowered Imperial Curator",
["event"] = "SPELL_CAST_START",
["npcID"] = 168111,
},
[395214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver A'tir",
["npcID"] = 186859,
},
[325591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gracefallen Tactician",
["npcID"] = 163392,
},
[152573] = {
["source"] = "Coldsnout Boar",
["event"] = "SPELL_CAST_START",
["npcID"] = 75416,
},
[56837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Hunter Ascendant",
["npcID"] = 26727,
},
[292828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Etruvis the Vassal",
["npcID"] = 151041,
},
[147454] = {
["source"] = "Spirit of Jadefire",
["event"] = "SPELL_CAST_START",
["npcID"] = 72769,
},
[175099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dew Master",
["npcID"] = 81553,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[395217] = {
["source"] = "Riverwalker Tamopo",
["event"] = "SPELL_CAST_START",
["npcID"] = 193240,
},
[266209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Deathspeaker",
["npcID"] = 134284,
},
[366549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overthrown Protector",
["npcID"] = 185154,
},
[401361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Towering Deepstrider",
["npcID"] = 205124,
},
[173052] = {
["encounterName"] = "Xeri'tac",
["source"] = "Venom Sprayer",
["npcID"] = 86547,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1752,
},
[401362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Heatbinder",
["npcID"] = 200452,
},
[154623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Spirit-Tender",
["npcID"] = 77131,
},
[147456] = {
["source"] = "Spirit of Jadefire",
["event"] = "SPELL_CAST_START",
["npcID"] = 72769,
},
[199674] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Bjorn",
["npcID"] = 97081,
},
[372696] = {
["source"] = "Primal Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 188244,
},
[197627] = {
["source"] = "Brood Queen Tyranna",
["event"] = "SPELL_CAST_START",
["npcID"] = 93802,
},
[142338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Shaman",
["npcID"] = 72451,
},
[417748] = {
["source"] = "Klaxxi Blade Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 207922,
},
[226296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[260084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Tempest",
["npcID"] = 131852,
},
[360412] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["npcID"] = 180773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2512,
},
[401368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepstrider Matriarch",
["npcID"] = 203727,
},
[419798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[417751] = {
["source"] = "Klaxxi Blade Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 207922,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[401370] = {
["source"] = "Raging Owlbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 205316,
},
[366559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overthrown Protector",
["npcID"] = 185154,
},
[30853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[368608] = {
["isChanneled"] = true,
["source"] = "Akkaris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 179006,
},
[378847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Spinecrusher",
["npcID"] = 192787,
},
[298985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfin Seer",
["npcID"] = 148475,
},
[69131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Animator",
["npcID"] = 36516,
},
[401373] = {
["source"] = "Raging Owlbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 205316,
},
[387039] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Brute",
["npcID"] = 187299,
},
[307177] = {
["source"] = "Spellbound Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 162716,
},
[39945] = {
["encounterName"] = "Shade of Akama",
["source"] = "Akama",
["npcID"] = 23191,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[421852] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shoreline Gladehart",
["npcID"] = 210283,
},
[391136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Breaker",
["npcID"] = 187240,
},
[384993] = {
["source"] = "Horned Filcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 194702,
},
[378850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Destabilized Elemental",
["npcID"] = 181536,
},
[41481] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["npcID"] = 22950,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[151558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Ogre Mage",
["npcID"] = 75272,
},
[266225] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[268273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidesage Enforcer",
["npcID"] = 134338,
},
[417759] = {
["source"] = "Klaxxi Amber Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 207918,
},
[329706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Archer",
["npcID"] = 153878,
},
[268274] = {
["encounterName"] = "Ring of Booty",
["source"] = "Booty Fanatic",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 136539,
},
[79883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hatchet",
["npcID"] = 46055,
},
[427999] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2824,
},
[252923] = {
["source"] = "Zanchuli Witch-Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122969,
},
[387045] = {
["source"] = "Ezrigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187666,
},
[372711] = {
["isChanneled"] = true,
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186220,
},
[204802] = {
["source"] = "Shadow Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 105069,
},
[268278] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[401382] = {
["encounterName"] = "Eranog",
["source"] = "Past Self",
["npcID"] = 185800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 214608,
},
[401383] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[387049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Dragon",
["npcID"] = 194089,
},
[284662] = {
["encounterName"] = "King Rastakhan",
["source"] = "Prelate Za'lan",
["npcID"] = 146320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[376811] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[395241] = {
["source"] = "Primalist Voltweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198868,
},
[76813] = {
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[366573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overthrown Protector",
["npcID"] = 185154,
},
[401385] = {
["source"] = "Crystal Wormling",
["event"] = "SPELL_CAST_START",
["npcID"] = 205613,
},
[374765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Bloodbeak",
["npcID"] = 185350,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[423912] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Stonewarmer",
["npcID"] = 210235,
},
[385005] = {
["source"] = "Primalsworn Furbolg",
["event"] = "SPELL_CAST_START",
["npcID"] = 190738,
},
[362480] = {
["source"] = "Carnivorous Overgrowth",
["event"] = "SPELL_CAST_START",
["npcID"] = 182322,
},
[372719] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[150540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Kraulshaper",
["npcID"] = 74550,
},
[15620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomforge Dragoon",
["npcID"] = 8899,
},
[387054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffdrip Snapstrider",
["npcID"] = 189812,
},
[172042] = {
["source"] = "Shadowclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 86138,
},
[166923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion Druna",
["npcID"] = 81603,
},
[409581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whisper in the Dark",
["npcID"] = 203806,
},
[272382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankylodon Bull",
["npcID"] = 123093,
},
[41483] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["npcID"] = 22950,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[407535] = {
["source"] = "Horde Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203861,
},
[262145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Burlok",
["npcID"] = 138793,
},
[76815] = {
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[211975] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 105629,
},
[192522] = {
["source"] = "Ash'golm",
["event"] = "SPELL_CAST_START",
["npcID"] = 96681,
},
[131090] = {
["source"] = "Koukou",
["event"] = "SPELL_CAST_START",
["npcID"] = 66213,
},
[354297] = {
["source"] = "Support Officer",
["event"] = "SPELL_CAST_START",
["npcID"] = 177817,
},
[405491] = {
["source"] = "Animated Riches",
["event"] = "SPELL_CAST_START",
["npcID"] = 201573,
},
[207881] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[405492] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[425970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Boughwalker",
["npcID"] = 213576,
},
[395254] = {
["source"] = "Primalist Tempestmaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 198878,
},
[274437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galecaller Apprentice",
["npcID"] = 139800,
},
[257028] = {
["encounterName"] = "Knight Captain Valyri",
["source"] = "Knight Captain Valyri",
["event"] = "SPELL_CAST_START",
["npcID"] = 127490,
},
[417780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Mekgineer Hologram",
["npcID"] = 207539,
},
[372730] = {
["source"] = "Primal Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 188244,
},
[417781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Mechagon",
["npcID"] = 205309,
},
[150546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Stonechanter",
["npcID"] = 74549,
},
[376827] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[407544] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[34829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rangari Jonaa",
["npcID"] = 86663,
},
[387067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Construct",
["npcID"] = 186740,
},
[88080] = {
["source"] = "Whipping Wind",
["event"] = "SPELL_CAST_START",
["npcID"] = 47238,
},
[428023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[372735] = {
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187969,
},
[31623] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["encounterID"] = 1947,
["event"] = "SPELL_CAST_START",
["npcID"] = 17826,
},
[411644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Tidehunter",
["npcID"] = 205365,
},
[165907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Groog",
["npcID"] = 80167,
},
[360451] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["npcID"] = 181395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2542,
},
[130060] = {
["source"] = "Monk Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 66101,
},
[81426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Guard",
["npcID"] = 7013,
},
[41229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Blood Prophet",
["npcID"] = 23237,
},
[165908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Borogahn",
["npcID"] = 81043,
},
[284686] = {
["encounterName"] = "King Rastakhan",
["source"] = "Siegebreaker Roka",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 146322,
},
[393217] = {
["source"] = "Blazing Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 189043,
},
[407552] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[307213] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[374789] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[258058] = {
["source"] = "Silt Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 127381,
},
[272402] = {
["source"] = "Cutwater Knife Juggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 129599,
},
[153623] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["encounterID"] = 1688,
["event"] = "SPELL_CAST_START",
["npcID"] = 75829,
},
[385029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshripper Vulture",
["npcID"] = 186246,
},
[403459] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[372743] = {
["isChanneled"] = true,
["source"] = "Flashfrost Chillweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[143385] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["npcID"] = 71504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1601,
},
[76820] = {
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[268309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepsea Ritualist",
["npcID"] = 134417,
},
[164887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Mender",
["npcID"] = 81820,
},
[191508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Aspirant",
["npcID"] = 101637,
},
[362507] = {
["event"] = "SPELL_CAST_START",
["source"] = "Octolus",
["npcID"] = 182690,
},
[313362] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[191509] = {
["source"] = "Hill Ettin",
["event"] = "SPELL_CAST_START",
["npcID"] = 102886,
},
[319506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifestation of Hate",
["npcID"] = 164232,
},
[395273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stormsentry",
["npcID"] = 196856,
},
[202772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonefist Brawler",
["npcID"] = 102623,
},
[59148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[387083] = {
["source"] = "Time-Lost Briarback",
["event"] = "SPELL_CAST_START",
["npcID"] = 187264,
},
[266266] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[374797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Divebeak Ohuna",
["npcID"] = 189373,
},
[385036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[268315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyss Dweller",
["npcID"] = 134423,
},
[36879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 20977,
},
[421898] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[268317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drowned Depthbringer",
["npcID"] = 134418,
},
[409612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whisper in the Dark",
["npcID"] = 203806,
},
[151581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Overseer",
["npcID"] = 75426,
},
[376851] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[288798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tormented Magister",
["npcID"] = 146809,
},
[17290] = {
["source"] = "Twilight Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 30111,
},
[387091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Sunseeker",
["npcID"] = 187239,
},
[268322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drowned Depthbringer",
["npcID"] = 134418,
},
[151583] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Charlga Razorflank",
["npcID"] = 4421,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1661,
},
[428047] = {
["source"] = "Verlann Timbercrush",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[360472] = {
["source"] = "Accelerated Bufonid",
["event"] = "SPELL_CAST_START",
["npcID"] = 178803,
},
[395284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rugren",
["npcID"] = 201563,
},
[385046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skulking Gutstabber",
["npcID"] = 186242,
},
[272420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawg Rider",
["npcID"] = 128267,
},
[307232] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[9734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Walden",
["npcID"] = 45879,
},
[148513] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Kun-Da",
["npcID"] = 71408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[259092] = {
["source"] = "Irontide Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 126919,
},
[211994] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 105629,
},
[189469] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[200732] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[428054] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[397338] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190588,
},
[391195] = {
["source"] = "Bisquius",
["event"] = "SPELL_CAST_START",
["npcID"] = 197557,
},
[331811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightbound Scorcher",
["npcID"] = 165687,
},
[415769] = {
["source"] = "Coalesced Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 206140,
},
[147492] = {
["source"] = "Shattered Hand Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 80430,
},
[415770] = {
["source"] = "Coalesced Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 206140,
},
[177185] = {
["source"] = "Brine Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 86267,
},
[397341] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[391198] = {
["source"] = "Tserasor the Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190598,
},
[376865] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[415773] = {
["source"] = "Interval",
["event"] = "SPELL_CAST_START",
["npcID"] = 206065,
},
[288813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger Il'koxik",
["npcID"] = 160810,
},
[266288] = {
["source"] = "Ol' Big Tusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 153206,
},
[395297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snee",
["npcID"] = 186203,
},
[274480] = {
["source"] = "Risen Ravasaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 139842,
},
[171044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Cannon",
["npcID"] = 85587,
},
[165925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Borogahn",
["npcID"] = 81043,
},
[395299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[395300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Pathfinder",
["npcID"] = 194210,
},
[374823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[409635] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[101401] = {
["encounterName"] = "Echo of Sylvanas",
["source"] = "Echo of Sylvanas",
["npcID"] = 54123,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1882,
},
[366633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overthrown Protector",
["npcID"] = 185155,
},
[385063] = {
["source"] = "Primalist Cinderweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[389159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[207906] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[346157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul Feaster",
["npcID"] = 175699,
},
[385065] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[148522] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72958,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[3650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudsnout Gnoll",
["npcID"] = 2372,
},
[288822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rastari Marksman",
["npcID"] = 149591,
},
[153642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Iron Warcaster",
["npcID"] = 76151,
},
[59152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Construct",
["npcID"] = 28835,
},
[385068] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["npcID"] = 197145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[290872] = {
["source"] = "Automated Flame Turret",
["event"] = "SPELL_CAST_START",
["npcID"] = 149879,
},
[268347] = {
["encounterName"] = "Lord Stormsong",
["source"] = "Lord Stormsong",
["npcID"] = 134060,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2132,
},
[147500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eroded Cliffdweller",
["npcID"] = 72809,
},
[268348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Tentacle",
["npcID"] = 136353,
},
[407596] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[303161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Raider",
["npcID"] = 201301,
},
[214053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Rockshell",
["npcID"] = 113508,
},
[397358] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[323640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtusk Alpha",
["npcID"] = 165473,
},
[139311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Scavenger",
["npcID"] = 70224,
},
[297020] = {
["source"] = "Binder Baritas",
["event"] = "SPELL_CAST_START",
["npcID"] = 185015,
},
[393265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tombcaller Arban",
["npcID"] = 190047,
},
[387122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Construct",
["npcID"] = 186740,
},
[290878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
},
[292926] = {
["source"] = "Lord of Torment",
["event"] = "SPELL_CAST_START",
["npcID"] = 151127,
},
[385075] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[156718] = {
["source"] = "Monstrous Corpse Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 76104,
},
[79903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turkina",
["npcID"] = 81996,
},
[52498] = {
["source"] = "Dark Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 28200,
},
[113691] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[303167] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Destroyer",
["npcID"] = 153697,
},
[387125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[315454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pelagos",
["npcID"] = 184003,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[417843] = {
["source"] = "Listless Nae'dra",
["event"] = "SPELL_CAST_START",
["npcID"] = 211164,
},
[387127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[372793] = {
["isChanneled"] = true,
["source"] = "Primal Juggernaut",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188244,
},
[337982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[372794] = {
["isChanneled"] = true,
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187897,
},
[317506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Depthsborn Binder",
["npcID"] = 154329,
},
[200748] = {
["source"] = "Fel Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 97706,
},
[59154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Giant",
["npcID"] = 28920,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[272457] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[389179] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[175152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loup",
["npcID"] = 82209,
},
[106526] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[274507] = {
["encounterName"] = "Council o' Captains",
["source"] = "Bilge Rat Swabby",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 129526,
},
[199726] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Ranulf",
["npcID"] = 97083,
},
[226347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneclaw Hunter",
["npcID"] = 91332,
},
[372800] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187125,
},
[391230] = {
["source"] = "Bisquius",
["event"] = "SPELL_CAST_START",
["npcID"] = 197557,
},
[272461] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Horror",
["npcID"] = 122684,
},
[32011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfurious",
["npcID"] = 80725,
},
[183345] = {
["source"] = "Necrodark Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 104888,
},
[319560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emaciated Etherwyrm",
["npcID"] = 172703,
},
[260136] = {
["source"] = "Mala'kili",
["event"] = "SPELL_CAST_START",
["npcID"] = 128935,
},
[196656] = {
["source"] = "Malace Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 97090,
},
[193585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockbound Trapper",
["npcID"] = 102232,
},
[292942] = {
["source"] = "Chainbound Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 181800,
},
[122398] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Mutated Construct",
["encounterID"] = 1499,
["event"] = "SPELL_CAST_START",
["npcID"] = 62701,
},
[346186] = {
["source"] = "Mawsworn Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 167323,
},
[192563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Purifier",
["npcID"] = 97197,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[272469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Reach",
["npcID"] = 138538,
},
[417860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shoreline Gladehart",
["npcID"] = 210283,
},
[227376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crown Technician",
["npcID"] = 114275,
},
[268375] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Cultist",
["npcID"] = 134514,
},
[311378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deresh of the Nothingness",
["npcID"] = 159768,
},
[387145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Boroo",
["npcID"] = 194317,
},
[374859] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[75813] = {
["source"] = "Naz'jar Tempest Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 40634,
},
[370764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[188470] = {
["source"] = "Surging Podling",
["event"] = "SPELL_CAST_START",
["npcID"] = 210210,
},
[173112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Deckhand",
["npcID"] = 83762,
},
[397386] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[166969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olin Umberhide",
["npcID"] = 79315,
},
[401482] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[370766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Thrasher",
["npcID"] = 196117,
},
[311382] = {
["source"] = "Deresh of the Nothingness",
["event"] = "SPELL_CAST_START",
["npcID"] = 159768,
},
[101411] = {
["encounterName"] = "Echo of Sylvanas",
["source"] = "Echo of Sylvanas",
["npcID"] = 54123,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1882,
},
[387151] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[391247] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[393295] = {
["encounterName"] = "Kurog Grimtotem",
["event"] = "SPELL_CAST_START",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
},
[393296] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frostwrought Dominator",
["npcID"] = 198308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[143423] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[393298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Colossus",
["npcID"] = 188673,
},
[173116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beremus the Overgrowth",
["npcID"] = 80700,
},
[397394] = {
["source"] = "Nokhud Thunderfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 193373,
},
[366678] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[385108] = {
["source"] = "Restless Podling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187317,
},
[152639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Talon",
["npcID"] = 72232,
},
[411730] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Molten Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 205611,
},
[383062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[9672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackscale Mistress",
["npcID"] = 45985,
},
[393302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Colossus",
["npcID"] = 188673,
},
[198715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Val'kyr Battlemaiden",
["npcID"] = 100876,
},
[184381] = {
["source"] = "Synod",
["event"] = "SPELL_CAST_START",
["npcID"] = 159190,
},
[268391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Cultist",
["npcID"] = 134514,
},
[141379] = {
["source"] = "Frostmane Bonechiller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70465,
},
[393305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthwarden",
["npcID"] = 193709,
},
[193597] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[372828] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[407640] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[393306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthwarden",
["npcID"] = 193709,
},
[346208] = {
["source"] = "Mawsworn Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 167323,
},
[157762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Soulpriest",
["npcID"] = 77696,
},
[393307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Flamecaller",
["npcID"] = 193558,
},
[22414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 78553,
},
[393308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Flamecaller",
["npcID"] = 193558,
},
[411738] = {
["source"] = "Rashok",
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[389213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[166978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exarch Maladaar",
["npcID"] = 79537,
},
[401500] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[125988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quid",
["npcID"] = 58771,
},
[366689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebonsteel Construct",
["npcID"] = 185268,
},
[411740] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rashok",
["npcID"] = 201320,
},
[383073] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[123429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broketooth Sneaker",
["npcID"] = 60195,
},
[323689] = {
["source"] = "Soul-Rotted Flesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 158642,
},
[317546] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Phaoris",
["npcID"] = 161112,
},
[200768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Razorbeak",
["npcID"] = 95766,
},
[317547] = {
["source"] = "Grunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 153581,
},
[393314] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[374885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Astral Attendant",
["npcID"] = 189555,
},
[376933] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[333931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Helhound",
["npcID"] = 171245,
},
[376934] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[372839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Spearman",
["npcID"] = 191227,
},
[301168] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Muck Creeper",
["npcID"] = 145333,
},
[411747] = {
["source"] = "Twisted Elementium",
["event"] = "SPELL_CAST_START",
["npcID"] = 205628,
},
[270453] = {
["source"] = "Geolord Grek'og",
["event"] = "SPELL_CAST_START",
["npcID"] = 151091,
},
[428130] = {
["source"] = "Verlann Timbercrush",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[198723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotheart Dryad",
["npcID"] = 99358,
},
[64535] = {
["encounterName"] = "Mimiron",
["source"] = "Aerial Command Unit",
["encounterID"] = 1138,
["event"] = "SPELL_CAST_START",
["npcID"] = 33670,
},
[81452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jorgensen",
["npcID"] = 43546,
},
[417893] = {
["source"] = "Walking Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 206627,
},
[197700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Priestess",
["npcID"] = 100450,
},
[364652] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["npcID"] = 182169,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2539,
},
[200772] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Explorer Dellorah",
["npcID"] = 161938,
},
[374892] = {
["source"] = "Plainswalker Calf",
["event"] = "SPELL_CAST_START",
["npcID"] = 190908,
},
[409704] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[403561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fael'lin",
["npcID"] = 198916,
},
[87084] = {
["source"] = "Skitterweb Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 44906,
},
[383084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Primalist",
["npcID"] = 190066,
},
[286840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azerite Droplet",
["npcID"] = 152098,
},
[411754] = {
["source"] = "Conduit Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 205478,
},
[415850] = {
["source"] = "Roiling Deathstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 211242,
},
[376943] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[411755] = {
["source"] = "Conduit Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 205478,
},
[413803] = {
["source"] = "Cenrrrn Cirrgl Mooncaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 205851,
},
[317559] = {
["source"] = "Bloodbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 153964,
},
[360562] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[403565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fael'lin",
["npcID"] = 198916,
},
[413804] = {
["source"] = "Cenrrrn Cirrgl Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205852,
},
[403566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flare Elemental",
["npcID"] = 202683,
},
[413805] = {
["source"] = "Cenrrrn Cirrgl Tideshifter",
["event"] = "SPELL_CAST_START",
["npcID"] = 204516,
},
[374898] = {
["source"] = "Grasslands Musken",
["event"] = "SPELL_CAST_START",
["npcID"] = 195172,
},
[385137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[403567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warden Entrix",
["npcID"] = 200960,
},
[372851] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Corla, Herald of Twilight",
["npcID"] = 39679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1038,
},
[395377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[317563] = {
["source"] = "Vil'raxx",
["event"] = "SPELL_CAST_START",
["npcID"] = 153326,
},
[147535] = {
["source"] = "Gu'chi the Swarmbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72909,
},
[395378] = {
["source"] = "Malsegan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193212,
},
[413808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Tideshifter",
["npcID"] = 204516,
},
[257090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Partially Teleported Trogg",
["npcID"] = 226668,
},
[129577] = {
["source"] = "Korjan Slavemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 65638,
},
[260162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jambani Spirit Twister",
["npcID"] = 129513,
},
[138321] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["encounterID"] = 1580,
["event"] = "SPELL_CAST_START",
["npcID"] = 69473,
},
[385141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[403571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fael'lin",
["npcID"] = 198916,
},
[9481] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 209254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 450,
},
[362617] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[153680] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["encounterID"] = 1679,
["event"] = "SPELL_CAST_START",
["npcID"] = 75452,
},
[38940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargeron Archer",
["npcID"] = 20901,
},
[387191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strunraan",
["npcID"] = 193534,
},
[257092] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["encounterID"] = 2101,
["event"] = "SPELL_CAST_START",
["npcID"] = 127479,
},
[135251] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[403574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fael'lin",
["npcID"] = 198916,
},
[397431] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[81456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jorgensen",
["npcID"] = 43546,
},
[385145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Raptor",
["npcID"] = 187256,
},
[173135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogron Laborer",
["npcID"] = 83578,
},
[256069] = {
["source"] = "Scavenging Snapclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 127526,
},
[366716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Astral Particle",
["npcID"] = 185274,
},
[403576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warden Entrix",
["npcID"] = 200960,
},
[68658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Netgun Gnome",
["npcID"] = 36385,
},
[29583] = {
["source"] = "Phantom Guest",
["event"] = "SPELL_CAST_START",
["npcID"] = 16409,
},
[409721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Dezran",
["npcID"] = 202610,
},
[144468] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[372862] = {
["source"] = "Churning Splash",
["event"] = "SPELL_CAST_START",
["npcID"] = 187318,
},
[244808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandclaw Crab",
["npcID"] = 145337,
},
[389245] = {
["source"] = "Sundered Ruinstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199379,
},
[150612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nagrand Prowler",
["npcID"] = 81902,
},
[200782] = {
["isChanneled"] = true,
["source"] = "Fiendish Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99759,
},
[413819] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Tactician",
["npcID"] = 206059,
},
[409724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 201668,
},
[173138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beremus the Overgrowth",
["npcID"] = 80700,
},
[389247] = {
["source"] = "Blacktalon Avenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 187187,
},
[143446] = {
["encounterName"] = "Fallen Protectors",
["event"] = "SPELL_CAST_START",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
},
[144470] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[323720] = {
["source"] = "Gill'dan",
["event"] = "SPELL_CAST_START",
["npcID"] = 204808,
},
[41245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Suffering Soul Fragment",
["npcID"] = 23399,
},
[200784] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[144471] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[125997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battleworn Paratrooper",
["npcID"] = 63764,
},
[317579] = {
["source"] = "Aqir Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 162164,
},
[270481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Demonic Tyrant",
["npcID"] = 135002,
},
[389251] = {
["source"] = "Morlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 201549,
},
[319628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Larion Sire",
["npcID"] = 157761,
},
[393348] = {
["source"] = "Stalwart Broodwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 198263,
},
[387205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrhold Gryphon",
["npcID"] = 198417,
},
[346251] = {
["source"] = "Ghastly Willbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 178490,
},
[299153] = {
["encounterName"] = "Trixie & Naeno",
["source"] = "Trixie Tazer",
["npcID"] = 150712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2312,
},
[307345] = {
["source"] = "Hovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 153241,
},
[87603] = {
["source"] = "Bolgaff",
["event"] = "SPELL_CAST_START",
["npcID"] = 47003,
},
[56860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Hunter Initiate",
["npcID"] = 26728,
},
[147546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Golganarr",
["npcID"] = 72970,
},
[268440] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 126918,
},
[417926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freya",
["npcID"] = 205304,
},
[389258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piskato",
["npcID"] = 195973,
},
[403593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Burster",
["npcID"] = 200801,
},
[405641] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[360591] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Necrotic Ritualist",
["npcID"] = 182045,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[15241] = {
["source"] = "Bleeding Hollow Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 17269,
},
[391308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boolk",
["npcID"] = 191450,
},
[106546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloated Brew Alemental",
["npcID"] = 59518,
},
[148572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thresher Turret",
["npcID"] = 73742,
},
[15497] = {
["source"] = "Wastewalker Slave",
["event"] = "SPELL_CAST_START",
["npcID"] = 17963,
},
[116273] = {
["source"] = "Wild Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 56683,
},
[379023] = {
["source"] = "Hillside Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 191240,
},
[422026] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[325782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwarren Spitter",
["npcID"] = 164038,
},
[422027] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Spirit of the Kaldorei",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207800,
},
[258128] = {
["source"] = "Irontide Thug",
["event"] = "SPELL_CAST_START",
["npcID"] = 130025,
},
[106547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[98868] = {
["encounterName"] = "Alysrazor",
["source"] = "Blazing Talon Initiate",
["encounterID"] = 1206,
["event"] = "SPELL_CAST_START",
["npcID"] = 53369,
},
[385170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[260177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jambani Crusher",
["npcID"] = 134156,
},
[317595] = {
["source"] = "Watcher Aum-ka",
["event"] = "SPELL_CAST_START",
["npcID"] = 154619,
},
[409744] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[403601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warden Entrix",
["npcID"] = 200960,
},
[389267] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clearwater Snapper",
["npcID"] = 192678,
},
[409745] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[389268] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187135,
},
[417937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotted Gladiator",
["npcID"] = 207808,
},
[389269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guarantor",
["npcID"] = 187061,
},
[317598] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishak of the Four Winds",
["npcID"] = 157134,
},
[262309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thalassian Priest",
["npcID"] = 145113,
},
[125490] = {
["source"] = "Amber Searsting",
["event"] = "SPELL_CAST_START",
["npcID"] = 63569,
},
[389270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187123,
},
[325790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bitter Memory",
["npcID"] = 158629,
},
[119347] = {
["source"] = "Sik'thik Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61434,
},
[389271] = {
["source"] = "Sunscale Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193133,
},
[407701] = {
["isChanneled"] = true,
["source"] = "Pendule",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204030,
},
[379033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Bakar",
["npcID"] = 193545,
},
[417941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotted Gladiator",
["npcID"] = 207808,
},
[411798] = {
["source"] = "Oozing Sludge",
["event"] = "SPELL_CAST_START",
["npcID"] = 205644,
},
[389273] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[317602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Golden Lotus Warrior",
["npcID"] = 162836,
},
[389274] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[270505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Heartpiercer",
["npcID"] = 158092,
},
[165985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogron Spinecrusher",
["npcID"] = 81240,
},
[424087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Devastator",
["npcID"] = 207089,
},
[417944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freya",
["npcID"] = 205304,
},
[11082] = {
["encounterName"] = "Electrocutioner 6000",
["source"] = "Electrocutioner 6000",
["npcID"] = 6235,
["event"] = "SPELL_CAST_START",
["encounterID"] = 380,
},
[385181] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[198750] = {
["encounterName"] = "Odyn",
["source"] = "Stormforged Obliterator",
["npcID"] = 102019,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[136294] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[409756] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[409757] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[387232] = {
["source"] = "Emerald Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 209202,
},
[389280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Crusher",
["npcID"] = 185814,
},
[148582] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Xiang-Lin",
["npcID"] = 73725,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[157797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Arbiter",
["npcID"] = 77080,
},
[167012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Saberon Ambusher",
["npcID"] = 88813,
},
[193633] = {
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 98275,
},
[59167] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfury Revenant",
["npcID"] = 28826,
},
[270513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Bedrock",
["npcID"] = 137906,
},
[164965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Mender",
["npcID"] = 81820,
},
[376997] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[411809] = {
["source"] = "Pahi'rys",
["event"] = "SPELL_CAST_START",
["npcID"] = 205540,
},
[366759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illicit Collector",
["npcID"] = 183498,
},
[270515] = {
["source"] = "Azerite-Infused Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 137905,
},
[176229] = {
["source"] = "Vrok the Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 87356,
},
[411811] = {
["source"] = "Bubbling Slime",
["event"] = "SPELL_CAST_START",
["npcID"] = 205651,
},
[405668] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Sundered Destroyer",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201753,
},
[383143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Putrifier",
["npcID"] = 192057,
},
[417955] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wild Sproutling",
["npcID"] = 205304,
},
[413860] = {
["source"] = "Chromie",
["event"] = "SPELL_CAST_START",
["npcID"] = 205707,
},
[79932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nevo",
["npcID"] = 81999,
},
[147562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashleaf Sprite",
["npcID"] = 72877,
},
[329904] = {
["source"] = "Royal Advisor",
["event"] = "SPELL_CAST_START",
["npcID"] = 157118,
},
[422053] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Lasher",
["npcID"] = 210231,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[168040] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[329905] = {
["source"] = "Royal Advisor",
["event"] = "SPELL_CAST_START",
["npcID"] = 157118,
},
[377004] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[403625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[405673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overflowing Magma",
["npcID"] = 203277,
},
[168041] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[15242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellfire Imp",
["npcID"] = 17477,
},
[329908] = {
["source"] = "Lithic Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 157017,
},
[405675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanakk",
["npcID"] = 200911,
},
[141423] = {
["source"] = "Hekima the Wise",
["event"] = "SPELL_CAST_START",
["npcID"] = 70544,
},
[192617] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["encounterID"] = 1814,
["event"] = "SPELL_CAST_START",
["npcID"] = 96028,
},
[59169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storming Vortex",
["npcID"] = 28547,
},
[270529] = {
["source"] = "Mareen Sherwood",
["event"] = "SPELL_CAST_START",
["npcID"] = 137551,
},
[164973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Tender",
["npcID"] = 81985,
},
[299198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aerial Enforcer XZ-9",
["npcID"] = 154700,
},
[226406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113537,
},
[52770] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["npcID"] = 28546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1984,
},
[244836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Nightsaber",
["npcID"] = 154624,
},
[270531] = {
["source"] = "Thorn Sutton",
["event"] = "SPELL_CAST_START",
["npcID"] = 137548,
},
[256099] = {
["source"] = "Grand Ma'da Ateena",
["event"] = "SPELL_CAST_START",
["npcID"] = 121504,
},
[191595] = {
["source"] = "Felsworn Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 96587,
},
[303296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Huntress",
["npcID"] = 155618,
},
[210025] = {
["source"] = "Nightborne Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 106049,
},
[413875] = {
["source"] = "Apiazhus",
["event"] = "SPELL_CAST_START",
["npcID"] = 200981,
},
[9739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plainsmender Darragh",
["npcID"] = 82013,
},
[264390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Disciple",
["npcID"] = 131685,
},
[374969] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[262343] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reckless Cutter",
["npcID"] = 121577,
},
[303299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidemistress Ethendriss",
["npcID"] = 153934,
},
[256101] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 127503,
},
[207979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jazshariu",
["npcID"] = 104273,
},
[192621] = {
["encounterName"] = "Ash'Golm",
["source"] = "Ash'Golm",
["encounterID"] = 1816,
["event"] = "SPELL_CAST_START",
["npcID"] = 95886,
},
[145523] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Stone Statue",
["npcID"] = 72535,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[274633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironhull Apprentice",
["npcID"] = 139799,
},
[207980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baalgar the Watchful",
["npcID"] = 104274,
},
[258150] = {
["source"] = "Bilge Rat Seaspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 130026,
},
[201837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Summoner",
["npcID"] = 99366,
},
[383165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Putrifier",
["npcID"] = 192057,
},
[387261] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[405691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanakk",
["npcID"] = 200911,
},
[336068] = {
["source"] = "Blind Souldrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 182686,
},
[297161] = {
["source"] = "Voidbound Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 153065,
},
[407740] = {
["source"] = "Aurantia",
["event"] = "SPELL_CAST_START",
["npcID"] = 203047,
},
[79938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anruin",
["npcID"] = 81998,
},
[411837] = {
["source"] = "Fragment of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 205971,
},
[356548] = {
["source"] = "Portalmancer Zo'honn",
["event"] = "SPELL_CAST_START",
["npcID"] = 179334,
},
[360644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adrift Core",
["npcID"] = 184660,
},
[197744] = {
["source"] = "Coilskar Sea-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 96503,
},
[307403] = {
["encounterName"] = "Vexiona",
["source"] = "Void Ascendant",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 157467,
},
[12491] = {
["encounterName"] = "Witch Doctor Zum'rah",
["source"] = "Witch Doctor Zum'rah",
["npcID"] = 7271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 597,
},
[258153] = {
["source"] = "Bilge Rat Seaspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 130026,
},
[329929] = {
["source"] = "Stonewing Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 157083,
},
[405696] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[12747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Emerald Lasher",
["npcID"] = 208750,
},
[163957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungus Covered Shambler",
["npcID"] = 80721,
},
[329930] = {
["source"] = "Stonewing Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 157083,
},
[256106] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126832,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["event"] = "SPELL_CAST_START",
["npcID"] = 43875,
},
[377029] = {
["source"] = "Primal Scythid Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 184853,
},
[144504] = {
["encounterName"] = "Fallen Protectors",
["event"] = "SPELL_CAST_START",
["source"] = "Embodied Desperation",
["npcID"] = 71482,
},
[244844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinescale Wavecaller",
["npcID"] = 131305,
},
[13323] = {
["source"] = "Ethereal Theurgist",
["event"] = "SPELL_CAST_START",
["npcID"] = 18315,
},
[194675] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 98963,
},
[377033] = {
["source"] = "Ripsaw the Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193153,
},
[264407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Maiden",
["npcID"] = 131821,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[150650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kraulshaper Tukaar",
["npcID"] = 74900,
},
[311508] = {
["source"] = "Sanguimar",
["event"] = "SPELL_CAST_START",
["npcID"] = 159767,
},
[397514] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[393419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Penumbrus",
["npcID"] = 189289,
},
[146556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Honor Guard",
["npcID"] = 72954,
},
[303319] = {
["source"] = "Wekemara",
["event"] = "SPELL_CAST_START",
["npcID"] = 152671,
},
[387277] = {
["source"] = "Primal Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 195917,
},
[176249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Woodfist",
["npcID"] = 83871,
},
[422090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treant",
["npcID"] = 54983,
},
[55077] = {
["source"] = "Savage Worg",
["event"] = "SPELL_CAST_START",
["npcID"] = 29735,
},
[305369] = {
["source"] = "Voidbound Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 156406,
},
[141438] = {
["source"] = "Lieutenant Drak'on",
["event"] = "SPELL_CAST_START",
["npcID"] = 67391,
},
[178298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Technician",
["npcID"] = 83763,
},
[424140] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[106563] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[137344] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69132,
},
[171132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tailthrasher Stalker",
["npcID"] = 85718,
},
[272609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 138281,
},
[224374] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["npcID"] = 112668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[418000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Corrupted Kaldorei",
["npcID"] = 206146,
},
[194682] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 98963,
},
[391380] = {
["source"] = "Stormbound Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201152,
},
[163966] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimrail Technician",
["npcID"] = 81236,
},
[246900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Discharge",
["npcID"] = 122478,
},
[224375] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 112668,
},
[393429] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Stormwrought Despoiler",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198326,
},
[193659] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[235638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roottender Treant",
["npcID"] = 209280,
},
[171134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tailthrasher Stalker",
["npcID"] = 85718,
},
[393430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[372953] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Purified Slime",
["npcID"] = 185762,
},
[200827] = {
["isChanneled"] = true,
["source"] = "Soul Fragment",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96279,
},
[305378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbound Honor Guard",
["npcID"] = 156406,
},
[393432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[411862] = {
["source"] = "Animation Fluid",
["event"] = "SPELL_CAST_START",
["npcID"] = 203939,
},
[430292] = {
["source"] = "Inquisitor Fairbell",
["event"] = "SPELL_CAST_START",
["npcID"] = 211930,
},
[391385] = {
["source"] = "Summoned Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 182815,
},
[303332] = {
["source"] = "Rijz'x the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 154490,
},
[387290] = {
["source"] = "Giant Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 194588,
},
[34345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refining Specialist",
["npcID"] = 67283,
},
[393434] = {
["source"] = "Sundered Supplyhand",
["event"] = "SPELL_CAST_START",
["npcID"] = 193790,
},
[35369] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["encounterID"] = 733,
["event"] = "SPELL_CAST_START",
["npcID"] = 21362,
},
[199805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 96574,
},
[260214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mindslaved Berserker",
["npcID"] = 130219,
},
[418009] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 206352,
},
[83017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smokemaster Snarl",
["npcID"] = 81749,
},
[100423] = {
["source"] = "Flamewaker Subjugator",
["event"] = "SPELL_CAST_START",
["npcID"] = 53188,
},
[272620] = {
["source"] = "Cutwater Striker",
["event"] = "SPELL_CAST_START",
["npcID"] = 131112,
},
[119365] = {
["source"] = "Sorcerer Mogu",
["event"] = "SPELL_CAST_START",
["npcID"] = 61250,
},
[366818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kelmortos",
["npcID"] = 185275,
},
[393439] = {
["source"] = "Sundered Mercenary",
["event"] = "SPELL_CAST_START",
["npcID"] = 193791,
},
[299243] = {
["source"] = "Sun Prophet Tenhamen",
["event"] = "SPELL_CAST_START",
["npcID"] = 154727,
},
[106055] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[387297] = {
["source"] = "Sundered Runebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186354,
},
[375011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismic Force",
["npcID"] = 192745,
},
[395489] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karantun",
["npcID"] = 193647,
},
[117830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xiao",
["npcID"] = 54926,
},
[102472] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["npcID"] = 54544,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1884,
},
[418016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of the Lich King",
["npcID"] = 207386,
},
[387300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feasting Wyrm",
["npcID"] = 192739,
},
[366823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kelmortos",
["npcID"] = 185275,
},
[81995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Messner",
["npcID"] = 43826,
},
[143497] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Rook Stonetoe",
["npcID"] = 71475,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[201858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Deadeye",
["npcID"] = 100539,
},
[162951] = {
["source"] = "Aqir Impaler",
["event"] = "SPELL_CAST_START",
["npcID"] = 154367,
},
[13900] = {
["encounterName"] = "Lord Incendius",
["source"] = "Lord Incendius",
["npcID"] = 9017,
["event"] = "SPELL_CAST_START",
["encounterID"] = 232,
},
[418020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freya",
["npcID"] = 205304,
},
[193668] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[130630] = {
["isChanneled"] = true,
["source"] = "Gyrocopter Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66299,
},
[81996] = {
["event"] = "SPELL_CAST_START",
["source"] = "Messner",
["npcID"] = 43826,
},
[372971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Blacksmith",
["npcID"] = 189471,
},
[385258] = {
["source"] = "Coastal Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 198782,
},
[145547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Shaman",
["npcID"] = 72451,
},
[391402] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189492,
},
[401642] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[428263] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[145548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Poison Bolt Totem",
["npcID"] = 72562,
},
[114249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broketooth Tosser",
["npcID"] = 59416,
},
[418025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of the Lich King",
["npcID"] = 207386,
},
[83021] = {
["source"] = "Blacksmith Verringtan",
["event"] = "SPELL_CAST_START",
["npcID"] = 47792,
},
[393453] = {
["source"] = "Sundered Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 199941,
},
[395501] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[117833] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60708,
},
[358642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Violetsail Cutthroat",
["npcID"] = 179606,
},
[393454] = {
["source"] = "Battlehorn Pyrhus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190986,
},
[444648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riftwalker Nilara",
["npcID"] = 214644,
},
[329975] = {
["source"] = "Adjutant Felipos",
["event"] = "SPELL_CAST_START",
["npcID"] = 185103,
},
[389360] = {
["source"] = "Sandana the Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 193176,
},
[407790] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[395504] = {
["isChanneled"] = true,
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192769,
},
[358645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Violetsail Swiftshot",
["npcID"] = 179736,
},
[42027] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Spiritbinder",
["npcID"] = 23524,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[145551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Shadowmage",
["npcID"] = 72150,
},
[418031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vereesa Windrunner",
["npcID"] = 207816,
},
[307453] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 157354,
},
[393459] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[389364] = {
["source"] = "Sandana the Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 193176,
},
[424176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Protector",
["npcID"] = 210637,
},
[311550] = {
["source"] = "Jesh'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 159764,
},
[403699] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[311551] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 156575,
},
[9613] = {
["encounterName"] = "Nekrum Gutchewer",
["source"] = "Sandfury Acolyte",
["npcID"] = 8876,
["event"] = "SPELL_CAST_START",
["encounterID"] = 598,
},
[407796] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[163983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khargax the Devourer",
["npcID"] = 81537,
},
[64041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shatterspear Raider",
["npcID"] = 34309,
},
[151697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Overseer",
["npcID"] = 75426,
},
[144530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yu'lon",
["npcID"] = 71955,
},
[284933] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["npcID"] = 145616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[297220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbound Shaman",
["npcID"] = 153097,
},
[33325] = {
["source"] = "Auchenai Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 18702,
},
[258181] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 130400,
},
[145555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Warshaman",
["npcID"] = 71773,
},
[85584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Godfrey",
["npcID"] = 45878,
},
[11085] = {
["encounterName"] = "Electrocutioner 6000",
["source"] = "Electrocutioner 6000",
["npcID"] = 6235,
["event"] = "SPELL_CAST_START",
["encounterID"] = 380,
},
[30615] = {
["source"] = "Bleeding Hollow Scryer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17478,
},
[385277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver A'tir",
["npcID"] = 186859,
},
[379134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmasworn Earthshaper",
["npcID"] = 190210,
},
[168082] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[383231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[175250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beatface",
["npcID"] = 81264,
},
[171155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skull Thrash",
["npcID"] = 85733,
},
[274703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drowned Depthbringer",
["npcID"] = 134418,
},
[391425] = {
["encounterName"] = "Kurog Grimtotem",
["event"] = "SPELL_CAST_START",
["source"] = "Frostwrought Dominator",
["npcID"] = 198308,
},
[418046] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[411903] = {
["source"] = "Sundered Chemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 205656,
},
[59179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Titanium Thunderer",
["npcID"] = 28965,
},
[418047] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[297230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fathom Ray",
["npcID"] = 145967,
},
[256138] = {
["source"] = "Dazar'ai Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127799,
},
[352520] = {
["encounterName"] = "The Jailer",
["source"] = "Kevin's Oozeling",
["npcID"] = 178601,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[193682] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[383237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Provoking Flame",
["npcID"] = 188697,
},
[418049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vereesa Windrunner",
["npcID"] = 207816,
},
[411906] = {
["source"] = "Sundered Chemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 205656,
},
[418051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vereesa Windrunner",
["npcID"] = 207816,
},
[95826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orgrimmar Wind Rider",
["npcID"] = 51346,
},
[185493] = {
["source"] = "Imperial Archivist",
["event"] = "SPELL_CAST_START",
["npcID"] = 157016,
},
[171159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tailthrasher Vinebender",
["npcID"] = 85725,
},
[411910] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40633,
},
[411912] = {
["source"] = "Sundered Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205673,
},
[407817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[418056] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[313621] = {
["source"] = "Falconer Amenophis",
["event"] = "SPELL_CAST_START",
["npcID"] = 158491,
},
[15245] = {
["encounterName"] = "Witch Doctor Zum'rah",
["source"] = "Witch Doctor Zum'rah",
["npcID"] = 7271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 597,
},
[7655] = {
["source"] = "Thule Ravenclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 47023,
},
[311574] = {
["source"] = "Jesh'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 159764,
},
[375056] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[311576] = {
["source"] = "Jesh'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 159764,
},
[387343] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bouldron",
["npcID"] = 193644,
},
[366866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[377105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Guard",
["npcID"] = 190510,
},
[375058] = {
["source"] = "Grasslands Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195219,
},
[156829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gul'kosh",
["npcID"] = 78437,
},
[223381] = {
["source"] = "Dire Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 112153,
},
[8398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hakkari Frostwing",
["npcID"] = 5291,
},
[168092] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[272672] = {
["source"] = "Grand Ma'da Ateena",
["event"] = "SPELL_CAST_START",
["npcID"] = 121504,
},
[366869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[169117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'gall",
["npcID"] = 77020,
},
[145568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Runthak",
["npcID"] = 72191,
},
[403731] = {
["source"] = "Duzalgor",
["event"] = "SPELL_CAST_START",
["npcID"] = 200610,
},
[411923] = {
["source"] = "Diganthor",
["event"] = "SPELL_CAST_START",
["npcID"] = 204434,
},
[145569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellscream Demolisher",
["npcID"] = 72194,
},
[171166] = {
["source"] = "Charl Doomwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 81548,
},
[319775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swiftwing Larion",
["npcID"] = 160569,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[375065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[405784] = {
["source"] = "Tarasek Boarder",
["event"] = "SPELL_CAST_START",
["npcID"] = 203307,
},
[59182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Firestorm",
["npcID"] = 28584,
},
[102998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xiao",
["npcID"] = 54926,
},
[35377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugated Firestarter",
["npcID"] = 46838,
},
[172193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jandvik Bonepiercer",
["npcID"] = 100948,
},
[22938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Remnant",
["npcID"] = 45728,
},
[385310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shockcaster",
["npcID"] = 195119,
},
[403740] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[373024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[403741] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[409885] = {
["source"] = "Highmountain Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201578,
},
[422172] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[171171] = {
["source"] = "Charl Doomwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 81548,
},
[385313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shockcaster",
["npcID"] = 195119,
},
[444698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riftwalker Nilara",
["npcID"] = 214644,
},
[373027] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[176291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarlna Thorncaster",
["npcID"] = 83826,
},
[59183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Firestorm",
["npcID"] = 28584,
},
[176292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarlna Infested",
["npcID"] = 83824,
},
[389412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nezascar the Sightless",
["npcID"] = 196535,
},
[418081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felhound",
["npcID"] = 206090,
},
[375079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[418082] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felhound",
["npcID"] = 206090,
},
[14030] = {
["source"] = "Anvilrage Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 8890,
},
[393511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cauldronbearer Blakor",
["npcID"] = 186783,
},
[373034] = {
["source"] = "Mudfin Mudrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 186690,
},
[198820] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[399656] = {
["source"] = "Igneous Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 202866,
},
[313652] = {
["encounterName"] = "The Hivemind",
["source"] = "Ka'zir",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157253,
},
[168105] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[169129] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Backdraft",
["npcID"] = 84464,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1754,
},
[162986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Crawler",
["npcID"] = 83448,
},
[180392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Riftweaver",
["npcID"] = 92450,
},
[115289] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["encounterID"] = 1423,
["event"] = "SPELL_CAST_START",
["npcID"] = 59789,
},
[215204] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Vigilant Duskwatch",
["npcID"] = 104918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[391470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clove",
["npcID"] = 194457,
},
[264510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Marksman",
["npcID"] = 131849,
},
[389423] = {
["source"] = "Thieving Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196388,
},
[183465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarspitter Lurker",
["npcID"] = 91001,
},
[395567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gravlion",
["npcID"] = 193654,
},
[146606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kovok",
["npcID"] = 72927,
},
[393520] = {
["source"] = "Ceeqa the Peacetaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 188708,
},
[399664] = {
["source"] = "Igneous Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 202866,
},
[33844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kengtus Pranch the Patient",
["npcID"] = 82012,
},
[34356] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[146607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Skullsplitter",
["npcID"] = 72983,
},
[377140] = {
["event"] = "SPELL_CAST_START",
["source"] = "River Hornswog",
["npcID"] = 191618,
},
[411952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Timebender",
["npcID"] = 205337,
},
[399666] = {
["source"] = "Spellsworn Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200598,
},
[35892] = {
["source"] = "Arcane Annihilator",
["event"] = "SPELL_CAST_START",
["npcID"] = 18856,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[375094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swiftfoot Tallstrider",
["npcID"] = 192641,
},
[188587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understone Demolisher",
["npcID"] = 102253,
},
[411954] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Timeslicer",
["npcID"] = 205384,
},
[274755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seer Drannix",
["npcID"] = 146443,
},
[424241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amirdrassil Sentinel",
["npcID"] = 207769,
},
[176301] = {
["source"] = "Everbloom Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 88261,
},
[160943] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Grom'kar Gunner",
["npcID"] = 77483,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[389431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[150705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Siegesmith",
["npcID"] = 80552,
},
[393527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracktooth",
["npcID"] = 187528,
},
[411958] = {
["source"] = "Iridikron's Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 205691,
},
[389433] = {
["source"] = "Qiraji Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 195641,
},
[150706] = {
["source"] = "Captain Bonerender",
["event"] = "SPELL_CAST_START",
["npcID"] = 96535,
},
[385339] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[389435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Spirit-Caller",
["npcID"] = 195267,
},
[360767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lured Mite",
["npcID"] = 181879,
},
[387388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Cultist",
["npcID"] = 185595,
},
[260262] = {
["source"] = "Void Effusion",
["event"] = "SPELL_CAST_START",
["npcID"] = 130139,
},
[403771] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[414010] = {
["source"] = "Goblin Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 200964,
},
[217260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[403772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[405821] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[399678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Shadowflame",
["npcID"] = 203698,
},
[193712] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[340294] = {
["source"] = "Bubbleblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 162727,
},
[317769] = {
["source"] = "Wastewander Tracker",
["event"] = "SPELL_CAST_START",
["npcID"] = 154461,
},
[377154] = {
["source"] = "Ripsaw the Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193153,
},
[297292] = {
["source"] = "Custodian Thonar",
["event"] = "SPELL_CAST_START",
["npcID"] = 185011,
},
[373059] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187771,
},
[383298] = {
["source"] = "Summoned Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 182815,
},
[235692] = {
["source"] = "Lord Darius Crowley",
["event"] = "SPELL_CAST_START",
["npcID"] = 213057,
},
[395586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[389443] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[391491] = {
["source"] = "Sootscale the Indomitable",
["event"] = "SPELL_CAST_START",
["npcID"] = 190307,
},
[409921] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[303439] = {
["source"] = "Kelfin Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 156265,
},
[6728] = {
["source"] = "Daggerspine Siren",
["event"] = "SPELL_CAST_START",
["npcID"] = 2371,
},
[176309] = {
["source"] = "Twisted Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 88279,
},
[387398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Brute",
["npcID"] = 185589,
},
[389446] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[385351] = {
["source"] = "Unstable Arcanogolem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201554,
},
[167095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Wrangler",
["npcID"] = 83390,
},
[193716] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[138427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurubashi Berserker",
["npcID"] = 69905,
},
[193717] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[418119] = {
["source"] = "Aqir Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207912,
},
[297302] = {
["source"] = "Endless Hunger Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 153141,
},
[334162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malifis",
["npcID"] = 166908,
},
[393547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kraunot",
["npcID"] = 186401,
},
[285017] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[377166] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[428360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firelands Destroyer",
["npcID"] = 210293,
},
[15503] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Warlord Salaris",
["npcID"] = 24559,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[409931] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[195767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slumber",
["npcID"] = 98890,
},
[385359] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[8040] = {
["encounterName"] = "Lady Anacondra",
["source"] = "Lady Anacondra",
["encounterID"] = 585,
["event"] = "SPELL_CAST_START",
["npcID"] = 3671,
},
[120929] = {
["source"] = "Abomination of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 61707,
},
[418125] = {
["source"] = "Varian Wrynn",
["event"] = "SPELL_CAST_START",
["npcID"] = 205308,
},
[287070] = {
["encounterName"] = "Opulence",
["source"] = "Opulence",
["encounterID"] = 2271,
["event"] = "SPELL_CAST_START",
["npcID"] = 145261,
},
[387410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalesmith Mita",
["npcID"] = 191010,
},
[34360] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[34616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nethervine Inciter",
["npcID"] = 19511,
},
[385363] = {
["source"] = "Riverwalker Tamopo",
["event"] = "SPELL_CAST_START",
["npcID"] = 193240,
},
[387411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulharvester Galtmaa",
["npcID"] = 195927,
},
[166077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Machinist",
["npcID"] = 80468,
},
[403794] = {
["source"] = "Duzalgor",
["event"] = "SPELL_CAST_START",
["npcID"] = 200610,
},
[368983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Inferno",
["npcID"] = 194095,
},
[123490] = {
["source"] = "Enslaved Bonesmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63030,
},
[407891] = {
["source"] = "Horde Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204206,
},
[368984] = {
["source"] = "Dragonbane Firebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186605,
},
[362841] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Fracturing Rift Blast Portal",
["npcID"] = 183663,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2553,
},
[260275] = {
["source"] = "Brutosaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 122107,
},
[399701] = {
["source"] = "Swooping Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 199809,
},
[147649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Stalker",
["npcID"] = 72807,
},
[366938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Xy'pro",
["npcID"] = 185032,
},
[393559] = {
["source"] = "Rhuzast the Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 197409,
},
[297315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Void Elemental",
["npcID"] = 153130,
},
[147650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Stalker",
["npcID"] = 72807,
},
[354653] = {
["source"] = "Fragment of Troz'igal",
["event"] = "SPELL_CAST_START",
["npcID"] = 179560,
},
[414038] = {
["source"] = "Aquifon",
["event"] = "SPELL_CAST_START",
["npcID"] = 203468,
},
[274792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Released Crawg",
["npcID"] = 140149,
},
[319843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonescarred Veteran",
["npcID"] = 168331,
},
[428374] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[166081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Laborer",
["npcID"] = 81063,
},
[191678] = {
["source"] = "Viletongue Belcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 96480,
},
[368990] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[405850] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Sundered Destroyer",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201753,
},
[418137] = {
["source"] = "Varian Wrynn",
["event"] = "SPELL_CAST_START",
["npcID"] = 205308,
},
[411994] = {
["isChanneled"] = true,
["source"] = "Infinite Chronoweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[373087] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[37945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Felfire Diemetradon",
["npcID"] = 21462,
},
[362849] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Artificer Xy'mox",
["npcID"] = 183501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2553,
},
[274796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrotic Sentinel",
["npcID"] = 146459,
},
[147653] = {
["source"] = "Tsavo'ka",
["event"] = "SPELL_CAST_START",
["npcID"] = 72808,
},
[86633] = {
["encounterName"] = "Lord Overheat",
["source"] = "Lord Overheat",
["encounterID"] = 1145,
["event"] = "SPELL_CAST_START",
["npcID"] = 46264,
},
[381280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uktulut Trainee",
["npcID"] = 193203,
},
[301418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Crawler",
["npcID"] = 154448,
},
[407902] = {
["source"] = "Horde Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204206,
},
[264560] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Aqu'sirr",
["npcID"] = 134056,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2130,
},
[389473] = {
["encounterName"] = "The Primal Council",
["source"] = "Lurking Lunker",
["npcID"] = 196946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[393569] = {
["isChanneled"] = true,
["source"] = "Broodguardian Ziruss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198214,
},
[389474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozion",
["npcID"] = 193655,
},
[387427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uncontrolled Guardian",
["npcID"] = 181775,
},
[166085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Blade Saberguard",
["npcID"] = 81129,
},
[167109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenger Wasp",
["npcID"] = 83447,
},
[88170] = {
["source"] = "Turbulent Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 45924,
},
[260282] = {
["source"] = "Brutosaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 122107,
},
[389477] = {
["source"] = "Rimebound Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200758,
},
[92266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irradiated Pillager",
["npcID"] = 6329,
},
[389478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Spirit-Caller",
["npcID"] = 195267,
},
[385383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Sentinel",
["npcID"] = 192700,
},
[307569] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[175302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Char the Burning",
["npcID"] = 82311,
},
[56632] = {
["source"] = "Ahn'kahar Web Winder",
["event"] = "SPELL_CAST_START",
["npcID"] = 30276,
},
[142539] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zar'thik Amber Priest",
["npcID"] = 71397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[385386] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Stonetongue",
["npcID"] = 201552,
},
[399721] = {
["source"] = "Spellsworn Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200598,
},
[86636] = {
["encounterName"] = "Lord Overheat",
["source"] = "Lord Overheat",
["encounterID"] = 1145,
["event"] = "SPELL_CAST_START",
["npcID"] = 46264,
},
[200901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solsten",
["npcID"] = 97219,
},
[119875] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["encounterID"] = 1447,
["event"] = "SPELL_CAST_START",
["npcID"] = 61485,
},
[142298] = {
["source"] = "Embercore",
["event"] = "SPELL_CAST_START",
["npcID"] = 70663,
},
[418153] = {
["source"] = "Cinderclaw Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 207084,
},
[142296] = {
["source"] = "Dark Shaman Xorenth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70683,
},
[141421] = {
["source"] = "Earthborn Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 70822,
},
[99947] = {
["encounterName"] = "Shannox",
["source"] = "Rageface",
["encounterID"] = 1205,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 53695,
},
[385390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Sentinel",
["npcID"] = 192700,
},
[30180] = {
["source"] = "Homunculus",
["event"] = "SPELL_CAST_START",
["npcID"] = 16539,
},
[405868] = {
["source"] = "Invoq",
["event"] = "SPELL_CAST_START",
["npcID"] = 203627,
},
[154828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Growth",
["npcID"] = 81769,
},
[393582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cindershard Igniter",
["npcID"] = 198382,
},
[412012] = {
["isChanneled"] = true,
["source"] = "Infinite Timeslicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205408,
},
[389487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[407917] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[142201] = {
["source"] = "Echo of Y'Shaarj",
["event"] = "SPELL_CAST_START",
["npcID"] = 71123,
},
[387440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Beastcaller",
["npcID"] = 195878,
},
[389488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Srivantor",
["npcID"] = 201555,
},
[428345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Scorpid",
["npcID"] = 213696,
},
[393584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horned Armoredon",
["npcID"] = 190339,
},
[142139] = {
["source"] = "Urtharges the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 70959,
},
[274815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seer Drannix",
["npcID"] = 146443,
},
[288927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vessel of Bwonsamdi",
["npcID"] = 148673,
},
[250050] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[141380] = {
["source"] = "Frostmane Bonechiller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70465,
},
[141428] = {
["source"] = "Bonechiller Barafu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70468,
},
[126346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rangari Jonaa",
["npcID"] = 86663,
},
[418159] = {
["source"] = "Varian Wrynn",
["event"] = "SPELL_CAST_START",
["npcID"] = 205308,
},
[374343] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[111723] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["encounterID"] = 1419,
["event"] = "SPELL_CAST_START",
["npcID"] = 56877,
},
[126903] = {
["source"] = "Frostmane Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 70471,
},
[200905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96015,
},
[146536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Honor Guard",
["npcID"] = 72954,
},
[141391] = {
["source"] = "Lieutenant Blasthammer",
["event"] = "SPELL_CAST_START",
["npcID"] = 70893,
},
[146511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Amber-Master",
["npcID"] = 72929,
},
[418161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kirkessen the Zealous",
["npcID"] = 207821,
},
[428400] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207796,
},
[141327] = {
["source"] = "Lieutenant Fizzel",
["event"] = "SPELL_CAST_START",
["npcID"] = 70963,
},
[114646] = {
["source"] = "Haunting Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 59555,
},
[303488] = {
["source"] = "Wekemara",
["event"] = "SPELL_CAST_START",
["npcID"] = 152671,
},
[428401] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[260291] = {
["source"] = "Bladeguard Elite",
["event"] = "SPELL_CAST_START",
["npcID"] = 130451,
},
[195787] = {
["source"] = "Keeper Selentia",
["event"] = "SPELL_CAST_START",
["npcID"] = 99524,
},
[146180] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Staff of Resonating Water",
["npcID"] = 72810,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[379256] = {
["encounterName"] = "Azureblade",
["source"] = "Vault Guard",
["encounterID"] = 2585,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192955,
},
[389495] = {
["source"] = "Terillod the Devout",
["event"] = "SPELL_CAST_START",
["npcID"] = 193171,
},
[167119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenger Wasp",
["npcID"] = 83447,
},
[296510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawling Corruption",
["npcID"] = 152704,
},
[395639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[389496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[143445] = {
["encounterName"] = "Thok the Bloodthirsty",
["source"] = "Thok the Bloodthirsty",
["npcID"] = 71529,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1599,
},
[32829] = {
["source"] = "Unliving Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 18501,
},
[395640] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[389497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Sand",
["npcID"] = 187475,
},
[167120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Flameslinger",
["npcID"] = 81279,
},
[409975] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[128970] = {
["isChanneled"] = true,
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61783,
},
[145288] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Modified Anima Golem",
["npcID"] = 71395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[120222] = {
["source"] = "Seething Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 61610,
},
[258864] = {
["source"] = "Ashvane Marine",
["event"] = "SPELL_CAST_START",
["npcID"] = 130027,
},
[59706] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2025,
},
[256198] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 127503,
},
[413123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[141187] = {
["source"] = "Admiral Hagman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67426,
},
[137995] = {
["source"] = "Dark Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 69702,
},
[139336] = {
["source"] = "Unblinking Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 70238,
},
[145216] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["npcID"] = 72276,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[427456] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[387453] = {
["source"] = "Professor Maxdormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 189668,
},
[256199] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 127503,
},
[143210] = {
["encounterName"] = "Fallen Protectors",
["event"] = "SPELL_CAST_START",
["source"] = "He Softfoot",
["npcID"] = 71479,
},
[393597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kraunot",
["npcID"] = 186401,
},
[412027] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 205212,
},
[332165] = {
["source"] = "Howling Spectre",
["event"] = "SPELL_CAST_START",
["npcID"] = 170414,
},
[278919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decrepit Stalker",
["npcID"] = 146227,
},
[147669] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Grunt",
["npcID"] = 72941,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[63802] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[11921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellfire Familiar",
["npcID"] = 19016,
},
[175314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vindicator Maraad",
["npcID"] = 78554,
},
[360835] = {
["source"] = "Engorged Annelid",
["event"] = "SPELL_CAST_START",
["npcID"] = 180722,
},
[313737] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Abyssal Watcher",
["npcID"] = 161173,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2331,
},
[405886] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Dragonfire Golem",
["encounterID"] = 2689,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203230,
},
[396739] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Red Gulper",
["npcID"] = 195974,
},
[140279] = {
["source"] = "Shan'ze Animator",
["event"] = "SPELL_CAST_START",
["npcID"] = 70069,
},
[395648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sogglmoggl",
["npcID"] = 188859,
},
[389505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vernon Whitlock",
["npcID"] = 212812,
},
[399744] = {
["source"] = "Spellsworn Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200598,
},
[172816] = {
["source"] = "Sun Prophet Tenhamen",
["event"] = "SPELL_CAST_START",
["npcID"] = 154727,
},
[79933] = {
["isChanneled"] = true,
["source"] = "Utroka the Keymistress",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43350,
},
[286695] = {
["encounterName"] = "King Rastakhan",
["source"] = "Phantom of Retribution",
["npcID"] = 146491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[407936] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[176127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Boomer",
["npcID"] = 80935,
},
[395650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Nightmare",
["npcID"] = 199014,
},
[147351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Pool Tender",
["npcID"] = 73342,
},
[399746] = {
["source"] = "Warp Crystal",
["event"] = "SPELL_CAST_START",
["npcID"] = 201082,
},
[200913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[251083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hanzabu",
["npcID"] = 124513,
},
[122406] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Wind Lord Mel'jarak",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62397,
},
[141318] = {
["source"] = "Frostmane Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 70473,
},
[119358] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60410,
},
[395652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sogglmoggl",
["npcID"] = 188859,
},
[151286] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Aggem Thorncurse",
["npcID"] = 75149,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1659,
},
[360775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandskim Serpent",
["npcID"] = 185511,
},
[303504] = {
["source"] = "Herald of the Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 154950,
},
[152792] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["encounterID"] = 1688,
["event"] = "SPELL_CAST_START",
["npcID"] = 75829,
},
[255041] = {
["source"] = "Feasting Skyscreamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 128434,
},
[309648] = {
["encounterName"] = "Magister Umbric",
["source"] = "Magister Umbric",
["npcID"] = 158035,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2377,
},
[15607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rok'nah Skirmisher",
["npcID"] = 65494,
},
[111216] = {
["encounterName"] = "Armsmaster Harlan",
["source"] = "Armsmaster Harlan",
["encounterID"] = 1421,
["event"] = "SPELL_CAST_START",
["npcID"] = 58632,
},
[64059] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Brain of Yogg-Saron",
["npcID"] = 33890,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[196402] = {
["source"] = "Deeprock Wormtamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 97999,
},
[418180] = {
["source"] = "Glorious Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 208670,
},
[123791] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[129916] = {
["source"] = "Siftworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 65711,
},
[143424] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1598,
},
[147674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Oathguard",
["npcID"] = 72892,
},
[313746] = {
["source"] = "Aqir Reaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 163044,
},
[122784] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[317791] = {
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[393609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krojek The Shoreprowler",
["npcID"] = 187645,
},
[210131] = {
["source"] = "Killclaw the Terrible",
["event"] = "SPELL_CAST_START",
["npcID"] = 153266,
},
[389514] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[276888] = {
["source"] = "Zara'thik Depthspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 162887,
},
[385419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Stonetongue",
["npcID"] = 201552,
},
[117309] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["npcID"] = 60586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[39207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodvenom",
["npcID"] = 49264,
},
[136990] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69131,
},
[170738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undermage Kesalon",
["npcID"] = 85496,
},
[264603] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[114683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rok'nah Hag",
["npcID"] = 64734,
},
[76688] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Obsidian Borer",
["npcID"] = 40019,
},
[147552] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Flameslinger",
["npcID"] = 72353,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[284106] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Sister Katherine",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 146251,
},
[118312] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["npcID"] = 60586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[257231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrotic Echo",
["npcID"] = 145121,
},
[200918] = {
["source"] = "Wrath-Lord Lekos",
["event"] = "SPELL_CAST_START",
["npcID"] = 97069,
},
[313751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Amber Ooze",
["npcID"] = 160930,
},
[389518] = {
["source"] = "Stormshackler Rynea",
["event"] = "SPELL_CAST_START",
["npcID"] = 189391,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[418187] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["npcID"] = 208363,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[200700] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[36805] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["encounterID"] = 733,
["event"] = "SPELL_CAST_START",
["npcID"] = 19622,
},
[136986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spear-Shaper",
["npcID"] = 69388,
},
[418188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shackled Flames of the Betrayer",
["npcID"] = 207815,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[260304] = {
["source"] = "Qy'telek",
["event"] = "SPELL_CAST_START",
["npcID"] = 130726,
},
[106942] = {
["isChanneled"] = true,
["source"] = "Destroying Sha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56765,
},
[139228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari High Priest",
["npcID"] = 69906,
},
[412046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Magmaclaw Snapper",
["npcID"] = 204214,
},
[430476] = {
["source"] = "Hallowed Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 211933,
},
[392635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaurdyth",
["npcID"] = 197835,
},
[151774] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Molten Inferno Crystal",
["npcID"] = 75308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1661,
},
[145550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Shadowmage",
["npcID"] = 72150,
},
[400889] = {
["source"] = "Rampant Tide",
["event"] = "SPELL_CAST_START",
["npcID"] = 201463,
},
[342168] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion of Wisdom",
["npcID"] = 170833,
},
[125914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gatecrusher",
["npcID"] = 64479,
},
[126973] = {
["source"] = "Mogu'shan Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 64063,
},
[405905] = {
["source"] = "Amniotic Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 203072,
},
[208088] = {
["source"] = "Necrodark Greysworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 104565,
},
[418192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shackled Flames of the Betrayer",
["npcID"] = 207815,
},
[144608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Niuzao",
["npcID"] = 71954,
},
[389524] = {
["encounterName"] = "The Primal Council",
["source"] = "Lurking Lunker",
["npcID"] = 196946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[114291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hopper",
["npcID"] = 59464,
},
[360856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Sentinel",
["npcID"] = 185314,
},
[305567] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["encounterID"] = 2326,
["event"] = "SPELL_CAST_START",
["npcID"] = 156501,
},
[68664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zapper Gnome",
["npcID"] = 36384,
},
[448910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darklost Brute",
["npcID"] = 216260,
},
[117187] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["npcID"] = 60585,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[140400] = {
["source"] = "Zandalari Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 70557,
},
[405908] = {
["source"] = "Kartoros",
["event"] = "SPELL_CAST_START",
["npcID"] = 202977,
},
[309664] = {
["source"] = "Onyx Warserpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 153208,
},
[369049] = {
["encounterName"] = "Emberon",
["source"] = "Vault Keeper",
["npcID"] = 186107,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[395670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[383385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Filth Caller",
["npcID"] = 185656,
},
[276901] = {
["source"] = "Commander I'juk",
["event"] = "SPELL_CAST_START",
["npcID"] = 157985,
},
[369050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormsurger",
["npcID"] = 188343,
},
[152801] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["encounterID"] = 1688,
["event"] = "SPELL_CAST_START",
["npcID"] = 75829,
},
[356764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Herald",
["npcID"] = 181408,
},
[138467] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Appraising Eye",
["encounterID"] = 1572,
["event"] = "SPELL_CAST_START",
["npcID"] = 67858,
},
[295332] = {
["encounterName"] = "Abyssal Commander Sivara",
["source"] = "Abyssal Commander Sivara",
["npcID"] = 151881,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2298,
},
[126958] = {
["source"] = "Mogu'shan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 64061,
},
[427444] = {
["source"] = "Prophet of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[166981] = {
["source"] = "Invading Warsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 79753,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[313763] = {
["source"] = "Baruk Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 155957,
},
[170208] = {
["source"] = "Kargath Bladefist",
["event"] = "SPELL_CAST_START",
["npcID"] = 84053,
},
[413387] = {
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_START",
["npcID"] = 45928,
},
[88959] = {
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 45935,
},
[59710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vereesa Windrunner",
["npcID"] = 207816,
},
[120946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Amber-Weaver",
["npcID"] = 61929,
},
[416152] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[418200] = {
["source"] = "Infinite Riftmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 208698,
},
[395675] = {
["source"] = "Embar Firepath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187767,
},
[405914] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[171233] = {
["source"] = "Biolante",
["event"] = "SPELL_CAST_START",
["npcID"] = 75207,
},
[369055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Crustshaper",
["npcID"] = 186110,
},
[111008] = {
["source"] = "Scarlet Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[299432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Scraphound",
["npcID"] = 151301,
},
[147290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Python",
["npcID"] = 73163,
},
[418202] = {
["source"] = "Infinite Riftmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 208698,
},
[38209] = {
["source"] = "Scarlet Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 210969,
},
[63038] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Guardian of Yogg-Saron",
["npcID"] = 33136,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[388535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Chainchewer",
["npcID"] = 196521,
},
[122874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Regail",
["npcID"] = 60585,
},
[395678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Brute",
["npcID"] = 184456,
},
[397726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Whelp",
["npcID"] = 187159,
},
[375201] = {
["source"] = "Divebeak Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 189373,
},
[355945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Explosive Mawsphere",
["npcID"] = 179940,
},
[145489] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zu Yin",
["npcID"] = 73724,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[106514] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shan Jitong",
["npcID"] = 56596,
},
[309674] = {
["source"] = "Torsheg",
["event"] = "SPELL_CAST_START",
["npcID"] = 157156,
},
[370104] = {
["source"] = "Dragonbane Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186600,
},
[393465] = {
["isChanneled"] = true,
["source"] = "Stalwart Broodwarden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198263,
},
[432135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Partially Teleported Kobold",
["npcID"] = 226669,
},
[41184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Stormcaller",
["npcID"] = 22846,
},
[385442] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[412063] = {
["isChanneled"] = true,
["source"] = "Epoch Ripper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205435,
},
[397729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[147612] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursed Hozen Swabby",
["npcID"] = 71920,
},
[434589] = {
["source"] = "Overfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 217429,
},
[165093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Mandragora",
["npcID"] = 81983,
},
[137077] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Spear-Shaper",
["npcID"] = 69388,
},
[150759] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["npcID"] = 74787,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1653,
},
[418208] = {
["source"] = "Dark Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 206474,
},
[125480] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Searsting",
["encounterID"] = 1499,
["event"] = "SPELL_CAST_START",
["npcID"] = 63569,
},
[405922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kartoros",
["npcID"] = 202977,
},
[301487] = {
["event"] = "SPELL_CAST_START",
["source"] = "OOX-Avenger/MG",
["npcID"] = 151296,
},
[413105] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[139498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corpse Spider",
["npcID"] = 68248,
},
[139231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Storm-Caller",
["npcID"] = 69390,
},
[398770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Akiormi",
["npcID"] = 200702,
},
[410019] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200913,
},
[395685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Brute",
["npcID"] = 184456,
},
[405924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krono Sandtongue",
["npcID"] = 205622,
},
[114183] = {
["source"] = "Scarlet Scholar",
["event"] = "SPELL_CAST_START",
["npcID"] = 59372,
},
[118903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glintrok Hexxer",
["npcID"] = 61216,
},
[181477] = {
["isChanneled"] = true,
["source"] = "Nightfallen Construct",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 90005,
},
[79930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darbel Montrose",
["npcID"] = 142688,
},
[14034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[360875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Annelid",
["npcID"] = 180722,
},
[393634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rakkesh of the Flow",
["npcID"] = 193849,
},
[81020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackscale Raider",
["npcID"] = 45984,
},
[41986] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Angered Soul Fragment",
["npcID"] = 23398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[360876] = {
["source"] = "Custos",
["event"] = "SPELL_CAST_START",
["npcID"] = 185755,
},
[387497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Destroyer",
["npcID"] = 187244,
},
[395196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanakk",
["npcID"] = 200911,
},
[116192] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mist Creeper",
["npcID"] = 56304,
},
[298488] = {
["source"] = "Aqir Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 153531,
},
[130466] = {
["source"] = "Twinspire Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66269,
},
[372147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[40251] = {
["encounterName"] = "Teron Gorefiend",
["source"] = "Teron Gorefiend",
["npcID"] = 22871,
["event"] = "SPELL_CAST_START",
["encounterID"] = 604,
},
[124297] = {
["source"] = "Ferdinand",
["event"] = "SPELL_CAST_START",
["npcID"] = 51078,
},
[59712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Sylvanas Windrunner",
["npcID"] = 46026,
},
[405929] = {
["source"] = "Spellsworn Crecheguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 203368,
},
[399786] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 201117,
},
[113690] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[147529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Hozen Swabby",
["npcID"] = 71920,
},
[381357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Ottuk",
["npcID"] = 190267,
},
[407978] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Ahnzon",
["encounterID"] = 2668,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201792,
},
[196838] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 99868,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[316951] = {
["source"] = "Corrosive Digester",
["event"] = "SPELL_CAST_START",
["npcID"] = 162828,
},
[315830] = {
["source"] = "Anubisath Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 161571,
},
[309687] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Shredded Psyche",
["encounterID"] = 2334,
["event"] = "SPELL_CAST_START",
["npcID"] = 158781,
},
[369072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plainswalker Bull",
["npcID"] = 187937,
},
[115761] = {
["source"] = "Tian Pupil",
["event"] = "SPELL_CAST_START",
["npcID"] = 54944,
},
[33860] = {
["source"] = "Arcane Annihilator",
["event"] = "SPELL_CAST_START",
["npcID"] = 18856,
},
[111667] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 58756,
},
[118905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Capacitor Totem",
["npcID"] = 61245,
},
[395694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shocktrooper",
["npcID"] = 199037,
},
[364978] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 181047,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[415403] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2683,
},
[319298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torgok",
["npcID"] = 162817,
},
[395695] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sleeping Whelp",
["npcID"] = 196073,
},
[364979] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[308664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Craggle Wobbletop",
["npcID"] = 158284,
},
[147694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Hozen Swabby",
["npcID"] = 71920,
},
[282153] = {
["encounterName"] = "Mekkatorque",
["source"] = "High Tinker Mekkatorque",
["npcID"] = 144796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2276,
},
[198888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Drake",
["npcID"] = 97068,
},
[285118] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[418222] = {
["source"] = "Gillidan",
["event"] = "SPELL_CAST_START",
["npcID"] = 205036,
},
[152814] = {
["source"] = "Shadowmoon Bone-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 75713,
},
[384961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 186208,
},
[138480] = {
["encounterName"] = "Dark Animus",
["source"] = "Large Anima Golem",
["npcID"] = 69700,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[144473] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[362934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Creeping Brambles",
["npcID"] = 182215,
},
[115814] = {
["source"] = "Greenwood Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 54987,
},
[142576] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Ka'roz the Locust",
["npcID"] = 71154,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[295359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Trashtosser",
["npcID"] = 151660,
},
[412081] = {
["source"] = "Colossal Draconic Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 203826,
},
[178412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogron Laborer",
["npcID"] = 83578,
},
[179101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Enchantress",
["npcID"] = 88089,
},
[418225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorus'arak",
["npcID"] = 205862,
},
[403891] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[115065] = {
["source"] = "Slingtail Mudseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 55193,
},
[150768] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["npcID"] = 74948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 438,
},
[418226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorus'arak",
["npcID"] = 205862,
},
[215241] = {
["source"] = "Duskwatch Executor",
["event"] = "SPELL_CAST_START",
["npcID"] = 115595,
},
[299457] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Scrapboss",
["npcID"] = 151683,
},
[393588] = {
["isChanneled"] = true,
["source"] = "Broodguardian Ziruss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198214,
},
[394881] = {
["isChanneled"] = true,
["source"] = "Jumping Spiderling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198502,
},
[409359] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199659,
},
[114185] = {
["isChanneled"] = true,
["source"] = "Scarlet Scholar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59372,
},
[47939] = {
["source"] = "Xink's Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 27061,
},
[110117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Sha",
["npcID"] = 65414,
},
[80512] = {
["source"] = "Redridge Drudger",
["event"] = "SPELL_CAST_START",
["npcID"] = 580,
},
[389560] = {
["source"] = "Rimebound Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200756,
},
[309698] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["npcID"] = 158367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[372568] = {
["isChanneled"] = true,
["source"] = "Primal Terrasentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[387186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Ravager",
["npcID"] = 218346,
},
[198892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Drake",
["npcID"] = 97068,
},
[111010] = {
["source"] = "Scarlet Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[287174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustfeather",
["npcID"] = 152182,
},
[152818] = {
["source"] = "Shadowmoon Bone-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 75713,
},
[389562] = {
["source"] = "The Great Shellkhan",
["event"] = "SPELL_CAST_START",
["npcID"] = 191305,
},
[391610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gusting Proto-Dragon",
["npcID"] = 190401,
},
[116838] = {
["source"] = "Subjugator Gormal",
["event"] = "SPELL_CAST_START",
["npcID"] = 55016,
},
[124967] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60410,
},
[319294] = {
["source"] = "Torgok",
["event"] = "SPELL_CAST_START",
["npcID"] = 162817,
},
[175847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Y'kish the Deceiver",
["npcID"] = 81266,
},
[225514] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Brinecaster",
["npcID"] = 131303,
},
[395707] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[389564] = {
["source"] = "Steamgill",
["event"] = "SPELL_CAST_START",
["npcID"] = 193123,
},
[264520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Survivalist",
["npcID"] = 131850,
},
[418233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorus'arak",
["npcID"] = 205862,
},
[313798] = {
["source"] = "Abyssal Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161173,
},
[317894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneborn Rebel",
["npcID"] = 160823,
},
[391613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterranean Proto-Dragon",
["npcID"] = 190404,
},
[378282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[41471] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[41276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Behemoth",
["npcID"] = 23196,
},
[77721] = {
["source"] = "Thule Ravenclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 47023,
},
[394878] = {
["isChanneled"] = true,
["source"] = "Council Flamecaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198500,
},
[257756] = {
["source"] = "Bilge Rat Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129527,
},
[144461] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[79490] = {
["source"] = "Muckdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 43532,
},
[282036] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Manceroy Flamefist",
["encounterID"] = 2266,
["event"] = "SPELL_CAST_START",
["npcID"] = 144693,
},
[412093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Titan Watcher",
["npcID"] = 203834,
},
[110968] = {
["source"] = "Scarlet Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 58569,
},
[394922] = {
["isChanneled"] = true,
["source"] = "Braekkas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196855,
},
[147702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[41455] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[396709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Servant of Kruul",
["npcID"] = 206861,
},
[150774] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["npcID"] = 74948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 438,
},
[75907] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40633,
},
[144631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xuen",
["npcID"] = 71953,
},
[29582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Guest",
["npcID"] = 16409,
},
[200418] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[147703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[113641] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[233421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algerson Bodyguard",
["npcID"] = 149036,
},
[183539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotdrool Grabber",
["npcID"] = 91002,
},
[88194] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[263604] = {
["source"] = "Haunted Servitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 137587,
},
[389572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Devilsaur",
["npcID"] = 187262,
},
[377206] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189813,
},
[418241] = {
["source"] = "Prophet Skitra",
["event"] = "SPELL_CAST_START",
["npcID"] = 208491,
},
[420289] = {
["source"] = "Primalist Stormchaser",
["event"] = "SPELL_CAST_START",
["npcID"] = 207276,
},
[114149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Gukgut",
["npcID"] = 61546,
},
[150776] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["npcID"] = 74790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1654,
},
[41277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Behemoth",
["npcID"] = 23196,
},
[86620] = {
["encounterName"] = "Hogger",
["source"] = "Hogger",
["encounterID"] = 1144,
["event"] = "SPELL_CAST_START",
["npcID"] = 46254,
},
[417184] = {
["source"] = "Eviscerator Kintara",
["event"] = "SPELL_CAST_START",
["npcID"] = 207596,
},
[300777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slime Elemental",
["npcID"] = 151792,
},
[221424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tormented Magister",
["npcID"] = 146809,
},
[289235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kal'ia Pa'kuaya",
["npcID"] = 148607,
},
[289230] = {
["isChanneled"] = true,
["source"] = "Ancestral Avenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 148483,
},
[26262] = {
["source"] = "Void Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 65282,
},
[443921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Ethereal",
["npcID"] = 221305,
},
[387528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthbound Primalist",
["npcID"] = 193795,
},
[373194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windyfin Windbringer",
["npcID"] = 187432,
},
[383433] = {
["isChanneled"] = true,
["source"] = "Burning Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194147,
},
[219913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Violent Crageater",
["npcID"] = 95916,
},
[140539] = {
["source"] = "Memory of a Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 200527,
},
[282031] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Mestrah",
["encounterID"] = 2266,
["event"] = "SPELL_CAST_START",
["npcID"] = 144690,
},
[296365] = {
["source"] = "Subjugator Klontzas",
["event"] = "SPELL_CAST_START",
["npcID"] = 152612,
},
[418237] = {
["source"] = "Prophet Skitra",
["event"] = "SPELL_CAST_START",
["npcID"] = 208491,
},
[144635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xuen",
["npcID"] = 71953,
},
[188270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Rook Falcon",
["npcID"] = 93064,
},
[292826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Etruvis the Vassal",
["npcID"] = 151041,
},
[115062] = {
["source"] = "Hozen Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 57119,
},
[412104] = {
["source"] = "Lead Researcher Sytorian",
["event"] = "SPELL_CAST_START",
["npcID"] = 203067,
},
[174328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulbinder Nyami",
["npcID"] = 76177,
},
[315772] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[388977] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Matriarch Remalla",
["npcID"] = 193246,
},
[41183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Stormcaller",
["npcID"] = 22846,
},
[405962] = {
["source"] = "Bronogg the Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 203386,
},
[427760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[401867] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 200836,
},
[125056] = {
["source"] = "Clefthoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 165189,
},
[41173] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Heartseeker",
["npcID"] = 23339,
},
[191735] = {
["source"] = "Felsworn Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 98954,
},
[279003] = {
["source"] = "Horde Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 142082,
},
[46406] = {
["source"] = "Ahunite Coldwave",
["event"] = "SPELL_CAST_START",
["npcID"] = 25756,
},
[272364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Congealed Oil",
["npcID"] = 150698,
},
[307008] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Gaze of Madness",
["npcID"] = 157442,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[430503] = {
["source"] = "Doomshadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 208029,
},
[7978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goblin Technician",
["npcID"] = 35333,
},
[389583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonspawn Spell Weaver",
["npcID"] = 196119,
},
[375249] = {
["source"] = "Bluebill Waddler",
["event"] = "SPELL_CAST_START",
["npcID"] = 192947,
},
[415556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dr. Boom",
["npcID"] = 215146,
},
[44503] = {
["source"] = "Wretched Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 24690,
},
[186302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Helhound",
["npcID"] = 105532,
},
[298945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Mua'kin",
["npcID"] = 169520,
},
[369107] = {
["source"] = "Ancient Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200286,
},
[197880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonespeaker Runeaxe",
["npcID"] = 93066,
},
[198904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotheart Dryad",
["npcID"] = 99358,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[193376] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[195585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Helarjar Soulthief",
["npcID"] = 115291,
},
[290568] = {
["source"] = "Dazari Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 149569,
},
[391634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[319910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Etherwyrm",
["npcID"] = 158771,
},
[225042] = {
["source"] = "Corrupted Feeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 113088,
},
[153315] = {
["encounterName"] = "Ranjit",
["source"] = "Ranjit",
["npcID"] = 75964,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1698,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[369110] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[386555] = {
["source"] = "Dathea Stormlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[308645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reprogrammed Warbot",
["npcID"] = 158286,
},
[146688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Cannoneer",
["npcID"] = 72365,
},
[397134] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187772,
},
[107140] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56754,
},
[128049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Pirate",
["npcID"] = 71987,
},
[183548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneclaw Grubmaster",
["npcID"] = 102404,
},
[418258] = {
["source"] = "Imperial Vizier Zor'lok",
["event"] = "SPELL_CAST_START",
["npcID"] = 208500,
},
[420306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Chainmaster",
["npcID"] = 211058,
},
[223423] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Tainted Bloodpetal",
["encounterID"] = 1873,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 112118,
},
[117372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Polluted Viseclaw Scuttler",
["npcID"] = 68584,
},
[393686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turboris",
["npcID"] = 187886,
},
[255220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hexbone Raiser",
["npcID"] = 134816,
},
[309451] = {
["encounterName"] = "Magister Umbric",
["source"] = "Magister Umbric",
["encounterID"] = 2377,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158035,
},
[207865] = {
["source"] = "Genn Greymane",
["event"] = "SPELL_CAST_START",
["npcID"] = 214073,
},
[166714] = {
["source"] = "Terokk",
["event"] = "SPELL_CAST_START",
["npcID"] = 82820,
},
[412117] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[397783] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[132955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldwall Huntress",
["npcID"] = 67317,
},
[410070] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[173311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Wrangler",
["npcID"] = 83390,
},
[15547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormpike Mountaineer",
["npcID"] = 48482,
},
[10452] = {
["source"] = "Vermillion Flamelash",
["event"] = "SPELL_CAST_START",
["npcID"] = 45569,
},
[58438] = {
["source"] = "Unbound Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 30856,
},
[34121] = {
["encounterName"] = "Al'ar",
["source"] = "Al'ar",
["encounterID"] = 730,
["event"] = "SPELL_CAST_START",
["npcID"] = 19514,
},
[41426] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["npcID"] = 23419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[134058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Blastgineer",
["npcID"] = 67884,
},
[415125] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207639,
},
[314843] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[434269] = {
["source"] = "Daetan Swiftplume",
["event"] = "SPELL_CAST_START",
["npcID"] = 218738,
},
[383452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rugren",
["npcID"] = 201563,
},
[80009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monishot",
["npcID"] = 82001,
},
[260292] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["npcID"] = 131817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2118,
},
[7967] = {
["encounterName"] = "Mutanus the Devourer",
["source"] = "Mutanus the Devourer",
["encounterID"] = 592,
["event"] = "SPELL_CAST_START",
["npcID"] = 3654,
},
[424408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bodwin",
["npcID"] = 209153,
},
[344546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistress Dyrax",
["npcID"] = 162880,
},
[98951] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[101907] = {
["source"] = "Strange Snowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 54523,
},
[165122] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Ahri'ok Dugru",
["npcID"] = 80816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1748,
},
[204611] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[425995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[69562] = {
["source"] = "Soulguard Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 36564,
},
[342500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion of Humility",
["npcID"] = 170836,
},
[131940] = {
["source"] = "Giant Siftworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 67084,
},
[427657] = {
["source"] = "Nuoberon",
["event"] = "SPELL_CAST_START",
["npcID"] = 209113,
},
[298485] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 151660,
},
[408029] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Loszkeleth",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201790,
},
[88201] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[201983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113537,
},
[255814] = {
["source"] = "Reanimated Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127757,
},
[368295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Architect",
["npcID"] = 183953,
},
[393696] = {
["source"] = "Vadne Bleakheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 195764,
},
[98952] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[148232] = {
["encounterName"] = "Galakras",
["source"] = "Lor'themar Theron",
["npcID"] = 72560,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[158549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustwing Scavenger",
["npcID"] = 153293,
},
[299394] = {
["source"] = "Tisiphon",
["event"] = "SPELL_CAST_START",
["npcID"] = 157468,
},
[147720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Fire-Watcher",
["npcID"] = 72894,
},
[384933] = {
["isChanneled"] = true,
["source"] = "Primal Terrasentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[163077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grievous Depthworm",
["npcID"] = 85942,
},
[360737] = {
["source"] = "Dematerializing Worldeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 181116,
},
[177088] = {
["source"] = "Bloodmane Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 82938,
},
[299502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phleep",
["npcID"] = 193210,
},
[35008] = {
["encounterName"] = "Rokmar the Crackler",
["source"] = "Rokmar the Crackler",
["encounterID"] = 1941,
["event"] = "SPELL_CAST_START",
["npcID"] = 17991,
},
[392594] = {
["source"] = "Meatgrinder Sotok",
["event"] = "SPELL_CAST_START",
["npcID"] = 186777,
},
[412129] = {
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 205152,
},
[129617] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duyi Edgewater",
["npcID"] = 65745,
},
[367079] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[164102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Laborer",
["npcID"] = 81235,
},
[396689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver A'tir",
["npcID"] = 186859,
},
[207861] = {
["source"] = "Genn Greymane",
["event"] = "SPELL_CAST_START",
["npcID"] = 214073,
},
[257275] = {
["source"] = "Briarwood Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 133072,
},
[46153] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["npcID"] = 24723,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1897,
},
[408975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Edgelord",
["npcID"] = 198873,
},
[388544] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196482,
},
[368277] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corrupted Architect",
["npcID"] = 183953,
},
[369129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Modak Flamespit",
["npcID"] = 186509,
},
[387559] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[111752] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Neophyte",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58823,
},
[120455] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[80012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Sharpshooter",
["npcID"] = 45376,
},
[346605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chained Construct",
["npcID"] = 182296,
},
[291316] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 175313,
},
[65351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wolvar Orphan",
["npcID"] = 33532,
},
[134059] = {
["source"] = "Bilgewater Blastgineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 67884,
},
[403943] = {
["source"] = "Veltrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 200904,
},
[365036] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Defense Matrix Automa",
["npcID"] = 184126,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2539,
},
[221059] = {
["source"] = "Gelatinized Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 111004,
},
[133321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldwall Rifleman",
["npcID"] = 67297,
},
[420326] = {
["source"] = "Flamesworn Ashwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 210504,
},
[397801] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[208929] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1873,
["event"] = "SPELL_CAST_START",
["npcID"] = 105383,
},
[147723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Fire-Watcher",
["npcID"] = 72894,
},
[412136] = {
["source"] = "Valow, Timesworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 201222,
},
[414184] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[360213] = {
["source"] = "Defective Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 181839,
},
[45101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dawnblade Marksman",
["npcID"] = 24979,
},
[387564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Lasher",
["npcID"] = 196102,
},
[162058] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["npcID"] = 80005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1736,
},
[285177] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[385517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Sentry",
["npcID"] = 187021,
},
[395756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Flameslinger",
["npcID"] = 196336,
},
[430247] = {
["source"] = "Hallowed Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 211933,
},
[257279] = {
["source"] = "Briarwood Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 133072,
},
[78828] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Guard Gro'tash",
["npcID"] = 67927,
},
[419211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felbark the Defiler",
["npcID"] = 207094,
},
[163687] = {
["source"] = "Sethekk Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 80638,
},
[425819] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Treant",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 211904,
},
[210645] = {
["source"] = "Withered Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 98733,
},
[197797] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Risen Arcanist",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 100486,
},
[423771] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[200757] = {
["source"] = "Volatile Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 96280,
},
[121994] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[32422] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["encounterID"] = 1889,
["event"] = "SPELL_CAST_START",
["npcID"] = 18373,
},
[414189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krrrn Trr Pyromancer",
["npcID"] = 205821,
},
[179996] = {
["isChanneled"] = true,
["source"] = "Nightfallen Construct",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 90377,
},
[287037] = {
["encounterName"] = "Opulence",
["source"] = "Opulence",
["encounterID"] = 2271,
["event"] = "SPELL_CAST_START",
["npcID"] = 145261,
},
[374158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Basilisk",
["npcID"] = 191696,
},
[360569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overgrown Geomental",
["npcID"] = 179007,
},
[391665] = {
["source"] = "Ash Bugsbane",
["event"] = "SPELL_CAST_START",
["npcID"] = 197292,
},
[319994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Satiated Sawtooth",
["npcID"] = 164587,
},
[420334] = {
["source"] = "Keeper Adranas",
["event"] = "SPELL_CAST_START",
["npcID"] = 209931,
},
[397809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[268801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandfury Axe Thrower",
["npcID"] = 121017,
},
[41169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Heartseeker",
["npcID"] = 23339,
},
[387571] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[414192] = {
["source"] = "Krrrn Trr Cryomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204451,
},
[120458] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[200969] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Tor",
["npcID"] = 97084,
},
[395763] = {
["source"] = "Qalashi Flameslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 196336,
},
[81039] = {
["encounterName"] = "Viscous Fallout",
["source"] = "Irradiated Slime",
["npcID"] = 6218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 378,
},
[166778] = {
["source"] = "Terokk",
["event"] = "SPELL_CAST_START",
["npcID"] = 82820,
},
[387504] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[305663] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[381430] = {
["source"] = "Earthen Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186849,
},
[288441] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[377335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[302816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Earth Rager",
["npcID"] = 151638,
},
[270595] = {
["source"] = "Savage Fathomjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 130916,
},
[291332] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 175313,
},
[393718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Amaa",
["npcID"] = 188715,
},
[428530] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[264694] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[249093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokali the Scarred",
["npcID"] = 125485,
},
[55811] = {
["source"] = "Iron Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 29984,
},
[161040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pack Boar",
["npcID"] = 80174,
},
[137491] = {
["encounterName"] = "Twin Empyreans",
["source"] = "Suen",
["encounterID"] = 1560,
["event"] = "SPELL_CAST_START",
["npcID"] = 68904,
},
[170910] = {
["source"] = "Sethe",
["event"] = "SPELL_CAST_START",
["npcID"] = 80644,
},
[377338] = {
["source"] = "Aqualing",
["event"] = "SPELL_CAST_START",
["npcID"] = 190406,
},
[360577] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vespoid Worker",
["npcID"] = 183283,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189232,
},
[116364] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60009,
},
[413704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ducks Devil",
["npcID"] = 200751,
},
[394838] = {
["source"] = "Henlare",
["event"] = "SPELL_CAST_START",
["npcID"] = 193229,
},
[291334] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 175313,
},
[34637] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Sunseeker Channeler",
["npcID"] = 19505,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1928,
},
[385531] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[195284] = {
["source"] = "Restless Tides",
["event"] = "SPELL_CAST_START",
["npcID"] = 97173,
},
[291335] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 175313,
},
[278444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Maggot",
["npcID"] = 134024,
},
[377341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[338434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devmorta",
["npcID"] = 162875,
},
[162066] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["npcID"] = 80005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1736,
},
[154899] = {
["encounterName"] = "Orebender Gor'ashan",
["source"] = "Orebender Gor'ashan",
["npcID"] = 76413,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1761,
},
[360960] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["npcID"] = 181224,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2540,
},
[169233] = {
["encounterName"] = "Xeri'tac",
["source"] = "Venom-Crazed Pale One",
["npcID"] = 84554,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1752,
},
[381438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angered Steam",
["npcID"] = 190694,
},
[175377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Limbflayer",
["npcID"] = 86652,
},
[37965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underbog Shambler",
["npcID"] = 17871,
},
[417808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haywire Harvester",
["npcID"] = 205889,
},
[135425] = {
["source"] = "Horde Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 68334,
},
[375296] = {
["source"] = "Rebel Collier",
["event"] = "SPELL_CAST_START",
["npcID"] = 195605,
},
[377344] = {
["source"] = "Territorial Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 192329,
},
[412156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[286915] = {
["source"] = "The Indomitable",
["event"] = "SPELL_CAST_START",
["npcID"] = 147745,
},
[143638] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["npcID"] = 71515,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[385536] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[259336] = {
["source"] = "Frostmange",
["event"] = "SPELL_CAST_START",
["npcID"] = 127794,
},
[376200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgewrought Monstrosity",
["npcID"] = 194816,
},
[12098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Dreadlord",
["npcID"] = 21166,
},
[345554] = {
["source"] = "Mawsworn Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 184471,
},
[387585] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[193235] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[158997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acidtooth Devourer",
["npcID"] = 79416,
},
[258313] = {
["source"] = "Ashvane Jailer",
["event"] = "SPELL_CAST_START",
["npcID"] = 135699,
},
[346631] = {
["source"] = "Mawsworn Necrobinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 175930,
},
[46150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Witch",
["npcID"] = 24696,
},
[336066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Souldrinker",
["npcID"] = 182686,
},
[369157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embertooth Harvester",
["npcID"] = 188948,
},
[428542] = {
["source"] = "Naz'jar Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 40577,
},
[307725] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["encounterID"] = 2334,
["event"] = "SPELL_CAST_START",
["npcID"] = 157238,
},
[416256] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron's Creation",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 204918,
},
[172005] = {
["source"] = "Ralshira",
["event"] = "SPELL_CAST_START",
["npcID"] = 86135,
},
[37054] = {
["source"] = "Pearlfin Watershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59361,
},
[46155] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["npcID"] = 24723,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1897,
},
[86574] = {
["source"] = "Fungal Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 42475,
},
[61515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[422023] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209333,
},
[27634] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Garaxxas",
["npcID"] = 24555,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[225289] = {
["source"] = "Dark Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 101106,
},
[290437] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 146256,
},
[59835] = {
["encounterName"] = "Loken",
["source"] = "Loken",
["npcID"] = 28923,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1986,
},
[286619] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 146256,
},
[309776] = {
["source"] = "Dokani Shadewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 153107,
},
[196883] = {
["source"] = "Lord Etheldrin Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98521,
},
[302477] = {
["source"] = "Void Haunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 151754,
},
[198931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 207026,
},
[383496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strunraan",
["npcID"] = 193534,
},
[395784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[245706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Champion",
["npcID"] = 122403,
},
[388796] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2563,
},
[264024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[426500] = {
["source"] = "Gnarlroot",
["event"] = "SPELL_CAST_START",
["npcID"] = 81984,
},
[148762] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Commander Zak'tar",
["npcID"] = 71409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[406911] = {
["source"] = "Sundered Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201288,
},
[360949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fettered Gunner",
["npcID"] = 182430,
},
[139991] = {
["encounterName"] = "Megaera",
["source"] = "Arcane Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70248,
},
[392576] = {
["source"] = "Tempest Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 198047,
},
[274968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimscowl the Harebrained",
["npcID"] = 141059,
},
[34639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Harvester",
["npcID"] = 19509,
},
[44538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereum Smuggler",
["npcID"] = 24698,
},
[430218] = {
["source"] = "Inquisitor Fairbell",
["event"] = "SPELL_CAST_START",
["npcID"] = 211930,
},
[288410] = {
["encounterName"] = "Mekkatorque",
["source"] = "High Tinker Mekkatorque",
["npcID"] = 144796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2276,
},
[416264] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[257736] = {
["source"] = "Irontide Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 126919,
},
[387596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mystic",
["npcID"] = 195877,
},
[162074] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fireblade Invoker",
["npcID"] = 77047,
},
[46042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Warlock",
["npcID"] = 24686,
},
[360859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Halondrus",
["npcID"] = 181047,
},
[379406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavabearer",
["npcID"] = 189472,
},
[274971] = {
["source"] = "Mala'kili",
["event"] = "SPELL_CAST_START",
["npcID"] = 128935,
},
[394622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarls",
["npcID"] = 197354,
},
[360977] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[392574] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[23337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Booty Bay Bruiser",
["npcID"] = 4624,
},
[226269] = {
["source"] = "Forgotten Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 113699,
},
[385551] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[264734] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[111762] = {
["source"] = "Scholomance Neophyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58823,
},
[290955] = {
["encounterName"] = "King Rastakhan",
["source"] = "Headhunter Gal'wana",
["npcID"] = 146326,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[216342] = {
["source"] = "Koralune Ettin",
["event"] = "SPELL_CAST_START",
["npcID"] = 99791,
},
[32424] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["encounterID"] = 1889,
["event"] = "SPELL_CAST_START",
["npcID"] = 18373,
},
[58053] = {
["source"] = "Crusader of Virtue",
["event"] = "SPELL_CAST_START",
["npcID"] = 30189,
},
[391696] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["encounterID"] = 2605,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190690,
},
[385553] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Stormseeker Acolyte",
["npcID"] = 194990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[79964] = {
["source"] = "Jorgensen",
["event"] = "SPELL_CAST_START",
["npcID"] = 43305,
},
[244665] = {
["source"] = "Ember of Azzinoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 122712,
},
[142623] = {
["source"] = "Hekima the Wise",
["event"] = "SPELL_CAST_START",
["npcID"] = 70544,
},
[418318] = {
["source"] = "Faceless One",
["event"] = "SPELL_CAST_START",
["npcID"] = 206463,
},
[123244] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["encounterID"] = 1506,
["event"] = "SPELL_CAST_START",
["npcID"] = 62983,
},
[285213] = {
["encounterName"] = "King Rastakhan",
["source"] = "Bwonsamdi",
["npcID"] = 145644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[408080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[211999] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 105629,
},
[268306] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[315932] = {
["source"] = "Iron-Willed Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 162718,
},
[390940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarls",
["npcID"] = 197354,
},
[320028] = {
["source"] = "Boneshard Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 167458,
},
[412177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[162078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blademaster Bralok",
["npcID"] = 76981,
},
[368294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charged Sentry",
["npcID"] = 185752,
},
[378835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Rotflinger",
["npcID"] = 186362,
},
[286389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rastari Royal Guard",
["npcID"] = 148665,
},
[368085] = {
["source"] = "Sorranos",
["event"] = "SPELL_CAST_START",
["npcID"] = 183722,
},
[142625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wily Woodling",
["npcID"] = 61155,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[395797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Frostsculptor",
["npcID"] = 198424,
},
[204492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jandvik Bonepiercer",
["npcID"] = 100948,
},
[282209] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Akunda's Aspect",
["npcID"] = 148962,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2268,
},
[396665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[34785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest-Forge Peacekeeper",
["npcID"] = 18405,
},
[83824] = {
["source"] = "Venture Co. Geologist",
["event"] = "SPELL_CAST_START",
["npcID"] = 1096,
},
[128658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rok'nah Felcaster",
["npcID"] = 65507,
},
[417735] = {
["isChanneled"] = true,
["source"] = "Mycelial Growth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208525,
},
[387608] = {
["isChanneled"] = true,
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195842,
},
[385239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flare Elemental",
["npcID"] = 202683,
},
[419229] = {
["source"] = "Cho'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 208212,
},
[393752] = {
["source"] = "Vadne Bleakheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 195764,
},
[428564] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Firelands Flameguard",
["npcID"] = 210290,
},
[424217] = {
["source"] = "Sparring Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 216676,
},
[199481] = {
["source"] = "Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 97632,
},
[79937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anruin",
["npcID"] = 81998,
},
[169248] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["npcID"] = 84550,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1752,
},
[263961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[427960] = {
["source"] = "Firebrand Fystia",
["event"] = "SPELL_CAST_START",
["npcID"] = 209893,
},
[374137] = {
["source"] = "Parched Broadhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 194352,
},
[181535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sea Skrog",
["npcID"] = 88094,
},
[96346] = {
["encounterName"] = "Zanzil",
["source"] = "Zanzil",
["npcID"] = 52053,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1181,
},
[284446] = {
["encounterName"] = "King Rastakhan",
["source"] = "Bwonsamdi",
["npcID"] = 145644,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2272,
},
[225562] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Burster",
["npcID"] = 100532,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[382573] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[69056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Watchman",
["npcID"] = 36478,
},
[30633] = {
["source"] = "Crystalline Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 26792,
},
[418329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Angerboda",
["npcID"] = 207823,
},
[181536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sea Skrog",
["npcID"] = 88094,
},
[373279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thing From Beyond",
["npcID"] = 189988,
},
[375327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterranean Proto-Dragon",
["npcID"] = 190404,
},
[300525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Trashtosser",
["npcID"] = 150142,
},
[387614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Deathspeaker",
["npcID"] = 195851,
},
[336037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Oppressor",
["npcID"] = 181186,
},
[387613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Corruptor",
["npcID"] = 195842,
},
[374135] = {
["source"] = "Pinehoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 193595,
},
[363042] = {
["source"] = "Vine-Choked Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 182350,
},
[47696] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[277037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elven Shambler",
["npcID"] = 146329,
},
[168227] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Skulloc",
["npcID"] = 83612,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1754,
},
[213975] = {
["source"] = "Spellwyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 105884,
},
[145702] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Sri'thik Bombardier",
["npcID"] = 71385,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[427376] = {
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 40935,
},
[418333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Angerboda",
["npcID"] = 207823,
},
[34879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Falconer",
["npcID"] = 17994,
},
[198944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Shieldmaiden",
["npcID"] = 95832,
},
[375331] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[200992] = {
["isChanneled"] = true,
["source"] = "Savage Felstalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 92782,
},
[387618] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primalist Infuser",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 196043,
},
[315947] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[395017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Massive Magmashell",
["npcID"] = 193152,
},
[418335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Angerboda",
["npcID"] = 207823,
},
[136913] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 68397,
},
[200805] = {
["isChanneled"] = true,
["source"] = "Queen's Centurion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103432,
},
[285040] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Ire of the Deep",
["npcID"] = 146736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[166605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Forager",
["npcID"] = 83449,
},
[395811] = {
["source"] = "Qalashi Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190983,
},
[342570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion of Loyalty",
["npcID"] = 170832,
},
[146728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72367,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2606,
},
[12542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Darkcaster",
["npcID"] = 17694,
},
[426147] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[159015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Stonemuncher",
["npcID"] = 84253,
},
[377383] = {
["source"] = "Alpha Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 192333,
},
[264757] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[85147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Catapult",
["npcID"] = 45601,
},
[427638] = {
["source"] = "Nuoberon",
["event"] = "SPELL_CAST_START",
["npcID"] = 209113,
},
[377384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[265876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[392561] = {
["isChanneled"] = true,
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197831,
},
[189467] = {
["source"] = "Malace Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 97090,
},
[442913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Blademaster",
["npcID"] = 72131,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[130198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heavy Mook",
["npcID"] = 67399,
},
[200963] = {
["isChanneled"] = true,
["source"] = "Fel Shocktrooper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 92776,
},
[442914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Blademaster",
["npcID"] = 72131,
},
[3606] = {
["source"] = "Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 2523,
},
[223417] = {
["source"] = "Grisly Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 112162,
},
[159017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zipteq",
["npcID"] = 78734,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[395817] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Frostsculptor",
["npcID"] = 198424,
},
[199645] = {
["source"] = "Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 97632,
},
[309812] = {
["source"] = "Zror'um the Infinite",
["event"] = "SPELL_CAST_START",
["npcID"] = 154087,
},
[369197] = {
["source"] = "Dragonbane Firebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186599,
},
[412200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[141612] = {
["isChanneled"] = true,
["source"] = "Fiery Anger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70824,
},
[391723] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[377389] = {
["source"] = "Alpha Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 192333,
},
[395819] = {
["source"] = "Qalashi Scaleripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187602,
},
[15254] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Beacon",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18431,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["npcID"] = 135552,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[393772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hihveer",
["npcID"] = 188717,
},
[387629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Ohuna",
["npcID"] = 195876,
},
[372082] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[208165] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[442919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Blademaster",
["npcID"] = 72131,
},
[16006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farseer Drek'Thar",
["npcID"] = 78996,
},
[256922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Maiden",
["npcID"] = 131821,
},
[391726] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[428139] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[387631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molkeej",
["npcID"] = 195430,
},
[422443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sickened Growth",
["npcID"] = 207926,
},
[396877] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[391268] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Earthwrought Smasher",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 197595,
},
[423734] = {
["source"] = "Doomfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 210910,
},
[284399] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Living Bomb",
["encounterID"] = 2266,
["event"] = "SPELL_CAST_START",
["npcID"] = 146102,
},
[89757] = {
["source"] = "Defias Cannon",
["event"] = "SPELL_CAST_START",
["npcID"] = 48266,
},
[375351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[222501] = {
["source"] = "Captain Grub Redcut",
["event"] = "SPELL_CAST_START",
["npcID"] = 199351,
},
[199758] = {
["source"] = "Immolanth",
["event"] = "SPELL_CAST_START",
["npcID"] = 96682,
},
[159021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[426541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Disciple",
["npcID"] = 131685,
},
[204852] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Dweller",
["npcID"] = 101991,
},
[386675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[375348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gusting Proto-Dragon",
["npcID"] = 190401,
},
[15472] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[265880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[384365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Plainstomper",
["npcID"] = 191847,
},
[309821] = {
["source"] = "Zror'um the Infinite",
["event"] = "SPELL_CAST_START",
["npcID"] = 154087,
},
[303678] = {
["source"] = "Lumbering Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 155824,
},
[338490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devmorta",
["npcID"] = 162875,
},
[145712] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Sri'thik Bombardier",
["npcID"] = 71385,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[39121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Greenkeeper",
["npcID"] = 18419,
},
[393780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[201839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Summoner",
["npcID"] = 99366,
},
[35124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[285250] = {
["source"] = "Kul Tiran Strongarm",
["event"] = "SPELL_CAST_START",
["npcID"] = 146553,
},
[393781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[393787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskakx",
["npcID"] = 192761,
},
[389686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[264153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Maggot",
["npcID"] = 134024,
},
[331402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Popo",
["npcID"] = 180028,
},
[420403] = {
["source"] = "Decaymonger Rotpaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 205995,
},
[111772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
},
[402793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[143666] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["npcID"] = 71160,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[426206] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[153905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirling Dervish",
["npcID"] = 77605,
},
[195884] = {
["source"] = "Feltotem Bloodsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 96423,
},
[377402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[420405] = {
["source"] = "Tempest Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[141619] = {
["source"] = "Frostmane Bonechiller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70465,
},
[200674] = {
["isChanneled"] = true,
["source"] = "Vile Soulmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97014,
},
[316855] = {
["source"] = "Darkwing Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 165267,
},
[412215] = {
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 205158,
},
[397881] = {
["source"] = "Corrupt Living Water",
["event"] = "SPELL_CAST_START",
["npcID"] = 59873,
},
[285255] = {
["source"] = "Kul Tiran Strongarm",
["event"] = "SPELL_CAST_START",
["npcID"] = 146553,
},
[118940] = {
["encounterName"] = "Gekkan",
["source"] = "Glintrok Oracle",
["npcID"] = 61339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2129,
},
[395834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 197121,
},
[141620] = {
["source"] = "Bonechiller Barafu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70468,
},
[419595] = {
["source"] = "Molten General",
["event"] = "SPELL_CAST_START",
["npcID"] = 207941,
},
[361023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cartel Xy Saboteur",
["npcID"] = 181005,
},
[169265] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[421616] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[427964] = {
["source"] = "Blazing Incarnation",
["event"] = "SPELL_CAST_START",
["npcID"] = 213559,
},
[303687] = {
["source"] = "Boggac Skullbash",
["event"] = "SPELL_CAST_START",
["npcID"] = 151308,
},
[404027] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[141621] = {
["source"] = "Frost Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 70982,
},
[397888] = {
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200126,
},
[46164] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24664,
},
[382576] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[12468] = {
["encounterName"] = "Jammal'an the Prophet",
["source"] = "Jammal'an the Prophet",
["npcID"] = 5710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 488,
},
[399933] = {
["source"] = "Tukkaraq's Boat",
["event"] = "SPELL_CAST_START",
["npcID"] = 201121,
},
[38391] = {
["source"] = "Searing Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 46260,
},
[289360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Div'yane",
["npcID"] = 148615,
},
[111774] = {
["source"] = "Scholomance Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[209602] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[96416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hakkari Witch Doctor",
["npcID"] = 52086,
},
[377411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Slyvern",
["npcID"] = 192169,
},
[13952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightsworn Vindicator",
["npcID"] = 22861,
},
[264525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Survivalist",
["npcID"] = 131850,
},
[90273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Balinda Stonehearth",
["npcID"] = 48507,
},
[111775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lilian Voss",
["npcID"] = 58722,
},
[133432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Domination Point Demolisher",
["npcID"] = 67671,
},
[301177] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["source"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2291,
},
[393793] = {
["source"] = "Hacklung",
["event"] = "SPELL_CAST_START",
["npcID"] = 187752,
},
[395841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 197120,
},
[397889] = {
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200126,
},
[427670] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[270929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harpy Boltcaller",
["npcID"] = 152843,
},
[140600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Burrower",
["npcID"] = 70589,
},
[166197] = {
["source"] = "Bloodmaul Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 77995,
},
[159030] = {
["source"] = "Glut",
["event"] = "SPELL_CAST_START",
["npcID"] = 80868,
},
[303310] = {
["source"] = "Theurgist Nitara",
["event"] = "SPELL_CAST_START",
["npcID"] = 155836,
},
[387652] = {
["source"] = "Frozen Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 187203,
},
[257315] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Irontide Grenadier",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 129758,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 84400,
},
[398692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[114848] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[397892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imacu'tya",
["npcID"] = 104275,
},
[367176] = {
["source"] = "Euv'ouk",
["event"] = "SPELL_CAST_START",
["npcID"] = 184409,
},
[410978] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Djaradin Dragonhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 202108,
},
[428609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 207024,
},
[18399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[387657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthbound Primalist",
["npcID"] = 193795,
},
[400954] = {
["source"] = "Volgoth The Flamebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209129,
},
[420419] = {
["source"] = "Tempest Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[142650] = {
["source"] = "Proto-Drake Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 71401,
},
[381516] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[387465] = {
["isChanneled"] = true,
["source"] = "Arcane Commander",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190776,
},
[199361] = {
["encounterName"] = "Fenryr",
["source"] = "Valarjar Trapper",
["npcID"] = 96934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[424352] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[90275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Balinda Stonehearth",
["npcID"] = 48507,
},
[33111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[192706] = {
["source"] = "Channeler Varisz",
["event"] = "SPELL_CAST_START",
["npcID"] = 100249,
},
[100002] = {
["encounterName"] = "Shannox",
["source"] = "Shannox",
["encounterID"] = 1205,
["event"] = "SPELL_CAST_START",
["npcID"] = 53691,
},
[201872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurking Observer",
["npcID"] = 154529,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[397897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jazshariu",
["npcID"] = 104273,
},
[43291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Berserker",
["npcID"] = 24216,
},
[136904] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69131,
},
[387659] = {
["source"] = "Melkhop",
["event"] = "SPELL_CAST_START",
["npcID"] = 193311,
},
[414280] = {
["source"] = "Eternus",
["event"] = "SPELL_CAST_START",
["npcID"] = 208168,
},
[427579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Bristlebruin",
["npcID"] = 210507,
},
[393803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trakhan",
["npcID"] = 193783,
},
[412233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Rocketeer",
["npcID"] = 205727,
},
[397899] = {
["source"] = "Sha-Touched Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 200131,
},
[408927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Contaminant",
["npcID"] = 202270,
},
[393804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirglgurgl",
["npcID"] = 188860,
},
[116070] = {
["source"] = "Gormali Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 54702,
},
[373327] = {
["encounterName"] = "Eranog",
["source"] = "Primal Flame",
["npcID"] = 187593,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[159035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shaadum",
["npcID"] = 78728,
},
[82794] = {
["source"] = "Oathsworn Wanderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 44926,
},
[187706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Inquisitor",
["npcID"] = 91697,
},
[381519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embertooth Scavenger",
["npcID"] = 187426,
},
[399949] = {
["source"] = "Primal Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 200673,
},
[7948] = {
["source"] = "Deviate Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 5761,
},
[427498] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[373329] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[114022] = {
["source"] = "Scarlet Treasurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 59241,
},
[395855] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Blue Gulper",
["npcID"] = 195976,
},
[381521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Encroaching Downpour",
["npcID"] = 191324,
},
[310780] = {
["source"] = "Eye of the Depths",
["event"] = "SPELL_CAST_START",
["npcID"] = 159510,
},
[279134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Abomination",
["npcID"] = 145120,
},
[112998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Residual Hatred",
["npcID"] = 58803,
},
[397904] = {
["source"] = "Sha-Touched Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 200131,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189232,
},
[149416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vespoid Drone",
["npcID"] = 183257,
},
[395857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonemender",
["npcID"] = 187600,
},
[8600] = {
["encounterName"] = "Theka the Martyr",
["source"] = "Theka the Martyr",
["npcID"] = 7272,
["event"] = "SPELL_CAST_START",
["encounterID"] = 596,
},
[126625] = {
["source"] = "Spirit of Violence",
["event"] = "SPELL_CAST_START",
["npcID"] = 64656,
},
[421971] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[312680] = {
["source"] = "Faceless Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 160550,
},
[307805] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[285280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Tideweaver",
["npcID"] = 146552,
},
[393811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maiden of Diligence",
["npcID"] = 192718,
},
[387668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Crag",
["npcID"] = 195243,
},
[397907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baalgar the Watchful",
["npcID"] = 104274,
},
[323058] = {
["source"] = "Salvage Dredger",
["event"] = "SPELL_CAST_START",
["npcID"] = 165609,
},
[393812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirglgurgl",
["npcID"] = 188860,
},
[395860] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Black Gulper",
["npcID"] = 195975,
},
[382303] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[150848] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood-Branded Razorfen",
["npcID"] = 74553,
},
[101223] = {
["encounterName"] = "Alysrazor",
["source"] = "Blazing Talon Initiate",
["encounterID"] = 1206,
["event"] = "SPELL_CAST_START",
["npcID"] = 53369,
},
[387670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qu'ruk the Time-Lost",
["npcID"] = 195322,
},
[428472] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ancient Core Hound",
["npcID"] = 210295,
},
[375384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthshaker",
["npcID"] = 190371,
},
[369241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Flame Harchek",
["npcID"] = 191476,
},
[59734] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2025,
},
[307809] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[150849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Huntmaster",
["npcID"] = 74552,
},
[328287] = {
["source"] = "Honored Duelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 165265,
},
[287333] = {
["encounterName"] = "King Rastakhan",
["source"] = "Bwonsamdi",
["npcID"] = 145644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[40536] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Akama",
["npcID"] = 23089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[197696] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98696,
},
[361052] = {
["source"] = "Engorged Annelid",
["event"] = "SPELL_CAST_START",
["npcID"] = 180722,
},
[421398] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[381530] = {
["source"] = "Nokhud Thunderfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 193373,
},
[150658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kraulshaper Tukaar",
["npcID"] = 74900,
},
[377435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Geomancer",
["npcID"] = 187265,
},
[114021] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["encounterID"] = 1422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59303,
},
[58966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Battle Rider",
["npcID"] = 29836,
},
[375388] = {
["source"] = "Primal Watercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190995,
},
[51287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Y'kish the Deceiver",
["npcID"] = 81266,
},
[297574] = {
["encounterName"] = "Oblivion Elemental",
["source"] = "Oblivion Elemental",
["npcID"] = 153244,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2372,
},
[397914] = {
["source"] = "Depraved Mistweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200137,
},
[427727] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[107175] = {
["isChanneled"] = true,
["source"] = "Aqua Dancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56867,
},
[161090] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["npcID"] = 77816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[252215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Cultist",
["npcID"] = 138274,
},
[253239] = {
["source"] = "Dazar'ai Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 122971,
},
[392539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Terrasentry",
["npcID"] = 197801,
},
[428077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[389725] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[134470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bow Fly Swarm",
["npcID"] = 68222,
},
[270956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disciple of Jan'alai",
["npcID"] = 120950,
},
[31405] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[381535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Protector",
["npcID"] = 186849,
},
[91263] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["encounterID"] = 1052,
["event"] = "SPELL_CAST_START",
["npcID"] = 44577,
},
[427885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[148805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bladespire Raider",
["npcID"] = 80172,
},
[9232] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 209254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 450,
},
[32173] = {
["source"] = "Coilfang Enchantress",
["event"] = "SPELL_CAST_START",
["npcID"] = 17961,
},
[413023] = {
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 205152,
},
[395871] = {
["source"] = "Qalashi Stonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 187600,
},
[56919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Walden",
["npcID"] = 45879,
},
[12248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[32858] = {
["source"] = "Auchenai Soulpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 18493,
},
[395872] = {
["source"] = "The Talking Fish",
["event"] = "SPELL_CAST_START",
["npcID"] = 59546,
},
[426524] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["npcID"] = 208459,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[421570] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[136521] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69078,
},
[421400] = {
["source"] = "Djaradin Spear",
["event"] = "SPELL_CAST_START",
["npcID"] = 209973,
},
[414303] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[149186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Grunt",
["npcID"] = 82047,
},
[312674] = {
["source"] = "Necromantic Scourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 161388,
},
[387683] = {
["source"] = "Rimebound Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200758,
},
[387192] = {
["source"] = "Djaradin Hammer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209831,
},
[395642] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[140619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Burrower",
["npcID"] = 70589,
},
[387684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Spire",
["npcID"] = 195348,
},
[49241] = {
["source"] = "Ruby Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 27542,
},
[277106] = {
["source"] = "Professor Gastrinax",
["event"] = "SPELL_CAST_START",
["npcID"] = 203521,
},
[131402] = {
["source"] = "Twinspire Deathguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 66272,
},
[429615] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[142667] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hungry Kunchong",
["npcID"] = 71420,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[200002] = {
["source"] = "Bastillax",
["event"] = "SPELL_CAST_START",
["npcID"] = 96783,
},
[377447] = {
["source"] = "Obsidian Wingguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 192220,
},
[413012] = {
["source"] = "Shadow Additive",
["event"] = "SPELL_CAST_START",
["npcID"] = 205671,
},
[414307] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[301681] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechagon Cavalry",
["npcID"] = 150292,
},
[102569] = {
["encounterName"] = "Murozond",
["source"] = "Murozond",
["npcID"] = 54432,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1271,
},
[395878] = {
["source"] = "The Talking Fish",
["event"] = "SPELL_CAST_START",
["npcID"] = 59546,
},
[173384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Clefthoof",
["npcID"] = 83392,
},
[167239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Deadeye",
["npcID"] = 83028,
},
[421402] = {
["source"] = "Primalist Pyremancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209963,
},
[371306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[365168] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Sentry",
["npcID"] = 184530,
},
[396629] = {
["source"] = "Territorial Coastling",
["event"] = "SPELL_CAST_START",
["npcID"] = 193163,
},
[164168] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Overseer",
["npcID"] = 81212,
},
[412262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Rocketeer",
["npcID"] = 205727,
},
[271716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Bedrock",
["npcID"] = 137906,
},
[167240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Deadeye",
["npcID"] = 83028,
},
[367215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toadious",
["npcID"] = 184395,
},
[274631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironhull Apprentice",
["npcID"] = 139799,
},
[406120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Tyr",
["npcID"] = 198982,
},
[146763] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Flameslinger",
["npcID"] = 72353,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[149184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Grunt",
["npcID"] = 82047,
},
[140620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Growth",
["npcID"] = 70153,
},
[21807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wily Woodling",
["npcID"] = 61155,
},
[142668] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 71156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[213688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Lord",
["npcID"] = 107024,
},
[155327] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["npcID"] = 76177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1685,
},
[397931] = {
["source"] = "Minion of Doubt",
["event"] = "SPELL_CAST_START",
["npcID"] = 57109,
},
[285305] = {
["source"] = "Kul Tiran Tideweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 146552,
},
[249919] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[391791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Deluge",
["npcID"] = 197220,
},
[124072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Gustwing",
["npcID"] = 63592,
},
[268924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathor Arbalest",
["npcID"] = 142733,
},
[37979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Healer",
["npcID"] = 17730,
},
[361815] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["npcID"] = 181954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[194887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Wormhook",
["npcID"] = 95013,
},
[391790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismic Stomps",
["npcID"] = 197829,
},
[320067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Masked Faerie",
["npcID"] = 160293,
},
[436841] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[225313] = {
["source"] = "Dark Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 101106,
},
[200007] = {
["source"] = "Bastillax",
["event"] = "SPELL_CAST_START",
["npcID"] = 96783,
},
[135503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidesage Defector",
["npcID"] = 152301,
},
[313977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Watcher",
["npcID"] = 161173,
},
[271841] = {
["source"] = "Imperial Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 157002,
},
[261440] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["npcID"] = 131527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[32860] = {
["source"] = "Auchenai Soulpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 18493,
},
[271713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azerite Leviathan",
["npcID"] = 152572,
},
[385652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Crag",
["npcID"] = 195243,
},
[391793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Deluge",
["npcID"] = 197220,
},
[393841] = {
["source"] = "Web-Queen Ashkaz",
["event"] = "SPELL_CAST_START",
["npcID"] = 192983,
},
[363130] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["npcID"] = 182169,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2539,
},
[373364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gerenth the Vile",
["npcID"] = 107435,
},
[285311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Stormbringer",
["npcID"] = 146831,
},
[131409] = {
["source"] = "Twinspire Demolitionist",
["event"] = "SPELL_CAST_START",
["npcID"] = 66273,
},
[197961] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[428082] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[399987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[410225] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[394591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tombcaller Arban",
["npcID"] = 190047,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[146768] = {
["encounterName"] = "Galakras",
["source"] = "Lady Sylvanas Windrunner",
["npcID"] = 72561,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[270979] = {
["source"] = "Briarwood Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 131373,
},
[265568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Befouled Spirit",
["npcID"] = 133685,
},
[106851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stout Brew Alemental",
["npcID"] = 59519,
},
[427992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[285319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Stormbringer",
["npcID"] = 146831,
},
[412275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Reykal",
["npcID"] = 203355,
},
[162127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimfrost Drudge",
["npcID"] = 72955,
},
[391798] = {
["source"] = "Rebel Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195062,
},
[102573] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[140626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Growth",
["npcID"] = 70153,
},
[410234] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[391799] = {
["source"] = "Morlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 201549,
},
[402766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Sentinel",
["npcID"] = 203616,
},
[384336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Plainstomper",
["npcID"] = 191847,
},
[309894] = {
["source"] = "Voidtender Malketh",
["event"] = "SPELL_CAST_START",
["npcID"] = 154332,
},
[152917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solar Magnifier",
["npcID"] = 77559,
},
[414330] = {
["encounterName"] = "Iridikron",
["source"] = "Chromie",
["encounterID"] = 2669,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204449,
},
[140630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Guardian",
["npcID"] = 70586,
},
[200720] = {
["source"] = "Soul Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 101753,
},
[367228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugated Colossus",
["npcID"] = 184767,
},
[135508] = {
["source"] = "Alliance Rootshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 68821,
},
[375422] = {
["source"] = "Riverbend Gnasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 189337,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[375420] = {
["source"] = "Riverbend Chomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190886,
},
[288301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrande Whisperwind",
["npcID"] = 146989,
},
[140628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Guardian",
["npcID"] = 70586,
},
[204666] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[223923] = {
["source"] = "Corrupted Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 112474,
},
[442997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215597,
},
[395899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Chillblaster",
["npcID"] = 199124,
},
[289420] = {
["source"] = "Kal'ia Pa'kuaya",
["event"] = "SPELL_CAST_START",
["npcID"] = 148607,
},
[261446] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2116,
},
[361088] = {
["source"] = "Cartel Xy Plunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 182378,
},
[140629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Guardian",
["npcID"] = 70586,
},
[99503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Wielder",
["npcID"] = 53575,
},
[100015] = {
["source"] = "Void-Twisted Spellweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 152135,
},
[201038] = {
["source"] = "Kethrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 96997,
},
[412283] = {
["source"] = "Alcanon",
["event"] = "SPELL_CAST_START",
["npcID"] = 203515,
},
[365185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Sentinel",
["npcID"] = 184659,
},
[146773] = {
["encounterName"] = "Galakras",
["source"] = "Master Cannoneer Dagryn",
["npcID"] = 72356,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[410236] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2672,
},
[412284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Reykal",
["npcID"] = 203355,
},
[119981] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["npcID"] = 61444,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[183633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockbound Pelter",
["npcID"] = 91008,
},
[201039] = {
["source"] = "Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 97044,
},
[420476] = {
["source"] = "Crustbreaker Conduit",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[403201] = {
["source"] = "Ishyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200579,
},
[179538] = {
["source"] = "Hatecoil Spitespeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 89025,
},
[41053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Champion",
["npcID"] = 22880,
},
[157013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Eagle-Eye",
["npcID"] = 78806,
},
[381570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Protector",
["npcID"] = 186849,
},
[130911] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[420478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deceiver Hr'qoth",
["npcID"] = 206784,
},
[260425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muddy Riverbeast",
["npcID"] = 130757,
},
[124854] = {
["source"] = "Sele'na",
["event"] = "SPELL_CAST_START",
["npcID"] = 50766,
},
[118958] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kargesh Ribcrusher",
["npcID"] = 61242,
},
[111668] = {
["source"] = "Raigonn",
["event"] = "SPELL_CAST_START",
["npcID"] = 56877,
},
[423410] = {
["source"] = "Lethka",
["event"] = "SPELL_CAST_START",
["npcID"] = 208740,
},
[408193] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[393859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bustled Beetle",
["npcID"] = 193705,
},
[120160] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["npcID"] = 61445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[145752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spike Mine",
["npcID"] = 72656,
},
[146776] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Proto-Drake",
["npcID"] = 72943,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1622,
},
[372045] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Caustic Spiderling",
["npcID"] = 189233,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[395908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Icebulk",
["npcID"] = 192767,
},
[172728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Creeping Vine",
["npcID"] = 85538,
},
[421340] = {
["source"] = "The Anvil",
["event"] = "SPELL_CAST_START",
["npcID"] = 206478,
},
[415047] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[256222] = {
["source"] = "Gentle Goat",
["event"] = "SPELL_CAST_START",
["npcID"] = 129110,
},
[381575] = {
["source"] = "Rustpine Immolator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187396,
},
[427333] = {
["source"] = "Rydra Scalegorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 209048,
},
[196947] = {
["encounterName"] = "Helya",
["source"] = "Helya",
["encounterID"] = 1824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96759,
},
[387719] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Water Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 191790,
},
[6605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plaguebat",
["npcID"] = 8600,
},
[120495] = {
["source"] = "Agitated Seedstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61302,
},
[337556] = {
["source"] = "Unbreakable Urtz",
["event"] = "SPELL_CAST_START",
["npcID"] = 162853,
},
[173751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malkor",
["npcID"] = 83452,
},
[402759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Crusher",
["npcID"] = 202284,
},
[212031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Energy",
["npcID"] = 105705,
},
[32863] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[420485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deceiver Hr'qoth",
["npcID"] = 206784,
},
[415045] = {
["source"] = "Nixke Voltscroll",
["event"] = "SPELL_CAST_START",
["npcID"] = 200965,
},
[424581] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[388424] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[394567] = {
["source"] = "Gillidan",
["event"] = "SPELL_CAST_START",
["npcID"] = 205036,
},
[58972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Fire Weaver",
["npcID"] = 29822,
},
[285335] = {
["source"] = "Coldheart Javelineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 185221,
},
[408901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Contaminant",
["npcID"] = 202270,
},
[420487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deceiver Hr'qoth",
["npcID"] = 206784,
},
[381580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Brawler",
["npcID"] = 203620,
},
[411763] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 205212,
},
[410249] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[393864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trap-Layer Kerwal",
["npcID"] = 186516,
},
[270334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Breacher",
["npcID"] = 209821,
},
[294226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ma'haat the Indomitable",
["npcID"] = 151739,
},
[377486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Agent",
["npcID"] = 184335,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 100485,
},
[381582] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[391821] = {
["source"] = "Rimebound Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200758,
},
[210261] = {
["source"] = "Duskwatch Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 104251,
},
[420490] = {
["source"] = "Crustbreaker Conduit",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[373392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Hornsounder",
["npcID"] = 192796,
},
[31664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Gargoyle",
["npcID"] = 27691,
},
[164187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Bombardier",
["npcID"] = 81407,
},
[157020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blinding Solar Flare",
["npcID"] = 79462,
},
[251683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imp Mother Laglath",
["npcID"] = 125820,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["event"] = "SPELL_CAST_START",
["npcID"] = 43875,
},
[420495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deceiver Hr'qoth",
["npcID"] = 206784,
},
[406851] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[260432] = {
["source"] = "Dark Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 125136,
},
[196944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balnazzar",
["npcID"] = 90981,
},
[131424] = {
["source"] = "Dalgan",
["event"] = "SPELL_CAST_START",
["npcID"] = 66274,
},
[387729] = {
["source"] = "Goopal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203477,
},
[373395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Batak",
["npcID"] = 193462,
},
[391825] = {
["source"] = "Shiobhan Waterborn",
["event"] = "SPELL_CAST_START",
["npcID"] = 201559,
},
[279199] = {
["source"] = "Scarlet Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 211937,
},
[84662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korok the Colossus",
["npcID"] = 45301,
},
[58973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God Hunter",
["npcID"] = 29820,
},
[394843] = {
["source"] = "Oshigol",
["event"] = "SPELL_CAST_START",
["npcID"] = 193235,
},
[284362] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Brother Joseph",
["npcID"] = 146253,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[165213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Tender",
["npcID"] = 81985,
},
[8858] = {
["source"] = "Dark Iron Geologist",
["event"] = "SPELL_CAST_START",
["npcID"] = 5839,
},
[150879] = {
["encounterName"] = "Hunter Bonetusk",
["source"] = "Hunter Bonetusk",
["npcID"] = 75001,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1656,
},
[143712] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["npcID"] = 71697,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[387732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Titan Defense Matrix",
["npcID"] = 193244,
},
[382277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[375446] = {
["source"] = "Sunhide Stomphoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 190953,
},
[418449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Claw",
["npcID"] = 210684,
},
[427899] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82682,
},
[289421] = {
["source"] = "Echo of Pa'ku",
["event"] = "SPELL_CAST_START",
["npcID"] = 148624,
},
[285346] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["npcID"] = 145616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[146786] = {
["encounterName"] = "Galakras",
["source"] = "Archmage Aethas Sunreaver",
["npcID"] = 73909,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[330397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blistering Inquisitor",
["npcID"] = 160345,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["npcID"] = 29573,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[164192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Technician",
["npcID"] = 81236,
},
[118963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glintrok Skulker",
["npcID"] = 61240,
},
[393385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chalsec of the Earth",
["npcID"] = 193847,
},
[406165] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[200027] = {
["isChanneled"] = true,
["source"] = "Bastillax",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96783,
},
[426643] = {
["source"] = "The Abominable Greench",
["event"] = "SPELL_CAST_START",
["npcID"] = 54499,
},
[428695] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[381593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebonstone Golem",
["npcID"] = 184300,
},
[122547] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[41056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yorus the Flesh Harvester",
["npcID"] = 24214,
},
[420501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Primalist",
["npcID"] = 209200,
},
[306828] = {
["encounterName"] = "Thrall the Corrupted",
["source"] = "Thrall",
["npcID"] = 152089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2332,
},
[201033] = {
["source"] = "Kethrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 96997,
},
[426645] = {
["source"] = "Naz'jar Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 212673,
},
[136548] = {
["encounterName"] = "Lei Shen",
["source"] = "Ball Lightning",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 69232,
},
[275112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blisterhide",
["npcID"] = 197353,
},
[22695] = {
["source"] = "Growing Squashling",
["event"] = "SPELL_CAST_START",
["npcID"] = 96545,
},
[377500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Agent",
["npcID"] = 184335,
},
[428674] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 40792,
},
[373405] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[301734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Enforcer",
["npcID"] = 153068,
},
[417634] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[412313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberdusk",
["npcID"] = 203664,
},
[298894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Scraphound",
["npcID"] = 151301,
},
[404896] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[377502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffdrip Fallstriker",
["npcID"] = 189815,
},
[147516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eroded Cliffdweller",
["npcID"] = 72809,
},
[417752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Mechagon",
["npcID"] = 205309,
},
[391837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Warden",
["npcID"] = 191252,
},
[377503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[202661] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Fel Scorcher",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 102583,
},
[406083] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flesh Spawn",
["npcID"] = 203338,
},
[410254] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[11802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Agent",
["npcID"] = 6212,
},
[395934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 197119,
},
[87225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ambermill Witchalok",
["npcID"] = 1889,
},
[375457] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191222,
},
[377505] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[55098] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["npcID"] = 29305,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1980,
},
[420509] = {
["source"] = "Flamesworn Infernomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210503,
},
[415373] = {
["source"] = "Great Glorious Alliance Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 207578,
},
[394558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Flame",
["npcID"] = 198577,
},
[165220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Brak",
["npcID"] = 81254,
},
[124085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Zephyrian",
["npcID"] = 63593,
},
[375459] = {
["source"] = "Thunderspine Rumbler",
["event"] = "SPELL_CAST_START",
["npcID"] = 192941,
},
[202913] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["event"] = "SPELL_CAST_START",
["npcID"] = 95885,
},
[120502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandfury Speaker",
["npcID"] = 130242,
},
[153268] = {
["source"] = "Shadowmoon Exhumer",
["event"] = "SPELL_CAST_START",
["npcID"] = 77700,
},
[383651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[397096] = {
["source"] = "Malsegan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193212,
},
[12890] = {
["encounterName"] = "Shade of Eranikus",
["source"] = "Shade of Eranikus",
["npcID"] = 5709,
["event"] = "SPELL_CAST_START",
["encounterID"] = 493,
},
[174436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Shadowblade",
["npcID"] = 75753,
},
[17843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[59359] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'ar Venomancer",
["npcID"] = 29217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1973,
},
[395939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clearwater Bull",
["npcID"] = 192652,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[365888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Eradicator",
["npcID"] = 184879,
},
[147817] = {
["source"] = "Crimsonscale Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 72876,
},
[342462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion of Humility",
["npcID"] = 170836,
},
[423775] = {
["source"] = "Amerinth",
["event"] = "SPELL_CAST_START",
["npcID"] = 210675,
},
[387711] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enraged Watcher",
["npcID"] = 200407,
},
[299431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Scraphound",
["npcID"] = 151301,
},
[395941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clearwater Bull",
["npcID"] = 192652,
},
[114872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[408228] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[393894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nezascar the Sightless",
["npcID"] = 196535,
},
[359743] = {
["source"] = "Malfunctioned Constructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 181870,
},
[199341] = {
["encounterName"] = "Fenryr",
["source"] = "Valarjar Trapper",
["npcID"] = 96934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[417763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Mechagon",
["npcID"] = 205309,
},
[300972] = {
["source"] = "Boggac Skullbash",
["event"] = "SPELL_CAST_START",
["npcID"] = 151308,
},
[314033] = {
["event"] = "SPELL_CAST_START",
["source"] = "K'thir Doomsayer",
["npcID"] = 156572,
},
[406182] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corruptor Tentacle",
["npcID"] = 203338,
},
[378886] = {
["source"] = "Turi Flickerflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199740,
},
[147818] = {
["source"] = "Crimsonscale Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 72876,
},
[169277] = {
["source"] = "Sargerei Destructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 84337,
},
[406183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krono Sandtongue",
["npcID"] = 205622,
},
[391849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Magma",
["npcID"] = 195330,
},
[409018] = {
["source"] = "Failed Prototype",
["event"] = "SPELL_CAST_START",
["npcID"] = 203927,
},
[319465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ambitious Duelist",
["npcID"] = 164184,
},
[211299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watchful Inquisitor",
["npcID"] = 105715,
},
[85692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard",
["npcID"] = 11859,
},
[298898] = {
["encounterName"] = "Trixie & Naeno",
["source"] = "Naeno Megacrash",
["npcID"] = 153755,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2312,
},
[395946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 197119,
},
[111801] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["npcID"] = 58822,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[424615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Cassaphine",
["npcID"] = 206818,
},
[426663] = {
["isChanneled"] = true,
["source"] = "Vicious Snap Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212681,
},
[395947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 197124,
},
[389804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[155909] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slavemaster Ok'mok",
["npcID"] = 75864,
},
[114873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[412330] = {
["source"] = "Malrogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 202606,
},
[107357] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56884,
},
[250208] = {
["source"] = "Snapshell Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 152384,
},
[369328] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Runic Protector",
["npcID"] = 184107,
},
[288281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Maliyra",
["npcID"] = 146458,
},
[373424] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[162500] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["npcID"] = 77803,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[147652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stalker",
["npcID"] = 72805,
},
[323048] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blistering Inquisitor",
["npcID"] = 160345,
},
[377522] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Raging Ember",
["npcID"] = 192464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2611,
},
[391855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmatalon",
["npcID"] = 189538,
},
[418476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidan Stormrage",
["npcID"] = 205306,
},
[428103] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Frost Witch",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 44404,
},
[419975] = {
["source"] = "Splinterlimb",
["event"] = "SPELL_CAST_START",
["npcID"] = 209365,
},
[138607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani'shi Flame Chanter",
["npcID"] = 69909,
},
[114874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[395952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonecrusher",
["npcID"] = 197125,
},
[221357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cannoneer Dargal",
["npcID"] = 110635,
},
[375475] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191222,
},
[418478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Claw",
["npcID"] = 210684,
},
[202088] = {
["encounterName"] = "Helya",
["source"] = "Helya",
["encounterID"] = 1824,
["event"] = "SPELL_CAST_START",
["npcID"] = 96759,
},
[162157] = {
["source"] = "Dorogg the Ruthless",
["event"] = "SPELL_CAST_START",
["npcID"] = 74254,
},
[384474] = {
["source"] = "Fathomless Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 209580,
},
[200898] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 96015,
},
[389040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[400057] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepstrider Matriarch",
["npcID"] = 203727,
},
[397094] = {
["source"] = "Malsegan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193212,
},
[407122] = {
["source"] = "Horde Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 203857,
},
[107356] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56884,
},
[316093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zuythiz",
["npcID"] = 162141,
},
[138609] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["npcID"] = 69699,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[369335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Protector",
["npcID"] = 184107,
},
[371383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hailbringer Theurgist",
["npcID"] = 189229,
},
[88186] = {
["source"] = "Empyrean Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 45922,
},
[400052] = {
["source"] = "Swooping Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 199809,
},
[376829] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[395957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[315900] = {
["source"] = "Captain Dunewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 162171,
},
[421672] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[12549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparktouched Oracle",
["npcID"] = 28112,
},
[148849] = {
["encounterName"] = "Galakras",
["source"] = "Archmage Aethas Sunreaver",
["npcID"] = 73909,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[420428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deceiver Hr'qoth",
["npcID"] = 206784,
},
[367290] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[266106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Bloodswarmer",
["npcID"] = 133835,
},
[264903] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Aqu'sirr",
["npcID"] = 134056,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2130,
},
[65301] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[400055] = {
["source"] = "Scavenging Slicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203384,
},
[147826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huolon",
["npcID"] = 73167,
},
[34661] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Thorngrin the Tender",
["npcID"] = 17978,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1928,
},
[417227] = {
["source"] = "Blood Horde Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 207585,
},
[159089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberbark Ancient",
["npcID"] = 82284,
},
[411589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jalgon Stoutburn",
["npcID"] = 204426,
},
[196591] = {
["source"] = "Coldscale Gazecrawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 108185,
},
[117948] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Qiang the Merciless",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60709,
},
[391866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Putrifier",
["npcID"] = 192057,
},
[377532] = {
["source"] = "Thunderspine Crasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 191057,
},
[424227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of the Moon",
["npcID"] = 211076,
},
[359733] = {
["source"] = "Cipherclad",
["event"] = "SPELL_CAST_START",
["npcID"] = 181349,
},
[375485] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191230,
},
[417868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Claw",
["npcID"] = 210684,
},
[391856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tenmod",
["npcID"] = 194763,
},
[12039] = {
["encounterName"] = "Watchkeeper Gargolmar",
["source"] = "Hellfire Watcher",
["encounterID"] = 1893,
["event"] = "SPELL_CAST_START",
["npcID"] = 17309,
},
[30643] = {
["encounterName"] = "Watchkeeper Gargolmar",
["source"] = "Hellfire Watcher",
["encounterID"] = 1893,
["event"] = "SPELL_CAST_START",
["npcID"] = 17309,
},
[419274] = {
["source"] = "Ashbound Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 207952,
},
[157043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Ritualist",
["npcID"] = 77130,
},
[414394] = {
["source"] = "Nixke Voltscroll",
["event"] = "SPELL_CAST_START",
["npcID"] = 200965,
},
[167282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneseer Cold-Eye",
["npcID"] = 88361,
},
[374066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Geomancer",
["npcID"] = 190345,
},
[404178] = {
["source"] = "Veltrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 200904,
},
[32346] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["encounterID"] = 1889,
["event"] = "SPELL_CAST_START",
["npcID"] = 18373,
},
[391870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Basilisk",
["npcID"] = 191696,
},
[420525] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["npcID"] = 208363,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[59433] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["npcID"] = 29120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1973,
},
[15982] = {
["encounterName"] = "Antu'sul",
["source"] = "Antu'sul",
["npcID"] = 8127,
["event"] = "SPELL_CAST_START",
["encounterID"] = 595,
},
[79554] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Kor'kron Provisioner",
["npcID"] = 72411,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[80066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zephyrus",
["npcID"] = 49263,
},
[395967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Hyena",
["npcID"] = 197123,
},
[174912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skothwa",
["npcID"] = 79500,
},
[400063] = {
["source"] = "Pesky Sporemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 202625,
},
[426684] = {
["source"] = "Naz'jar Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 212673,
},
[325802] = {
["source"] = "Keeneye Bowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 166936,
},
[133496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldwall Rifleman",
["npcID"] = 67297,
},
[6254] = {
["encounterName"] = "Skum",
["source"] = "Skum",
["encounterID"] = 589,
["event"] = "SPELL_CAST_START",
["npcID"] = 3674,
},
[406058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tentacle",
["npcID"] = 203406,
},
[194611] = {
["source"] = "Shadow Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 98926,
},
[153974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Iron Leadbelcher",
["npcID"] = 76157,
},
[311399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armsmaster Terenson",
["npcID"] = 156949,
},
[196977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balnazzar",
["npcID"] = 90981,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[406209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Han'thul",
["npcID"] = 198914,
},
[400066] = {
["source"] = "Preying Dustmoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 201068,
},
[200050] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[289488] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[406210] = {
["source"] = "Sundered Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201746,
},
[404779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Investigator",
["npcID"] = 202320,
},
[199915] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99651,
},
[17274] = {
["source"] = "Injured Warsong Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 27107,
},
[174453] = {
["source"] = "Invasive Razorwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 131558,
},
[150904] = {
["encounterName"] = "Hunter Bonetusk",
["source"] = "Hunter Bonetusk",
["npcID"] = 75001,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1656,
},
[388897] = {
["source"] = "Scavenging Pincher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200949,
},
[118297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Fire Elemental",
["npcID"] = 61029,
},
[365257] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Guardian Automa",
["npcID"] = 182071,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2539,
},
[268233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Elemental",
["npcID"] = 136249,
},
[196787] = {
["source"] = "Fel-Infused Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 99956,
},
[119487] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 60491,
},
[398634] = {
["source"] = "Irontide Deadshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 203914,
},
[334542] = {
["source"] = "Arch-Suppressor Laguas",
["event"] = "SPELL_CAST_START",
["npcID"] = 185019,
},
[35943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Acolyte",
["npcID"] = 16594,
},
[264923] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[145786] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zar'thik Amber Priest",
["npcID"] = 71397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[369359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Proto-Drake",
["npcID"] = 194200,
},
[289497] = {
["source"] = "Dark Iron Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 146371,
},
[157049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'tash the Destructor",
["npcID"] = 77889,
},
[406215] = {
["source"] = "Sandy Crocolisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 199196,
},
[59347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anub'ar Crypt Fiend",
["npcID"] = 29063,
},
[316996] = {
["source"] = "Sun Prophet Tenhamen",
["event"] = "SPELL_CAST_START",
["npcID"] = 154727,
},
[152954] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["npcID"] = 75839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1686,
},
[29492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Guest",
["npcID"] = 16409,
},
[424646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flametouched Enforcer",
["npcID"] = 210150,
},
[204905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99676,
},
[412360] = {
["source"] = "Spinmarrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 203480,
},
[361169] = {
["source"] = "Antros",
["event"] = "SPELL_CAST_START",
["npcID"] = 182466,
},
[311116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiked Tentacle",
["npcID"] = 159416,
},
[303830] = {
["source"] = "Warlord Zalzjar",
["event"] = "SPELL_CAST_START",
["npcID"] = 155840,
},
[289496] = {
["encounterName"] = "Champion of the Light",
["source"] = "Dark Iron Primalist",
["encounterID"] = 2265,
["event"] = "SPELL_CAST_START",
["npcID"] = 146371,
},
[106841] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[383693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Beastmaster",
["npcID"] = 192794,
},
[164218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Bombardier",
["npcID"] = 81407,
},
[404171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[332500] = {
["source"] = "Fathomless Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 209580,
},
[381585] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[84165] = {
["source"] = "Tempered War Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 5853,
},
[289498] = {
["encounterName"] = "Champion of the Light",
["source"] = "Dark Iron Primalist",
["encounterID"] = 2265,
["event"] = "SPELL_CAST_START",
["npcID"] = 146371,
},
[162171] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["npcID"] = 77803,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[400077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplung Glowsplasher",
["npcID"] = 204013,
},
[398631] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 200852,
},
[166205] = {
["source"] = "Bloodmaul Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 77995,
},
[401297] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[400078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplung Glowsplasher",
["npcID"] = 204013,
},
[384296] = {
["source"] = "Mara'nar the Thunderous",
["event"] = "SPELL_CAST_START",
["npcID"] = 196913,
},
[194545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 144913,
},
[8142] = {
["encounterName"] = "Verdan the Everliving",
["source"] = "Verdan the Everliving",
["encounterID"] = 591,
["event"] = "SPELL_CAST_START",
["npcID"] = 5775,
},
[384868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[161150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Grenadier",
["npcID"] = 80936,
},
[412366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterrax",
["npcID"] = 203662,
},
[369365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Warder",
["npcID"] = 184132,
},
[411700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Tidehunter",
["npcID"] = 205365,
},
[214004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mage",
["npcID"] = 97587,
},
[330457] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jovraal",
["npcID"] = 161271,
},
[422606] = {
["source"] = "Volgoth The Flamebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209129,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["npcID"] = 29307,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[279264] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Scout",
["npcID"] = 205892,
},
[86726] = {
["encounterName"] = "Randolph Moloch",
["source"] = "Randolph Moloch",
["encounterID"] = 1146,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46383,
},
[422611] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[274400] = {
["source"] = "Cutwater Duelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 129559,
},
[328411] = {
["source"] = "Lady Audat",
["event"] = "SPELL_CAST_START",
["npcID"] = 185123,
},
[395987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jumping Spiderling",
["npcID"] = 199182,
},
[260466] = {
["source"] = "Shadow of the Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 132090,
},
[309982] = {
["source"] = "Voidtender Malketh",
["event"] = "SPELL_CAST_START",
["npcID"] = 154332,
},
[309961] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Il'gynoth",
["encounterID"] = 2345,
["event"] = "SPELL_CAST_START",
["npcID"] = 158328,
},
[100549] = {
["source"] = "Unstable Magma",
["event"] = "SPELL_CAST_START",
["npcID"] = 53901,
},
[406227] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[392484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moskhoi",
["npcID"] = 195093,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[412371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[422610] = {
["source"] = "Tithris",
["event"] = "SPELL_CAST_START",
["npcID"] = 210674,
},
[171390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volatile Fire Spirit",
["npcID"] = 80380,
},
[328414] = {
["source"] = "Royal Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 165270,
},
[152962] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["encounterID"] = 1688,
["event"] = "SPELL_CAST_START",
["npcID"] = 75829,
},
[307937] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["encounterID"] = 2334,
["event"] = "SPELL_CAST_START",
["npcID"] = 157238,
},
[422614] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[143746] = {
["encounterName"] = "Fallen Protectors",
["event"] = "SPELL_CAST_START",
["source"] = "Embodied Despair",
["npcID"] = 71474,
},
[395991] = {
["source"] = "Awakened Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 191129,
},
[56934] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26731,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[59147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[17883] = {
["source"] = "Coilfang Observer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17938,
},
[313400] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Corruptor Tentacle",
["npcID"] = 158375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[406231] = {
["source"] = "Lingering Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201758,
},
[257397] = {
["source"] = "Irontide Bonesaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 129788,
},
[306874] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Crackling Stalker",
["npcID"] = 157365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2331,
},
[314083] = {
["source"] = "Crazed Huojin Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 159335,
},
[381659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade",
["npcID"] = 186962,
},
[391898] = {
["source"] = "Failed Scalecommander Haerothal",
["event"] = "SPELL_CAST_START",
["npcID"] = 201822,
},
[229753] = {
["isChanneled"] = true,
["source"] = "Felsworn Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 115273,
},
[289511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Char'golm",
["npcID"] = 146367,
},
[111813] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["npcID"] = 58822,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[199652] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Haldor",
["npcID"] = 95843,
},
[128708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Brew Alemental",
["npcID"] = 59521,
},
[289512] = {
["source"] = "Char'golm",
["event"] = "SPELL_CAST_START",
["npcID"] = 146367,
},
[194942] = {
["encounterName"] = "Glazer",
["source"] = "Glazer",
["encounterID"] = 1817,
["event"] = "SPELL_CAST_START",
["npcID"] = 95887,
},
[318181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vyrm the Ravenous",
["npcID"] = 158179,
},
[385757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mender Eskros",
["npcID"] = 195303,
},
[412378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Timebender",
["npcID"] = 205337,
},
[158083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adorned Bladetalon",
["npcID"] = 79303,
},
[366326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foul Controller",
["npcID"] = 183497,
},
[46184] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["npcID"] = 24556,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[404188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Static Charge",
["npcID"] = 202847,
},
[381663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Blazewing",
["npcID"] = 193291,
},
[171394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liquid Life",
["npcID"] = 81942,
},
[395163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gethdazr",
["npcID"] = 196165,
},
[428762] = {
["source"] = "Shado-Pan Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 162931,
},
[418469] = {
["source"] = "Minion of Deathwingurlugull",
["event"] = "SPELL_CAST_START",
["npcID"] = 205037,
},
[391903] = {
["source"] = "Ruby Egg Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 190171,
},
[417640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Touched Shu'halo",
["npcID"] = 206182,
},
[289516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Char'golm",
["npcID"] = 146367,
},
[56935] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26731,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[214988] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[151566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Magma Binder",
["npcID"] = 74349,
},
[322281] = {
["source"] = "Sparring Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 159505,
},
[353573] = {
["source"] = "Vil'thras",
["event"] = "SPELL_CAST_START",
["npcID"] = 185110,
},
[55633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Golem",
["npcID"] = 29832,
},
[296372] = {
["source"] = "Subjugator Klontzas",
["event"] = "SPELL_CAST_START",
["npcID"] = 152612,
},
[396001] = {
["source"] = "The Songbird Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59553,
},
[59146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God Hunter",
["npcID"] = 29820,
},
[200551] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[83877] = {
["source"] = "Oathsworn Wanderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 44926,
},
[64174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hodir",
["npcID"] = 33411,
},
[373477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Shoresnapper",
["npcID"] = 190193,
},
[257402] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[418528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidan Stormrage",
["npcID"] = 205306,
},
[281329] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Jolly",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126845,
},
[388383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskaara Defender",
["npcID"] = 186478,
},
[83926] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 44715,
},
[223933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Violetsail Bruisebringer",
["npcID"] = 179737,
},
[418531] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[76634] = {
["source"] = "Tainted Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 40925,
},
[140682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mist Lurker",
["npcID"] = 70594,
},
[46185] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["npcID"] = 24556,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1895,
},
[396005] = {
["isChanneled"] = true,
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198424,
},
[332525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kyrian Goliath",
["npcID"] = 171396,
},
[260072] = {
["source"] = "Pa'kura Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131834,
},
[102601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Suppressor",
["npcID"] = 54920,
},
[412388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[332526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kyrian Goliath",
["npcID"] = 171396,
},
[120519] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[370225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Whelp",
["npcID"] = 187159,
},
[396007] = {
["source"] = "The Songbird Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59553,
},
[30937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Channeler",
["npcID"] = 17653,
},
[417683] = {
["source"] = "Fury of N'zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 205307,
},
[303563] = {
["source"] = "Lesser Zoatroid",
["event"] = "SPELL_CAST_START",
["npcID"] = 152067,
},
[299746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waveblade Shaman",
["npcID"] = 154304,
},
[99530] = {
["source"] = "Molten Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 53115,
},
[50025] = {
["source"] = "Catapult",
["event"] = "SPELL_CAST_START",
["npcID"] = 34793,
},
[426725] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[79884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Instructor Rufus",
["npcID"] = 48922,
},
[117960] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60410,
},
[42772] = {
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[79913] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Marstone",
["npcID"] = 45995,
},
[351976] = {
["source"] = "Torment Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 176598,
},
[256382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mountain Greatstag",
["npcID"] = 127806,
},
[391915] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shapemaster Za'lani",
["npcID"] = 201545,
},
[196808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mo'arg Brutalizer",
["npcID"] = 95984,
},
[172704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Vinewarden",
["npcID"] = 80698,
},
[365295] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["npcID"] = 181954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[299110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Annihilator Lak'hal",
["npcID"] = 153942,
},
[36971] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Grand Astromancer Capernian",
["encounterID"] = 733,
["event"] = "SPELL_CAST_START",
["npcID"] = 20062,
},
[46187] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["npcID"] = 24556,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[331845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightbound Scorcher",
["npcID"] = 165687,
},
[257407] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 122963,
},
[198963] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[157387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Eagle-Eye",
["npcID"] = 78962,
},
[194951] = {
["source"] = "Scarlet Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 211937,
},
[56933] = {
["encounterName"] = "Frozen Commander",
["source"] = "Alliance Ranger",
["npcID"] = 26802,
["event"] = "SPELL_CAST_START",
["encounterID"] = 519,
},
[157051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'tash the Destructor",
["npcID"] = 77889,
},
[305913] = {
["source"] = "Ogre Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 153242,
},
[365298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automated Eliminator",
["npcID"] = 184539,
},
[411236] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[426731] = {
["source"] = "Naz'jar Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[152973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defense Construct",
["npcID"] = 76087,
},
[365299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automated Eliminator",
["npcID"] = 184539,
},
[385024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salty Salamander",
["npcID"] = 188027,
},
[114004] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["encounterID"] = 1422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59303,
},
[404207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[265511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit Drain Totem",
["npcID"] = 135169,
},
[67280] = {
["source"] = "Overlord Agmar",
["event"] = "SPELL_CAST_START",
["npcID"] = 34922,
},
[410351] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[387826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Beastcaller",
["npcID"] = 195878,
},
[381683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Warspear",
["npcID"] = 192791,
},
[85710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Skirmisher",
["npcID"] = 58738,
},
[396020] = {
["source"] = "The Golden Beetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 59545,
},
[396018] = {
["source"] = "The Crybaby Hozen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59552,
},
[389875] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[299771] = {
["source"] = "Neri Sharpfin",
["event"] = "SPELL_CAST_START",
["npcID"] = 152108,
},
[287490] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Frozen Ballista",
["npcID"] = 148522,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2281,
},
[396019] = {
["source"] = "The Golden Beetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 59545,
},
[52238] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["npcID"] = 28587,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1985,
},
[373483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soggymaw Wavebringer",
["npcID"] = 187263,
},
[369399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Weaver",
["npcID"] = 186420,
},
[412402] = {
["source"] = "Flowfy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203660,
},
[199050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Shieldmaiden",
["npcID"] = 95832,
},
[106428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[369400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Warder",
["npcID"] = 184132,
},
[84013] = {
["source"] = "Agatha",
["event"] = "SPELL_CAST_START",
["npcID"] = 44951,
},
[307968] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[404756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Flamespinner",
["npcID"] = 203686,
},
[401318] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[151274] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Aggem Thorncurse",
["npcID"] = 75149,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1659,
},
[240006] = {
["source"] = "Sav'thul",
["event"] = "SPELL_CAST_START",
["npcID"] = 182863,
},
[326399] = {
["source"] = "Elder Longbranch",
["event"] = "SPELL_CAST_START",
["npcID"] = 185021,
},
[255366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zulian Inquisitor",
["npcID"] = 124549,
},
[396023] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[194956] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[207806] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[377594] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[330496] = {
["source"] = "Decayspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 185022,
},
[57781] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["encounterID"] = 1968,
["event"] = "SPELL_CAST_START",
["npcID"] = 30625,
},
[375547] = {
["source"] = "Molten Eruption",
["event"] = "SPELL_CAST_START",
["npcID"] = 191286,
},
[426741] = {
["source"] = "Naz'jar Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 40577,
},
[404216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[306866] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["npcID"] = 156866,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2331,
},
[374038] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187767,
},
[118988] = {
["encounterName"] = "Gekkan",
["source"] = "Gekkan",
["npcID"] = 61243,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2129,
},
[412408] = {
["source"] = "Field Despair Bot K156",
["event"] = "SPELL_CAST_START",
["npcID"] = 205612,
},
[153247] = {
["encounterName"] = "Roltall",
["source"] = "Roltall",
["npcID"] = 75786,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1652,
},
[305011] = {
["source"] = "Tidemistress Ethendriss",
["event"] = "SPELL_CAST_START",
["npcID"] = 153934,
},
[402170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Research",
["npcID"] = 201490,
},
[259462] = {
["source"] = "Sandskitter Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 129318,
},
[145812] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Set'thik Wind Wielder",
["npcID"] = 71405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[375385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steam Reaver",
["npcID"] = 190700,
},
[100559] = {
["source"] = "Majordomo Staghelm",
["event"] = "SPELL_CAST_START",
["npcID"] = 54015,
},
[330500] = {
["source"] = "Decayspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 185022,
},
[381694] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[327280] = {
["source"] = "Valinor",
["event"] = "SPELL_CAST_START",
["npcID"] = 167524,
},
[31287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smokemaster Snarl",
["npcID"] = 81749,
},
[404220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[143765] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 71156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[147103] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimfrost Lavaslinger",
["npcID"] = 72987,
},
[369409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Custodian",
["npcID"] = 184130,
},
[302964] = {
["source"] = "Ma'haat the Indomitable",
["event"] = "SPELL_CAST_START",
["npcID"] = 151739,
},
[307977] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["encounterID"] = 2334,
["event"] = "SPELL_CAST_START",
["npcID"] = 157238,
},
[87761] = {
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_START",
["npcID"] = 45928,
},
[33787] = {
["source"] = "Coilfang Collaborator",
["event"] = "SPELL_CAST_START",
["npcID"] = 17962,
},
[412413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skornak",
["npcID"] = 203643,
},
[16564] = {
["event"] = "SPELL_CAST_START",
["source"] = "D-1000",
["npcID"] = 49268,
},
[310026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Boggart",
["npcID"] = 158943,
},
[41069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Deathshaper",
["npcID"] = 22882,
},
[412414] = {
["source"] = "Professor Gastrinax",
["event"] = "SPELL_CAST_START",
["npcID"] = 203521,
},
[52496] = {
["source"] = "Crypt Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 27734,
},
[385574] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[262929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torraske the Eternal",
["npcID"] = 127939,
},
[159085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Deadeye",
["npcID"] = 81422,
},
[414463] = {
["source"] = "MR-7 Tangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 205824,
},
[183350] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Deathspeaker",
["npcID"] = 96196,
},
[147863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jademist Dancer",
["npcID"] = 72767,
},
[387843] = {
["source"] = "Spectral Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 196202,
},
[294884] = {
["source"] = "Malfunctioning Scrapboss",
["event"] = "SPELL_CAST_START",
["npcID"] = 151683,
},
[87762] = {
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_START",
["npcID"] = 45930,
},
[35950] = {
["encounterName"] = "Warbringer O'mrogg",
["source"] = "Shattered Hand Houndmaster",
["npcID"] = 17670,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1937,
},
[30686] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["encounterID"] = 1891,
["event"] = "SPELL_CAST_START",
["npcID"] = 17308,
},
[381701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Force of the Springs",
["npcID"] = 197008,
},
[164907] = {
["source"] = "Reanimated Ritual Bones",
["event"] = "SPELL_CAST_START",
["npcID"] = 75715,
},
[69068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Adept",
["npcID"] = 36620,
},
[255371] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 122963,
},
[414466] = {
["source"] = "MR-7 Gutcutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 204515,
},
[182333] = {
["source"] = "Hatecoil Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 88087,
},
[260483] = {
["source"] = "Necrogg the Darkspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 104890,
},
[131485] = {
["source"] = "Succubus",
["event"] = "SPELL_CAST_START",
["npcID"] = 66901,
},
[255373] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 122963,
},
[102227] = {
["source"] = "Enemy Tonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 54642,
},
[377608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigellus",
["npcID"] = 189217,
},
[407504] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[414468] = {
["source"] = "MR-7 Shadowflipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205825,
},
[404748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Navigator Bi-Yun",
["npcID"] = 201184,
},
[377609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Guard",
["npcID"] = 185594,
},
[131486] = {
["source"] = "Succubus",
["event"] = "SPELL_CAST_START",
["npcID"] = 66901,
},
[386866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorging Stagbeetle",
["npcID"] = 195709,
},
[391944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Splintershield",
["npcID"] = 197847,
},
[193611] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[396040] = {
["encounterName"] = "Eranog",
["source"] = "Flamescale Captain",
["npcID"] = 199233,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[20793] = {
["source"] = "Blackrock Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 4463,
},
[200084] = {
["source"] = "Ghostly Retainer",
["event"] = "SPELL_CAST_START",
["npcID"] = 98366,
},
[371983] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[193941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embershard Scorpion",
["npcID"] = 98406,
},
[131488] = {
["source"] = "Fixxul Lonelyheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 66281,
},
[256401] = {
["source"] = "Shadraspawn Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 133857,
},
[377612] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[276884] = {
["source"] = "Amber-shaper Gokilak",
["event"] = "SPELL_CAST_START",
["npcID"] = 155985,
},
[267034] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Vol'zith the Whisperer",
["npcID"] = 134069,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2133,
},
[310037] = {
["source"] = "Gnarlbranch Boggart",
["event"] = "SPELL_CAST_START",
["npcID"] = 165910,
},
[305236] = {
["source"] = "Aqir Venomweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 161229,
},
[289560] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Kimbul's Aspect",
["npcID"] = 144963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2268,
},
[414473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greaves",
["npcID"] = 207278,
},
[391948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfuric Rager",
["npcID"] = 191682,
},
[369423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Crawler",
["npcID"] = 184303,
},
[396044] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[174489] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solar Magnifier",
["npcID"] = 77559,
},
[113364] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[151964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cave Bat",
["npcID"] = 75467,
},
[417499] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Robotic Cauldron",
["npcID"] = 207111,
},
[414475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greaves",
["npcID"] = 207278,
},
[396825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 195836,
},
[7951] = {
["source"] = "Deviate Venomwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 5756,
},
[268239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Elemental",
["npcID"] = 136249,
},
[414476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greaves",
["npcID"] = 207278,
},
[310041] = {
["source"] = "Summoned Boggart",
["event"] = "SPELL_CAST_START",
["npcID"] = 158955,
},
[151965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Slaver",
["npcID"] = 75191,
},
[169371] = {
["encounterName"] = "Xeri'tac",
["source"] = "Venom-Crazed Pale Hulk",
["npcID"] = 84554,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1752,
},
[414477] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[310042] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["npcID"] = 158367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[90325] = {
["source"] = "Naga Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 91459,
},
[412430] = {
["source"] = "Gastrite",
["event"] = "SPELL_CAST_START",
["npcID"] = 205801,
},
[283422] = {
["encounterName"] = "Tussle Tonks",
["source"] = "Gnomercy 4.U.",
["npcID"] = 145185,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2257,
},
[208279] = {
["source"] = "Igrul the Scalebane",
["event"] = "SPELL_CAST_START",
["npcID"] = 105159,
},
[250258] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["encounterID"] = 2085,
["event"] = "SPELL_CAST_START",
["npcID"] = 122965,
},
[276441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Skyrider",
["npcID"] = 141485,
},
[191900] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[68950] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[377421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amberfur Prowler",
["npcID"] = 187455,
},
[273185] = {
["source"] = "Shieldbearer of Zul",
["event"] = "SPELL_CAST_START",
["npcID"] = 127879,
},
[147646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Stalker",
["npcID"] = 72807,
},
[257426] = {
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129602,
},
[385812] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[60781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Depths Acolyte",
["npcID"] = 30205,
},
[373526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shimmerwing Monarch",
["npcID"] = 210767,
},
[417030] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Conjuror",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 206351,
},
[426768] = {
["source"] = "Naz'jar Tempest Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 40634,
},
[381721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Wardog",
["npcID"] = 185465,
},
[417872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freya",
["npcID"] = 205304,
},
[375575] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191230,
},
[75992] = {
["source"] = "Naz'jar Tempest Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 40634,
},
[269097] = {
["encounterName"] = "Lord Stormsong",
["source"] = "Lord Stormsong",
["npcID"] = 134060,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2132,
},
[9053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowforge Surveyor",
["npcID"] = 4844,
},
[391958] = {
["source"] = "Cloying Gale",
["event"] = "SPELL_CAST_START",
["npcID"] = 198126,
},
[316689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ben Howell",
["npcID"] = 162682,
},
[374699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[256404] = {
["source"] = "Ravenous Gull",
["event"] = "SPELL_CAST_START",
["npcID"] = 127530,
},
[391959] = {
["source"] = "Unleashed Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 195846,
},
[402050] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[289572] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Cavalier",
["npcID"] = 147828,
},
[203163] = {
["source"] = "Felspite Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102788,
},
[130770] = {
["source"] = "White Orchid",
["event"] = "SPELL_CAST_START",
["npcID"] = 62650,
},
[41072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Blood Mage",
["npcID"] = 22945,
},
[392455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uurhilt",
["npcID"] = 194760,
},
[256405] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[269096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandfury Dunerider",
["npcID"] = 130230,
},
[314151] = {
["source"] = "Shoth the Darkened",
["event"] = "SPELL_CAST_START",
["npcID"] = 160532,
},
[169376] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["npcID"] = 84550,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1752,
},
[151548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Ogre Mage",
["npcID"] = 75272,
},
[375580] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[158014] = {
["source"] = "Gruffy",
["event"] = "SPELL_CAST_START",
["npcID"] = 193251,
},
[265002] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[169823] = {
["encounterName"] = "Archmage Sol",
["source"] = "Spore Image",
["npcID"] = 84983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[63147] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[385824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rageclaw",
["npcID"] = 187192,
},
[314149] = {
["source"] = "Dark Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 161286,
},
[90329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramkahen Marksman",
["npcID"] = 48514,
},
[22458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackwing Taskmaster",
["npcID"] = 12458,
},
[82137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
},
[165282] = {
["isChanneled"] = true,
["source"] = "Apexis Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82153,
},
[207261] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[362028] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[150326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Stonechanter",
["npcID"] = 74549,
},
[193951] = {
["source"] = "Barbed Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 97677,
},
[402209] = {
["source"] = "Vengeful Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 201490,
},
[31673] = {
["encounterName"] = "Hungarfen",
["source"] = "Hungarfen",
["npcID"] = 17770,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1946,
},
[111631] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[412444] = {
["source"] = "Brullo the Strong",
["event"] = "SPELL_CAST_START",
["npcID"] = 203621,
},
[422683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oxis of Fire",
["npcID"] = 210319,
},
[359203] = {
["source"] = "Archaic Curator",
["event"] = "SPELL_CAST_START",
["npcID"] = 181857,
},
[369442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Proto-Drake",
["npcID"] = 194200,
},
[196242] = {
["source"] = "Dreadlord Mendacius",
["event"] = "SPELL_CAST_START",
["npcID"] = 99649,
},
[406302] = {
["source"] = "Memory of a Caster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200824,
},
[374022] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[147878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderfall",
["npcID"] = 73175,
},
[417678] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[422685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oxis of Fire",
["npcID"] = 210319,
},
[169382] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["npcID"] = 84550,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1752,
},
[392451] = {
["source"] = "Flame Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 197985,
},
[152998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Defense Construct",
["npcID"] = 76145,
},
[101592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murozond",
["npcID"] = 54432,
},
[151570] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Venomous Discharge Crystal",
["npcID"] = 74942,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1661,
},
[418591] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["npcID"] = 208367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[412448] = {
["source"] = "Deepflayer Broodmatron",
["event"] = "SPELL_CAST_START",
["npcID"] = 200115,
},
[404737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Han'thul",
["npcID"] = 198914,
},
[3256] = {
["encounterName"] = "Theka the Martyr",
["source"] = "Scarab",
["npcID"] = 7269,
["event"] = "SPELL_CAST_START",
["encounterID"] = 596,
},
[426783] = {
["source"] = "Faceless Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212775,
},
[404258] = {
["source"] = "Reisa the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 200600,
},
[115650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fizzy Brew Alemental",
["npcID"] = 59520,
},
[376426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Ripple",
["npcID"] = 192463,
},
[147880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderfall",
["npcID"] = 73175,
},
[289585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Guardian",
["npcID"] = 148582,
},
[118094] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[375591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Sapling",
["npcID"] = 191313,
},
[385832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rageclaw",
["npcID"] = 187192,
},
[76508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mage",
["npcID"] = 39982,
},
[117975] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Protector Kaolan",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60583,
},
[400165] = {
["source"] = "Infinite Twilight Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201223,
},
[147881] = {
["source"] = "Molten Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 72888,
},
[165287] = {
["isChanneled"] = true,
["source"] = "Apexis Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82153,
},
[373545] = {
["source"] = "Tranquil Tideskipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 192148,
},
[200099] = {
["isChanneled"] = true,
["source"] = "Ghostly Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98368,
},
[201123] = {
["source"] = "Vilethorn Blossom",
["event"] = "SPELL_CAST_START",
["npcID"] = 99360,
},
[396071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 197142,
},
[308018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Scarab",
["npcID"] = 157904,
},
[408358] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[371358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[265016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[422693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oxis of Fire",
["npcID"] = 210319,
},
[396075] = {
["source"] = "Awakened Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 191129,
},
[406783] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[412455] = {
["source"] = "Alcanon",
["event"] = "SPELL_CAST_START",
["npcID"] = 203515,
},
[157534] = {
["source"] = "Thunderlord Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 78073,
},
[138668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Frost Warden",
["npcID"] = 69910,
},
[34931] = {
["source"] = "Ethereal Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 18331,
},
[420647] = {
["source"] = "Ashendir Hartwood",
["event"] = "SPELL_CAST_START",
["npcID"] = 211258,
},
[373549] = {
["source"] = "Hot Springs Damselfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 198592,
},
[312118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian of the Tombs",
["npcID"] = 127072,
},
[241680] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Lord Stormsong",
["npcID"] = 139737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2130,
},
[265019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[422696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Avius Flamebeak",
["npcID"] = 210305,
},
[130775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kunzen Rockflinger",
["npcID"] = 59120,
},
[36979] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Netherstrand Longbow",
["encounterID"] = 733,
["event"] = "SPELL_CAST_START",
["npcID"] = 21268,
},
[372562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Deadeye",
["npcID"] = 188542,
},
[414506] = {
["source"] = "Ashen Emberwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 209098,
},
[375599] = {
["isChanneled"] = true,
["source"] = "Mature Hornswog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191315,
},
[338011] = {
["source"] = "Violent Muckmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 166318,
},
[121165] = {
["encounterName"] = "Gekkan",
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Flameseeker",
["npcID"] = 61392,
},
[153581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soaring Chakram Master",
["npcID"] = 76132,
},
[391982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmatalon",
["npcID"] = 189538,
},
[169341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Footsoldier",
["npcID"] = 81283,
},
[396078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Destroyer",
["npcID"] = 193288,
},
[316216] = {
["source"] = "Corrupt Egg Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 163112,
},
[123610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Protector",
["npcID"] = 63275,
},
[394494] = {
["source"] = "Magmaton",
["event"] = "SPELL_CAST_START",
["npcID"] = 186827,
},
[289596] = {
["source"] = "7th Legion Cavalier",
["event"] = "SPELL_CAST_START",
["npcID"] = 147828,
},
[170411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Venomfang",
["npcID"] = 85232,
},
[375605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Arcanogolem",
["npcID"] = 201554,
},
[418605] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Future Self",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 208959,
},
[115418] = {
["source"] = "Krik'thik Wind Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59801,
},
[316218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhaven Dredger",
["npcID"] = 156064,
},
[100060] = {
["isChanneled"] = true,
["source"] = "Flamewaker Cauterizer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 53639,
},
[375579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Acolyte",
["npcID"] = 190716,
},
[15305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 78553,
},
[271628] = {
["source"] = "Teldrassil Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 134938,
},
[400177] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Ritualist",
["npcID"] = 199971,
},
[402225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Research",
["npcID"] = 201490,
},
[417018] = {
["source"] = "Alliance Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206351,
},
[68948] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["encounterID"] = 2879,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36565,
},
[200105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[157331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[271174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pallid Gorger",
["npcID"] = 137830,
},
[130265] = {
["source"] = "Thunder Hold Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 66291,
},
[196516] = {
["source"] = "Channeler Varisz",
["event"] = "SPELL_CAST_START",
["npcID"] = 100249,
},
[36980] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Netherstrand Longbow",
["encounterID"] = 733,
["event"] = "SPELL_CAST_START",
["npcID"] = 21268,
},
[396084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Force of the Springs",
["npcID"] = 197008,
},
[316677] = {
["source"] = "Aqir Swarmkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 162303,
},
[182217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jailer Zerus",
["npcID"] = 91672,
},
[394037] = {
["source"] = "Crystalline Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 201063,
},
[215178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trained Nightsaber",
["npcID"] = 148933,
},
[169851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[170828] = {
["source"] = "Warlock Soulstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 79482,
},
[369465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Weaver",
["npcID"] = 186420,
},
[384827] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[158128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Brak",
["npcID"] = 81254,
},
[326463] = {
["source"] = "Darkwarren Slicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 164036,
},
[262983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azsh'ari Stormbinder",
["npcID"] = 155629,
},
[131733] = {
["isChanneled"] = true,
["source"] = "Hozen Diver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66148,
},
[130266] = {
["source"] = "Thunder Hold Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 66200,
},
[326464] = {
["source"] = "Darkwarren Slicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 164036,
},
[377658] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[392442] = {
["source"] = "Kholdeg",
["event"] = "SPELL_CAST_START",
["npcID"] = 194608,
},
[126283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmaster Sydow",
["npcID"] = 63240,
},
[142771] = {
["source"] = "Overseer Elaglo",
["event"] = "SPELL_CAST_START",
["npcID"] = 71030,
},
[260409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodraged Pterrordax",
["npcID"] = 126618,
},
[149463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[141750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster S'thoc",
["npcID"] = 71259,
},
[20824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deadwind Ogre Mage",
["npcID"] = 7379,
},
[165520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rainiara the Kingslayer",
["npcID"] = 82260,
},
[410870] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[389947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sirena the Fangbreaker",
["npcID"] = 185907,
},
[224682] = {
["source"] = "Scarlet Houndsmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 211882,
},
[377661] = {
["source"] = "Garden Herdmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 188277,
},
[400631] = {
["source"] = "Rampant Tide",
["event"] = "SPELL_CAST_START",
["npcID"] = 201463,
},
[391999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Scavenger",
["npcID"] = 185445,
},
[269131] = {
["encounterName"] = "Lord Stormsong",
["source"] = "Lord Stormsong",
["npcID"] = 134060,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2132,
},
[205231] = {
["encounterName"] = "Terros",
["source"] = "Darkglare",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 103673,
},
[115421] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krik'thik Wind Shaper",
["npcID"] = 59801,
},
[389949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Brute",
["npcID"] = 187299,
},
[359233] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 181047,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[394045] = {
["source"] = "Vadne Bleakheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 195764,
},
[351047] = {
["source"] = "Armored Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 177808,
},
[190898] = {
["source"] = "Mirana Starlight",
["event"] = "SPELL_CAST_START",
["npcID"] = 99451,
},
[391998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Magma",
["npcID"] = 191917,
},
[402237] = {
["source"] = "Vengeful Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 201490,
},
[281420] = {
["source"] = "Bilge Rat Brinescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 129600,
},
[406333] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[359235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Halondrus",
["npcID"] = 180906,
},
[308481] = {
["source"] = "Fallen Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 158146,
},
[321000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prime Shieldguard",
["npcID"] = 174672,
},
[414525] = {
["source"] = "Morchie",
["event"] = "SPELL_CAST_START",
["npcID"] = 205708,
},
[359236] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[418621] = {
["source"] = "Aqir Fanatic",
["event"] = "SPELL_CAST_START",
["npcID"] = 207896,
},
[303951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prince Erazmin",
["npcID"] = 153670,
},
[324425] = {
["source"] = "Elite Queensguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 158555,
},
[367428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarled Scavenger",
["npcID"] = 184962,
},
[418622] = {
["source"] = "Aqir Scarab",
["event"] = "SPELL_CAST_START",
["npcID"] = 207910,
},
[412479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinn",
["npcID"] = 203646,
},
[287565] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[310092] = {
["source"] = "Escaped Mutation",
["event"] = "SPELL_CAST_START",
["npcID"] = 157267,
},
[34934] = {
["source"] = "Ethereal Wraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 18394,
},
[420671] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[373573] = {
["source"] = "Sprite Dreamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207617,
},
[382555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 185529,
},
[418624] = {
["source"] = "Klaxxi Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 207915,
},
[387910] = {
["source"] = "Algeth'ar Echoknight",
["event"] = "SPELL_CAST_START",
["npcID"] = 196200,
},
[381765] = {
["source"] = "Avalantus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201543,
},
[424771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Incineration",
["npcID"] = 210147,
},
[147896] = {
["source"] = "Garnia",
["event"] = "SPELL_CAST_START",
["npcID"] = 73282,
},
[115423] = {
["source"] = "Shan'ze Spiritbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 55279,
},
[199090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[95970] = {
["event"] = "SPELL_CAST_START",
["source"] = "D-1000",
["npcID"] = 49268,
},
[153395] = {
["source"] = "Carrion Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 76057,
},
[396101] = {
["isChanneled"] = true,
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197128,
},
[412486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warchanter Ronvath",
["npcID"] = 200128,
},
[392006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sickly Brute",
["npcID"] = 186668,
},
[377512] = {
["source"] = "Basalt Shell",
["event"] = "SPELL_CAST_START",
["npcID"] = 186622,
},
[330574] = {
["source"] = "Conjured Death",
["event"] = "SPELL_CAST_START",
["npcID"] = 171317,
},
[398150] = {
["source"] = "Shadowmoon Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 76446,
},
[87779] = {
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 45935,
},
[201139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathguard Bladelord",
["npcID"] = 98810,
},
[314193] = {
["source"] = "Voidwarped Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 160491,
},
[219569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Collector",
["npcID"] = 102778,
},
[18392] = {
["encounterName"] = "Onyxia",
["source"] = "Onyxia",
["encounterID"] = 1084,
["event"] = "SPELL_CAST_START",
["npcID"] = 10184,
},
[422717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phebis of the Burning Sea",
["npcID"] = 210306,
},
[41334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Acolyte",
["npcID"] = 22939,
},
[381770] = {
["encounterName"] = "Treemouth",
["source"] = "Decaying Slime",
["npcID"] = 192481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[388340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 196439,
},
[398154] = {
["source"] = "Defiled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 75451,
},
[314195] = {
["source"] = "Gnashing Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 161334,
},
[414535] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[42870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Invader",
["npcID"] = 24051,
},
[392435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molkeej",
["npcID"] = 195430,
},
[289623] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Medic",
["npcID"] = 147825,
},
[149947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pale Spider Worshipper",
["npcID"] = 80530,
},
[38618] = {
["encounterName"] = "Frozen Commander",
["source"] = "Commander Stoutbeard",
["npcID"] = 26796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 519,
},
[201141] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wrathguard Bladelord",
["npcID"] = 98810,
},
[396107] = {
["source"] = "Hungry Hungry Lava",
["event"] = "SPELL_CAST_START",
["npcID"] = 194878,
},
[395427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lahar",
["npcID"] = 189235,
},
[375630] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191232,
},
[73958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drowned Thunder Lizard",
["npcID"] = 39464,
},
[271866] = {
["source"] = "Angry Dreadcroc",
["event"] = "SPELL_CAST_START",
["npcID"] = 123090,
},
[99555] = {
["source"] = "Molten Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 53115,
},
[392013] = {
["source"] = "Crystalline Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 201063,
},
[143805] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["npcID"] = 71454,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1595,
},
[403890] = {
["source"] = "Duzalgor",
["event"] = "SPELL_CAST_START",
["npcID"] = 200610,
},
[417782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Mekgineer Hologram",
["npcID"] = 207539,
},
[383823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Hornsounder",
["npcID"] = 192796,
},
[374724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[412492] = {
["source"] = "Brullo the Strong",
["event"] = "SPELL_CAST_START",
["npcID"] = 203621,
},
[199772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Champion",
["npcID"] = 97087,
},
[166032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogron Warcrusher",
["npcID"] = 80775,
},
[387135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Arcblade",
["npcID"] = 194898,
},
[378112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Encroaching Hornswog",
["npcID"] = 189314,
},
[106827] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56719,
},
[359668] = {
["source"] = "Mawtouched Animate",
["event"] = "SPELL_CAST_START",
["npcID"] = 181484,
},
[32888] = {
["source"] = "Raging Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 18506,
},
[369193] = {
["source"] = "Qalashi Dusttwister",
["event"] = "SPELL_CAST_START",
["npcID"] = 192371,
},
[158141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icehoof Bull",
["npcID"] = 78920,
},
[106856] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[394479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Hail",
["npcID"] = 189039,
},
[361300] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["npcID"] = 181549,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[391871] = {
["source"] = "Duskpaw Tendontearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197820,
},
[418637] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[159847] = {
["source"] = "Ironmarch Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 76556,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["event"] = "SPELL_CAST_START",
["npcID"] = 98949,
},
[150917] = {
["encounterName"] = "Hunter Bonetusk",
["source"] = "Hunter Bonetusk",
["npcID"] = 75001,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1656,
},
[257458] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[170035] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["npcID"] = 84358,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[144832] = {
["encounterName"] = "Sha of Pride",
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Pride",
["npcID"] = 71734,
},
[325232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sylvari Tenderhoof",
["npcID"] = 170031,
},
[31999] = {
["source"] = "Void-Twisted Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 151742,
},
[361304] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Wild Stampede",
["npcID"] = 183421,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[408811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[365400] = {
["source"] = "Shifting Stargorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 184413,
},
[91872] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 45259,
},
[76008] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[166335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Far Seer",
["npcID"] = 82579,
},
[68841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apothecary Frye",
["npcID"] = 36272,
},
[196027] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[193826] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[289635] = {
["source"] = "7th Legion Medic",
["event"] = "SPELL_CAST_START",
["npcID"] = 147825,
},
[406357] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[34170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[168383] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["npcID"] = 83894,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[317284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistress Dyrax",
["npcID"] = 162880,
},
[406358] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[196028] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[180670] = {
["source"] = "K'ute",
["event"] = "SPELL_CAST_START",
["npcID"] = 90215,
},
[412905] = {
["isChanneled"] = true,
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203709,
},
[388716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[119524] = {
["source"] = "Mogu Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61345,
},
[369500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Halondrus",
["npcID"] = 180906,
},
[330593] = {
["source"] = "Engorged Fearspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 168724,
},
[294165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Chainguard",
["npcID"] = 185316,
},
[255614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Violetsail Scavenger",
["npcID"] = 179936,
},
[385883] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[198077] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[369901] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 186965,
},
[385157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenbelt Riverbeast",
["npcID"] = 192834,
},
[406760] = {
["source"] = "Memory of a Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 200827,
},
[412505] = {
["source"] = "Tyr's Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 205151,
},
[145860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Talon",
["npcID"] = 72232,
},
[324447] = {
["source"] = "Elite Queensguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 158555,
},
[443222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Memory of Turalyon",
["npcID"] = 214616,
},
[371551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Dustcaller",
["npcID"] = 187551,
},
[398172] = {
["source"] = "Stellagosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 200099,
},
[359265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automa Protector",
["npcID"] = 182799,
},
[267969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Attendant",
["npcID"] = 134137,
},
[84713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Apothecary Lydon",
["npcID"] = 48020,
},
[145861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vanity",
["npcID"] = 72662,
},
[375649] = {
["isChanneled"] = true,
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196115,
},
[86249] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Submariner",
["npcID"] = 45403,
},
[198079] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98949,
},
[12492] = {
["encounterName"] = "Jammal'an the Prophet",
["source"] = "Jammal'an the Prophet",
["npcID"] = 5710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 488,
},
[318312] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stitchyard Surgeon",
["npcID"] = 159679,
},
[395816] = {
["source"] = "Qalashi Wallcrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187813,
},
[406918] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Djaradin Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202256,
},
[406366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[382233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Batak",
["npcID"] = 193462,
},
[289645] = {
["source"] = "7th Legion Battlemage",
["event"] = "SPELL_CAST_START",
["npcID"] = 147787,
},
[391842] = {
["source"] = "Rebel Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 195060,
},
[166341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Far Seer",
["npcID"] = 82579,
},
[426845] = {
["source"] = "Infested Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 84989,
},
[297837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeptide Frenzy",
["npcID"] = 144647,
},
[416996] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[375652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[329383] = {
["source"] = "Nascent Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 178013,
},
[289647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Breakwater Elemental",
["npcID"] = 148569,
},
[406369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[375653] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191232,
},
[165511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miserain Starsorrow",
["npcID"] = 82017,
},
[161222] = {
["source"] = "Pridelands Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 88579,
},
[392014] = {
["source"] = "Rokzul",
["event"] = "SPELL_CAST_START",
["npcID"] = 194458,
},
[272592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 138281,
},
[387708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phenran",
["npcID"] = 193688,
},
[289649] = {
["source"] = "Echo of Krag'wa",
["event"] = "SPELL_CAST_START",
["npcID"] = 148625,
},
[166342] = {
["source"] = "Echo Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 79895,
},
[383846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Flame",
["npcID"] = 196540,
},
[271220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Grunter",
["npcID"] = 152960,
},
[169414] = {
["source"] = "Ironmarch Warcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 78670,
},
[374865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Konkhular",
["npcID"] = 194544,
},
[394620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightrot",
["npcID"] = 188707,
},
[309316] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[158414] = {
["source"] = "Iron Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 91599,
},
[397383] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[310129] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[373201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windyfin Skybasher",
["npcID"] = 187431,
},
[389250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Slayer",
["npcID"] = 201831,
},
[162248] = {
["source"] = "Pridelands Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 88579,
},
[408422] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[361324] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[255421] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122963,
},
[256445] = {
["source"] = "Saurolisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 123647,
},
[191941] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["event"] = "SPELL_CAST_START",
["npcID"] = 95885,
},
[394948] = {
["source"] = "Ashbinder Tornecha",
["event"] = "SPELL_CAST_START",
["npcID"] = 192344,
},
[265081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[332657] = {
["source"] = "Satiated Sawtooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 164587,
},
[325205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeneye Bowman",
["npcID"] = 166936,
},
[221634] = {
["source"] = "Braxas the Fleshcarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 111290,
},
[371565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohn'ir Windcaller",
["npcID"] = 191244,
},
[79085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ionis",
["npcID"] = 50790,
},
[342897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Maw-shroom",
["npcID"] = 174130,
},
[426855] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[202181] = {
["source"] = "Rockback Gnasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91006,
},
[406378] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[130791] = {
["source"] = "Garrosh'ar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66398,
},
[393309] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Flamewrought Eradicator",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198311,
},
[82669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodfang Scout",
["npcID"] = 45536,
},
[37591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ambermill Brewmaster",
["npcID"] = 3577,
},
[169418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[418338] = {
["source"] = "Morchie",
["event"] = "SPELL_CAST_START",
["npcID"] = 205708,
},
[259519] = {
["source"] = "Brinefang Saurolisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 136901,
},
[410848] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 201668,
},
[359282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automated Eliminator",
["npcID"] = 184539,
},
[405016] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[173514] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironwing Flamespitter",
["npcID"] = 83389,
},
[128232] = {
["source"] = "Scarlet Evangelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58685,
},
[382179] = {
["source"] = "Senior Researcher Alydrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 208734,
},
[225732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Velandras Ravencrest",
["npcID"] = 98538,
},
[57047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[373618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hypnosis Bat",
["npcID"] = 190174,
},
[428889] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[329310] = {
["source"] = "Disobedient Citizen",
["event"] = "SPELL_CAST_START",
["npcID"] = 158813,
},
[265088] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[289662] = {
["source"] = "7th Legion Battlemage",
["event"] = "SPELL_CAST_START",
["npcID"] = 147787,
},
[150990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Scarblade",
["npcID"] = 74554,
},
[209587] = {
["isChanneled"] = true,
["source"] = "Dread Falke",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 105750,
},
[265089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[172675] = {
["source"] = "Shuja Grimaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 167301,
},
[212423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[40873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Sky Stalker",
["npcID"] = 23030,
},
[387955] = {
["source"] = "Ethereal Restorer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196203,
},
[128233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[191946] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[78509] = {
["source"] = "Bloodfang Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 44547,
},
[265091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[443247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Memory of Turalyon",
["npcID"] = 214616,
},
[150997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Thornbolt",
["npcID"] = 74652,
},
[257656] = {
["source"] = "Unfinished Stone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201586,
},
[423131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathion",
["npcID"] = 210077,
},
[166350] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iron Infantry",
["npcID"] = 82590,
},
[375671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calving Elemental",
["npcID"] = 189312,
},
[168398] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Blackhand's Might Turret",
["npcID"] = 84215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1754,
},
[387960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[211401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 104295,
},
[367481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cruel Bonecrusher",
["npcID"] = 186206,
},
[212773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Reinforcement",
["npcID"] = 107073,
},
[384223] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[59696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Handler",
["npcID"] = 24082,
},
[175566] = {
["source"] = "Blazing Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 87701,
},
[29427] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[56698] = {
["source"] = "Ahn'kahar Spell Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 30278,
},
[410843] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Volcanic Totem",
["npcID"] = 205218,
},
[401205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[41084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Houndmaster",
["npcID"] = 23018,
},
[124048] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Sharphorn",
["npcID"] = 60647,
},
[260550] = {
["source"] = "Uul'gyneth",
["event"] = "SPELL_CAST_START",
["npcID"] = 126001,
},
[383866] = {
["source"] = "Incarnated Wick",
["event"] = "SPELL_CAST_START",
["npcID"] = 205407,
},
[172673] = {
["source"] = "Sun Prophet Tenhamen",
["event"] = "SPELL_CAST_START",
["npcID"] = 154727,
},
[418269] = {
["source"] = "Imperial Vizier Zor'lok",
["event"] = "SPELL_CAST_START",
["npcID"] = 208500,
},
[85232] = {
["source"] = "Ramkahen Field Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 47699,
},
[367485] = {
["isChanneled"] = true,
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185508,
},
[285572] = {
["encounterName"] = "King Rastakhan",
["source"] = "Phantom of Slaughter",
["npcID"] = 146493,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[165329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thundering Goliath",
["npcID"] = 141616,
},
[324483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorkai Trainee",
["npcID"] = 170033,
},
[257478] = {
["source"] = "Irontide Mastiff",
["event"] = "SPELL_CAST_START",
["npcID"] = 128551,
},
[418680] = {
["source"] = "Vexemia",
["event"] = "SPELL_CAST_START",
["npcID"] = 206967,
},
[202365] = {
["source"] = "Runecarver Slave",
["event"] = "SPELL_CAST_START",
["npcID"] = 102375,
},
[422776] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[395936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clearwater Bull",
["npcID"] = 192652,
},
[396159] = {
["source"] = "Worldcarver Wurmling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187366,
},
[387965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Bladewing",
["npcID"] = 187232,
},
[256083] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 127503,
},
[424825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sylvanesh the Ascended",
["npcID"] = 207107,
},
[111854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
},
[371584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embertooth Pooltender",
["npcID"] = 187445,
},
[260551] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["npcID"] = 131667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2114,
},
[150661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorg the Host",
["npcID"] = 76496,
},
[385916] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[387317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Culler",
["npcID"] = 190093,
},
[398206] = {
["source"] = "Exhumed Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 75979,
},
[167379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneseer Cold-Eye",
["npcID"] = 88361,
},
[418684] = {
["source"] = "Alliance Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208208,
},
[40317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Spearman",
["npcID"] = 17729,
},
[211406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 104295,
},
[394114] = {
["source"] = "S.A.V.I.O.R.",
["event"] = "SPELL_CAST_START",
["npcID"] = 195328,
},
[88421] = {
["source"] = "Forest Ettin",
["event"] = "SPELL_CAST_START",
["npcID"] = 44367,
},
[372539] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[406399] = {
["source"] = "Sundered Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201736,
},
[196512] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[10348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leprous Technician",
["npcID"] = 6222,
},
[60236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storming Vortex",
["npcID"] = 28547,
},
[373636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Konkhular",
["npcID"] = 194544,
},
[59259] = {
["encounterName"] = "General Bjarngrim",
["source"] = "Hardened Steel Berserker",
["npcID"] = 28579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1987,
},
[377732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Custodian",
["npcID"] = 184319,
},
[428926] = {
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 40936,
},
[182739] = {
["source"] = "Sinister Shrieker",
["event"] = "SPELL_CAST_START",
["npcID"] = 101900,
},
[375687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Totem",
["npcID"] = 190426,
},
[340412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Research",
["npcID"] = 202446,
},
[387974] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spectral Invoker",
["npcID"] = 196202,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[79971] = {
["source"] = "Drill Sergeant Magnus",
["event"] = "SPELL_CAST_START",
["npcID"] = 48923,
},
[36990] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Staff of Disintegration",
["encounterID"] = 733,
["event"] = "SPELL_CAST_START",
["npcID"] = 21274,
},
[420737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Cassaphine",
["npcID"] = 206818,
},
[79176] = {
["isChanneled"] = true,
["source"] = "Amberglass Crab",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54557,
},
[367496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foul Controller",
["npcID"] = 183497,
},
[23601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bolgaff",
["npcID"] = 47003,
},
[259531] = {
["encounterName"] = "Vol'kaal",
["source"] = "Reanimation Totem",
["encounterID"] = 2085,
["event"] = "SPELL_CAST_START",
["npcID"] = 125977,
},
[406404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calibrating Scent Matrix",
["npcID"] = 203606,
},
[400144] = {
["source"] = "Vraken the Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200584,
},
[385569] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[424836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sylvanesh the Ascended",
["npcID"] = 207107,
},
[381834] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[160383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverblood Frostbinder",
["npcID"] = 78869,
},
[40062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Technician",
["npcID"] = 17414,
},
[153485] = {
["source"] = "Carrion Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 76057,
},
[417573] = {
["source"] = "Gill'dan",
["event"] = "SPELL_CAST_START",
["npcID"] = 204808,
},
[204243] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Dweller",
["npcID"] = 101991,
},
[417641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felbolg",
["npcID"] = 206189,
},
[167385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dungeoneer's Training Dummy",
["npcID"] = 194644,
},
[20801] = {
["source"] = "Imp Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 12922,
},
[367500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 185529,
},
[33919] = {
["encounterName"] = "Tavarok",
["source"] = "Tavarok",
["encounterID"] = 1901,
["event"] = "SPELL_CAST_START",
["npcID"] = 18343,
},
[80117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Gyreworm",
["npcID"] = 151639,
},
[174529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Brak",
["npcID"] = 81254,
},
[335720] = {
["source"] = "Mawsworn Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 155812,
},
[114859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[392007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Thief",
["npcID"] = 192748,
},
[79175] = {
["isChanneled"] = true,
["source"] = "Amberglass Crab",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54557,
},
[367502] = {
["source"] = "Pocopoc",
["event"] = "SPELL_CAST_START",
["npcID"] = 181059,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["encounterID"] = 1041,
["event"] = "SPELL_CAST_START",
["npcID"] = 43873,
},
[297879] = {
["source"] = "Eye of the Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 153347,
},
[32364] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18344,
},
[367503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[386259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[128999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thundermaw",
["npcID"] = 58456,
},
[16033] = {
["source"] = "Injured Warsong Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 27108,
},
[15585] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[176218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smokemaster Snarl",
["npcID"] = 81749,
},
[420746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Sentinel",
["npcID"] = 207117,
},
[413136] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[367505] = {
["source"] = "Pocopoc",
["event"] = "SPELL_CAST_START",
["npcID"] = 181059,
},
[202108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightshard Shaper",
["npcID"] = 90998,
},
[201176] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[365458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[385827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rageclaw",
["npcID"] = 187192,
},
[197240] = {
["source"] = "Prolifica",
["event"] = "SPELL_CAST_START",
["npcID"] = 98986,
},
[401319] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[369073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Hauler",
["npcID"] = 201341,
},
[392080] = {
["source"] = "Riverwalker Tamopo",
["event"] = "SPELL_CAST_START",
["npcID"] = 193240,
},
[123121] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["npcID"] = 62983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1506,
},
[57725] = {
["encounterName"] = "Salram the Fleshcrafter",
["source"] = "Salramm the Fleshcrafter",
["encounterID"] = 2004,
["event"] = "SPELL_CAST_START",
["npcID"] = 26530,
},
[166364] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grom'kar Boomer",
["npcID"] = 82579,
},
[408466] = {
["source"] = "Drogbar Crystal-collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 204407,
},
[192985] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["encounterID"] = 1814,
["event"] = "SPELL_CAST_START",
["npcID"] = 96028,
},
[258672] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 126918,
},
[400877] = {
["source"] = "Flowfy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203660,
},
[362601] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["npcID"] = 182169,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2539,
},
[171773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lorry Warmheart",
["npcID"] = 159211,
},
[299937] = {
["event"] = "SPELL_CAST_START",
["source"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 153824,
},
[173169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turbulent Steamfury",
["npcID"] = 81685,
},
[79607] = {
["source"] = "Skitterweb Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 44906,
},
[176606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfuric Ooze",
["npcID"] = 85960,
},
[91335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Woodfist",
["npcID"] = 83871,
},
[28993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightlash",
["npcID"] = 46981,
},
[114419] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonebound Colossus",
["npcID"] = 56595,
},
[106740] = {
["source"] = "Watershaper Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 56670,
},
[396180] = {
["source"] = "Worldcarver Wurmling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187366,
},
[275363] = {
["source"] = "Malfunctioning Beastbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 151933,
},
[200154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understone Demolisher",
["npcID"] = 102253,
},
[324513] = {
["source"] = "Experimental Misstep",
["event"] = "SPELL_CAST_START",
["npcID"] = 199859,
},
[149179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Grunt",
["npcID"] = 82047,
},
[275364] = {
["source"] = "Abrasive Reconfigulator 8000",
["event"] = "SPELL_CAST_START",
["npcID"] = 140530,
},
[152894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Initiate of the Rising Sun",
["npcID"] = 79466,
},
[410516] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[378420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Provoked Geode",
["npcID"] = 189040,
},
[141794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion Sithiss",
["npcID"] = 59632,
},
[392087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bossy Hornswog",
["npcID"] = 190998,
},
[40064] = {
["source"] = "Shadowmoon Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 17414,
},
[167092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cackling Pyromaniac",
["npcID"] = 79510,
},
[373662] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sentinel Talondras",
["npcID"] = 186420,
},
[40832] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[20802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Putrifier",
["npcID"] = 186363,
},
[165851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberbark Ancient",
["npcID"] = 82284,
},
[130803] = {
["source"] = "Hozen Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 57119,
},
[76026] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[195037] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[263085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vilebone Ravager",
["npcID"] = 134852,
},
[34945] = {
["source"] = "Coilfang Scale-Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 21126,
},
[255446] = {
["source"] = "Amaki Bloodsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 128773,
},
[408476] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Erratic Remnant",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 202824,
},
[151475] = {
["encounterName"] = "Groyat, the Blind Hunter",
["source"] = "Groyat, the Blind Hunter",
["npcID"] = 75247,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1660,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[265433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[275370] = {
["source"] = "Malfunctioning Beastbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 151933,
},
[400283] = {
["source"] = "Zaqali Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 199972,
},
[260322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nol'ixwan",
["npcID"] = 130741,
},
[359629] = {
["source"] = "Mawtouched Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 181359,
},
[238586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Punisher",
["npcID"] = 117421,
},
[257495] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["encounterID"] = 2101,
["event"] = "SPELL_CAST_START",
["npcID"] = 127479,
},
[426905] = {
["source"] = "Minion of Ghur'sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 212778,
},
[404679] = {
["source"] = "Mad-Eye Carrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 201181,
},
[394440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Yrgena",
["npcID"] = 201538,
},
[310184] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["npcID"] = 158376,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[151014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Hidecrusher",
["npcID"] = 74555,
},
[316331] = {
["source"] = "Wastewander Exterminator",
["event"] = "SPELL_CAST_START",
["npcID"] = 154434,
},
[299946] = {
["event"] = "SPELL_CAST_START",
["source"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 153824,
},
[359334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Shaper",
["npcID"] = 184954,
},
[422815] = {
["source"] = "Guardian Ordan",
["event"] = "SPELL_CAST_START",
["npcID"] = 208727,
},
[388000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[99576] = {
["source"] = "Lava Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 53622,
},
[423107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hymdall",
["npcID"] = 206644,
},
[412868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karokta",
["npcID"] = 203625,
},
[388001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[422813] = {
["source"] = "Guardian Ordan",
["event"] = "SPELL_CAST_START",
["npcID"] = 208727,
},
[400288] = {
["source"] = "Unstable Pain",
["event"] = "SPELL_CAST_START",
["npcID"] = 201290,
},
[176611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lesser Brimfury",
["npcID"] = 85924,
},
[388002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[365477] = {
["source"] = "Dreadlord Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 181797,
},
[375716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191206,
},
[385955] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[240095] = {
["source"] = "Fel Commander Urgoz",
["event"] = "SPELL_CAST_START",
["npcID"] = 118006,
},
[43649] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[163447] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["npcID"] = 80005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1736,
},
[377765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windborne Primalist",
["npcID"] = 189485,
},
[169445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[439488] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[76612] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Zealot",
["npcID"] = 39990,
},
[295856] = {
["source"] = "Guardian of Azeroth",
["event"] = "SPELL_CAST_START",
["npcID"] = 152396,
},
[76100] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[387224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dracthyr Mender",
["npcID"] = 201069,
},
[408483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Magma Serpent",
["npcID"] = 203846,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[404388] = {
["source"] = "Hatching Egg",
["event"] = "SPELL_CAST_START",
["npcID"] = 202897,
},
[381470] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[209378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imacu'tya",
["npcID"] = 104275,
},
[385959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defense Orb",
["npcID"] = 195184,
},
[427200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[12058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Dwarf Magus",
["npcID"] = 29979,
},
[389532] = {
["source"] = "Morlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 201549,
},
[361387] = {
["source"] = "Antros",
["event"] = "SPELL_CAST_START",
["npcID"] = 182466,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207796,
},
[162280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blook",
["npcID"] = 78030,
},
[373692] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[271287] = {
["source"] = "Unbound Stormsurge",
["event"] = "SPELL_CAST_START",
["npcID"] = 141123,
},
[373678] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[57984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Fire Elemental",
["npcID"] = 61029,
},
[392105] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[400300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[387748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurgan",
["npcID"] = 201540,
},
[258338] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126847,
},
[404209] = {
["source"] = "Veltrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 200904,
},
[312584] = {
["source"] = "Aqir Venomweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 161229,
},
[385172] = {
["source"] = "Wind Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 191645,
},
[388290] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189813,
},
[167401] = {
["source"] = "Jabberback",
["event"] = "SPELL_CAST_START",
["npcID"] = 79726,
},
[410537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[404394] = {
["source"] = "Reisa the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 200600,
},
[195046] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[98043] = {
["encounterName"] = "Lord Rhyolith",
["source"] = "Lord Rhyolith",
["encounterID"] = 1204,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 52558,
},
[271291] = {
["source"] = "Blacktooth Scrapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 129097,
},
[307639] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 157354,
},
[384194] = {
["source"] = "Primalist Cinderweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[15586] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[231532] = {
["source"] = "Pyrestar Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 114845,
},
[404396] = {
["source"] = "Pyrachniss",
["event"] = "SPELL_CAST_START",
["npcID"] = 200978,
},
[373680] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2609,
},
[83915] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 44715,
},
[396208] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197126,
},
[15970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightmare Wyrmkin",
["npcID"] = 5280,
},
[398254] = {
["source"] = "Winterpelt Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 200362,
},
[392111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Crusher",
["npcID"] = 185814,
},
[420782] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Lavatongue",
["npcID"] = 208661,
},
[36227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unamused Imp",
["npcID"] = 110721,
},
[231901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Test Subject",
["npcID"] = 116285,
},
[160372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverblood Frostbinder",
["npcID"] = 78869,
},
[41091] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowmoon Houndmaster",
["npcID"] = 23018,
},
[157165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Zealot",
["npcID"] = 77132,
},
[166380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Captain",
["npcID"] = 82597,
},
[408495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Magma Serpent",
["npcID"] = 203846,
},
[79850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquarius the Unbound",
["npcID"] = 47009,
},
[404400] = {
["source"] = "Pyrachniss",
["event"] = "SPELL_CAST_START",
["npcID"] = 200978,
},
[3110] = {
["source"] = "Nalmir",
["event"] = "SPELL_CAST_START",
["npcID"] = 416,
},
[375732] = {
["isChanneled"] = true,
["source"] = "Conjured Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191164,
},
[305515] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["encounterID"] = 2326,
["event"] = "SPELL_CAST_START",
["npcID"] = 156501,
},
[289727] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnomish Commando",
["npcID"] = 148442,
},
[128249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 58756,
},
[306953] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Shad'har the Insatiable",
["encounterID"] = 2335,
["event"] = "SPELL_CAST_START",
["npcID"] = 157231,
},
[377017] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[36228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rental Shredder",
["npcID"] = 38650,
},
[382143] = {
["source"] = "Turi Flickerflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199740,
},
[278961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diseased Lasher",
["npcID"] = 133870,
},
[131570] = {
["source"] = "Skullcrusher Gundu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70787,
},
[404403] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[199146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gildedfur Stag",
["npcID"] = 96609,
},
[162244] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sharpfang Stalker",
["npcID"] = 76685,
},
[385974] = {
["encounterName"] = "Vexamus",
["source"] = "Professor Maxdormu",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 189668,
},
[297923] = {
["source"] = "Zanj'ir Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 152883,
},
[170480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Voidaxe",
["npcID"] = 79589,
},
[255591] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["encounterID"] = 2084,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122967,
},
[407296] = {
["source"] = "Erupting Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199838,
},
[299973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Killsaw",
["npcID"] = 152007,
},
[257784] = {
["source"] = "Bilge Rat Brinescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 129600,
},
[79616] = {
["isChanneled"] = true,
["source"] = "Felhunter Minion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175166,
},
[312257] = {
["source"] = "Zara'thik Depthspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 162887,
},
[97022] = {
["encounterName"] = "Jin'do the Godbreaker",
["source"] = "Shredtooth Frenzy",
["npcID"] = 52430,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1182,
},
[316353] = {
["source"] = "Wastewander Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 154462,
},
[171503] = {
["isChanneled"] = true,
["source"] = "Adherent Wind-Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81934,
},
[396475] = {
["source"] = "Apex Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 191705,
},
[289733] = {
["source"] = "Jek'kwa",
["event"] = "SPELL_CAST_START",
["npcID"] = 148621,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[100094] = {
["source"] = "Harbinger of Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 53793,
},
[404409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[411916] = {
["source"] = "Sundered Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205673,
},
[145907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Skullsplitter",
["npcID"] = 72744,
},
[393615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Amaa",
["npcID"] = 188715,
},
[406282] = {
["source"] = "Sundered Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201746,
},
[51587] = {
["source"] = "Dragonflayer Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 28410,
},
[373693] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[369853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burly Rock-Thrower",
["npcID"] = 184019,
},
[336834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Riftcrasher",
["npcID"] = 184606,
},
[52611] = {
["source"] = "Master Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 27732,
},
[374544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[312262] = {
["source"] = "Zara'thik Depthspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 162887,
},
[414652] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[304075] = {
["source"] = "Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 155908,
},
[277451] = {
["source"] = "Tech Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 155195,
},
[271310] = {
["source"] = "Pathfinder Tacha",
["event"] = "SPELL_CAST_START",
["npcID"] = 200263,
},
[283598] = {
["encounterName"] = "Champion of the Light",
["source"] = "Frida Ironbellows",
["encounterID"] = 2265,
["event"] = "SPELL_CAST_START",
["npcID"] = 144680,
},
[299979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sawblade Clearcutter",
["npcID"] = 151871,
},
[138742] = {
["source"] = "Farraki Sand Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69899,
},
[131575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monk Trainee",
["npcID"] = 66947,
},
[157173] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felguard",
["npcID"] = 79507,
},
[199151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[408509] = {
["source"] = "Portalkeeper Cimbra",
["event"] = "SPELL_CAST_START",
["npcID"] = 202613,
},
[369602] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["npcID"] = 184580,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2555,
},
[150677] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["npcID"] = 74790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1654,
},
[373698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[318409] = {
["source"] = "Shath'Yar Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 163690,
},
[41093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Houndmaster",
["npcID"] = 23018,
},
[404415] = {
["source"] = "Damned Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 202922,
},
[256489] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[285893] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Gonk's Aspect",
["encounterID"] = 2268,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 144767,
},
[116990] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stone Quilen",
["npcID"] = 60576,
},
[265169] = {
["source"] = "Archelion Great Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 130918,
},
[308172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Voidspeaker",
["npcID"] = 152722,
},
[326602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Borer",
["npcID"] = 170767,
},
[197105] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[203371] = {
["source"] = "Hill Ettin",
["event"] = "SPELL_CAST_START",
["npcID"] = 102886,
},
[408502] = {
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 204412,
},
[198959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Runecarver",
["npcID"] = 96664,
},
[360414] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["npcID"] = 180773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2512,
},
[265168] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[87179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dalaran Summoner",
["npcID"] = 2358,
},
[16561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Primalist",
["npcID"] = 82857,
},
[63032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Heartwise",
["npcID"] = 33443,
},
[373051] = {
["source"] = "Mudfin Salamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186669,
},
[398276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[273604] = {
["source"] = "Brutus Thornton",
["event"] = "SPELL_CAST_START",
["npcID"] = 139136,
},
[54916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparktouched Oracle",
["npcID"] = 28112,
},
[157053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[162295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trained Bonestripper",
["npcID"] = 72650,
},
[373943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[320463] = {
["source"] = "Steelskin Linebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 160479,
},
[247396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zulian Inquisitor",
["npcID"] = 124549,
},
[311035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xari the Kind",
["npcID"] = 159119,
},
[139771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Celestial Shaper",
["npcID"] = 70240,
},
[112896] = {
["source"] = "Frostmane Flesh-Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 70746,
},
[267459] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Forgotten Denizen",
["npcID"] = 136083,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2133,
},
[412614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viridian King",
["npcID"] = 201029,
},
[7154] = {
["encounterName"] = "Antu'sul",
["source"] = "Sandfury Soul Eater",
["npcID"] = 7247,
["event"] = "SPELL_CAST_START",
["encounterID"] = 595,
},
[320465] = {
["source"] = "Memory of a Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202555,
},
[314322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kzit'kovok",
["npcID"] = 160867,
},
[20805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudsnout Shaman",
["npcID"] = 2373,
},
[386700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Froststalker",
["npcID"] = 199795,
},
[115010] = {
["encounterName"] = "Taran Zhu",
["source"] = "Gripping Hatred",
["npcID"] = 59804,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[314325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kzit'kovok",
["npcID"] = 160867,
},
[34259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atal'ai Deathwalker",
["npcID"] = 5271,
},
[359374] = {
["source"] = "Defective Reformatter",
["event"] = "SPELL_CAST_START",
["npcID"] = 181862,
},
[400333] = {
["source"] = "Cliffkeeper Bouldani",
["event"] = "SPELL_CAST_START",
["npcID"] = 202612,
},
[119552] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[256494] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[114864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[407733] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[194038] = {
["source"] = "Gleamhoof Stag",
["event"] = "SPELL_CAST_START",
["npcID"] = 93313,
},
[414665] = {
["source"] = "Murloc Gillbeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 205823,
},
[187895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Defender",
["npcID"] = 146341,
},
[287705] = {
["source"] = "Ancient Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 148393,
},
[314326] = {
["source"] = "Crushing Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 161312,
},
[372296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontorch Commander",
["npcID"] = 189466,
},
[15587] = {
["source"] = "Anvilrage Medic",
["event"] = "SPELL_CAST_START",
["npcID"] = 8894,
},
[11986] = {
["source"] = "Twilight Apostle",
["event"] = "SPELL_CAST_START",
["npcID"] = 30179,
},
[388046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[268030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidesage Spiritualist",
["npcID"] = 136186,
},
[118529] = {
["source"] = "Mogu'shan Secret-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61131,
},
[123649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargesh Ribcrusher",
["npcID"] = 61947,
},
[119553] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[60227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
},
[394416] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Flamewrought Eradicator",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198311,
},
[96516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lesser Priest of Bethekk",
["npcID"] = 52339,
},
[121601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Stormcaller",
["npcID"] = 61946,
},
[123648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Stormcaller",
["npcID"] = 61946,
},
[400335] = {
["source"] = "Vraken the Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200584,
},
[166397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Scout",
["npcID"] = 82590,
},
[173563] = {
["encounterName"] = "Yalnu",
["source"] = "Feral Lasher",
["npcID"] = 86684,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[404654] = {
["source"] = "Grugoth the Hullcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200721,
},
[167420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Liadrin",
["npcID"] = 79823,
},
[194019] = {
["source"] = "Deeprock Scrapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 98003,
},
[314331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kzit'kovok",
["npcID"] = 160867,
},
[68872] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[310236] = {
["source"] = "Kilxl the Gaping Maw",
["event"] = "SPELL_CAST_START",
["npcID"] = 157266,
},
[304093] = {
["source"] = "Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 155908,
},
[119554] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[406481] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[200185] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[193018] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[418121] = {
["source"] = "Klaxxi Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 207923,
},
[137729] = {
["encounterName"] = "Megaera",
["source"] = "Flaming Head",
["npcID"] = 70212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[383953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bakar Companion",
["npcID"] = 194255,
},
[336859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azmogal",
["npcID"] = 162873,
},
[412626] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Zskorro",
["npcID"] = 203592,
},
[63138] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[150801] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["npcID"] = 74787,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1653,
},
[313691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aysa Cloudsinger",
["npcID"] = 159129,
},
[365745] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Cartel Overseer",
["npcID"] = 184792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2553,
},
[316383] = {
["source"] = "Anubisath Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 162534,
},
[393607] = {
["source"] = "Bloodclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187553,
},
[221688] = {
["source"] = "Braxas the Fleshcarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 111290,
},
[373084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontorch Commander",
["npcID"] = 189466,
},
[257383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warlord Malaja",
["npcID"] = 122664,
},
[365744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[393411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rakkesh of the Flow",
["npcID"] = 193849,
},
[259572] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["encounterID"] = 2085,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122965,
},
[417497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rude Crude",
["npcID"] = 206617,
},
[375770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozion",
["npcID"] = 193655,
},
[79886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Instructor Rufus",
["npcID"] = 48922,
},
[209404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Arcanist",
["npcID"] = 104247,
},
[398296] = {
["source"] = "Shambling Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 200387,
},
[293861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ernst",
["npcID"] = 151629,
},
[85685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Godfrey",
["npcID"] = 45878,
},
[185854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightmare Rider",
["npcID"] = 92792,
},
[427175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[34697] = {
["encounterName"] = "Laj",
["source"] = "Laj",
["npcID"] = 17980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1927,
},
[197117] = {
["encounterName"] = "Helya",
["source"] = "Piercing Tentacle",
["encounterID"] = 1824,
["event"] = "SPELL_CAST_START",
["npcID"] = 100188,
},
[311015] = {
["source"] = "Monstrous Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 159303,
},
[334538] = {
["source"] = "Arch-Suppressor Laguas",
["event"] = "SPELL_CAST_START",
["npcID"] = 185019,
},
[277481] = {
["source"] = "Armed Prisoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 154011,
},
[193022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Deathspeaker",
["npcID"] = 96196,
},
[388060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[406493] = {
["source"] = "Spinmarrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 203480,
},
[310246] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["encounterID"] = 2343,
["event"] = "SPELL_CAST_START",
["npcID"] = 157602,
},
[188927] = {
["source"] = "Darkfiend Dreadbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 92789,
},
[123652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargesh Ribcrusher",
["npcID"] = 61947,
},
[398300] = {
["source"] = "Shambling Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 200387,
},
[373733] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[336868] = {
["source"] = "Monstrous Riftcrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 184606,
},
[51586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Spiritualist",
["npcID"] = 28410,
},
[260701] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[102151] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["npcID"] = 54544,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1884,
},
[386015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormspeaker",
["npcID"] = 194894,
},
[222716] = {
["source"] = "Taintheart Befouler",
["event"] = "SPELL_CAST_START",
["npcID"] = 111354,
},
[283628] = {
["source"] = "Anointed Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 145898,
},
[32197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[32325] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["encounterID"] = 1900,
["event"] = "SPELL_CAST_START",
["npcID"] = 18341,
},
[185857] = {
["source"] = "Ashvane Marine",
["event"] = "SPELL_CAST_START",
["npcID"] = 130027,
},
[366187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Muscle",
["npcID"] = 183499,
},
[112084] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["npcID"] = 58826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1417,
},
[285878] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Akunda's Aspect",
["npcID"] = 144941,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2268,
},
[398504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfurous Viper",
["npcID"] = 205814,
},
[406495] = {
["source"] = "Ookbeard",
["event"] = "SPELL_CAST_START",
["npcID"] = 200956,
},
[351206] = {
["source"] = "Mawsworn Soulwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 176575,
},
[3611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Magus Doane",
["npcID"] = 397,
},
[429021] = {
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 40936,
},
[275440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blight Hound",
["npcID"] = 146564,
},
[390115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sarana",
["npcID"] = 190161,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["npcID"] = 81522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[297966] = {
["source"] = "Maw of the Maw",
["event"] = "SPELL_CAST_START",
["npcID"] = 185013,
},
[150023] = {
["encounterName"] = "Magmolatus",
["source"] = "Magmolatus",
["npcID"] = 74475,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1655,
},
[173573] = {
["source"] = "Fluttering Teromoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 79595,
},
[418784] = {
["source"] = "Supreme General Pa'valak",
["event"] = "SPELL_CAST_START",
["npcID"] = 208211,
},
[195172] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[256506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horker",
["npcID"] = 169460,
},
[163334] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Neesa Nox",
["npcID"] = 80808,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1748,
},
[386012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Boroo",
["npcID"] = 194317,
},
[123654] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["npcID"] = 61444,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[396640] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Ancient Branch",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196548,
},
[192003] = {
["encounterName"] = "Serpentrix",
["source"] = "Blazing Hydra Spawn",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 97259,
},
[390111] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[369061] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[14443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gai-Cho Boltshooter",
["npcID"] = 62589,
},
[383975] = {
["source"] = "Raging Windlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200390,
},
[13860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baron Ashbury",
["npcID"] = 45880,
},
[420817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Sentinel",
["npcID"] = 207117,
},
[240126] = {
["source"] = "Fel Commander Urgoz",
["event"] = "SPELL_CAST_START",
["npcID"] = 118006,
},
[260699] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[209410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Arcanist",
["npcID"] = 104247,
},
[412835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nozdormu",
["npcID"] = 198971,
},
[20295] = {
["encounterName"] = "Lady Anacondra",
["source"] = "Lady Anacondra",
["encounterID"] = 585,
["event"] = "SPELL_CAST_START",
["npcID"] = 3671,
},
[318449] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[41098] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowmoon Weapon Master",
["npcID"] = 23049,
},
[192005] = {
["encounterName"] = "Serpentrix",
["source"] = "Arcane Hydra Spawn",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 97260,
},
[340975] = {
["source"] = "Gnarlbranch Wrecker",
["event"] = "SPELL_CAST_START",
["npcID"] = 163967,
},
[408551] = {
["source"] = "Crystalline Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 201063,
},
[386026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Squall",
["npcID"] = 194895,
},
[404456] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[396069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshard",
["npcID"] = 185647,
},
[416743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungering Ghoul",
["npcID"] = 206016,
},
[418791] = {
["source"] = "Supreme General Pa'valak",
["event"] = "SPELL_CAST_START",
["npcID"] = 208211,
},
[398500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conflagrated Rock Cobra",
["npcID"] = 203328,
},
[418024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of the Lich King",
["npcID"] = 207386,
},
[378022] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[386028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[209033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Guard",
["npcID"] = 111563,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[383981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rising Tempest",
["npcID"] = 194575,
},
[322541] = {
["isChanneled"] = true,
["source"] = "Horrific Bonemauler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162109,
},
[354586] = {
["source"] = "Troz'igal the Oppressor",
["event"] = "SPELL_CAST_START",
["npcID"] = 179526,
},
[386024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormspeaker",
["npcID"] = 194894,
},
[209413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Construct",
["npcID"] = 104270,
},
[295929] = {
["source"] = "Oddly Large Mawrat",
["event"] = "SPELL_CAST_START",
["npcID"] = 154030,
},
[404695] = {
["event"] = "SPELL_CAST_START",
["source"] = "First Mate Ovdah",
["npcID"] = 201182,
},
[275452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blight Hound",
["npcID"] = 146564,
},
[235310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistress Matilda",
["npcID"] = 118511,
},
[332239] = {
["source"] = "Goxul the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 170418,
},
[185425] = {
["source"] = "Steeljaw Grizzly",
["event"] = "SPELL_CAST_START",
["npcID"] = 96677,
},
[260697] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[269310] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Titan Keeper Hezrel",
["npcID"] = 134419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2123,
},
[418796] = {
["source"] = "Supreme General Pa'valak",
["event"] = "SPELL_CAST_START",
["npcID"] = 208211,
},
[429037] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40825,
},
[56969] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[369828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Basilisk",
["npcID"] = 184023,
},
[387337] = {
["source"] = "Primalist Earthrazer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203739,
},
[361452] = {
["source"] = "Engorged Annelid",
["event"] = "SPELL_CAST_START",
["npcID"] = 180722,
},
[199176] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[115510] = {
["source"] = "Shan'ze Spiritclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 55291,
},
[76047] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[420846] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[106807] = {
["encounterName"] = "Ook-Ook",
["source"] = "Ook-Ook",
["npcID"] = 56637,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1412,
},
[416751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vargul Mystic",
["npcID"] = 207805,
},
[59529] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["npcID"] = 28587,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1985,
},
[404465] = {
["source"] = "Galakhad",
["event"] = "SPELL_CAST_START",
["npcID"] = 200717,
},
[277308] = {
["source"] = "Hex Priest Haraka",
["event"] = "SPELL_CAST_START",
["npcID"] = 141959,
},
[406686] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Djaradin Magmashaper",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 202257,
},
[421020] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["npcID"] = 208363,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[150448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pale Flinger",
["npcID"] = 76465,
},
[211464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felbound Enforcer",
["npcID"] = 104278,
},
[425115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fruitface",
["npcID"] = 209913,
},
[56898] = {
["source"] = "Twilight Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 30319,
},
[338939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decrepit Bilespawn",
["npcID"] = 166928,
},
[150032] = {
["encounterName"] = "Magmolatus",
["source"] = "Magmolatus",
["npcID"] = 74475,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1655,
},
[310271] = {
["source"] = "Will of N'Zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 154495,
},
[201226] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Fury",
["npcID"] = 100531,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[403671] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[406516] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[353443] = {
["source"] = "Empowered Mawsworn Cremator",
["event"] = "SPELL_CAST_START",
["npcID"] = 179080,
},
[336893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azmogal",
["npcID"] = 162873,
},
[222728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wisp",
["npcID"] = 112252,
},
[377844] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[330755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Octolus",
["npcID"] = 182690,
},
[40076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Wrangler",
["npcID"] = 22877,
},
[412661] = {
["source"] = "Invoq",
["event"] = "SPELL_CAST_START",
["npcID"] = 203627,
},
[20296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 4289,
},
[40844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Worker",
["npcID"] = 22963,
},
[10277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torn Fin Coastrunner",
["npcID"] = 2375,
},
[401810] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[308227] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[54431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgefin Invader",
["npcID"] = 98502,
},
[79860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Mage",
["npcID"] = 46048,
},
[404472] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[162321] = {
["source"] = "Bladespire Ogron",
["event"] = "SPELL_CAST_START",
["npcID"] = 78173,
},
[298691] = {
["encounterName"] = "Alleria Windrunner",
["source"] = "Alleria Windrunner",
["npcID"] = 152718,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2338,
},
[147704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Kilnmaster",
["npcID"] = 72896,
},
[404473] = {
["source"] = "Galakhad",
["event"] = "SPELL_CAST_START",
["npcID"] = 200717,
},
[396991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Breaker",
["npcID"] = 187240,
},
[200205] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[209027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Guard",
["npcID"] = 111563,
},
[420856] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[377270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffdrip Wavemender",
["npcID"] = 189814,
},
[302089] = {
["source"] = "Sean Wilkers",
["event"] = "SPELL_CAST_START",
["npcID"] = 155261,
},
[271371] = {
["source"] = "Ogre Taskmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 156986,
},
[198962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Runecarver",
["npcID"] = 96664,
},
[84037] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 40792,
},
[429051] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40825,
},
[70074] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crown Technician",
["npcID"] = 114275,
},
[161299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mandragora Lifedrinker",
["npcID"] = 80699,
},
[378012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmasworn Flameweaver",
["npcID"] = 193414,
},
[196111] = {
["encounterName"] = "Serpentrix",
["source"] = "Seaspray Crab",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91793,
},
[283626] = {
["encounterName"] = "Champion of the Light",
["source"] = "Anointed Disciple",
["npcID"] = 145898,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2265,
},
[166420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Deadeye",
["npcID"] = 81422,
},
[375812] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infused Whelp",
["npcID"] = 187083,
},
[50335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abomination",
["npcID"] = 46058,
},
[363525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Purger",
["npcID"] = 183652,
},
[412669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klakatak",
["npcID"] = 203618,
},
[211470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Mistress",
["npcID"] = 104300,
},
[408574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 202692,
},
[107120] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Commander Ri'mok",
["encounterID"] = 1406,
["event"] = "SPELL_CAST_START",
["npcID"] = 56636,
},
[421013] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[150038] = {
["encounterName"] = "Magmolatus",
["source"] = "Magmolatus",
["npcID"] = 74475,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1655,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1040,
},
[145552] = {
["source"] = "Irontide Coin Counter",
["event"] = "SPELL_CAST_START",
["npcID"] = 202398,
},
[404480] = {
["source"] = "Ebon Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 201647,
},
[260617] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zuvembi Brewer Zekal",
["npcID"] = 130260,
},
[392194] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[197137] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[311019] = {
["source"] = "Monstrous Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 159303,
},
[206459] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Avatar of Shadow",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 104293,
},
[192018] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[112911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Hatred",
["npcID"] = 58810,
},
[381517] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[154135] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["npcID"] = 76141,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1699,
},
[369818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Berserker",
["npcID"] = 184020,
},
[299437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Scraphound",
["npcID"] = 151301,
},
[390150] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[311544] = {
["source"] = "Sanguimar",
["event"] = "SPELL_CAST_START",
["npcID"] = 159767,
},
[390834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sarana",
["npcID"] = 190161,
},
[150755] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["npcID"] = 74790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1654,
},
[169494] = {
["source"] = "Gnarlroot",
["event"] = "SPELL_CAST_START",
["npcID"] = 81984,
},
[211473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Mistress",
["npcID"] = 104300,
},
[40078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leviathan",
["npcID"] = 22884,
},
[312336] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 156575,
},
[308190] = {
["source"] = "Harrier Nir'verash",
["event"] = "SPELL_CAST_START",
["npcID"] = 160868,
},
[395859] = {
["source"] = "Haunting Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 59555,
},
[378029] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[336910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[144922] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Animated Stone Mogu",
["npcID"] = 71380,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[412889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zakajz",
["npcID"] = 198953,
},
[197141] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[172567] = {
["source"] = "Frostwall Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 81368,
},
[412678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klakatak",
["npcID"] = 203618,
},
[267288] = {
["source"] = "Earthen Ring Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 135671,
},
[106823] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[406527] = {
["source"] = "Banana Bomber",
["event"] = "SPELL_CAST_START",
["npcID"] = 203641,
},
[259597] = {
["source"] = "Child of Gonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 127254,
},
[59020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitting Cobra",
["npcID"] = 29774,
},
[343056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heraclor",
["npcID"] = 172025,
},
[386059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[382101] = {
["source"] = "Rebel Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 195063,
},
[404626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Han'thul",
["npcID"] = 198914,
},
[373960] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[214692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gerenth the Vile",
["npcID"] = 107435,
},
[276991] = {
["source"] = "Ogre Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 156676,
},
[365572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Grunt",
["npcID"] = 184733,
},
[315697] = {
["source"] = "Zara'thik Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 162885,
},
[369675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonevault Geomancer",
["npcID"] = 184022,
},
[365717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifestor Krugan",
["npcID"] = 185363,
},
[388911] = {
["source"] = "Spellbound Battleaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 196577,
},
[384014] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[15653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightmare Wyrmkin",
["npcID"] = 5280,
},
[209495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Construct",
["npcID"] = 104270,
},
[316439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarmguard Kzaz",
["npcID"] = 155723,
},
[170517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Explosive",
["npcID"] = 78479,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[173479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cannon Turret",
["npcID"] = 86690,
},
[115506] = {
["encounterName"] = "Brother Korloff",
["source"] = "Scarlet Flamethrower",
["encounterID"] = 1424,
["event"] = "SPELL_CAST_START",
["npcID"] = 59705,
},
[392207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gareed",
["npcID"] = 200722,
},
[40079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leviathan",
["npcID"] = 22884,
},
[172635] = {
["source"] = "Shattered Hand Reaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 84086,
},
[395827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parched Broadhoof Bull",
["npcID"] = 194352,
},
[310298] = {
["source"] = "Sinister Soulcarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 162717,
},
[197144] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[355349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reality Breacher",
["npcID"] = 184185,
},
[398479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hibernating Worm",
["npcID"] = 204742,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1040,
},
[160285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goren Gouger",
["npcID"] = 80690,
},
[404496] = {
["source"] = "Ebon Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 201383,
},
[375068] = {
["encounterName"] = "Magmatusk",
["source"] = "Lava Tentacles",
["npcID"] = 190023,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[294491] = {
["source"] = "Timeling",
["event"] = "SPELL_CAST_START",
["npcID"] = 186479,
},
[260703] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[128304] = {
["source"] = "Shado-Pan Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 58198,
},
[199193] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[365272] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["npcID"] = 181551,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[256039] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 127503,
},
[263206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loa-Gutter Darter",
["npcID"] = 128048,
},
[200216] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[148001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Chanter",
["npcID"] = 72897,
},
[397014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Emissary",
["npcID"] = 197146,
},
[420881] = {
["source"] = "Zaqali Ashwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 208659,
},
[285725] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Kul Tiran Marine",
["npcID"] = 148120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[200218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[394261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurblbrblr the Invader",
["npcID"] = 197211,
},
[173180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneshamble Basilisk",
["npcID"] = 74962,
},
[314518] = {
["source"] = "R'khuzj the Unfathomable",
["event"] = "SPELL_CAST_START",
["npcID"] = 156299,
},
[246286] = {
["source"] = "Vilescale Harpooner",
["event"] = "SPELL_CAST_START",
["npcID"] = 123771,
},
[172574] = {
["source"] = "Ironwing Flamespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 86373,
},
[314400] = {
["source"] = "Living Blood",
["event"] = "SPELL_CAST_START",
["npcID"] = 159312,
},
[375950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[144932] = {
["source"] = "Thunderlord Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 74329,
},
[386072] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[412693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magtembo",
["npcID"] = 200111,
},
[386757] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[375834] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[394264] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyenamaster Durgun",
["npcID"] = 186515,
},
[41360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Promenade Sentinel",
["npcID"] = 23394,
},
[390169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmaclaw Raider",
["npcID"] = 187218,
},
[142883] = {
["source"] = "Maragor",
["event"] = "SPELL_CAST_START",
["npcID"] = 71492,
},
[161314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mandrakor",
["npcID"] = 84406,
},
[396313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Stormcaller",
["npcID"] = 185147,
},
[291878] = {
["encounterName"] = "King Mechagon",
["source"] = "Aerial Unit R-21/X",
["npcID"] = 150396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2260,
},
[343072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heraclor",
["npcID"] = 172025,
},
[148003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Kilnmaster",
["npcID"] = 72896,
},
[114965] = {
["isChanneled"] = true,
["source"] = "Pearly Tortoise",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59084,
},
[262577] = {
["source"] = "Diremaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 128620,
},
[142884] = {
["source"] = "Maragor",
["event"] = "SPELL_CAST_START",
["npcID"] = 71492,
},
[125204] = {
["source"] = "Forgotten King",
["event"] = "SPELL_CAST_START",
["npcID"] = 67081,
},
[396315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Stormcaller",
["npcID"] = 185147,
},
[125716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Tempest",
["npcID"] = 64358,
},
[61326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[148004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Kilnmaster",
["npcID"] = 72896,
},
[396316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Huntmaster",
["npcID"] = 185353,
},
[265241] = {
["source"] = "Lazy Drudge",
["event"] = "SPELL_CAST_START",
["npcID"] = 135190,
},
[359459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Guardian",
["npcID"] = 183947,
},
[38033] = {
["source"] = "Hatecoil Spitespeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 89025,
},
[396317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[195103] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Wandering Shellback",
["encounterID"] = 1810,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91785,
},
[196127] = {
["source"] = "Mak'rana Siltwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91790,
},
[172578] = {
["isChanneled"] = true,
["source"] = "Melded Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86372,
},
[412700] = {
["source"] = "Magtembo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200111,
},
[258202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Guardian",
["npcID"] = 128302,
},
[384032] = {
["source"] = "Amethyzar the Glittering",
["event"] = "SPELL_CAST_START",
["npcID"] = 193132,
},
[271406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maw of Shul-Nagruth",
["npcID"] = 128610,
},
[139797] = {
["encounterName"] = "Iron Qon",
["source"] = "Manchu",
["npcID"] = 70202,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1559,
},
[11981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hakkari Sapper",
["npcID"] = 8336,
},
[256589] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126847,
},
[412806] = {
["source"] = "Risen Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205804,
},
[16587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Tutor",
["npcID"] = 8548,
},
[150054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pale Flinger",
["npcID"] = 76465,
},
[139867] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[410655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[400413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[260684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zuvembi Brewer Zekal",
["npcID"] = 130260,
},
[154442] = {
["encounterName"] = "Ner'zhul",
["source"] = "Ner'zhul",
["encounterID"] = 1682,
["event"] = "SPELL_CAST_START",
["npcID"] = 76407,
},
[162407] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["npcID"] = 77803,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[420895] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[398370] = {
["source"] = "Calcifying Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 203342,
},
[150214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Geomagus",
["npcID"] = 74545,
},
[215633] = {
["isChanneled"] = true,
["source"] = "Thistleleaf Menace",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 108259,
},
[400407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nidharr",
["npcID"] = 201310,
},
[59716] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 76242,
},
[12471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atal'ai High Priest",
["npcID"] = 5273,
},
[369703] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[260635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Tzxi'kik",
["npcID"] = 128974,
},
[316463] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Mindgate",
["npcID"] = 158374,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[377991] = {
["source"] = "Guardian Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[361513] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["npcID"] = 181224,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2540,
},
[298033] = {
["source"] = "SI:7 Informant",
["event"] = "SPELL_CAST_START",
["npcID"] = 156795,
},
[406564] = {
["source"] = "Ookbeard",
["event"] = "SPELL_CAST_START",
["npcID"] = 200956,
},
[384134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Warspear",
["npcID"] = 192791,
},
[131627] = {
["source"] = "Sha Haunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66423,
},
[404517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[300082] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volatile Tide Surger",
["npcID"] = 150371,
},
[260258] = {
["source"] = "Void Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 126538,
},
[40082] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Harpooner",
["npcID"] = 22874,
},
[396327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[195108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 111638,
},
[408614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devastator",
["npcID"] = 198869,
},
[289937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rastari Punisher",
["npcID"] = 148667,
},
[196126] = {
["source"] = "Feltotem Demonkindre",
["event"] = "SPELL_CAST_START",
["npcID"] = 96615,
},
[20811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magistrate Burnside",
["npcID"] = 47790,
},
[424997] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["npcID"] = 208459,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2731,
},
[209443] = {
["encounterName"] = "Xavius",
["source"] = "Xavius",
["encounterID"] = 1864,
["event"] = "SPELL_CAST_START",
["npcID"] = 103769,
},
[306228] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Flayed Soul",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 157005,
},
[195109] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[310324] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 157354,
},
[377900] = {
["source"] = "Qalashi Skullhauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 199298,
},
[396330] = {
["source"] = "Nokhud Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 185357,
},
[400430] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[308366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Darkspeak",
["npcID"] = 158136,
},
[201959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113536,
},
[258634] = {
["source"] = "Ashvane Flamecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 127488,
},
[308278] = {
["encounterName"] = "Alleria Windrunner",
["source"] = "Alleria Windrunner",
["npcID"] = 152718,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2338,
},
[159318] = {
["source"] = "Frostwolf Axethrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 74799,
},
[336947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[273467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubis Invader",
["npcID"] = 145660,
},
[169571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dionor Seedpriest",
["npcID"] = 81721,
},
[388623] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196482,
},
[199034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Aspirant",
["npcID"] = 101637,
},
[310329] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["encounterID"] = 2343,
["event"] = "SPELL_CAST_START",
["npcID"] = 157602,
},
[68895] = {
["source"] = "Spiteful Apparition",
["event"] = "SPELL_CAST_START",
["npcID"] = 36551,
},
[408620] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 200836,
},
[374112] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Frostbreath Arachnid",
["npcID"] = 189234,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[420907] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[118552] = {
["source"] = "Mogu'shan Secret-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61131,
},
[16102] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[32330] = {
["source"] = "Lykul Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 17732,
},
[136751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Cave Bat",
["npcID"] = 69351,
},
[414993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Cassaphine",
["npcID"] = 206818,
},
[351285] = {
["source"] = "Prince Renathal",
["event"] = "SPELL_CAST_START",
["npcID"] = 178006,
},
[394288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurblbrblr the Invader",
["npcID"] = 197211,
},
[355381] = {
["source"] = "Reality Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 184185,
},
[382002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Blazewing",
["npcID"] = 193291,
},
[310331] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Mind's Eye",
["npcID"] = 158122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[279615] = {
["source"] = "Dark Iron Grenadier",
["event"] = "SPELL_CAST_START",
["npcID"] = 131814,
},
[392239] = {
["source"] = "Mosshair Mammoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193395,
},
[390194] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[95002] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ray-Getz-Kalaba Monstrosity",
["npcID"] = 47793,
},
[172588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melded Berserker",
["npcID"] = 86372,
},
[64145] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Crusher Tentacle",
["npcID"] = 33966,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[43667] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23953,
},
[314433] = {
["source"] = "Living Blood",
["event"] = "SPELL_CAST_START",
["npcID"] = 159312,
},
[121114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Amber-Weaver",
["npcID"] = 61929,
},
[259618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Diemetradon",
["npcID"] = 130756,
},
[316477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ysedra the Darkener",
["npcID"] = 157483,
},
[318525] = {
["source"] = "Shath'Yar Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 163690,
},
[317792] = {
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[398463] = {
["source"] = "Magma Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[422961] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2709,
},
[167470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 78553,
},
[398501] = {
["source"] = "Hunting Rock Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 203783,
},
[11431] = {
["encounterName"] = "Lord Pythas",
["source"] = "Lord Pythas",
["encounterID"] = 588,
["event"] = "SPELL_CAST_START",
["npcID"] = 3670,
},
[257608] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["encounterID"] = 2101,
["event"] = "SPELL_CAST_START",
["npcID"] = 127479,
},
[102173] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["npcID"] = 54544,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1884,
},
[377912] = {
["source"] = "Guardian Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[289859] = {
["source"] = "Gnomish Commando",
["event"] = "SPELL_CAST_START",
["npcID"] = 148442,
},
[406581] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Primal Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202264,
},
[359483] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["npcID"] = 181224,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2540,
},
[336958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[169519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thornling Scavenger",
["npcID"] = 81730,
},
[365627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Shaper",
["npcID"] = 184954,
},
[400439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmslayer Angvardi",
["npcID"] = 201013,
},
[308361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dokani Bloodshaper",
["npcID"] = 153106,
},
[429108] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Cycle Warden",
["npcID"] = 209800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[398392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfira Wanderling",
["npcID"] = 205808,
},
[200238] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1839,
},
[193069] = {
["source"] = "Felsworn Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 96587,
},
[125212] = {
["source"] = "Kor'nas Nightsavage",
["event"] = "SPELL_CAST_START",
["npcID"] = 50338,
},
[422966] = {
["source"] = "Nolaki",
["event"] = "SPELL_CAST_START",
["npcID"] = 208706,
},
[375870] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[386107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Hexclaw",
["npcID"] = 183995,
},
[396346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sirena the Fangbreaker",
["npcID"] = 185907,
},
[398394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deep Krolusk",
["npcID"] = 203898,
},
[38557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thaelin Darkanvil",
["npcID"] = 80886,
},
[294362] = {
["source"] = "Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 155908,
},
[328773] = {
["source"] = "Vault Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200375,
},
[298528] = {
["encounterName"] = "Oblivion Elemental",
["source"] = "Aqir Swarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 153526,
},
[400443] = {
["isChanneled"] = true,
["source"] = "Crumbling Scoria",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201339,
},
[328772] = {
["source"] = "Vault Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200375,
},
[396348] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 197134,
},
[256551] = {
["encounterName"] = "Ring of Booty",
["source"] = "Sawtooth Shark",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 129359,
},
[375871] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[336964] = {
["source"] = "Ember Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 168515,
},
[396349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeak the Ravenous",
["npcID"] = 201535,
},
[398397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmaclaw Supplicant",
["npcID"] = 203933,
},
[163379] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Bombsquad",
["npcID"] = 80875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1748,
},
[68899] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[396350] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeak the Ravenous",
["npcID"] = 201535,
},
[429176] = {
["source"] = "Gilgoblin Aquamage",
["event"] = "SPELL_CAST_START",
["npcID"] = 40943,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[143905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepfrost Lurker",
["npcID"] = 78888,
},
[396351] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[398399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chittering Acidclaw",
["npcID"] = 201093,
},
[384065] = {
["source"] = "Amethyzar the Glittering",
["event"] = "SPELL_CAST_START",
["npcID"] = 193132,
},
[271439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bombarding Zeppelin",
["npcID"] = 136957,
},
[420925] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[196144] = {
["source"] = "Mak'rana Siltwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91790,
},
[392257] = {
["source"] = "Thousandmile",
["event"] = "SPELL_CAST_START",
["npcID"] = 193676,
},
[377923] = {
["source"] = "Bound Spark",
["event"] = "SPELL_CAST_START",
["npcID"] = 186624,
},
[15530] = {
["source"] = "Azure Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 26722,
},
[390210] = {
["source"] = "Mudgatu",
["event"] = "SPELL_CAST_START",
["npcID"] = 197346,
},
[173307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Wrangler",
["npcID"] = 83390,
},
[392660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Hornswog",
["npcID"] = 187111,
},
[119922] = {
["encounterName"] = "Trial of the King",
["source"] = "Kuai the Brute",
["npcID"] = 61442,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[191026] = {
["source"] = "Mirana Starlight",
["event"] = "SPELL_CAST_START",
["npcID"] = 99451,
},
[192050] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91808,
},
[377927] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 192690,
},
[396355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritual Guardian",
["npcID"] = 186787,
},
[122142] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Borokhula the Destroyer",
["npcID"] = 58739,
},
[304261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackwater Oracle",
["npcID"] = 155272,
},
[435263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Ravager",
["npcID"] = 218346,
},
[369921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eldoren the Reborn",
["npcID"] = 193234,
},
[295939] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["source"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2291,
},
[207816] = {
["source"] = "Necrodark Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 104888,
},
[328781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Lurker",
["npcID"] = 199126,
},
[369788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Drakehunter",
["npcID"] = 197788,
},
[260651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karkinus the Capsizer",
["npcID"] = 200907,
},
[351307] = {
["source"] = "Mawsworn Accursed",
["event"] = "SPELL_CAST_START",
["npcID"] = 176572,
},
[260307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venomous Diemetradon",
["npcID"] = 144496,
},
[63891] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[316496] = {
["source"] = "Aqir Heartpiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 162305,
},
[308355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dokani Bloodshaper",
["npcID"] = 153106,
},
[40086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragon Turtle",
["npcID"] = 22885,
},
[265352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blight Toad",
["npcID"] = 135052,
},
[40598] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[269399] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Vol'zith the Whisperer",
["npcID"] = 134069,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2133,
},
[377930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 192692,
},
[420933] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[99618] = {
["source"] = "Flamewaker Cauterizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 53639,
},
[159290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solar Familiar",
["npcID"] = 76097,
},
[7124] = {
["source"] = "Lost Son of Arugal",
["event"] = "SPELL_CAST_START",
["npcID"] = 47015,
},
[404807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Investigator",
["npcID"] = 202320,
},
[308308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Heartpiercer",
["npcID"] = 158092,
},
[425030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Juggernaut",
["npcID"] = 210172,
},
[14887] = {
["source"] = "Firebrand Darkweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 9261,
},
[43665] = {
["source"] = "Dragonflayer Heartsplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 24071,
},
[365646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[302166] = {
["event"] = "SPELL_CAST_START",
["source"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
},
[304214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yox'ith",
["npcID"] = 155706,
},
[176718] = {
["source"] = "Wastewander Tracker",
["event"] = "SPELL_CAST_START",
["npcID"] = 154461,
},
[260654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karkinus the Capsizer",
["npcID"] = 200907,
},
[375929] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[340414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Research",
["npcID"] = 202446,
},
[420937] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208365,
},
[130848] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[425033] = {
["source"] = "Ignit the Firebranded",
["event"] = "SPELL_CAST_START",
["npcID"] = 209620,
},
[202295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feltongue Corruptor",
["npcID"] = 116784,
},
[298073] = {
["source"] = "Kosarus the Fallen",
["event"] = "SPELL_CAST_START",
["npcID"] = 185016,
},
[118049] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[384079] = {
["source"] = "Amethyzar the Glittering",
["event"] = "SPELL_CAST_START",
["npcID"] = 193132,
},
[139838] = {
["encounterName"] = "Megaera",
["source"] = "Venomous Head",
["npcID"] = 70247,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[396366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tikarr Frostclaw",
["npcID"] = 201542,
},
[390223] = {
["source"] = "Flashfrost Tarasek",
["event"] = "SPELL_CAST_START",
["npcID"] = 187089,
},
[425035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Core Hound",
["npcID"] = 210288,
},
[320600] = {
["source"] = "Huwerath",
["event"] = "SPELL_CAST_START",
["npcID"] = 162965,
},
[396367] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 197142,
},
[200248] = {
["source"] = "Risen Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 98280,
},
[392272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grove Forager",
["npcID"] = 186457,
},
[361556] = {
["source"] = "Tarachnid",
["event"] = "SPELL_CAST_START",
["npcID"] = 181685,
},
[406644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Response Team Watcher",
["npcID"] = 202318,
},
[267360] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Vol'zith the Whisperer",
["npcID"] = 134069,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2133,
},
[425037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Core Hound",
["npcID"] = 210288,
},
[396370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 195836,
},
[75068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimfrost Lavaslinger",
["npcID"] = 72987,
},
[195129] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[204344] = {
["source"] = "Blacktalon Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 191955,
},
[32329] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[119586] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 60491,
},
[75645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corla, Herald of Twilight",
["npcID"] = 39679,
},
[425149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Juggernaut",
["npcID"] = 210172,
},
[369750] = {
["source"] = "Qalashi Scaleripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187602,
},
[136769] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 68476,
},
[154175] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["encounterID"] = 1679,
["event"] = "SPELL_CAST_START",
["npcID"] = 75452,
},
[163390] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Neesa Nox",
["npcID"] = 80808,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1748,
},
[139841] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["npcID"] = 70235,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[318534] = {
["source"] = "Umbral Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 163708,
},
[365649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sacred Matrix Automa",
["npcID"] = 184734,
},
[369754] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[211501] = {
["source"] = "Enchanted Broodling",
["event"] = "SPELL_CAST_START",
["npcID"] = 105876,
},
[76584] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["npcID"] = 39990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1038,
},
[328799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veteran Warrior",
["npcID"] = 160959,
},
[369751] = {
["source"] = "Dragonbane Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 186604,
},
[172606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goc",
["npcID"] = 85580,
},
[420947] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["npcID"] = 208363,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[365686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overthrown Protector",
["npcID"] = 184533,
},
[392279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Dragon",
["npcID"] = 194089,
},
[40088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 22875,
},
[422964] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[203323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gornoth the Lost",
["npcID"] = 103656,
},
[392280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaurdyth",
["npcID"] = 197835,
},
[304253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackwater Oracle",
["npcID"] = 155272,
},
[275560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blight Hound",
["npcID"] = 146564,
},
[166464] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[425045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Splinterlimb",
["npcID"] = 209365,
},
[361568] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Renewal",
["npcID"] = 181546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[396360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritual Guardian",
["npcID"] = 186787,
},
[365661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[196157] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Technician",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99645,
},
[384092] = {
["source"] = "Timetender Athekk",
["event"] = "SPELL_CAST_START",
["npcID"] = 193042,
},
[414844] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[166465] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[392283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 191413,
},
[304251] = {
["encounterName"] = "Thrall the Corrupted",
["source"] = "Void Boar",
["encounterID"] = 2332,
["event"] = "SPELL_CAST_START",
["npcID"] = 157349,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[57753] = {
["event"] = "SPELL_CAST_START",
["source"] = "Onyx Blaze Mistress",
["npcID"] = 30681,
},
[392284] = {
["source"] = "Ravenous Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 193145,
},
[377950] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[271487] = {
["source"] = "Tentacle of Shul-Nagruth",
["event"] = "SPELL_CAST_START",
["npcID"] = 128609,
},
[298025] = {
["source"] = "Void Wraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 158707,
},
[374624] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190686,
},
[160323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pale Spider Worshipper",
["npcID"] = 80530,
},
[259298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vilescale Behemoth",
["npcID"] = 123461,
},
[145989] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamated Hubris",
["npcID"] = 72658,
},
[384095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohuna Companion",
["npcID"] = 194254,
},
[40091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 22875,
},
[111398] = {
["isChanneled"] = true,
["source"] = "Scarlet Evangelist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58685,
},
[392273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ergburk",
["npcID"] = 194409,
},
[64152] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[48280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blingtron 5000",
["npcID"] = 77789,
},
[194112] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[122149] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Zar'thik Battle-Mender",
["npcID"] = 62408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[309666] = {
["source"] = "Onyx Warserpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 153208,
},
[386146] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[310392] = {
["source"] = "Synod",
["event"] = "SPELL_CAST_START",
["npcID"] = 159190,
},
[289914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vessel of Bwonsamdi",
["npcID"] = 148673,
},
[200256] = {
["source"] = "Arcane Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 101549,
},
[209471] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Nightmare Ichor",
["encounterID"] = 1873,
["event"] = "SPELL_CAST_START",
["npcID"] = 105721,
},
[371812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Menial Attendant",
["npcID"] = 192702,
},
[275568] = {
["source"] = "Glimmerhoof Cloudstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 160606,
},
[425054] = {
["source"] = "Zaqali Portalkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 211756,
},
[76590] = {
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 40936,
},
[99625] = {
["source"] = "Flamewaker Cauterizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 53121,
},
[275569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glimmerhoof Cloudstrider",
["npcID"] = 160606,
},
[175684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunclaw",
["npcID"] = 86137,
},
[375919] = {
["source"] = "Primal Scythid",
["event"] = "SPELL_CAST_START",
["npcID"] = 191104,
},
[371824] = {
["source"] = "Custodial Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[260666] = {
["source"] = "Gilded Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 132126,
},
[275572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Binder Sa'thress",
["npcID"] = 134341,
},
[144969] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[396388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[390245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embertooth Spearhunter",
["npcID"] = 188725,
},
[214593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amberfall Greatstag",
["npcID"] = 107758,
},
[400486] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[76588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Zealot",
["npcID"] = 39990,
},
[423010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dionaessa",
["npcID"] = 210813,
},
[377962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Violent Yeti",
["npcID"] = 197178,
},
[41370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Archon",
["npcID"] = 23400,
},
[55704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Warder",
["npcID"] = 29981,
},
[410728] = {
["source"] = "Sabellian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201411,
},
[408677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Scaleguard",
["npcID"] = 198871,
},
[193092] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[153161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jungle Wastetalon",
["npcID"] = 86423,
},
[275574] = {
["source"] = "Awakened Tidesage",
["event"] = "SPELL_CAST_START",
["npcID"] = 137220,
},
[316532] = {
["source"] = "Willing Sacrifice",
["event"] = "SPELL_CAST_START",
["npcID"] = 162647,
},
[41114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Mystic",
["npcID"] = 22845,
},
[396392] = {
["source"] = "Dueling Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 199377,
},
[20815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 4289,
},
[400488] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[193093] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[265337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorestained Piglet",
["npcID"] = 135048,
},
[267385] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Tentacle",
["npcID"] = 135987,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2133,
},
[425062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Steelshaper",
["npcID"] = 210173,
},
[304245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Spearhunter",
["npcID"] = 155271,
},
[59800] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["npcID"] = 28546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1984,
},
[365678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sacred Matrix Automa",
["npcID"] = 184734,
},
[200261] = {
["source"] = "Soul-Torn Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 98243,
},
[365676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sacred Matrix Automa",
["npcID"] = 184734,
},
[412777] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kith'ix",
["npcID"] = 198952,
},
[145996] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Commander Tik",
["npcID"] = 73951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[306289] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["npcID"] = 156818,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2329,
},
[164426] = {
["encounterName"] = "Fleshrender Nok'gar",
["source"] = "Fleshrender Nok'gar",
["npcID"] = 81305,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1749,
},
[363607] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Domination Core",
["npcID"] = 181244,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2540,
},
[384292] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Thunder Caller",
["npcID"] = 194647,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[400492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Cindershaper",
["npcID"] = 199824,
},
[209477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mana Wyrm",
["npcID"] = 105703,
},
[125736] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apparition of Fear",
["npcID"] = 64368,
},
[373872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 186227,
},
[359538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cradle Keeper",
["npcID"] = 181943,
},
[82742] = {
["event"] = "SPELL_CAST_START",
["source"] = "Southsea Strongarm",
["npcID"] = 40635,
},
[275570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vilebone Ravager",
["npcID"] = 134852,
},
[365682] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Cartel Overseer",
["npcID"] = 184792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2553,
},
[192072] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[160332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverblood Slasher",
["npcID"] = 78758,
},
[177731] = {
["encounterName"] = "Witherbark",
["source"] = "Enchanted Waters",
["npcID"] = 88862,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[390256] = {
["source"] = "Nokhud Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 192340,
},
[260480] = {
["source"] = "Dark Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 125136,
},
[296060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snapling",
["npcID"] = 145339,
},
[396400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[406639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Response Team Watcher",
["npcID"] = 202318,
},
[192073] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[377971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Massive Thresher",
["npcID"] = 191951,
},
[308352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anima Sentinel",
["npcID"] = 155970,
},
[255567] = {
["event"] = "SPELL_CAST_START",
["source"] = "T'lonja",
["npcID"] = 128455,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[388211] = {
["source"] = "Oshigol",
["event"] = "SPELL_CAST_START",
["npcID"] = 193235,
},
[8873] = {
["source"] = "Snarlflare",
["event"] = "SPELL_CAST_START",
["npcID"] = 14272,
},
[31948] = {
["encounterName"] = "Rokmar the Crackler",
["source"] = "Rokmar the Crackler",
["encounterID"] = 1941,
["event"] = "SPELL_CAST_START",
["npcID"] = 17991,
},
[394355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigidpelt Matriarch",
["npcID"] = 193063,
},
[298111] = {
["source"] = "Crushtide Orb",
["event"] = "SPELL_CAST_START",
["npcID"] = 153500,
},
[137427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sylvari Tenderhoof",
["npcID"] = 170031,
},
[159382] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["npcID"] = 76143,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1700,
},
[410776] = {
["source"] = "Infinite Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 204658,
},
[359587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basal Raptora",
["npcID"] = 179004,
},
[166478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tormented Soul",
["npcID"] = 82647,
},
[41372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Archon",
["npcID"] = 23400,
},
[412346] = {
["source"] = "Irontide Corsair",
["event"] = "SPELL_CAST_START",
["npcID"] = 126928,
},
[355450] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fierce Gromit",
["npcID"] = 178528,
},
[38556] = {
["source"] = "Darkspear Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 74228,
},
[84799] = {
["encounterName"] = "Lockmaw",
["source"] = "Augh",
["encounterID"] = 1054,
["event"] = "SPELL_CAST_START",
["npcID"] = 45379,
},
[373803] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 189893,
},
[429116] = {
["isChanneled"] = true,
["source"] = "Inquisitor Fairbell",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211930,
},
[64153] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[359547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Sentinel",
["npcID"] = 185314,
},
[328831] = {
["isChanneled"] = true,
["source"] = "Undying Blademaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 182268,
},
[148029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pterrordax",
["npcID"] = 73223,
},
[275110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeak the Ravenous",
["npcID"] = 201535,
},
[36246] = {
["event"] = "SPELL_CAST_START",
["source"] = "Station Guard",
["npcID"] = 51879,
},
[106797] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[429172] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40788,
},
[256581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scheming Street Scamp",
["npcID"] = 129394,
},
[271443] = {
["source"] = "Cornered Operative",
["event"] = "SPELL_CAST_START",
["npcID"] = 142072,
},
[410743] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignited Plume",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 205167,
},
[273544] = {
["source"] = "Brother Meller",
["event"] = "SPELL_CAST_START",
["npcID"] = 154447,
},
[227913] = {
["source"] = "Felspite Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102788,
},
[160312] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Cleric",
["npcID"] = 77134,
},
[394362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rasnar the War Ender",
["npcID"] = 193232,
},
[273570] = {
["source"] = "Ringtail Bandicoon",
["event"] = "SPELL_CAST_START",
["npcID"] = 139166,
},
[402775] = {
["source"] = "Zaqali Shrineguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 202803,
},
[39058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grannok",
["npcID"] = 93057,
},
[199210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Marksman",
["npcID"] = 96640,
},
[404639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Han'thul",
["npcID"] = 198914,
},
[41374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Archon",
["npcID"] = 23400,
},
[422972] = {
["source"] = "Valunei",
["event"] = "SPELL_CAST_START",
["npcID"] = 208709,
},
[386173] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[273547] = {
["source"] = "Cornered Operative",
["event"] = "SPELL_CAST_START",
["npcID"] = 142072,
},
[150100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Huntmaster",
["npcID"] = 74552,
},
[11922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Constrictor Vine",
["npcID"] = 130272,
},
[209485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Manifestation",
["npcID"] = 105704,
},
[365632] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Shaper",
["npcID"] = 184742,
},
[406652] = {
["source"] = "Ookbeard",
["event"] = "SPELL_CAST_START",
["npcID"] = 200956,
},
[196175] = {
["source"] = "Mak'rana Hardshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 95947,
},
[389430] = {
["source"] = "Unleashed Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 195846,
},
[255577] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["encounterID"] = 2084,
["event"] = "SPELL_CAST_START",
["npcID"] = 122967,
},
[39581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Fury",
["npcID"] = 22848,
},
[375937] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[143958] = {
["encounterName"] = "Fallen Protectors",
["event"] = "SPELL_CAST_START",
["source"] = "Embodied Gloom",
["npcID"] = 71477,
},
[396415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galestrike Proto-Dragon",
["npcID"] = 190061,
},
[300171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heavy Scrapbot",
["npcID"] = 150276,
},
[377277] = {
["source"] = "Volethi",
["event"] = "SPELL_CAST_START",
["npcID"] = 200727,
},
[213582] = {
["source"] = "Sinister Shrieker",
["event"] = "SPELL_CAST_START",
["npcID"] = 101900,
},
[429180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cycle Warden",
["npcID"] = 210518,
},
[398464] = {
["source"] = "Crystal Wormling",
["event"] = "SPELL_CAST_START",
["npcID"] = 205613,
},
[381592] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[31975] = {
["source"] = "Unliving Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 18501,
},
[398385] = {
["source"] = "Blaze Hound Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 204379,
},
[360845] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["npcID"] = 181551,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[279614] = {
["source"] = "Dark Iron Grenadier",
["event"] = "SPELL_CAST_START",
["npcID"] = 131814,
},
[406566] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Primal Lava Elemental",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 202264,
},
[386096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Cursewife",
["npcID"] = 184816,
},
[191058] = {
["source"] = "Mirana Starlight",
["event"] = "SPELL_CAST_START",
["npcID"] = 99451,
},
[384132] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[129325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodthirsty Prowler",
["npcID"] = 62945,
},
[68799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apothecary Frye",
["npcID"] = 36272,
},
[113967] = {
["source"] = "Glade Porcupine",
["event"] = "SPELL_CAST_START",
["npcID"] = 54896,
},
[147998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Chanter",
["npcID"] = 72897,
},
[267977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrine Templar",
["npcID"] = 134139,
},
[306319] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 156575,
},
[152893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Herald of Sunrise",
["npcID"] = 78933,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[201298] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Burster",
["npcID"] = 100532,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[270976] = {
["source"] = "Briarwood Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 131373,
},
[38558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hillsbrad Miner",
["npcID"] = 2269,
},
[102193] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["npcID"] = 54544,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1884,
},
[392192] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Blazing Fiend",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190688,
},
[396432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Proto-Dragon",
["npcID"] = 189798,
},
[373897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[375945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleecepelt Argali",
["npcID"] = 187975,
},
[112944] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["npcID"] = 56717,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1413,
},
[396423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galestrike Proto-Dragon",
["npcID"] = 190061,
},
[398471] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[253517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[49309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gold Shaman",
["npcID"] = 32340,
},
[265368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[365708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifestor Krugan",
["npcID"] = 185363,
},
[126354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramkahen Citizen",
["npcID"] = 157795,
},
[160345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pale Spider Worshipper",
["npcID"] = 80530,
},
[153521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adept of the Dawn",
["npcID"] = 79467,
},
[203348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gornoth the Lost",
["npcID"] = 103656,
},
[304169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Mindhunter",
["npcID"] = 153532,
},
[410760] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[408605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devastator",
["npcID"] = 198869,
},
[314405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramkahen Citizen",
["npcID"] = 157795,
},
[159322] = {
["source"] = "Frostwolf Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 74622,
},
[369806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Berserker",
["npcID"] = 184020,
},
[265371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enthralled Guard",
["npcID"] = 131585,
},
[260313] = {
["source"] = "Qy'telek",
["event"] = "SPELL_CAST_START",
["npcID"] = 130726,
},
[392332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zumakh",
["npcID"] = 194624,
},
[139869] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[265372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[148002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Chanter",
["npcID"] = 72897,
},
[141427] = {
["source"] = "Spiteleaf Squirt",
["event"] = "SPELL_CAST_START",
["npcID"] = 84655,
},
[394381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Root of Decay",
["npcID"] = 185326,
},
[404442] = {
["source"] = "Vraken the Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200584,
},
[15785] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Mana Leech",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 19306,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[127280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Skirmisher",
["npcID"] = 58738,
},
[396430] = {
["source"] = "Malfunctioning Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 198343,
},
[64156] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[362806] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["npcID"] = 182777,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2549,
},
[304282] = {
["encounterName"] = "Rexxar",
["source"] = "Rexxar",
["encounterID"] = 2370,
["event"] = "SPELL_CAST_START",
["npcID"] = 155098,
},
[136741] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 68476,
},
[365715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Sentry",
["npcID"] = 184530,
},
[392336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uncontrolled Guardian",
["npcID"] = 181775,
},
[369811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Berserker",
["npcID"] = 184020,
},
[265376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Headhunter",
["npcID"] = 133663,
},
[8362] = {
["encounterName"] = "Nekrum Gutchewer",
["source"] = "Shadowpriest Sezz'ziz",
["npcID"] = 7275,
["event"] = "SPELL_CAST_START",
["encounterID"] = 598,
},
[167516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Incinerator",
["npcID"] = 86809,
},
[378003] = {
["source"] = "Guardian Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[265377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Headhunter",
["npcID"] = 133663,
},
[390290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[211477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Legion Hound",
["npcID"] = 104277,
},
[369813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Inferno",
["npcID"] = 194095,
},
[412816] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malygos",
["npcID"] = 198974,
},
[260349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ten'gor",
["npcID"] = 130713,
},
[41378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of Delight",
["npcID"] = 22964,
},
[188907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfiend Dreadbringer",
["npcID"] = 92789,
},
[88886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiritbound Arcanist",
["npcID"] = 68070,
},
[398483] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[153794] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["npcID"] = 76143,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1700,
},
[369677] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["npcID"] = 184580,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[144923] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Animated Stone Mogu",
["npcID"] = 71380,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[382102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[392341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tevgai",
["npcID"] = 195132,
},
[410625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201754,
},
[363533] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["npcID"] = 182777,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2549,
},
[373912] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[117519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Protector Kaolan",
["npcID"] = 60583,
},
[410629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[369674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonevault Geomancer",
["npcID"] = 184022,
},
[64157] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[425107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Core Hound",
["npcID"] = 211241,
},
[394391] = {
["source"] = "Rhuzast the Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 197409,
},
[169567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Growth",
["npcID"] = 81769,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[367771] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Lost Soul",
["npcID"] = 185607,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[145944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zeal",
["npcID"] = 72661,
},
[10346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechano-Tank",
["npcID"] = 6225,
},
[373915] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[142947] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Modified Anima Golem",
["npcID"] = 71395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[250454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kel'vax Skeleton Shaper",
["npcID"] = 126107,
},
[412823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 198968,
},
[59019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitting Cobra",
["npcID"] = 29774,
},
[210150] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[361630] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["npcID"] = 181224,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2540,
},
[165473] = {
["source"] = "Apexis Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82229,
},
[373917] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[408576] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[427159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[42382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crashin' Thrashin' Robot",
["npcID"] = 17299,
},
[252503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Assault Infernal",
["npcID"] = 127189,
},
[198934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 95834,
},
[369823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Basilisk",
["npcID"] = 184023,
},
[115509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Warden",
["npcID"] = 59751,
},
[399086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[114571] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Strife",
["encounterID"] = 1417,
["event"] = "SPELL_CAST_START",
["npcID"] = 59051,
},
[143973] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[404636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[63134] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[121468] = {
["source"] = "Raigonn",
["event"] = "SPELL_CAST_START",
["npcID"] = 61177,
},
[427162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[310277] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["encounterID"] = 2343,
["event"] = "SPELL_CAST_START",
["npcID"] = 157602,
},
[398494] = {
["source"] = "Ember Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 204381,
},
[400542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 193460,
},
[178702] = {
["source"] = "Bittertide Brinetail",
["event"] = "SPELL_CAST_START",
["npcID"] = 131674,
},
[396447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shardwing",
["npcID"] = 201562,
},
[260696] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[384161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[172643] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["npcID"] = 84550,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1752,
},
[371875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[158498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windroc",
["npcID"] = 79398,
},
[80003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worgen Commando",
["npcID"] = 45861,
},
[263345] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Heavy Cannon",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 134025,
},
[367484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[398497] = {
["source"] = "Praying Stingray",
["event"] = "SPELL_CAST_START",
["npcID"] = 205065,
},
[391913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Splintershield",
["npcID"] = 197847,
},
[384385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostsnout Bear",
["npcID"] = 199354,
},
[255597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wailing Siren",
["npcID"] = 126440,
},
[316588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreliana",
["npcID"] = 157709,
},
[200289] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[59528] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["npcID"] = 28587,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1985,
},
[421024] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["npcID"] = 208367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[260698] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[196194] = {
["source"] = "Steeljaw Grizzly",
["event"] = "SPELL_CAST_START",
["npcID"] = 96677,
},
[114999] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[255579] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["encounterID"] = 2084,
["event"] = "SPELL_CAST_START",
["npcID"] = 122967,
},
[341163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kyrian Goliath",
["npcID"] = 171396,
},
[134762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muerta",
["npcID"] = 68322,
},
[427169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[169574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dionor Seedpriest",
["npcID"] = 81721,
},
[154216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sun Trinket",
["npcID"] = 76094,
},
[326830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwarren Bulwark",
["npcID"] = 164037,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 43878,
},
[396454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Insatiable Hornswog",
["npcID"] = 185715,
},
[164261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonemaul Slaver",
["npcID"] = 75835,
},
[200291] = {
["source"] = "Risen Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 98691,
},
[363772] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[134656] = {
["source"] = "Roaming Fog",
["event"] = "SPELL_CAST_START",
["npcID"] = 68313,
},
[260700] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[388886] = {
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_START",
["npcID"] = 196576,
},
[361644] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["npcID"] = 181224,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2540,
},
[421029] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["npcID"] = 208367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[20819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Sorcerer",
["npcID"] = 4294,
},
[257629] = {
["source"] = "Unfinished Stone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201586,
},
[426974] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[153679] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["npcID"] = 74787,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1653,
},
[373932] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["npcID"] = 190187,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[65648] = {
["encounterName"] = "Mimiron",
["source"] = "Aerial Command Unit",
["encounterID"] = 1138,
["event"] = "SPELL_CAST_START",
["npcID"] = 33670,
},
[392159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[198245] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1834,
},
[56937] = {
["encounterName"] = "Grand Magus Telestra",
["event"] = "SPELL_CAST_START",
["source"] = "Grand Magus Telestra",
["npcID"] = 26930,
},
[393458] = {
["source"] = "Malifron",
["event"] = "SPELL_CAST_START",
["npcID"] = 190278,
},
[435366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[195253] = {
["source"] = "Restless Tides",
["event"] = "SPELL_CAST_START",
["npcID"] = 97173,
},
[308406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Guard Hurrul",
["npcID"] = 158158,
},
[309669] = {
["source"] = "Onyx Warserpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 153208,
},
[172649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Technician",
["npcID"] = 83763,
},
[371887] = {
["isChanneled"] = true,
["source"] = "Primal Terrasentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[316598] = {
["source"] = "Raging Amberclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 162641,
},
[387849] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[31407] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[271329] = {
["source"] = "Pathfinder Tacha",
["event"] = "SPELL_CAST_START",
["npcID"] = 200263,
},
[373936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[392366] = {
["source"] = "Awakened Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 197793,
},
[386223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stormshield",
["npcID"] = 194896,
},
[322743] = {
["source"] = "Lumbering Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 155824,
},
[155961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slavemaster Ok'mok",
["npcID"] = 75864,
},
[408749] = {
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 204412,
},
[164592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Geomancer",
["npcID"] = 75198,
},
[265407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Banquet Steward",
["npcID"] = 131586,
},
[154221] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zipteq",
["npcID"] = 78734,
},
[154110] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["npcID"] = 76141,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1699,
},
[115002] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[322745] = {
["source"] = "Runestag",
["event"] = "SPELL_CAST_START",
["npcID"] = 159030,
},
[373939] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Rotburst Totem",
["npcID"] = 190381,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[314329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kzit'kovok",
["npcID"] = 160867,
},
[125241] = {
["source"] = "Kor'nas Nightsavage",
["event"] = "SPELL_CAST_START",
["npcID"] = 50338,
},
[173172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turbulent Steamfury",
["npcID"] = 81685,
},
[203368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felblaze Imp",
["npcID"] = 120535,
},
[375988] = {
["source"] = "Nimblewing Slyvern",
["event"] = "SPELL_CAST_START",
["npcID"] = 191051,
},
[125506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander Lindon",
["npcID"] = 59191,
},
[386993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade Proto-Drake",
["npcID"] = 194939,
},
[371618] = {
["source"] = "Zaqali Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201117,
},
[367798] = {
["source"] = "Tethos",
["event"] = "SPELL_CAST_START",
["npcID"] = 181249,
},
[36004] = {
["source"] = "Disembodied Exarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 21058,
},
[60833] = {
["source"] = "Forgotten One",
["event"] = "SPELL_CAST_START",
["npcID"] = 30414,
},
[373942] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[285889] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Gonk's Aspect",
["encounterID"] = 2268,
["event"] = "SPELL_CAST_START",
["npcID"] = 144767,
},
[115003] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[330940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Altered Sentinel",
["npcID"] = 168244,
},
[116027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hopper",
["npcID"] = 59464,
},
[302272] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["source"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2291,
},
[62625] = {
["source"] = "Ulduar Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 33237,
},
[210537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathrezim Arcanist",
["npcID"] = 182426,
},
[406708] = {
["source"] = "Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201094,
},
[396751] = {
["source"] = "Gahz'raxes",
["event"] = "SPELL_CAST_START",
["npcID"] = 200537,
},
[396041] = {
["source"] = "Cracked Concretion",
["event"] = "SPELL_CAST_START",
["npcID"] = 197074,
},
[100095] = {
["source"] = "Harbinger of Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 53793,
},
[31717] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["encounterID"] = 1948,
["event"] = "SPELL_CAST_START",
["npcID"] = 17882,
},
[157170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulbinder",
["npcID"] = 77812,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[385263] = {
["source"] = "Coastal Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 198782,
},
[316609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terror Tendril",
["npcID"] = 157137,
},
[212586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormwing Matriarch",
["npcID"] = 91795,
},
[392130] = {
["source"] = "Professor Maxdormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 189668,
},
[123707] = {
["encounterName"] = "Grand Empress Shek'zeer",
["source"] = "Grand Empress Shek'zeer",
["npcID"] = 62837,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1501,
},
[373947] = {
["source"] = "Skaara",
["event"] = "SPELL_CAST_START",
["npcID"] = 192949,
},
[407775] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[427189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[34163] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[293827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechagon Tinkerer",
["npcID"] = 144294,
},
[400569] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[394426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Flamecaller",
["npcID"] = 198503,
},
[388283] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[347073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Excavator",
["npcID"] = 176254,
},
[385980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strunraan",
["npcID"] = 193534,
},
[394427] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Breaker",
["npcID"] = 198503,
},
[388284] = {
["isChanneled"] = true,
["source"] = "Arcane Commander",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190776,
},
[203373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Observant Inquisitor",
["npcID"] = 107449,
},
[367807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Escapee",
["npcID"] = 185626,
},
[451765] = {
["source"] = "[DNT]Teleport Bunny Prime",
["event"] = "SPELL_CAST_START",
["npcID"] = 224528,
},
[396476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piskato",
["npcID"] = 195973,
},
[138739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Sand Conjurer",
["npcID"] = 69899,
},
[392381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fledgling Thunder Lizard",
["npcID"] = 198815,
},
[394429] = {
["source"] = "Tarolekk, the Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 197650,
},
[428983] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pip",
["npcID"] = 210518,
},
[118077] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["npcID"] = 60585,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[253544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[93655] = {
["encounterName"] = "Mekgineer Thermaplugg",
["source"] = "Mekgineer Thermaplugg",
["npcID"] = 7800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 382,
},
[55715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Elite",
["npcID"] = 29980,
},
[306111] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["encounterID"] = 2329,
["event"] = "SPELL_CAST_START",
["npcID"] = 156818,
},
[257640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[143990] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[366001] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Acquisitions Automa",
["npcID"] = 182074,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2539,
},
[146038] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kor'kron Gunner",
["npcID"] = 72784,
},
[196208] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Warlock",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99704,
},
[115006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hozen Gutripper",
["npcID"] = 58943,
},
[41381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of Delight",
["npcID"] = 22964,
},
[316618] = {
["source"] = "Aqir Swarmkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 162303,
},
[408767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritualmaster Skarna",
["npcID"] = 202274,
},
[199143] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[76611] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Zealot",
["npcID"] = 39990,
},
[6358] = {
["source"] = "Pahamand",
["event"] = "SPELL_CAST_START",
["npcID"] = 184600,
},
[161533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mandragora Lifedrinker",
["npcID"] = 80699,
},
[31554] = {
["source"] = "Coilfang Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 17958,
},
[289722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathanos Blightcaller",
["npcID"] = 147187,
},
[316620] = {
["source"] = "Anubisath Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 162508,
},
[257642] = {
["source"] = "Zara'thik Hive-Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 162886,
},
[152183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slagna",
["npcID"] = 75406,
},
[153067] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["encounterID"] = 1688,
["event"] = "SPELL_CAST_START",
["npcID"] = 75829,
},
[400296] = {
["source"] = "Zaqali Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 199972,
},
[157001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[394436] = {
["source"] = "Shas'ith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189822,
},
[256464] = {
["source"] = "Faithless Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 129874,
},
[388008] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[42669] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[160375] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maggle",
["npcID"] = 78896,
},
[125758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apparition of Fear",
["npcID"] = 64368,
},
[308432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Guard Hurrul",
["npcID"] = 158158,
},
[253548] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[369865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Spearman",
["npcID"] = 191227,
},
[421059] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[64163] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Yogg-Saron",
["npcID"] = 33288,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1143,
},
[314889] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Exposed Synapse",
["npcID"] = 159578,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[40102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqueous Spawn",
["npcID"] = 22883,
},
[40066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Wrangler",
["npcID"] = 22877,
},
[375719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steam Reaver",
["npcID"] = 190700,
},
[359313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vine-Choked Protector",
["npcID"] = 182350,
},
[361676] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[41382] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Battle-mage",
["npcID"] = 23402,
},
[336809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azmogal",
["npcID"] = 162873,
},
[83780] = {
["source"] = "Pygmy Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 44897,
},
[392098] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[84804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Catapult",
["npcID"] = 45282,
},
[211571] = {
["source"] = "Eredar Chaosbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 105617,
},
[392394] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[86340] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 43878,
},
[306389] = {
["source"] = "Darkmaul Centurion",
["event"] = "SPELL_CAST_START",
["npcID"] = 156825,
},
[413806] = {
["source"] = "Cenrrrn Cirrgl Tideshifter",
["event"] = "SPELL_CAST_START",
["npcID"] = 204516,
},
[392395] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[388332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 196439,
},
[367521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[2601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowforge Senator",
["npcID"] = 8904,
},
[302295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scuttleclaw Sandshell",
["npcID"] = 169436,
},
[115009] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shado-Pan Stormbringer",
["npcID"] = 59808,
},
[132734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refining Specialist",
["npcID"] = 67283,
},
[106646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flying Snow",
["npcID"] = 56473,
},
[400279] = {
["source"] = "Zaqali Flamewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199826,
},
[346813] = {
["source"] = "Tower Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 152905,
},
[388302] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[23381] = {
["encounterName"] = "Lady Anacondra",
["source"] = "Lady Anacondra",
["encounterID"] = 585,
["event"] = "SPELL_CAST_START",
["npcID"] = 3671,
},
[392398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Thundercloud",
["npcID"] = 197509,
},
[39079] = {
["source"] = "Tempest Falconer",
["event"] = "SPELL_CAST_START",
["npcID"] = 20037,
},
[198263] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[406733] = {
["source"] = "Memory of a Traitorous Sister",
["event"] = "SPELL_CAST_START",
["npcID"] = 200826,
},
[159356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malevolent Breath",
["npcID"] = 78791,
},
[312537] = {
["source"] = "Deeplord Zrihj",
["event"] = "SPELL_CAST_START",
["npcID"] = 154559,
},
[396812] = {
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_START",
["npcID"] = 196576,
},
[276892] = {
["source"] = "Amber-shaper Gokilak",
["event"] = "SPELL_CAST_START",
["npcID"] = 155985,
},
[395458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harkyn Grymstone",
["npcID"] = 186200,
},
[139903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbringer Draz'kil",
["npcID"] = 70445,
},
[314586] = {
["source"] = "R'khuzj the Unfathomable",
["event"] = "SPELL_CAST_START",
["npcID"] = 156299,
},
[423117] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[61730] = {
["source"] = "Snowplain Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 26705,
},
[390952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Flame",
["npcID"] = 188009,
},
[258199] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 130400,
},
[373972] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[403855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[34984] = {
["source"] = "Coilfang Ray",
["event"] = "SPELL_CAST_START",
["npcID"] = 21128,
},
[278755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Befouled Spirit",
["npcID"] = 133685,
},
[406737] = {
["source"] = "Memory of a Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200828,
},
[302302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scuttleclaw Skimmer",
["npcID"] = 169434,
},
[404364] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 202789,
},
[82797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snickerfang Hyena",
["npcID"] = 5985,
},
[372201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[98034] = {
["encounterName"] = "Lord Rhyolith",
["source"] = "Lord Rhyolith",
["encounterID"] = 1204,
["event"] = "SPELL_CAST_START",
["npcID"] = 52558,
},
[397048] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostbreath Arachnid",
["npcID"] = 199333,
},
[171385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Earth Spirit",
["npcID"] = 80382,
},
[59685] = {
["encounterName"] = "Prince Keleseth",
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
},
[224721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiritwalker Ebonhorn",
["npcID"] = 152385,
},
[271588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 144913,
},
[388310] = {
["source"] = "Custodial Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[413787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Hatred",
["npcID"] = 203809,
},
[392406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Warrior",
["npcID"] = 197982,
},
[11131] = {
["encounterName"] = "Ghaz'rilla",
["source"] = "Gahz'rilla",
["npcID"] = 7273,
["event"] = "SPELL_CAST_START",
["encounterID"] = 594,
},
[412884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ysera",
["npcID"] = 198970,
},
[39592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Searing Totem",
["npcID"] = 67380,
},
[361016] = {
["source"] = "Empowered Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 183988,
},
[410837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritualmaster Skarna",
["npcID"] = 202274,
},
[396503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[146050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Gunner",
["npcID"] = 72784,
},
[40872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Sky Stalker",
["npcID"] = 23030,
},
[363400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vespoid Drone",
["npcID"] = 178159,
},
[82760] = {
["source"] = "Neferset Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 44982,
},
[22121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timberstep Archer",
["npcID"] = 194041,
},
[333612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Encroaching Mite",
["npcID"] = 160811,
},
[174917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Behemoth",
["npcID"] = 82841,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[153528] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["npcID"] = 74948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 438,
},
[316959] = {
["source"] = "Corrosive Digester",
["event"] = "SPELL_CAST_START",
["npcID"] = 162828,
},
[383872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Destructive Fire Elemental",
["npcID"] = 194179,
},
[412888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ysera",
["npcID"] = 198970,
},
[133765] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Durumu the Forgotten",
["npcID"] = 68036,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[417899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Adventurer",
["npcID"] = 205992,
},
[427223] = {
["isChanneled"] = true,
["source"] = "Putrid Pyromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84957,
},
[388316] = {
["source"] = "Oppressive Artificer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184444,
},
[382712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[270987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disciple of Nalorakk",
["npcID"] = 120949,
},
[115013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Borokhula the Destroyer",
["npcID"] = 58739,
},
[157794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Magus",
["npcID"] = 76263,
},
[308455] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["encounterID"] = 2325,
["event"] = "SPELL_CAST_START",
["npcID"] = 157300,
},
[50648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Relios the Relic Keeper",
["npcID"] = 45734,
},
[144005] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[303158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Myrmidon",
["npcID"] = 153960,
},
[68939] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[351459] = {
["source"] = "Mawsworn Woebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 176573,
},
[11820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Guardian",
["npcID"] = 6234,
},
[32363] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18344,
},
[39593] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Searing Totem",
["npcID"] = 22896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[39849] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[193152] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[374451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Chain Caster",
["npcID"] = 195919,
},
[395893] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[408798] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Slaghide Shalewing",
["npcID"] = 204548,
},
[394464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piercer Gigra",
["npcID"] = 186511,
},
[361001] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Custodian",
["npcID"] = 184522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2512,
},
[308459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zardeth of the Black Claw",
["npcID"] = 158371,
},
[381444] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[99052] = {
["encounterName"] = "Beth'tilac",
["source"] = "Beth'tilac",
["encounterID"] = 1197,
["event"] = "SPELL_CAST_START",
["npcID"] = 52498,
},
[412895] = {
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 203709,
},
[406752] = {
["source"] = "Memory of a Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200828,
},
[253562] = {
["source"] = "Dazar'ai Augur",
["event"] = "SPELL_CAST_START",
["npcID"] = 122972,
},
[394466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Hail",
["npcID"] = 189039,
},
[119622] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 60491,
},
[292910] = {
["source"] = "Mawsworn Shackler",
["event"] = "SPELL_CAST_START",
["npcID"] = 167322,
},
[89105] = {
["source"] = "Lurking Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 45704,
},
[265084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[113479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Archer",
["npcID"] = 59175,
},
[373614] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[267891] = {
["encounterName"] = "Tidesage Council",
["source"] = "Galecaller Faye",
["npcID"] = 134058,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2131,
},
[337131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[141771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Raider",
["npcID"] = 58737,
},
[384663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgewrought Monstrosity",
["npcID"] = 194816,
},
[387243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Murhulk",
["npcID"] = 187677,
},
[135818] = {
["source"] = "Alliance Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 68485,
},
[382791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[330604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Weaver",
["npcID"] = 200375,
},
[357218] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[394470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ko'jo",
["npcID"] = 186367,
},
[412900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zakajz",
["npcID"] = 198953,
},
[406344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[408805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incorporeal Being",
["npcID"] = 204560,
},
[160392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maggle",
["npcID"] = 78896,
},
[387189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Srivantor",
["npcID"] = 201555,
},
[144839] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["npcID"] = 71153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[367851] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[172679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skothwa",
["npcID"] = 79500,
},
[396520] = {
["source"] = "Quilmo the Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 196386,
},
[20823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Conjuror",
["npcID"] = 4297,
},
[392425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molkeej",
["npcID"] = 195430,
},
[401421] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[314611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Insurgent Machinist",
["npcID"] = 159758,
},
[365805] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["npcID"] = 181954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[416999] = {
["source"] = "Paladin of the Silver Hand",
["event"] = "SPELL_CAST_START",
["npcID"] = 208193,
},
[296182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venomous Snapdragon",
["npcID"] = 152356,
},
[404713] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[268028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Current",
["npcID"] = 134144,
},
[398171] = {
["source"] = "Senegos",
["event"] = "SPELL_CAST_START",
["npcID"] = 199923,
},
[419048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[218755] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Festerhide Grizzly",
["npcID"] = 95779,
},
[138691] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[89932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Teracula",
["npcID"] = 49265,
},
[106826] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56719,
},
[82765] = {
["source"] = "Neferset Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 44982,
},
[148929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonemaul Slaver",
["npcID"] = 75835,
},
[192135] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Shellbreaker",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 97264,
},
[389951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strunraan",
["npcID"] = 193534,
},
[259711] = {
["source"] = "Block Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 131445,
},
[173148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Flameslinger",
["npcID"] = 81279,
},
[245377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsiege Infernal",
["npcID"] = 119395,
},
[314205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Walker Yash'gth",
["npcID"] = 159318,
},
[388335] = {
["source"] = "Sundered Runebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186354,
},
[174730] = {
["isChanneled"] = true,
["source"] = "Wandering Eye",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85498,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[419052] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Future Self",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 208959,
},
[314115] = {
["source"] = "Manipulator Shrog'lth",
["event"] = "SPELL_CAST_START",
["npcID"] = 159103,
},
[161781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostfire Gronnling",
["npcID"] = 79529,
},
[40875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[156301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Boomer",
["npcID"] = 80935,
},
[290045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rastari Enforcer",
["npcID"] = 147495,
},
[156722] = {
["source"] = "Shadowmoon Exhumer",
["event"] = "SPELL_CAST_START",
["npcID"] = 77700,
},
[47731] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26929,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[427245] = {
["source"] = "Hapless Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212981,
},
[371956] = {
["source"] = "Primal Terrasentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 188011,
},
[414959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Overseer",
["npcID"] = 205140,
},
[388743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Bakar",
["npcID"] = 188510,
},
[315927] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[405043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[360432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toadious",
["npcID"] = 184395,
},
[192138] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 97269,
},
[406345] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[169613] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[412488] = {
["source"] = "Crawling Goo",
["event"] = "SPELL_CAST_START",
["npcID"] = 205820,
},
[61353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dagna Flintlock",
["npcID"] = 29476,
},
[37036] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Master Engineer Telonicus",
["encounterID"] = 733,
["event"] = "SPELL_CAST_START",
["npcID"] = 20063,
},
[412914] = {
["source"] = "Fragment of Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 205968,
},
[406771] = {
["source"] = "Memory of a Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 200827,
},
[162232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogron Spinecrusher",
["npcID"] = 81240,
},
[394485] = {
["source"] = "Hypoxicron",
["event"] = "SPELL_CAST_START",
["npcID"] = 186334,
},
[428868] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[307303] = {
["source"] = "Zan-Tien Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 153095,
},
[417011] = {
["source"] = "Paladin of the Silver Hand",
["event"] = "SPELL_CAST_START",
["npcID"] = 208193,
},
[106720] = {
["source"] = "Waveguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 56673,
},
[378832] = {
["source"] = "Rebel Collier",
["event"] = "SPELL_CAST_START",
["npcID"] = 195605,
},
[166543] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["npcID"] = 82721,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[366701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebonsteel Construct",
["npcID"] = 185268,
},
[389953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[207278] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[159802] = {
["source"] = "Frostwolf Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 72940,
},
[40876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[427252] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[290053] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Unexploded Ordnance",
["npcID"] = 149535,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2281,
},
[174735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grulkor",
["npcID"] = 86157,
},
[88010] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[304388] = {
["source"] = "Siltridge Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 152541,
},
[153234] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["npcID"] = 75927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1678,
},
[260741] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[188046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Denizen of the Dream",
["npcID"] = 198489,
},
[443636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215475,
},
[141746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Raider",
["npcID"] = 58737,
},
[146327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broken Clefthoof",
["npcID"] = 72881,
},
[384252] = {
["isChanneled"] = true,
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190780,
},
[410873] = {
["source"] = "Gust Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 45477,
},
[366685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stellar Mote",
["npcID"] = 185271,
},
[406778] = {
["source"] = "Wild Blaze Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 205234,
},
[167966] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[389056] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[412922] = {
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 205158,
},
[300296] = {
["source"] = "Boggac Skullbash",
["event"] = "SPELL_CAST_START",
["npcID"] = 151308,
},
[376063] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Smoldering Hellion",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 191510,
},
[394493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ko'jo",
["npcID"] = 186367,
},
[404732] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[265772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atal'zul Chosen",
["npcID"] = 132967,
},
[404259] = {
["source"] = "Pyrachniss",
["event"] = "SPELL_CAST_START",
["npcID"] = 200978,
},
[443640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215475,
},
[305978] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["encounterID"] = 2329,
["event"] = "SPELL_CAST_START",
["npcID"] = 156818,
},
[64170] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Freya",
["npcID"] = 33410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[422699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phebis of the Burning Sea",
["npcID"] = 210306,
},
[250505] = {
["source"] = "Voidtender Malketh",
["event"] = "SPELL_CAST_START",
["npcID"] = 154332,
},
[265487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[368545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 184599,
},
[40877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[394496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruinous",
["npcID"] = 193522,
},
[173480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironwing Flamespitter",
["npcID"] = 83389,
},
[414974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Overseer",
["npcID"] = 205140,
},
[375596] = {
["isChanneled"] = true,
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196115,
},
[275012] = {
["source"] = "Hunting Worg",
["event"] = "SPELL_CAST_START",
["npcID"] = 152998,
},
[396073] = {
["source"] = "The Nodding Tiger",
["event"] = "SPELL_CAST_START",
["npcID"] = 59544,
},
[374020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[400641] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[369925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Transformed Dreadsquall",
["npcID"] = 197225,
},
[412928] = {
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 203709,
},
[260508] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["npcID"] = 131667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2114,
},
[400642] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[422691] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[31281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chet the Slime-Breeder",
["npcID"] = 48322,
},
[113999] = {
["encounterName"] = "Rattlegore",
["source"] = "Rattlegore",
["npcID"] = 59153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1428,
},
[359688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oracle Zoketh",
["npcID"] = 181625,
},
[387037] = {
["source"] = "Torch Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 201472,
},
[404739] = {
["event"] = "SPELL_CAST_START",
["source"] = "First Mate Ovdah",
["npcID"] = 201182,
},
[357641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostsoul Automaton",
["npcID"] = 177982,
},
[371471] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Violetwing Stagbeetle",
["npcID"] = 187969,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2609,
},
[217744] = {
["source"] = "Blinky Gizmospark",
["event"] = "SPELL_CAST_START",
["npcID"] = 148322,
},
[371976] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[178837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cackling Pyromaniac",
["npcID"] = 79510,
},
[371489] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["npcID"] = 188067,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2609,
},
[378120] = {
["source"] = "Unstable Rock",
["event"] = "SPELL_CAST_START",
["npcID"] = 192799,
},
[347404] = {
["source"] = "Mawsworn Endbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 157810,
},
[64171] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Thorim",
["npcID"] = 33413,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[376073] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[352223] = {
["source"] = "Vault Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 185027,
},
[428823] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[365835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Artisan",
["npcID"] = 183407,
},
[314942] = {
["source"] = "Dark Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 166869,
},
[152964] = {
["source"] = "Void Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 75652,
},
[396552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[20825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guzzling Patron",
["npcID"] = 9547,
},
[116560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mist Horror",
["npcID"] = 56310,
},
[169375] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["npcID"] = 84550,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1752,
},
[404744] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[406792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Magmaclaw",
["npcID"] = 202288,
},
[400649] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[314655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Garrick",
["npcID"] = 161504,
},
[57825] = {
["source"] = "Frostbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 30286,
},
[418578] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidan Stormrage",
["npcID"] = 205306,
},
[309757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zan-Tien Pikeman",
["npcID"] = 156325,
},
[312597] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Phaoris",
["npcID"] = 161112,
},
[271138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bombarding Zeppelin",
["npcID"] = 129867,
},
[173265] = {
["source"] = "Amorph Annihilator",
["event"] = "SPELL_CAST_START",
["npcID"] = 86620,
},
[253583] = {
["isChanneled"] = true,
["source"] = "Dazar'ai Augur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122972,
},
[410890] = {
["source"] = "Infinite Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 205259,
},
[380174] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[37551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Sharpshooter",
["npcID"] = 16704,
},
[390715] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[394509] = {
["source"] = "Ruinous",
["event"] = "SPELL_CAST_START",
["npcID"] = 193522,
},
[371984] = {
["source"] = "Flashfrost Chillweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 188067,
},
[194966] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[31704] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["npcID"] = 17882,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1948,
},
[170824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khargax the Devourer",
["npcID"] = 81537,
},
[306457] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tunk",
["npcID"] = 157328,
},
[41071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Deathshaper",
["npcID"] = 22882,
},
[387740] = {
["source"] = "Tyrhold Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192696,
},
[266285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stillwater Crocolisk",
["npcID"] = 156760,
},
[396559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[406798] = {
["isChanneled"] = true,
["source"] = "Cavern Flayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 202307,
},
[225100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Construct",
["npcID"] = 104270,
},
[394512] = {
["source"] = "Void Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 75652,
},
[53333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anub'ar Necromancer",
["npcID"] = 29064,
},
[317639] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[391939] = {
["source"] = "Stormbound Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 201153,
},
[144031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grievous Depthworm",
["npcID"] = 85942,
},
[313945] = {
["source"] = "Aqir Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161218,
},
[369411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Seeker",
["npcID"] = 184301,
},
[85846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Catapult",
["npcID"] = 46052,
},
[264608] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[405415] = {
["source"] = "Lady Shaz'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200885,
},
[414992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Flamespeaker",
["npcID"] = 205138,
},
[200345] = {
["isChanneled"] = true,
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98275,
},
[369942] = {
["source"] = "Flamewing Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 209837,
},
[404754] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Null Glimmer",
["npcID"] = 202971,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[406802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Flayer",
["npcID"] = 202307,
},
[417041] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Keeper Orendi",
["npcID"] = 205874,
},
[188292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Inquisitor",
["npcID"] = 91697,
},
[414041] = {
["source"] = "Goblin Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 200964,
},
[309420] = {
["source"] = "Rei Lun",
["event"] = "SPELL_CAST_START",
["npcID"] = 157162,
},
[56938] = {
["encounterName"] = "Grand Magus Telestra",
["event"] = "SPELL_CAST_START",
["source"] = "Grand Magus Telestra",
["npcID"] = 26928,
},
[271652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Scout",
["npcID"] = 205892,
},
[388374] = {
["source"] = "Ravenous Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 191831,
},
[215433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 95834,
},
[3396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Mine Creeper",
["npcID"] = 47662,
},
[267905] = {
["encounterName"] = "Tidesage Council",
["source"] = "Brother Ironhull",
["npcID"] = 134063,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2131,
},
[404757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Manaweaver",
["npcID"] = 203681,
},
[361209] = {
["source"] = "Antros",
["event"] = "SPELL_CAST_START",
["npcID"] = 182466,
},
[170825] = {
["source"] = "Warlock Soulstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 79482,
},
[369946] = {
["source"] = "Boneshaper Jardak",
["event"] = "SPELL_CAST_START",
["npcID"] = 188693,
},
[259732] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[365851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Assembler",
["npcID"] = 183404,
},
[114516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trail Yakker",
["npcID"] = 59526,
},
[172703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Technician",
["npcID"] = 83763,
},
[314658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Garrick",
["npcID"] = 161504,
},
[182667] = {
["source"] = "Sentry Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 88888,
},
[372027] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187767,
},
[198024] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[381681] = {
["source"] = "Rustpine Immolator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187396,
},
[417725] = {
["source"] = "Fury of N'zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 205307,
},
[392474] = {
["isChanneled"] = true,
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197799,
},
[410904] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[389870] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["npcID"] = 197145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[374045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[192158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olmyr the Enlightened",
["npcID"] = 97202,
},
[29579] = {
["source"] = "Phantom Guest",
["event"] = "SPELL_CAST_START",
["npcID"] = 16409,
},
[165875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keli'dan the Breaker",
["npcID"] = 79702,
},
[393855] = {
["source"] = "Web-Queen Ashkaz",
["event"] = "SPELL_CAST_START",
["npcID"] = 192983,
},
[285428] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Manceroy Flamefist",
["encounterID"] = 2266,
["event"] = "SPELL_CAST_START",
["npcID"] = 144693,
},
[320805] = {
["source"] = "Epilon",
["event"] = "SPELL_CAST_START",
["npcID"] = 158869,
},
[331044] = {
["source"] = "Savagewing Teroclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 170067,
},
[366629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overthrown Protector",
["npcID"] = 185155,
},
[75610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corla, Herald of Twilight",
["npcID"] = 39679,
},
[378143] = {
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 191841,
},
[331045] = {
["source"] = "Savagewing Teroclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 170067,
},
[316711] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["npcID"] = 158376,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[285995] = {
["encounterName"] = "Opulence",
["source"] = "Opulence",
["encounterID"] = 2271,
["event"] = "SPELL_CAST_START",
["npcID"] = 145261,
},
[427290] = {
["source"] = "Galok Wingslicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209047,
},
[157348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[120149] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 194853,
},
[396600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[201375] = {
["isChanneled"] = true,
["source"] = "Seacursed Slaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97043,
},
[323438] = {
["source"] = "Greater Ardenmoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 166073,
},
[195232] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[130900] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[115030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muck Brawler",
["npcID"] = 192630,
},
[57775] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["encounterID"] = 1968,
["event"] = "SPELL_CAST_START",
["npcID"] = 30625,
},
[412383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossian",
["npcID"] = 204093,
},
[377490] = {
["source"] = "Thunderspine Crasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 191057,
},
[428765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
},
[313938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Crusher",
["npcID"] = 161218,
},
[79881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worgen Rebel",
["npcID"] = 45292,
},
[384291] = {
["source"] = "Mara'nar the Thunderous",
["event"] = "SPELL_CAST_START",
["npcID"] = 196913,
},
[270543] = {
["source"] = "7th Legion Battlemage",
["event"] = "SPELL_CAST_START",
["npcID"] = 134091,
},
[414425] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[166565] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[167589] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[121174] = {
["encounterName"] = "Gekkan",
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Flameseeker",
["npcID"] = 61392,
},
[265523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[195234] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[73564] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 44819,
},
[378150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Infiltrator",
["npcID"] = 189869,
},
[18651] = {
["source"] = "Garrison Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 88391,
},
[308527] = {
["encounterName"] = "Ravnyr",
["source"] = "Gor'groth",
["encounterID"] = 2326,
["event"] = "SPELL_CAST_START",
["npcID"] = 156814,
},
[243568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savage Cursespitter",
["npcID"] = 122078,
},
[264931] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[404772] = {
["source"] = "Grugoth the Hullcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200721,
},
[412368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[392486] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[394536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Dead Eye",
["npcID"] = 195337,
},
[255644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farstrider Elite",
["npcID"] = 145005,
},
[174758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grulkor",
["npcID"] = 86157,
},
[294195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defense Bot Mk I",
["npcID"] = 151649,
},
[271670] = {
["source"] = "Princess Talanji",
["event"] = "SPELL_CAST_START",
["npcID"] = 134092,
},
[388392] = {
["source"] = "Unruly Textbook",
["event"] = "SPELL_CAST_START",
["npcID"] = 196044,
},
[382249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 185528,
},
[138923] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["encounterID"] = 1573,
["event"] = "SPELL_CAST_START",
["npcID"] = 69712,
},
[148138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfuse Engineer",
["npcID"] = 73095,
},
[59430] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["npcID"] = 29120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1973,
},
[398632] = {
["source"] = "Irontide Deadshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 203914,
},
[302388] = {
["source"] = "Vexiona",
["event"] = "SPELL_CAST_START",
["npcID"] = 151798,
},
[378155] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[280462] = {
["source"] = "Watcher Aum-ka",
["event"] = "SPELL_CAST_START",
["npcID"] = 154619,
},
[58980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Medicine Man",
["npcID"] = 29826,
},
[300514] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Shaman",
["npcID"] = 150146,
},
[151432] = {
["encounterName"] = "Groyat, the Blind Hunter",
["source"] = "Groyat, the Blind Hunter",
["npcID"] = 75247,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1660,
},
[307863] = {
["encounterName"] = "Inquisitor Gnshal",
["source"] = "Inquisitor Gnshal",
["npcID"] = 156161,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2371,
},
[365870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Assembler",
["npcID"] = 183404,
},
[407121] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Warlock",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203857,
},
[223100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadheart Ruiner",
["npcID"] = 112021,
},
[303693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Maw",
["npcID"] = 151569,
},
[60211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Forge Master",
["npcID"] = 24079,
},
[195944] = {
["source"] = "Skrog Wavecrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91796,
},
[195473] = {
["source"] = "Gritslime Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 91786,
},
[157355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Ritualist",
["npcID"] = 81711,
},
[365872] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["npcID"] = 181954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[419684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Runebear",
["npcID"] = 207101,
},
[368890] = {
["source"] = "Mawsworn Herald",
["event"] = "SPELL_CAST_START",
["npcID"] = 181408,
},
[12167] = {
["encounterName"] = "Lord Serpentis",
["source"] = "Lord Serpentis",
["encounterID"] = 590,
["event"] = "SPELL_CAST_START",
["npcID"] = 3673,
},
[118105] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[196587] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[172714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Botani Greensworn",
["npcID"] = 80696,
},
[39347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Gene-Splicer",
["npcID"] = 19507,
},
[87222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ambermill Witchalok",
["npcID"] = 1889,
},
[289484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Hound",
["npcID"] = 147439,
},
[353588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathrezim Arcanist",
["npcID"] = 182426,
},
[413622] = {
["source"] = "Infinite Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 206214,
},
[195240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Rivertroller",
["npcID"] = 96124,
},
[398012] = {
["source"] = "Primalist Earthrazer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203739,
},
[272272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Destroyer",
["npcID"] = 169499,
},
[403203] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[309062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baruk Protector",
["npcID"] = 153099,
},
[400688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmslayer Angvardi",
["npcID"] = 201013,
},
[423523] = {
["source"] = "Anguished Dream Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[388402] = {
["source"] = "Predatory Thresher",
["event"] = "SPELL_CAST_START",
["npcID"] = 198779,
},
[118106] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[359734] = {
["source"] = "Malfunctioned Constructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 181870,
},
[362405] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["npcID"] = 181954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[375237] = {
["source"] = "Arcane Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 190776,
},
[395833] = {
["source"] = "Mara'nar the Thunderous",
["event"] = "SPELL_CAST_START",
["npcID"] = 196913,
},
[58967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Battle Rider",
["npcID"] = 29836,
},
[251703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imp Mother Laglath",
["npcID"] = 125820,
},
[201902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Deadeye",
["npcID"] = 100539,
},
[300351] = {
["source"] = "Decimator Shiq'voth",
["event"] = "SPELL_CAST_START",
["npcID"] = 153943,
},
[312884] = {
["source"] = "Deeplord Zrihj",
["event"] = "SPELL_CAST_START",
["npcID"] = 154559,
},
[34871] = {
["source"] = "Umbrafen Witchdoctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 20115,
},
[265540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Maggot",
["npcID"] = 130909,
},
[423626] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[56858] = {
["source"] = "Twilight Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 30111,
},
[421746] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Stonewarmer",
["npcID"] = 210235,
},
[394763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Private Shikzar",
["npcID"] = 193127,
},
[54962] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Strategist",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[55218] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["npcID"] = 29306,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1981,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[320081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Masked Faerie",
["npcID"] = 160293,
},
[374073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Geomancer",
["npcID"] = 190345,
},
[191848] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["encounterID"] = 1813,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91808,
},
[427694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[396599] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fulgurb",
["npcID"] = 193170,
},
[365883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Architect",
["npcID"] = 181045,
},
[130906] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[304451] = {
["source"] = "Siltridge Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 152541,
},
[41396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ardent Host",
["npcID"] = 22959,
},
[369026] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2558,
},
[34342] = {
["encounterName"] = "Al'ar",
["source"] = "Al'ar",
["encounterID"] = 730,
["event"] = "SPELL_CAST_START",
["npcID"] = 19514,
},
[42723] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2025,
},
[388410] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[142699] = {
["source"] = "Admiral Hagman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67426,
},
[20787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Fireguard",
["npcID"] = 8910,
},
[191524] = {
["source"] = "Blade Dancer Illianna",
["event"] = "SPELL_CAST_START",
["npcID"] = 96657,
},
[41058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirling Blade",
["npcID"] = 23369,
},
[174768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steamscar Primalist",
["npcID"] = 81747,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[415419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 205136,
},
[175997] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["npcID"] = 83894,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[365887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Forger",
["npcID"] = 184878,
},
[428526] = {
["encounterName"] = "Ozumat",
["source"] = "Splotch",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213806,
},
[308875] = {
["source"] = "Heixi the Stonelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 157171,
},
[381602] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[174769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steamscar Primalist",
["npcID"] = 81747,
},
[259187] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[402748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Crusher",
["npcID"] = 202284,
},
[396605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fulgurb",
["npcID"] = 193170,
},
[374080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Ravager",
["npcID"] = 190348,
},
[31707] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 78116,
},
[263502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritual Mask",
["npcID"] = 134123,
},
[196508] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Deranged Mindflayer",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99657,
},
[390463] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[214989] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[423491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raelas Firewind",
["npcID"] = 209152,
},
[259752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of Fate",
["npcID"] = 131613,
},
[130396] = {
["isChanneled"] = true,
["source"] = "Gyrocopter Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66299,
},
[193502] = {
["source"] = "Glayvianna Soulrender",
["event"] = "SPELL_CAST_START",
["npcID"] = 98177,
},
[424401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winterskorn Vrykul",
["npcID"] = 206037,
},
[285020] = {
["encounterName"] = "Tussle Tonks",
["source"] = "The Platinum Pummeler",
["npcID"] = 144244,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2257,
},
[317511] = {
["source"] = "Sandstone Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 158477,
},
[422078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Wingguard",
["npcID"] = 210278,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 98696,
},
[201781] = {
["source"] = "Mushroom Merchant",
["event"] = "SPELL_CAST_START",
["npcID"] = 101823,
},
[131429] = {
["source"] = "Dalgan",
["event"] = "SPELL_CAST_START",
["npcID"] = 66274,
},
[335505] = {
["source"] = "Stygian Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 181064,
},
[393881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nezascar the Sightless",
["npcID"] = 196535,
},
[196870] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[199345] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[120670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Fire-Dancer",
["npcID"] = 60402,
},
[121182] = {
["isChanneled"] = true,
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61392,
},
[52660] = {
["source"] = "Infinite Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 28341,
},
[365895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Saboteur",
["npcID"] = 185574,
},
[194860] = {
["source"] = "Overgrown Larva",
["event"] = "SPELL_CAST_START",
["npcID"] = 94691,
},
[394564] = {
["source"] = "Gillidan",
["event"] = "SPELL_CAST_START",
["npcID"] = 205036,
},
[372202] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[267604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deadrot Budling",
["npcID"] = 136129,
},
[314855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gryth'ax the Executioner",
["npcID"] = 159224,
},
[141663] = {
["source"] = "Earthborn Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 70822,
},
[396613] = {
["source"] = "Sunscale Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193133,
},
[394798] = {
["source"] = "Azra's Prized Peony",
["event"] = "SPELL_CAST_START",
["npcID"] = 193135,
},
[102241] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["npcID"] = 54544,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1884,
},
[377488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[313363] = {
["source"] = "Terror Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 160676,
},
[365898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Eradicator",
["npcID"] = 183413,
},
[392519] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kaurdyth",
["npcID"] = 197799,
},
[112992] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["npcID"] = 56717,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1413,
},
[396615] = {
["source"] = "Sunscale Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193133,
},
[406854] = {
["source"] = "Sundered Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201736,
},
[130910] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[296276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Juvenile Snapdragon",
["npcID"] = 154181,
},
[57780] = {
["source"] = "Steelforged Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 33236,
},
[174775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Ogron",
["npcID"] = 82062,
},
[420236] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[76133] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 40792,
},
[412999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Dezran",
["npcID"] = 201677,
},
[365901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Eradicator",
["npcID"] = 185346,
},
[362410] = {
["source"] = "Cipherclad",
["event"] = "SPELL_CAST_START",
["npcID"] = 181349,
},
[110945] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["npcID"] = 56747,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1303,
},
[314708] = {
["event"] = "SPELL_CAST_START",
["source"] = "HK-3 Aerial Dissuasion Unit",
["npcID"] = 159261,
},
[35511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Sharpshooter",
["npcID"] = 16704,
},
[400714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nidharr",
["npcID"] = 201310,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[169657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[365903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Eradicator",
["npcID"] = 185346,
},
[335187] = {
["source"] = "The Engulfer",
["event"] = "SPELL_CAST_START",
["npcID"] = 183516,
},
[426576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dream Seedling",
["npcID"] = 211339,
},
[372047] = {
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_START",
["npcID"] = 187897,
},
[174777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Ogron",
["npcID"] = 82062,
},
[377473] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[131414] = {
["source"] = "Twinspire Demolitionist",
["event"] = "SPELL_CAST_START",
["npcID"] = 66273,
},
[259759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of Fate",
["npcID"] = 131613,
},
[54965] = {
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[157931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Magus",
["npcID"] = 76263,
},
[63830] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[149181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Grunt",
["npcID"] = 82047,
},
[427509] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[48054] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[201399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadfire Imp",
["npcID"] = 100527,
},
[413005] = {
["source"] = "Flame Additive",
["event"] = "SPELL_CAST_START",
["npcID"] = 205672,
},
[422416] = {
["source"] = "Ancient Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 209450,
},
[179898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmoon Tonk",
["npcID"] = 90304,
},
[312666] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Executor Yothrim",
["npcID"] = 158597,
},
[99172] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[390481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[419790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[427341] = {
["source"] = "Rydra Scalegorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 209048,
},
[34232] = {
["source"] = "High Elf Mage-Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 27747,
},
[415262] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[392530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quarry Infuser",
["npcID"] = 197799,
},
[402769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Sentinel",
["npcID"] = 202260,
},
[413008] = {
["source"] = "Highmountain Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201578,
},
[390483] = {
["source"] = "Riverbend Gnasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 189337,
},
[417928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invading Flameclaw",
["npcID"] = 206805,
},
[427343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[417953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galok Wingslicer",
["npcID"] = 206460,
},
[179900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmoon Tonk",
["npcID"] = 90304,
},
[304479] = {
["source"] = "Writhing Soulmass",
["event"] = "SPELL_CAST_START",
["npcID"] = 185017,
},
[157375] = {
["encounterName"] = "Gnarlroot",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2820,
},
[308575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Riftwalker",
["npcID"] = 158146,
},
[371313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Manifestation",
["npcID"] = 186336,
},
[402772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepstrider Alpha",
["npcID"] = 202312,
},
[372056] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187772,
},
[398677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Cutthroat",
["npcID"] = 200849,
},
[188114] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[427672] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[314720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gamon",
["npcID"] = 158588,
},
[261438] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["npcID"] = 131527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[165193] = {
["source"] = "Stele",
["event"] = "SPELL_CAST_START",
["npcID"] = 72627,
},
[294726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Commander Sivara",
["npcID"] = 151881,
},
[413013] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[426596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Diviner",
["npcID"] = 131819,
},
[425300] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Flamemancer",
["npcID"] = 210170,
},
[106853] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["npcID"] = 56541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1304,
},
[273767] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Stalwart",
["npcID"] = 147168,
},
[427510] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["encounterID"] = 1757,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83894,
},
[300414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Grinder",
["npcID"] = 150143,
},
[419158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invading Infernal",
["npcID"] = 206765,
},
[273768] = {
["source"] = "Wastewander Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 154499,
},
[398681] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigid Binder",
["npcID"] = 200623,
},
[126117] = {
["source"] = "Slitherscale Eggdrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 63532,
},
[393323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskaaran Apprentice",
["npcID"] = 198298,
},
[149187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72367,
},
[260907] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[79721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Sharpshooter",
["npcID"] = 45376,
},
[196403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doom Commander Beliash",
["npcID"] = 93221,
},
[273770] = {
["source"] = "Wastewander Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 154499,
},
[406874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Krolusk",
["npcID"] = 204310,
},
[299460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pistonhead Blaster",
["npcID"] = 150250,
},
[204896] = {
["isChanneled"] = true,
["source"] = "Spellfiend Devourer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 114406,
},
[331108] = {
["source"] = "Bubbleblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 162727,
},
[423257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[11538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Marius Sunshard",
["npcID"] = 113542,
},
[312679] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tidal Corruptor",
["npcID"] = 153910,
},
[396637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Elder Rockfang",
["npcID"] = 194085,
},
[365921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Realmbreaker",
["npcID"] = 183416,
},
[384351] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[378208] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[173762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malkor",
["npcID"] = 83452,
},
[423259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Blazekin",
["npcID"] = 210685,
},
[120416] = {
["source"] = "Agitated Seedstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61302,
},
[144070] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["npcID"] = 71859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[422039] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[423260] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[384353] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[401447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horrific Aberration",
["npcID"] = 198965,
},
[314730] = {
["source"] = "Tisiphon",
["event"] = "SPELL_CAST_START",
["npcID"] = 157468,
},
[174787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Ogron",
["npcID"] = 82062,
},
[25054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rok'nah Loa-Singer",
["npcID"] = 64733,
},
[131390] = {
["source"] = "Felstorm Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 66271,
},
[396641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Elder Rockfang",
["npcID"] = 194085,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["npcID"] = 131817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2118,
},
[199567] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Image of Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 101028,
},
[59575] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["npcID"] = 24201,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2024,
},
[413024] = {
["source"] = "Valow, Timesworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 201222,
},
[398690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[196916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Velandras Ravencrest",
["npcID"] = 98538,
},
[282676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightgut",
["npcID"] = 145811,
},
[194242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Witchwood Hag",
["npcID"] = 95310,
},
[228050] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Guardian of the Forgotten Queen",
["npcID"] = 114565,
},
[196290] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["npcID"] = 91792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[271731] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gnomish Gyro-Engineer",
["npcID"] = 148441,
},
[319966] = {
["source"] = "Lobber Jalrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 161016,
},
[423265] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[416048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[424178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sickened Growth",
["npcID"] = 207926,
},
[396645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Elder Rockfang",
["npcID"] = 194085,
},
[177460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Wind Spirit",
["npcID"] = 80381,
},
[126822] = {
["source"] = "Stone Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 70334,
},
[394598] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Grief",
["npcID"] = 187559,
},
[396646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[137528] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1573,
},
[376169] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Thaumaturge Fural",
["npcID"] = 189905,
},
[201411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadfire Imp",
["npcID"] = 100527,
},
[339768] = {
["source"] = "Athanos",
["event"] = "SPELL_CAST_START",
["npcID"] = 158891,
},
[406886] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 198997,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[312690] = {
["source"] = "Anq'uri the Titanic",
["event"] = "SPELL_CAST_START",
["npcID"] = 155703,
},
[397886] = {
["source"] = "Corrupt Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 62358,
},
[174791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironwing Flamespitter",
["npcID"] = 86373,
},
[376171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[386410] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[423610] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2731,
},
[180327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsoul Trickster",
["npcID"] = 106375,
},
[426519] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[322931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Predatory Bloodtusk",
["npcID"] = 158752,
},
[174792] = {
["source"] = "Ironwing Flamespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 86373,
},
[393783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskakx",
["npcID"] = 192761,
},
[397878] = {
["source"] = "Corrupt Living Water",
["event"] = "SPELL_CAST_START",
["npcID"] = 59873,
},
[148785] = {
["event"] = "SPELL_CAST_START",
["source"] = "War Master Kragg",
["npcID"] = 73775,
},
[374126] = {
["source"] = "Plains Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 195261,
},
[400747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Damaged Titan Matrix",
["npcID"] = 201441,
},
[378222] = {
["source"] = "Cascade Swog",
["event"] = "SPELL_CAST_START",
["npcID"] = 191561,
},
[165578] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["encounterID"] = 1679,
["event"] = "SPELL_CAST_START",
["npcID"] = 75452,
},
[15536] = {
["source"] = "Twilight Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 38926,
},
[384366] = {
["source"] = "Hunting Redbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 198824,
},
[391382] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 197671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[256846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinomancer Kish'o",
["npcID"] = 129553,
},
[264150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thornguard",
["npcID"] = 131858,
},
[15611] = {
["source"] = "Stormsnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 3240,
},
[255824] = {
["source"] = "Dazar'ai Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 122971,
},
[157388] = {
["source"] = "Thunderlord Looter",
["event"] = "SPELL_CAST_START",
["npcID"] = 78365,
},
[333929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ylva",
["npcID"] = 177444,
},
[197745] = {
["source"] = "Coilskar Sea-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 96884,
},
[200498] = {
["source"] = "Burning Soulstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 96278,
},
[404846] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[394680] = {
["source"] = "Failed Scalecommander Elarthresh",
["event"] = "SPELL_CAST_START",
["npcID"] = 201820,
},
[196296] = {
["source"] = "Stormwake Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[424315] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 211086,
},
[267824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul Essence",
["npcID"] = 135240,
},
[284831] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["npcID"] = 145616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[400752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Travard",
["npcID"] = 198947,
},
[225207] = {
["source"] = "Felblade Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 101100,
},
[204574] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[395594] = {
["source"] = "Zurgaz Corebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193680,
},
[33806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildhammer Scout",
["npcID"] = 19384,
},
[427384] = {
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 40935,
},
[157390] = {
["source"] = "Thunderlord Packleader",
["event"] = "SPELL_CAST_START",
["npcID"] = 78960,
},
[292223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algerson Bodyguard",
["npcID"] = 149036,
},
[131178] = {
["source"] = "Pandaren Scarecrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 66768,
},
[378229] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186124,
},
[44475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Mage Guard",
["npcID"] = 24683,
},
[41032] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[408946] = {
["source"] = "Sundered Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198870,
},
[419185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invading Infernal",
["npcID"] = 206765,
},
[372087] = {
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_START",
["npcID"] = 187897,
},
[292225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algerson Bodyguard",
["npcID"] = 149036,
},
[392565] = {
["isChanneled"] = true,
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197831,
},
[39647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Nightlord",
["npcID"] = 22855,
},
[200647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felguard Butcher",
["npcID"] = 96494,
},
[13321] = {
["source"] = "Felhound Manastalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 17401,
},
[29928] = {
["encounterName"] = "Opera Hall",
["source"] = "Phantom Guest",
["encounterID"] = 655,
["event"] = "SPELL_CAST_START",
["npcID"] = 16409,
},
[254959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Colossus",
["npcID"] = 122984,
},
[413044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grotesque Horror",
["npcID"] = 138187,
},
[292227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algerson Bodyguard",
["npcID"] = 149036,
},
[257732] = {
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129602,
},
[37967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underbog Shambler",
["npcID"] = 17871,
},
[150753] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["npcID"] = 74787,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1653,
},
[434288] = {
["source"] = "Daetan Swiftplume",
["event"] = "SPELL_CAST_START",
["npcID"] = 218738,
},
[376186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lahar",
["npcID"] = 189235,
},
[402807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glittering Shard Construct",
["npcID"] = 202326,
},
[82800] = {
["source"] = "Alliance Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 68485,
},
[398712] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[392569] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[410999] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[388474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quiescent Threshadon",
["npcID"] = 194803,
},
[46036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Magister",
["npcID"] = 24685,
},
[335233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Destroyer",
["npcID"] = 169499,
},
[411000] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[372093] = {
["source"] = "Flame Blister",
["event"] = "SPELL_CAST_START",
["npcID"] = 197413,
},
[327296] = {
["source"] = "Archilon",
["event"] = "SPELL_CAST_START",
["npcID"] = 158867,
},
[17287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Mender",
["npcID"] = 19633,
},
[411001] = {
["source"] = "Lurking Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 45704,
},
[428004] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dream Seedling",
["npcID"] = 210423,
},
[282411] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Akunda's Aspect",
["npcID"] = 144941,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2268,
},
[376190] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brackenhide Rotflinger",
["npcID"] = 186362,
},
[411002] = {
["source"] = "Cloud Prince",
["event"] = "SPELL_CAST_START",
["npcID"] = 45917,
},
[250096] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[300424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Bully",
["npcID"] = 150160,
},
[83825] = {
["source"] = "Venture Co. Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 4260,
},
[79939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Warden",
["npcID"] = 43535,
},
[134164] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Sentinel",
["npcID"] = 67900,
},
[87180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Water Elemental",
["npcID"] = 46820,
},
[138966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowed Voodoo Spirit",
["npcID"] = 70060,
},
[312712] = {
["source"] = "The Forgotten",
["event"] = "SPELL_CAST_START",
["npcID"] = 157176,
},
[33805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildhammer Scout",
["npcID"] = 19384,
},
[34762] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["npcID"] = 17975,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1926,
},
[151253] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Death Speaker Jargba",
["npcID"] = 75152,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1659,
},
[192631] = {
["source"] = "Ash'golm",
["event"] = "SPELL_CAST_START",
["npcID"] = 96681,
},
[313583] = {
["isChanneled"] = true,
["source"] = "Meredy Huntswell",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156943,
},
[65210] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Mimiron",
["npcID"] = 33412,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[351621] = {
["source"] = "Mawsworn Woebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 176573,
},
[115054] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bog Crocolisk",
["npcID"] = 54558,
},
[360863] = {
["source"] = "Dominated Worldbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 183249,
},
[398720] = {
["source"] = "Irontide Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 200850,
},
[408959] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[83901] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Mukla",
["npcID"] = 1559,
},
[284276] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["npcID"] = 145616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[286779] = {
["encounterName"] = "King Rastakhan",
["source"] = "Phantom of Slaughter",
["npcID"] = 146493,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[163541] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["npcID"] = 79545,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1732,
},
[368379] = {
["source"] = "The Engulfer",
["event"] = "SPELL_CAST_START",
["npcID"] = 183516,
},
[396674] = {
["source"] = "Ripsaw the Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193153,
},
[390531] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[392579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
},
[370054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battleseared Magmatusk",
["npcID"] = 196772,
},
[396675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Cleaver",
["npcID"] = 203682,
},
[82064] = {
["event"] = "SPELL_CAST_START",
["source"] = "John J. Keeshan",
["npcID"] = 43812,
},
[130925] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[106864] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[59160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Mender",
["npcID"] = 28582,
},
[415106] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198997,
},
[257739] = {
["source"] = "Blacktooth Scrapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 129529,
},
[144089] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["npcID"] = 71859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[413059] = {
["source"] = "Shadow Canister",
["event"] = "SPELL_CAST_START",
["npcID"] = 206019,
},
[365961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Realmbreaker",
["npcID"] = 183416,
},
[327054] = {
["source"] = "Epilon",
["event"] = "SPELL_CAST_START",
["npcID"] = 158869,
},
[411012] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[413060] = {
["source"] = "Fire Canister",
["event"] = "SPELL_CAST_START",
["npcID"] = 206022,
},
[300434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Bully",
["npcID"] = 150160,
},
[420347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Archdruid",
["npcID"] = 211066,
},
[144090] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["npcID"] = 71859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[304822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Maw",
["npcID"] = 151569,
},
[130414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ed",
["npcID"] = 82003,
},
[122735] = {
["encounterName"] = "Garalon",
["source"] = "Garalon",
["encounterID"] = 1463,
["event"] = "SPELL_CAST_START",
["npcID"] = 62164,
},
[41150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Nightlord",
["npcID"] = 22855,
},
[74613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ranger",
["npcID"] = 48269,
},
[300436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Shaman",
["npcID"] = 150146,
},
[200404] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[152282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kraulshaped Monstrosity",
["npcID"] = 75384,
},
[202634] = {
["isChanneled"] = true,
["source"] = "Grimhorn the Enslaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102566,
},
[68982] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[400777] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[263578] = {
["source"] = "Gilnean Battlemage",
["event"] = "SPELL_CAST_START",
["npcID"] = 134192,
},
[132829] = {
["source"] = "Horde Cannoneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 67360,
},
[362976] = {
["source"] = "Menacing Vespoid Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 183721,
},
[408969] = {
["source"] = "Monstrous Mud",
["event"] = "SPELL_CAST_START",
["npcID"] = 192519,
},
[428471] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Manifested Dream",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 213143,
},
[169689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diving Chakram Spinner",
["npcID"] = 76116,
},
[154331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grove Cultivator Kados",
["npcID"] = 133104,
},
[408970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 205735,
},
[276993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruul Onestone",
["npcID"] = 142683,
},
[250114] = {
["source"] = "Emerald Dragon Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 8776,
},
[15537] = {
["source"] = "Dark Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 28200,
},
[311267] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cultist Shadowblade",
["npcID"] = 159632,
},
[168666] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 84358,
},
[169690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diving Chakram Spinner",
["npcID"] = 76116,
},
[36645] = {
["source"] = "Temperamental Rumbler",
["event"] = "SPELL_CAST_START",
["npcID"] = 43480,
},
[376208] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[304537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Defender",
["npcID"] = 152147,
},
[222932] = {
["source"] = "Guardian Gorroc",
["event"] = "SPELL_CAST_START",
["npcID"] = 111856,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[39126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Botanist",
["npcID"] = 18422,
},
[368522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zatojin",
["npcID"] = 183764,
},
[421260] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[221442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Mortar",
["npcID"] = 111212,
},
[384473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icegnaw Mantacorn",
["npcID"] = 187826,
},
[304539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Defender",
["npcID"] = 152147,
},
[332272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Popo",
["npcID"] = 180028,
},
[407245] = {
["source"] = "Shrinekeeper Qanosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199839,
},
[359829] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["npcID"] = 181395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2542,
},
[345495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frothing Pustule",
["npcID"] = 175519,
},
[145119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storeroom Guard",
["npcID"] = 73152,
},
[204677] = {
["source"] = "Doomguard Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 114399,
},
[277920] = {
["source"] = "Jessibelle Moonshield",
["event"] = "SPELL_CAST_START",
["npcID"] = 148390,
},
[110963] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "Scarlet Purifier",
["npcID"] = 58569,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[448912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Adept",
["npcID"] = 216263,
},
[210099] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Dominator Tentacle",
["encounterID"] = 1873,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 105721,
},
[302494] = {
["source"] = "Grip of Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 151872,
},
[364495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oracle Zoketh",
["npcID"] = 181625,
},
[166766] = {
["source"] = "Mawsworn Plunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 181061,
},
[390548] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[163550] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["npcID"] = 79545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[171873] = {
["source"] = "Bloodmane Earthbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 85897,
},
[292903] = {
["source"] = "Mawsworn Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 150958,
},
[106933] = {
["encounterName"] = "Striker Ga'dok",
["source"] = "Striker Ga'dok",
["npcID"] = 56589,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1405,
},
[299167] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechagonian Nullifier",
["npcID"] = 151124,
},
[359960] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["npcID"] = 181398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[147289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death Adder",
["npcID"] = 72841,
},
[420292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Conqueror",
["npcID"] = 207040,
},
[172818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Covenant Paladin",
["npcID"] = 184073,
},
[395653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matriarch Remalla",
["npcID"] = 193246,
},
[360589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iska, Outrider of Ruin",
["npcID"] = 182114,
},
[167883] = {
["source"] = "Terokk",
["event"] = "SPELL_CAST_START",
["npcID"] = 83554,
},
[80382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Miner",
["npcID"] = 67871,
},
[296355] = {
["source"] = "Subjugator Klontzas",
["event"] = "SPELL_CAST_START",
["npcID"] = 152612,
},
[393540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zhurtan the Riverboiler",
["npcID"] = 188687,
},
[406934] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Djaradin Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202256,
},
[114548] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[419221] = {
["source"] = "Cho'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 208212,
},
[173791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tangleheart Cultivator",
["npcID"] = 82322,
},
[308643] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haywire Clockwork Rocket Bot",
["npcID"] = 158279,
},
[144642] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[179017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fathom-Commander Zarrin",
["npcID"] = 88090,
},
[417241] = {
["source"] = "Gill'dan",
["event"] = "SPELL_CAST_START",
["npcID"] = 204808,
},
[390554] = {
["isChanneled"] = true,
["source"] = "Inferna the Bound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186735,
},
[50403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastes Scavenger",
["npcID"] = 28005,
},
[419223] = {
["source"] = "Cho'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 208212,
},
[426273] = {
["source"] = "Strange Winged Goblin",
["event"] = "SPELL_CAST_START",
["npcID"] = 214483,
},
[199389] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[168929] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Skulloc",
["npcID"] = 83612,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1754,
},
[44224] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 24664,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[322980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wayward Gormling",
["npcID"] = 160713,
},
[275882] = {
["source"] = "Ettin Earthcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 136421,
},
[195344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Manathirster",
["npcID"] = 95866,
},
[394652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infernum",
["npcID"] = 193648,
},
[222939] = {
["source"] = "Guardian Gorroc",
["event"] = "SPELL_CAST_START",
["npcID"] = 111856,
},
[300764] = {
["source"] = "Slime Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 151792,
},
[216796] = {
["isChanneled"] = true,
["source"] = "Seirdr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 93444,
},
[427417] = {
["source"] = "Prophet of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[170887] = {
["source"] = "Sethek Supplicant",
["event"] = "SPELL_CAST_START",
["npcID"] = 85570,
},
[398749] = {
["source"] = "Irontide Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 200850,
},
[440131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alleria Windrunner",
["npcID"] = 215014,
},
[374720] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186644,
},
[372129] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[444820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215475,
},
[384416] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[260879] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[306735] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["npcID"] = 156818,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2329,
},
[390560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[392685] = {
["isChanneled"] = true,
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198081,
},
[172771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Incinerator",
["npcID"] = 86809,
},
[256865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimsonwood Witch",
["npcID"] = 137150,
},
[12466] = {
["source"] = "Unliving Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 18499,
},
[107044] = {
["isChanneled"] = true,
["source"] = "Aqua Dancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56865,
},
[258777] = {
["source"] = "Irontide Oarsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 127111,
},
[161509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mandragora Lifedrinker",
["npcID"] = 80699,
},
[68988] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[392659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Alpha",
["npcID"] = 194224,
},
[35010] = {
["encounterName"] = "Mennu the Betrayer",
["source"] = "Mennu the Betrayer",
["encounterID"] = 1939,
["event"] = "SPELL_CAST_START",
["npcID"] = 17941,
},
[59839] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["npcID"] = 29304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1978,
},
[183202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread-Rider Malwick",
["npcID"] = 90902,
},
[400802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 187676,
},
[42024] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Elementalist",
["npcID"] = 23523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[161510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mandrakor",
["npcID"] = 84406,
},
[442408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of Turalyon",
["npcID"] = 214649,
},
[417185] = {
["source"] = "Eviscerator Kintara",
["event"] = "SPELL_CAST_START",
["npcID"] = 207596,
},
[394660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bluescale",
["npcID"] = 188723,
},
[165606] = {
["isChanneled"] = true,
["source"] = "Sol-Shaper Krashyx",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82285,
},
[111594] = {
["source"] = "Scholomance Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[216800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistleleaf Menace",
["npcID"] = 91472,
},
[264038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Thornshaper",
["npcID"] = 131666,
},
[273844] = {
["source"] = "Shuja Grimaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 167664,
},
[111715] = {
["source"] = "Scholomance Neophyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58823,
},
[110579] = {
["source"] = "Azure Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 58384,
},
[172774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gronn Rockthrower",
["npcID"] = 80689,
},
[173798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ontogen the Harvester",
["npcID"] = 82372,
},
[163689] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Ahri'ok Dugru",
["npcID"] = 80816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1748,
},
[425379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamespreader",
["npcID"] = 210294,
},
[425889] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[314801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agustus Moulaine",
["npcID"] = 157700,
},
[65215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Magmathar",
["npcID"] = 34295,
},
[41188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 22847,
},
[427428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greedy Gessie",
["npcID"] = 209936,
},
[41410] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["npcID"] = 23419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[40508] = {
["encounterName"] = "Gurtogg Bloodboil",
["source"] = "Gurtogg Bloodboil",
["npcID"] = 22948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 605,
},
[425381] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Firelands Flameguard",
["npcID"] = 210290,
},
[152298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Magma Elemental",
["npcID"] = 75820,
},
[314803] = {
["source"] = "Amahtet",
["event"] = "SPELL_CAST_START",
["npcID"] = 159320,
},
[360373] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[116226] = {
["source"] = "Slingtail Stickypaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 55110,
},
[39670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[418059] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[42729] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[133990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thane Stonehearth",
["npcID"] = 67636,
},
[113017] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Zao Sunseeker",
["npcID"] = 58826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1439,
},
[41472] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[40946] = {
["encounterName"] = "Supremus",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 602,
},
[359856] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[427432] = {
["source"] = "Prophet of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[425873] = {
["source"] = "Lingering Torment",
["event"] = "SPELL_CAST_START",
["npcID"] = 209564,
},
[22883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atal'ai High Priest",
["npcID"] = 5273,
},
[387508] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Keeper Orendi",
["npcID"] = 205874,
},
[84469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rok'nah Felcaster",
["npcID"] = 65507,
},
[396717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[374192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Basilisk",
["npcID"] = 191696,
},
[113134] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[114182] = {
["source"] = "Scarlet Scholar",
["event"] = "SPELL_CAST_START",
["npcID"] = 59372,
},
[393259] = {
["source"] = "Blazing Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 189043,
},
[388975] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Matriarch Remalla",
["npcID"] = 193246,
},
[116710] = {
["source"] = "Zhi-Zhi",
["event"] = "SPELL_CAST_START",
["npcID"] = 54924,
},
[384538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Tuskarr Hero",
["npcID"] = 194731,
},
[421292] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[125980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quid",
["npcID"] = 58771,
},
[425388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Infernoguard",
["npcID"] = 210295,
},
[404932] = {
["source"] = "Mad-Eye Carrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 201181,
},
[388529] = {
["source"] = "Seabreaker Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 192931,
},
[115809] = {
["source"] = "Greenwood Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 54987,
},
[116157] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1390,
},
[121762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Builder",
["npcID"] = 62633,
},
[114087] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["encounterID"] = 1422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59303,
},
[316859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneborn Recruit",
["npcID"] = 170042,
},
[268050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidesage Spiritualist",
["npcID"] = 136186,
},
[342317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cartel Xy Saboteur",
["npcID"] = 181005,
},
[121282] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["npcID"] = 62205,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1464,
},
[308669] = {
["encounterName"] = "Overlord Mathias Shaw",
["source"] = "Eye of Chaos",
["npcID"] = 158315,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2376,
},
[409009] = {
["source"] = "Summitshaper Lorac",
["event"] = "SPELL_CAST_START",
["npcID"] = 201522,
},
[114117] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chief Gukgut",
["npcID"] = 61546,
},
[388532] = {
["source"] = "O'nank Shorescour",
["event"] = "SPELL_CAST_START",
["npcID"] = 193118,
},
[406962] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203799,
},
[425392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Infernoguard",
["npcID"] = 210295,
},
[394676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Icecaller",
["npcID"] = 198501,
},
[372151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 186284,
},
[76682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Element Warden",
["npcID"] = 40017,
},
[415435] = {
["source"] = "Coalesced Moment",
["event"] = "SPELL_CAST_START",
["npcID"] = 206064,
},
[361913] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["npcID"] = 181398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[404916] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[118865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jade Destroyer",
["npcID"] = 62619,
},
[147185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqueous Defender",
["npcID"] = 73191,
},
[111722] = {
["source"] = "Scholomance Neophyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58823,
},
[198379] = {
["encounterName"] = "Archdruid Glaidalis",
["source"] = "Archdruid Glaidalis",
["npcID"] = 96512,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1836,
},
[390583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[121876] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["npcID"] = 62405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[125865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zar'thik Augurer",
["npcID"] = 64454,
},
[194284] = {
["source"] = "Dark Iron Grenadier",
["event"] = "SPELL_CAST_START",
["npcID"] = 131814,
},
[120789] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["npcID"] = 61634,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1502,
},
[395433] = {
["isChanneled"] = true,
["source"] = "Council Stormcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198878,
},
[106877] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["npcID"] = 56719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1305,
},
[388537] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[124283] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["npcID"] = 61485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1447,
},
[425397] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["npcID"] = 208459,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2731,
},
[386490] = {
["encounterName"] = "Granyth",
["source"] = "Nokhud Saboteur",
["npcID"] = 195821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[117628] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Zian of the Endless Shadow",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60701,
},
[146163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Farseer",
["npcID"] = 72770,
},
[409016] = {
["source"] = "Summitshaper Lorac",
["event"] = "SPELL_CAST_START",
["npcID"] = 201522,
},
[288199] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2281,
},
[59842] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["npcID"] = 29304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1978,
},
[388918] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[104318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Imp",
["npcID"] = 55659,
},
[263627] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 134201,
},
[388540] = {
["source"] = "O'nank Shorescour",
["event"] = "SPELL_CAST_START",
["npcID"] = 193118,
},
[147422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Candlekeeper",
["npcID"] = 72875,
},
[30691] = {
["encounterName"] = "Vazruden the Herald",
["source"] = "Vazruden the Herald",
["encounterID"] = 1892,
["event"] = "SPELL_CAST_START",
["npcID"] = 17307,
},
[205549] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[130115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apparition of Terror",
["npcID"] = 66100,
},
[398780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Myrmidon",
["npcID"] = 200485,
},
[417210] = {
["source"] = "Great Glorious Alliance Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 207581,
},
[176280] = {
["source"] = "Everbloom Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 88261,
},
[169714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[154356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulpriest",
["npcID"] = 76595,
},
[147309] = {
["source"] = "Windfeather Nestkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 72761,
},
[394972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavabearer",
["npcID"] = 197148,
},
[424234] = {
["source"] = "Amirdrassil Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207769,
},
[398782] = {
["source"] = "Farscale Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200484,
},
[376257] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191225,
},
[361923] = {
["encounterName"] = "Lords of Dread",
["source"] = "Inchoate Shadow",
["npcID"] = 183138,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[265679] = {
["source"] = "Sandfury Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 129525,
},
[130120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apparition of Terror",
["npcID"] = 66100,
},
[392640] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[356088] = {
["source"] = "Mawsworn Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 183131,
},
[273871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankylodon Bull",
["npcID"] = 123093,
},
[142222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster S'thoc",
["npcID"] = 71259,
},
[294349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Waste",
["npcID"] = 144301,
},
[144119] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber",
["npcID"] = 71407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[123499] = {
["source"] = "Set'thik Fanatic",
["event"] = "SPELL_CAST_START",
["npcID"] = 63031,
},
[139319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Storm-Caller",
["npcID"] = 70236,
},
[417215] = {
["source"] = "Blood Horde Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 207585,
},
[164597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Geomancer",
["npcID"] = 75198,
},
[396738] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Blue Gulper",
["npcID"] = 195976,
},
[137399] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["npcID"] = 69465,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1577,
},
[29927] = {
["source"] = "Spell Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 16525,
},
[139327] = {
["source"] = "Focused Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 70249,
},
[136953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Water-Binder",
["npcID"] = 69455,
},
[406978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Guard",
["npcID"] = 202319,
},
[137994] = {
["source"] = "Dark Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 69702,
},
[312782] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[145564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Arcweaver",
["npcID"] = 71771,
},
[374215] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[119843] = {
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 61766,
},
[288210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arena Challenger",
["npcID"] = 163032,
},
[136954] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[109952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Twisted Geist",
["npcID"] = 54511,
},
[120215] = {
["isChanneled"] = true,
["source"] = "Abomination of Anger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61707,
},
[288211] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2281,
},
[396742] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slobberclaw",
["npcID"] = 195972,
},
[141381] = {
["source"] = "Lieutenant Blasthammer",
["event"] = "SPELL_CAST_START",
["npcID"] = 70893,
},
[147447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Farseer",
["npcID"] = 72770,
},
[427459] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[421316] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[143280] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Skeer the Bloodseeker",
["npcID"] = 71152,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[148518] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zu Yin",
["npcID"] = 73724,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[402887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[191527] = {
["source"] = "Blade Dancer Illianna",
["event"] = "SPELL_CAST_START",
["npcID"] = 96657,
},
[382410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 185528,
},
[143427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Ironblade",
["npcID"] = 71770,
},
[402888] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[84868] = {
["source"] = "Ferocious Grizzled Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 1778,
},
[143343] = {
["encounterName"] = "Thok the Bloodthirsty",
["source"] = "Thok the Bloodthirsty",
["npcID"] = 71529,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1599,
},
[34759] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["npcID"] = 17975,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1926,
},
[146605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kovok",
["npcID"] = 72927,
},
[214771] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99651,
},
[143339] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Rik'kal the Dissector",
["npcID"] = 71158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[400842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 199828,
},
[116725] = {
["source"] = "Husshun",
["event"] = "SPELL_CAST_START",
["npcID"] = 54925,
},
[144396] = {
["encounterName"] = "Fallen Protectors",
["event"] = "SPELL_CAST_START",
["source"] = "Rook Stonetoe",
["npcID"] = 71475,
},
[142315] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["npcID"] = 71157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[147647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Y'Shaarj",
["npcID"] = 73452,
},
},
["performance_units"] = {
[176920] = true,
[214441] = true,
[211306] = true,
[196642] = true,
[167999] = true,
[189707] = true,
},
["InterruptableSpells"] = {
[278444] = true,
[367503] = true,
[19647] = true,
[252923] = true,
[168040] = true,
[187707] = true,
[255824] = true,
[260701] = true,
[265187] = true,
[396640] = true,
[31935] = true,
[387843] = true,
[426731] = true,
[253562] = true,
[377389] = true,
[378282] = true,
[426541] = true,
[378155] = true,
[428263] = true,
[164887] = true,
[199663] = true,
[415770] = true,
[96231] = true,
[415773] = true,
[220543] = true,
[387596] = true,
[132409] = true,
[372743] = true,
[413607] = true,
[686] = true,
[264050] = true,
[395694] = true,
[93985] = true,
[428526] = true,
[365350] = true,
[374339] = true,
[418200] = true,
[372683] = true,
[8004] = true,
[386071] = true,
[105174] = true,
[418202] = true,
[387411] = true,
[371984] = true,
[204896] = true,
[173563] = true,
[392576] = true,
[147362] = true,
[382249] = true,
[377341] = true,
[201837] = true,
[404754] = true,
[411958] = true,
[165213] = true,
[392451] = true,
[400165] = true,
[47528] = true,
[266036] = true,
[188196] = true,
[413427] = true,
[386015] = true,
[201839] = true,
[369823] = true,
[227913] = true,
[267824] = true,
[201298] = true,
[429176] = true,
[373395] = true,
[194509] = true,
[351338] = true,
[1064] = true,
[1766] = true,
[387613] = true,
[412922] = true,
[200630] = true,
[169839] = true,
[255041] = true,
[407122] = true,
[348] = true,
[139869] = true,
[427459] = true,
[386012] = true,
[373017] = true,
[169840] = true,
[384365] = true,
[407124] = true,
[347008] = true,
[373897] = true,
[77472] = true,
[585] = true,
[386024] = true,
[268278] = true,
[376171] = true,
[407891] = true,
[264390] = true,
[383651] = true,
[369674] = true,
[369675] = true,
[164965] = true,
[91807] = true,
[6552] = true,
[252781] = true,
[367500] = true,
[426596] = true,
[197797] = true,
[2139] = true,
[428103] = true,
[260698] = true,
[417011] = true,
[395427] = true,
[384161] = true,
[253544] = true,
[200248] = true,
[259572] = true,
[374045] = true,
[386026] = true,
[377488] = true,
[256849] = true,
[29722] = true,
[225562] = true,
[412233] = true,
[426768] = true,
[407121] = true,
[436841] = true,
[376725] = true,
[196883] = true,
[5143] = true,
[388392] = true,
[372223] = true,
[373680] = true,
[387564] = true,
[377008] = true,
[377384] = true,
[372711] = true,
[265368] = true,
[374699] = true,
[384633] = true,
[408805] = true,
[386546] = true,
[97547] = true,
[168092] = true,
[383231] = true,
[253583] = true,
[374544] = true,
[57994] = true,
[369399] = true,
[374563] = true,
[377402] = true,
[416256] = true,
[369400] = true,
[76813] = true,
[387618] = true,
[265876] = true,
[266225] = true,
[260700] = true,
[263959] = true,
[392924] = true,
[116705] = true,
[392398] = true,
[387125] = true,
[264024] = true,
[381770] = true,
[204243] = true,
[381516] = true,
[377500] = true,
[384194] = true,
[377950] = true,
[260696] = true,
[164973] = true,
[200642] = true,
[382474] = true,
[169841] = true,
[373932] = true,
[32747] = true,
[168082] = true,
[200658] = true,
[377503] = true,
[384197] = true,
[388862] = true,
[415435] = true,
[397394] = true,
[426783] = true,
[384808] = true,
[388863] = true,
[417030] = true,
[411994] = true,
[391403] = true,
[415437] = true,
[253517] = true,
[260697] = true,
[385029] = true,
[412378] = true,
[369602] = true,
[369411] = true,
[369365] = true,
[201399] = true,
[120644] = true,
[40823] = true,
[375596] = true,
[183752] = true,
[271174] = true,
[201411] = true,
[263165] = true,
[417481] = true,
[116858] = true,
[260699] = true,
[372538] = true,
[118] = true,
[374706] = true,
[143343] = true,
},
["profiles"] = {
["Qpcheese - Ragnaros"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Hide Neutral Units"] = 1,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Execute Range"] = 1,
["Combo Points"] = 6,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
398151,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.168627455830574,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1669340967,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 137,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"197697",
"59544",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["version"] = -1,
["Name"] = "Add - Important [P]",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
209033,
360850,
212784,
207980,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
392640,
397888,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Add - Warning [P]",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura While Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
"165560",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["version"] = -1,
["Name"] = "Auto Set Skull",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["version"] = -1,
["Name"] = "Add - Non Elite Trash [P]",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
377004,
381516,
196543,
199726,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
352833,
330403,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["version"] = -1,
["Name"] = "Add - Explode on Die [P]",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
},
},
},
["aura2_x_offset"] = 0,
["update_throttle"] = 0.1200000047683716,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Color Automation [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Time"] = 1547392935,
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Hide Neutral Units [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Time"] = 1541606242,
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Name"] = "Reorder Nameplate [Plater]",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["version"] = -1,
["Name"] = "Don't Have Aura [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Time"] = 1554138845,
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["Name"] = "Extra Border [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Time"] = 1547409079,
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Current Target Color [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Time"] = 1552354619,
},
{
["Enabled"] = false,
["Revision"] = 348,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Author"] = "Ditador-Azralon",
["Name"] = "Cast Bar Icon Settings [P]",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["version"] = -1,
["Name"] = "Execute Range [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Time"] = 1547406548,
},
{
["Enabled"] = false,
["Revision"] = 363,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Kastfall-Azralon",
["Name"] = "Attacking Specific Unit [Plater]",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1620377377,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Name"] = "Combo Points [Plater]",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["Name"] = "Players Targeting a Target [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Time"] = 1548278227,
},
{
["Enabled"] = false,
["Revision"] = 356,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Ditador-Azralon",
["Name"] = "Aura Reorder [Plater]",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["HooksTemp"] = {
},
},
},
["aura_x_offset"] = 0,
["range_check_alpha_friendlies"] = 0.6499999761581421,
["range_check_alpha"] = 0.6499999761581421,
["npc_cache"] = {
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
},
},
["ui_parent_scale_tune"] = 1.409999847412109,
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 1,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Fixate On You"] = 11,
["Auto Set Skull"] = 11,
["Cast - Very Important"] = 15,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Countdown"] = 11,
["Cast - Stop Casting"] = 4,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Add - Explode on Die [P]"] = 1,
["Explosion Affix M+"] = 14,
["Spiteful Affix"] = 3,
["Unit - Show Energy"] = 11,
},
["range_check_in_range_or_target_alpha"] = 0.8999999761581421,
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["patch_version"] = 24,
["aura2_y_offset"] = 5,
["pet_height_scale"] = 0.949999988079071,
["health_selection_overlay_alpha"] = 0.09999999403953552,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["__TrashAt"] = 1675712003,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
},
["pet_width_scale"] = 0.949999988079071,
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["not_affecting_combat_alpha"] = 0.5999999642372131,
["aura_y_offset"] = 5,
},
["Default"] = {
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802706,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["url"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Revision"] = 633,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
398151,
377738,
378149,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Aura - Buff Alert [Plater]",
["Desc"] = "Add the buff name in the trigger box.",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1614608904,
["NpcNames"] = {
"174773",
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["Icon"] = 135945,
["semver"] = "",
["Enabled"] = true,
["Revision"] = 188,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Time to Die",
["Value"] = "Time to Die",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Name"] = "Width",
["Value"] = 27,
["Key"] = "bgWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Key"] = "bgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Name"] = "Text Size",
["Value"] = 8,
["Key"] = "textSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Targeting",
["Value"] = "Targeting",
["Key"] = "option11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 11",
["Value"] = 0,
["Key"] = "option11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Name"] = "M+ Spiteful",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
377488,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1688802707,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 369,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["Enabled"] = true,
["Author"] = "Tercioo-Sylvanas",
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Prio"] = 99,
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["SpellIds"] = {
},
["Desc"] = "Add the debuff name in the trigger box.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a special animation showing the explosion time.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Name"] = "Health Bar Height Mod",
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 0.5,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Name"] = "Arrow Height",
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Name"] = "Color List by SpellId",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
415437,
264050,
267824,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1622577650,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["semver"] = "",
["Enabled"] = false,
["Revision"] = 64,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Only in Combat",
["Value"] = false,
["Key"] = "onlyInCombat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Auto Set Skull",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802694,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["semver"] = "",
["Enabled"] = true,
["Revision"] = 210,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Countdown",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.73,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Key"] = "animSpeed",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1688802690,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["Icon"] = 1029718,
["semver"] = "",
["Enabled"] = true,
["Revision"] = 271,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate [Plater]",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802689,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["Icon"] = 136048,
["semver"] = "",
["Enabled"] = true,
["Revision"] = 235,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "script desc",
["Value"] = "Show the power of the unit above the nameplate.",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show at 80% of Energy",
["Value"] = true,
["Key"] = "showLater",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Font Color",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Key"] = "fontColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Name"] = "Enable Text Outline",
["Value"] = true,
["Key"] = "outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Unit - Show Energy [Plater]",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802691,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 268,
["semver"] = "",
["NpcNames"] = {
},
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["OptionsValues"] = {
["NameplateSizeOffset"] = 1.3500000238419,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Time"] = 1648170127,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["Icon"] = 2065634,
["semver"] = "1.0.74",
["Enabled"] = true,
["Revision"] = 2918,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "ShowArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 1,
["Key"] = "ArrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Glow Alpha",
["Value"] = 0.7,
["Key"] = "GlowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Nameplate Height Scale",
["Value"] = 1.25,
["Key"] = "NameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["Name"] = "M+ Explosive [Fixed]",
["Author"] = "Bombad¬£o-Azralon",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- Îã§Ïö∞ÏÑ∏Í∑∏ÎÑ§, false spell\n    }    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["version"] = 75,
["Prio"] = 99,
["SpellIds"] = {
240446,
347363,
339415,
318406,
331223,
326607,
327885,
334625,
328016,
324527,
344005,
321999,
340219,
328986,
320576,
322358,
341445,
336451,
332672,
331398,
331379,
334664,
334967,
320230,
328146,
320631,
322493,
324372,
327240,
322939,
328756,
331745,
340304,
319685,
326827,
342481,
356548,
356537,
356407,
349987,
349663,
350090,
355782,
350922,
355438,
357404,
357189,
347150,
355057,
355139,
355429,
355584,
358131,
350517,
357260,
351119,
351646,
350180,
335783,
294533,
353782,
347855,
353769,
331935,
336383,
342160,
353742,
353444,
277039,
278192,
329909,
358328,
325632,
81008,
296355,
355224,
296839,
310392,
367380,
297966,
332002,
329904,
294517,
329423,
329905,
353124,
358270,
295985,
184381,
318995,
260344,
301952,
362820,
329930,
355212,
332165,
358327,
359770,
364040,
361644,
363088,
361989,
363024,
365008,
365805,
365958,
360717,
361923,
363533,
364386,
364114,
362028,
362617,
365385,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- Îã§Ïö∞ÏÑ∏Í∑∏ÎÑ§, false spell\n    }    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["url"] = "https://wago.io/1TlaFYtDO/75",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["OptionsValues"] = {
["customSize"] = {
{
"17",
"120, 16",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775232,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
["semver"] = "",
["Enabled"] = true,
["Revision"] = 283,
["Options"] = {
{
["Type"] = 7,
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Value"] = {
{
"17",
"120, 16",
},
},
["Key"] = "customSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Name"] = "Cast Bar Width",
["Value"] = 120,
["Key"] = "width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Name"] = "Cast Bar Height",
["Value"] = 16,
["Key"] = "height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Name"] = "Cast Timer Size",
["Value"] = 12,
["Key"] = "timerFontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 7",
["Value"] = "Time Separators",
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Key"] = "separatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Width",
["Value"] = 1,
["Key"] = "separatorWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["Name"] = "Cast - Castbar is Timer [P]",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
354080,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Shows the target name in a separate box",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Key"] = "option27",
["Value"] = 0,
["Name"] = "Option 27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Target Options",
["Name"] = "Option 28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 14,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Key"] = "colorByClass",
["Value"] = true,
["Name"] = "Use Class Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgColor",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Fraction"] = false,
["Value"] = 90,
["Name"] = "Frame Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Frame Height",
["Value"] = 20,
["Key"] = "targetFrameHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1688802705,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["semver"] = "",
["Enabled"] = true,
["Revision"] = 379,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Blink Enabled",
["Value"] = true,
["Key"] = "blinkEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = true,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Name"] = "Change NamePlate Color",
["Value"] = false,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Name"] = "Timeleft to Blink",
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Name"] = "Blink Speed",
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Name"] = "Blink Max Alpha",
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Timer Color Enabled",
["Value"] = true,
["Key"] = "timerColorEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Warning Color",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Key"] = "warningColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Name"] = "Critical Color",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Key"] = "criticalColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Name"] = "Aura - Blink by Time Left [Plater]",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802692,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["Icon"] = 2175503,
["url"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 534,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "Option 18",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Nameplate Color",
["Value"] = "Nameplate Color",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
389446,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Explosion Affix M+ [Plater]",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1688802696,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 148,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Enabled"] = true,
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Add - Health Markers [P]",
["PlaterCore"] = 1,
["Prio"] = 99,
["version"] = -1,
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1705066622,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 575,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Nameplate Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Extra Texture",
["Value"] = "Extra Texture",
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Key"] = "showExtraTexture",
["Value"] = false,
["Name"] = "Show Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Key"] = "skullColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Name"] = "Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Key"] = "skullScale",
["Value"] = 0.6,
["Name"] = "Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Name"] = "Npc Color By NpcID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["Enabled"] = true,
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
194745,
190426,
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Add - Important [P]",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
376644,
373017,
386781,
384823,
372735,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Name"] = "Cast Color by SpellID",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
200630,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Key"] = "shakeAmplitude",
["Value"] = 25,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 30,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1688802924,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["url"] = "",
["Icon"] = 610472,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 69,
["Options"] = {
},
["Enabled"] = true,
["NpcNames"] = {
},
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Aura is Shield [P]",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1705066619,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 165,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useFlash",
["Value"] = true,
["Name"] = "Flash Nameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Name"] = "NpcID to Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["Enabled"] = true,
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
186696,
101075,
100818,
98081,
52019,
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Add - Warning [P]",
["Desc"] = "Change the color of  add",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1688802707,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["url"] = "",
["Icon"] = 236209,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["Revision"] = 20,
["Options"] = {
},
["Enabled"] = true,
["NpcNames"] = {
},
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
372743,
372749,
384933,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Aura While Casting [P]",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1705067832,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["Revision"] = 116,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateScale",
["Value"] = true,
["Name"] = "Change Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Key"] = "scale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["Enabled"] = false,
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Add - Non Elite Trash [P]",
["Desc"] = "",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Name"] = "Rotation Duration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.3,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Name"] = "Texture Scale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Name"] = "Texture Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Name"] = "Amount of Segments",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1688802690,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["url"] = "",
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Revision"] = 34,
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
426662,
426663,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Fixate by Unit Buff [P]",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1705066826,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["Revision"] = 110,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Reverse Health Bar",
["Value"] = false,
["Key"] = "useReverse",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable Shake",
["Value"] = false,
["Key"] = "useShake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Name"] = "Shake Amplitude",
["Value"] = 0.2,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 70,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Red Background",
["Value"] = true,
["Key"] = "useBackground",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Add - Explode on Die [P]",
["Desc"] = "",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
},
},
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4244: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4242: in function <Interface/AddOns/Plater/Plater.lua:4242>\n",
["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Blizzard_SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"FRIENDNAMEPLATES\"]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4246: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4242: in function <Interface/AddOns/Plater/Plater.lua:4242>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4245: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4242: in function <Interface/AddOns/Plater/Plater.lua:4242>\n",
["SoftTargetInteract"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/UltraSquirt/UltraSquirt.lua\"]:837: in function `ResetCVars'\n[string \"@Interface/AddOns/UltraSquirt/UltraSquirt.lua\"]:1602: in function <Interface/AddOns/UltraSquirt/UltraSquirt.lua:1599>\n",
["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6063: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6061>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/mixins.lua\"]:372: in function `RunHooksForWidget'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:749: in function <Interface/AddOns/Details/Libs/DF/slider.lua:713>\n",
["nameplateMotion"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6046: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6044>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Details/Libs/DF/slider.lua:762>\n",
},
["url"] = "https://wago.io/RPHjubTGI/1",
["cast_statusbar_spark_alpha"] = 0.8299999833107,
["aura2_y_offset"] = 5,
["health_selection_overlay"] = "Details Vidro",
["expansion_triggerwipe"] = {
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.19607843137255,
0.050980392156863,
0.062745098039216,
1,
},
["hide_blizzard_castbar"] = true,
["extra_icon_cooldown_reverse"] = false,
["npc_cache"] = {
[69134] = {
"Kazra'jin",
"Throne of Thunder",
"enUS",
},
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[169421] = {
"Felguard",
"Brackenhide Hollow",
"enUS",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[70798] = {
"Kor'kron Emberguard",
"The Secrets of Ragefire",
"enUS",
},
[60043] = {
"Jade Guardian",
"Mogu'shan Vaults",
"enUS",
},
[22897] = {
"Summoned Windfury Totem",
"Black Temple",
"enUS",
},
[22929] = {
"Greater Shadowfiend",
"Black Temple",
"enUS",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[56589] = {
"Striker Ga'dok",
"Gate of the Setting Sun",
"enUS",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[56717] = {
"Hoptallus",
"Stormstout Brewery",
"enUS",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[169425] = {
"Felhound",
"Brackenhide Hollow",
"enUS",
},
[61387] = {
"Quilen Guardian",
"Mogu'shan Palace",
"enUS",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
"enUS",
},
[19507] = {
"Sunseeker Gene-Splicer",
"Tempest Keep: The Botanica",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[61707] = {
"Abomination of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[169426] = {
"Infernal",
"Brackenhide Hollow",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
"enUS",
},
[69905] = {
"Gurubashi Berserker",
"Throne of Thunder",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[62795] = {
"Sik'thik Warden",
"Siege of Niuzao Temple",
"enUS",
},
[169428] = {
"Wrathguard",
"Brackenhide Hollow",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
"enUS",
},
[169429] = {
"Shivarra",
"Brackenhide Hollow",
},
[18420] = {
"Sunseeker Geomancer",
"Tempest Keep: The Botanica",
"enUS",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[169430] = {
"Ur'zul",
"Brackenhide Hollow",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[40023] = {
"Defiled Earth Rager",
"Blackrock Caverns",
"enUS",
},
[60621] = {
"Corrupted Waters",
"Terrace of Endless Spring",
"enUS",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[197835] = {
"Kaurdyth",
"Vault of the Incarnates",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[61453] = {
"Mu'Shiba",
"Mogu'shan Palace",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59982] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[102277] = {
"Deadeye Decoy",
"Darkheart Thicket",
"enUS",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[69909] = {
"Amani'shi Flame Chanter",
"Throne of Thunder",
"enUS",
},
[58831] = {
"Bound Servant",
"Scholomance",
"enUS",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
"enUS",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[18421] = {
"Sunseeker Researcher",
"Tempest Keep: The Botanica",
"enUS",
},
[69910] = {
"Drakkari Frost Warden",
"Throne of Thunder",
"enUS",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
"enUS",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[62348] = {
"Sik'thik Soldier",
"Siege of Niuzao Temple",
"enUS",
},
[145898] = {
"Anointed Disciple",
"Battle of Dazar'alor",
"enUS",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[39705] = {
"Ascendant Lord Obsidius",
"Blackrock Caverns",
"enUS",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[61389] = {
"Kargesh Highguard",
"Mogu'shan Palace",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[133361] = {
"Wasting Servant",
"Waycrest Manor",
"enUS",
},
[69911] = {
"Zandalari Warlord",
"Throne of Thunder",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[69906] = {
"Zandalari High Priest",
"Throne of Thunder",
"enUS",
},
[68248] = {
"Corpse Spider",
"Throne of Thunder",
"enUS",
},
[18422] = {
"Sunseeker Botanist",
"Tempest Keep: The Botanica",
"enUS",
},
[70544] = {
"Hekima the Wise",
"Blood in the Snow",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58898] = {
"Vigilant Watchman",
"Scarlet Halls",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
"enUS",
},
[60047] = {
"Amethyst Guardian",
"Mogu'shan Vaults",
"enUS",
},
[63053] = {
"Garalon's Leg",
"Heart of Fear",
"enUS",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[64458] = {
"Kor'thik Warsinger",
"Heart of Fear",
"enUS",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[19509] = {
"Sunseeker Harvester",
"Tempest Keep: The Botanica",
"enUS",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
"enUS",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[69013] = {
"Diffused Lightning",
"Throne of Thunder",
"enUS",
},
[208578] = {
"Wild Sproutling",
"10.1.5 Time Rifts - Titan (Ulderoth)",
"enUS",
},
[64393] = {
"Night Terror",
"Terrace of Endless Spring",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[137458] = {
"Rotting Spore",
"The Underrot",
"enUS",
},
[72983] = {
"Corrupted Skullsplitter",
"Siege of Orgrimmar",
"enUS",
},
[69017] = {
"Primordius",
"Throne of Thunder",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[126847] = {
"Captain Raoul",
"Freehold",
"enUS",
},
[126845] = {
"Captain Jolly",
"Freehold",
"enUS",
},
[73742] = {
"Thresher Turret",
"Siege of Orgrimmar",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[145903] = {
"Darkforged Crusader",
"Battle of Dazar'alor",
"enUS",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
"enUS",
},
[168932] = {
"Doomguard",
"Brackenhide Hollow",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
"enUS",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
"enUS",
},
[58198] = {
"Shado-Pan Disciple",
"Shado-Pan Monastery",
"enUS",
},
[72728] = {
"Kor'kron Blood Axe",
"Siege of Orgrimmar",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[60885] = {
"Minion of Fear",
"Terrace of Endless Spring",
"enUS",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
"enUS",
},
[53140] = {
"Son of Flame",
"Firelands",
"enUS",
},
[61392] = {
"Harthak Flameseeker",
"Mogu'shan Palace",
"enUS",
},
[147440] = {
"Blazing Fireguard",
"Battle of Dazar'alor",
"enUS",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[19511] = {
"Nethervine Inciter",
"Tempest Keep: The Botanica",
"enUS",
},
[61709] = {
"Spawn of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[61131] = {
"Mogu'shan Secret-Keeper",
"Mogu'shan Vaults",
"enUS",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[17976] = {
"Commander Sarannis",
"Tempest Keep: The Botanica",
"enUS",
},
[69132] = {
"High Priestess Mar'li",
"Throne of Thunder",
"enUS",
},
[22964] = {
"Priestess of Delight",
"Black Temple",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[71578] = {
"Amber Parasite",
"Siege of Orgrimmar",
"enUS",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[74009] = {
"Crawler Mine",
"Siege of Orgrimmar",
"enUS",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
"enUS",
},
[69390] = {
"Zandalari Storm-Caller",
"Throne of Thunder",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[70683] = {
"Dark Shaman Xorenth",
"The Secrets of Ragefire",
"enUS",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[72986] = {
"Shanna Sparkfizz",
"Siege of Orgrimmar",
"enUS",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[64339] = {
"Instructor Tak'thok",
"Heart of Fear",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[126848] = {
"Captain Eudora",
"Freehold",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[3977] = {
"High Inquisitor Whitemane",
"Scarlet Monastery",
"enUS",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[72492] = {
"Shimra",
"Siege of Orgrimmar",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
"enUS",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[23222] = {
"Bonechewer Brawler",
"Black Temple",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[39708] = {
"Twilight Flame Caller",
"Blackrock Caverns",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[19958] = {
"White Seedling",
"Tempest Keep: The Botanica",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[17975] = {
"High Botanist Freywinn",
"Tempest Keep: The Botanica",
"enUS",
},
[174569] = {
"Training Dummy",
"The Shadowlands",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[69131] = {
"Frost King Malakk",
"Throne of Thunder",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[70557] = {
"Zandalari Prophet",
"Throne of Thunder",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
"enUS",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[60051] = {
"Cobalt Guardian",
"Mogu'shan Vaults",
"enUS",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
"enUS",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[64340] = {
"Instructor Maltik",
"Heart of Fear",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
"enUS",
},
[22965] = {
"Devoted Steward",
"Black Temple",
"enUS",
},
[71454] = {
"Malkorok",
"Siege of Orgrimmar",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
"enUS",
},
[205790] = {
"Time-Lost Smack-o-Tron",
"Dawn of the Infinite",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[69927] = {
"Zandalari Prelate",
"Throne of Thunder",
"enUS",
},
[125828] = {
"Kronwel",
"Atal'Dazar",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
"enUS",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
"enUS",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[61139] = {
"Shan-xi Watershaper",
"Mogu'shan Vaults",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[67361] = {
"Horde Swashbuckler",
"Naval Battle Scenario",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
"enUS",
},
[63570] = {
"Sra'thik Pool-Tender",
"Heart of Fear",
"enUS",
},
[72355] = {
"High Enforcer Thranok",
"Siege of Orgrimmar",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[86552] = {
"Gorged Burster",
"The Everbloom",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[70665] = {
"Kor'kron Dire Soldier",
"The Secrets of Ragefire",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[64902] = {
"Kor'thik Fleshrender",
"Heart of Fear",
"enUS",
},
[19513] = {
"Mutate Fear-Shrieker",
"Tempest Keep: The Botanica",
"enUS",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[64338] = {
"Instructor Kli'thak",
"Heart of Fear",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[71712] = {
"Despair Spawn",
"Siege of Orgrimmar",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
"enUS",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[62995] = {
"Animated Protector",
"Terrace of Endless Spring",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
"enUS",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
"enUS",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
"enUS",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[71466] = {
"Iron Juggernaut",
"Siege of Orgrimmar",
"enUS",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
"enUS",
},
[39698] = {
"Karsh Steelbender",
"Blackrock Caverns",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
"enUS",
},
[59605] = {
"Sodden Hozen Brawler",
"Pandaria",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[72353] = {
"Dragonmaw Flameslinger",
"Siege of Orgrimmar",
"enUS",
},
[72490] = {
"Overseer Mojka",
"Siege of Orgrimmar",
"enUS",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
"enUS",
},
[139269] = {
"Gloom Horror",
"Waycrest Manor",
"enUS",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[204262] = {
"Necrofrost",
"Dawn of the Infinite",
"enUS",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[126983] = {
"Harlan Sweete",
"Freehold",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
"enUS",
},
[71979] = {
"Kor'kron Warbringer",
"Siege of Orgrimmar",
"enUS",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
"enUS",
},
[70179] = {
"Ritual Guard",
"Throne of Thunder",
"enUS",
},
[72354] = {
"Dragonmaw Bonecrusher",
"Siege of Orgrimmar",
"enUS",
},
[58319] = {
"Lesser Sha",
"Pandaria",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[23318] = {
"Ashtongue Rogue",
"Black Temple",
"enUS",
},
[213219] = {
"Congealed Ooze",
"Throne of the Tides",
"enUS",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[19505] = {
"Sunseeker Channeler",
"Tempest Keep: The Botanica",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[19512] = {
"Nethervine Reaper",
"Tempest Keep: The Botanica",
"enUS",
},
[72352] = {
"Dragonmaw Ebon Stalker",
"Siege of Orgrimmar",
"enUS",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
"enUS",
},
[19608] = {
"Frayer Wildling",
"Tempest Keep: The Botanica",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
"enUS",
},
[72483] = {
"Sarok",
"Siege of Orgrimmar",
"enUS",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[72365] = {
"Dragonmaw Cannoneer",
"Siege of Orgrimmar",
"enUS",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[67366] = {
"Horde Officer",
"Naval Battle Scenario",
"enUS",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[73091] = {
"Blackfuse Sellsword",
"Siege of Orgrimmar",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[72356] = {
"Master Cannoneer Dagryn",
"Siege of Orgrimmar",
"enUS",
},
[64916] = {
"Kor'thik Swarmguard",
"Heart of Fear",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[70663] = {
"Embercore",
"The Secrets of Ragefire",
"enUS",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[59223] = {
"Brother Korloff",
"Scarlet Monastery",
"enUS",
},
[61334] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[61398] = {
"Xin the Weaponmaster",
"Mogu'shan Palace",
"enUS",
},
[56713] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[72357] = {
"Lieutenant Krugruk",
"Siege of Orgrimmar",
"enUS",
},
[72485] = {
"Goma",
"Siege of Orgrimmar",
"enUS",
},
[61910] = {
"Resin Flake",
"Siege of Niuzao Temple",
"enUS",
},
[64729] = {
"Rok'nah Raider",
"Theramore's Fall (A)",
"enUS",
},
[70822] = {
"Earthborn Hatred",
"Heart of the Old God Scenario",
"enUS",
},
[22871] = {
"Teron Gorefiend",
"Black Temple",
"enUS",
},
[98681] = {
"Rook Spinner",
"Black Rook Hold",
"enUS",
},
[72238] = {
"Embodied Despair",
"Siege of Orgrimmar",
"enUS",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
"enUS",
},
[67368] = {
"Parrot",
"Naval Battle Scenario",
"enUS",
},
[60375] = {
"Zandalari Skullcharger",
"Mogu'shan Vaults",
"enUS",
},
[2630] = {
"Earthbind Totem",
"Theramore's Fall (A)",
"enUS",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
"enUS",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[72358] = {
"Kor'kron Cannon",
"Siege of Orgrimmar",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[69639] = {
"Humming Crystal",
"Throne of Thunder",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[22959] = {
"Ardent Host",
"Black Temple",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[71858] = {
"Wavebinder Kardris",
"Siege of Orgrimmar",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
"enUS",
},
[61783] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[72487] = {
"Kozish",
"Siege of Orgrimmar",
"enUS",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[70824] = {
"Fiery Anger",
"Heart of the Old God Scenario",
"enUS",
},
[68905] = {
"Lu'lin",
"Throne of Thunder",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[63569] = {
"Amber Searsting",
"Heart of Fear",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[73767] = {
"Kor'kron Shredder",
"Siege of Orgrimmar",
"enUS",
},
[17978] = {
"Thorngrin the Tender",
"Tempest Keep: The Botanica",
"enUS",
},
[22962] = {
"Mistress of Woe",
"Black Temple",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[203763] = {
"Alliance Footman",
"Dawn of the Infinite",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[61340] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
"enUS",
},
[72744] = {
"Kor'kron Skullsplitter",
"Siege of Orgrimmar",
"enUS",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
"enUS",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[63191] = {
"Garalon",
"Heart of Fear",
"enUS",
},
[64732] = {
"Rok'nah Grunt",
"Theramore's Fall (A)",
"enUS",
},
[144680] = {
"Frida Ironbellows",
"Battle of Dazar'alor",
"enUS",
},
[134701] = {
"Blood Effigy",
"The Underrot",
"enUS",
},
[65494] = {
"Rok'nah Skirmisher",
"Theramore's Fall (A)",
"enUS",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
"enUS",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
"enUS",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[65581] = {
"Essence of Hate",
"Crypt of Forgotten Kings",
"enUS",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
"enUS",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
"enUS",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[61337] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[71478] = {
"Embodied Anguish",
"Siege of Orgrimmar",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[70060] = {
"Shadowed Voodoo Spirit",
"Throne of Thunder",
"enUS",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[68397] = {
"Lei Shen",
"Throne of Thunder",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[205305] = {
"Fractured Causality",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[62405] = {
"Sra'thik Amber-Trapper",
"Heart of Fear",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[198142] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[205307] = {
"Fury of N'zoth",
"10.1.5 Time Rifts - Black Empire (Azq'roth)",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[61338] = {
"Glintrok Skulker",
"Mogu'shan Palace",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[18587] = {
"Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72493] = {
"Trak'gen",
"Siege of Orgrimmar",
"enUS",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
"enUS",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[22841] = {
"Shade of Akama",
"Black Temple",
"enUS",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[204030] = {
"Goblin Sapper",
"Dawn of the Infinite",
"enUS",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
"enUS",
},
[91002] = {
"Rotdrool Grabber",
"UNKNOWN",
"enUS",
},
[71734] = {
"Sha of Pride",
"Siege of Orgrimmar",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[61701] = {
"Sik'thik Warrior",
"Siege of Niuzao Temple",
"enUS",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
"enUS",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
"enUS",
},
[64734] = {
"Rok'nah Hag",
"Theramore's Fall (A)",
"enUS",
},
[70959] = {
"Urtharges the Destroyer",
"Heart of the Old God Scenario",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[61339] = {
"Glintrok Oracle",
"Mogu'shan Palace",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[71993] = {
"Desperation Spawn",
"Siege of Orgrimmar",
"enUS",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[72367] = {
"Dragonmaw Tidal Shaman",
"Siege of Orgrimmar",
"enUS",
},
[70448] = {
"Ancient Python",
"Throne of Thunder",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
"enUS",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[73775] = {
"War Master Kragg",
"Siege of Orgrimmar",
"enUS",
},
[17980] = {
"Laj",
"Tempest Keep: The Botanica",
"enUS",
},
[62619] = {
"Jade Destroyer",
"Greenstone Village",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[71865] = {
"Garrosh Hellscream",
"Siege of Orgrimmar",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[72496] = {
"Overseer Thathung",
"Siege of Orgrimmar",
"enUS",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
"enUS",
},
[72249] = {
"Galakras",
"Siege of Orgrimmar",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[73904] = {
"Kor'kron Iron Sentinel",
"Siege of Orgrimmar",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[66100] = {
"Apparition of Terror",
"Terrace of Endless Spring",
"enUS",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[72191] = {
"Overlord Runthak",
"Siege of Orgrimmar",
"enUS",
},
[32666] = {
"Training Dummy",
"Siege of Orgrimmar",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[56863] = {
"Sleepy Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
},
[71474] = {
"Embodied Despair",
"Siege of Orgrimmar",
"enUS",
},
[60381] = {
"Zandalari Infiltrator",
"Mogu'shan Vaults",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[58590] = {
"Scarlet Zealot",
"Scarlet Monastery",
"enUS",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[99365] = {
"Taintheart Stalker",
"Darkheart Thicket",
"enUS",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[70963] = {
"Lieutenant Fizzel",
"Naval Battle Scenario",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[69702] = {
"Ritualist Aridian",
"Throne of Thunder",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[61341] = {
"Mounted Mogu",
"Mogu'shan Vaults",
"enUS",
},
[71603] = {
"Sha Puddle",
"Siege of Orgrimmar",
"enUS",
},
[167962] = {
"Defunct Dental Drill",
"De Other Side",
},
[71859] = {
"Earthbreaker Haromm",
"Siege of Orgrimmar",
"enUS",
},
[62945] = {
"Bloodthirsty Prowler",
"Greenstone Village",
"enUS",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
"enUS",
},
[65609] = {
"Sky-Captain \"Dashing\" Dazrip",
"Theramore's Fall (A)",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
"enUS",
},
[33716] = {
"Ruby Consort",
"Ulduar",
"enUS",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[23420] = {
"Essence of Anger",
"Black Temple",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[155170] = {
"Risen Villager",
"Stratholme Pet Dungeon",
"enUS",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[101679] = {
"Dreadsoul Poisoner",
"Darkheart Thicket",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[58783] = {
"Scarlet Initiate",
"Scarlet Monastery",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
},
[73012] = {
"Klaxxi Skirmisher",
"Siege of Orgrimmar",
"enUS",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
"enUS",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
"enUS",
},
[71477] = {
"Embodied Gloom",
"Siege of Orgrimmar",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[59551] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
"enUS",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[22939] = {
"Temple Acolyte",
"Black Temple",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[155174] = {
"Unholy Skeleton",
"Stratholme Pet Dungeon",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[33136] = {
"Guardian of Yogg-Saron",
"Ulduar",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[198310] = {
"Flame Tarasek",
"Vault of the Incarnates",
"enUS",
},
[56865] = {
"Aqua Dancer",
"Stormstout Brewery",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Freehold",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[69944] = {
"Sand Elemental",
"Throne of Thunder",
"enUS",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
"enUS",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[73415] = {
"Ichor of Y'Shaarj",
"Siege of Orgrimmar",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[39982] = {
"Crazed Mage",
"Blackrock Caverns",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[73152] = {
"Storeroom Guard",
"Siege of Orgrimmar",
"enUS",
},
[61156] = {
"Vengeful Hui",
"Greenstone Village",
"enUS",
},
[71480] = {
"Sun Tenderheart",
"Siege of Orgrimmar",
"enUS",
},
[60384] = {
"Zandalari Pterror Wing",
"Mogu'shan Vaults",
"enUS",
},
[39978] = {
"Twilight Torturer",
"Blackrock Caverns",
"enUS",
},
[198933] = {
"Iridikron",
"Dawn of the Infinite",
"enUS",
},
[60576] = {
"Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[72828] = {
"Nameless Windwalker Spirit",
"Siege of Orgrimmar",
"enUS",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[61216] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
"enUS",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[71481] = {
"Embodied Sorrow",
"Siege of Orgrimmar",
"enUS",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[60197] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[70202] = {
"Manchu",
"Throne of Thunder",
"enUS",
},
[33134] = {
"Sara",
"Ulduar",
"enUS",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[70586] = {
"Eternal Guardian",
"Throne of Thunder",
"enUS",
},
[61699] = {
"Sik'thik Amberwing",
"Siege of Niuzao Temple",
"enUS",
},
[45672] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[71482] = {
"Embodied Desperation",
"Siege of Orgrimmar",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[64735] = {
"Rok'nah Headhunter",
"Theramore's Fall (A)",
"enUS",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70587] = {
"Shale Stalker",
"Throne of Thunder",
"enUS",
},
[56867] = {
"Fiery Trickster",
"Stormstout Brewery",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
"enUS",
},
[207638] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
"enUS",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
"enUS",
},
[61345] = {
"Mogu Archer",
"Mogu'shan Vaults",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[19486] = {
"Sunseeker Chemist",
"Tempest Keep: The Botanica",
"enUS",
},
[60709] = {
"Qiang the Merciless",
"Mogu'shan Vaults",
"enUS",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
"enUS",
},
[207639] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[59746] = {
"Scarlet Centurion",
"Scarlet Monastery",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[73342] = {
"Fallen Pool Tender",
"Siege of Orgrimmar",
"enUS",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[39980] = {
"Twilight Sadist",
"Blackrock Caverns",
"enUS",
},
[69821] = {
"Thunder Lord",
"Throne of Thunder",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[201756] = {
"Whiiskeyz",
"Dawn of the Infinite",
"enUS",
},
[72958] = {
"Dragonmaw Tidal Shaman",
"Siege of Orgrimmar",
"enUS",
},
[71491] = {
"Guardian of Sacrifice",
"Crypt of Forgotten Kings",
"enUS",
},
[70589] = {
"Cavern Burrower",
"Throne of Thunder",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[212981] = {
"Hapless Assistant",
"The Everbloom",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[67391] = {
"Lieutenant Drak'on",
"Naval Battle Scenario",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[197793] = {
"Awakened Juggernaut",
"Vault of the Incarnates",
"enUS",
},
[72893] = {
"Orgrimmar Peon",
"Siege of Orgrimmar",
"enUS",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[64353] = {
"Set'thik Gale-Slicer",
"Heart of Fear",
"enUS",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[14498] = {
"Tosamina",
"Siege of Orgrimmar",
"enUS",
},
[70982] = {
"Frost Totem",
"Blood in the Snow",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[70463] = {
"Frostmane Snowstalker",
"Blood in the Snow",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[60583] = {
"Protector Kaolan",
"Terrace of Endless Spring",
"enUS",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[61155] = {
"Wily Woodling",
"Greenstone Village",
"enUS",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[61347] = {
"Kingsguard",
"Mogu'shan Vaults",
"enUS",
},
[69712] = {
"Ji-Kun",
"Throne of Thunder",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[100529] = {
"Hatespawn Slime",
"Darkheart Thicket",
"enUS",
},
[71112] = {
"Quivering Blood",
"Heart of the Old God Scenario",
"enUS",
},
[64358] = {
"Set'thik Tempest",
"Heart of Fear",
"enUS",
},
[25756] = {
"Ahunite Coldwave",
"Coilfang: The Slave Pens",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[70464] = {
"Frostmane Witch Doctor",
"Blood in the Snow",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[61442] = {
"Kuai the Brute",
"Mogu'shan Palace",
"enUS",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[69374] = {
"War-God Jalak",
"Throne of Thunder",
"enUS",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[62691] = {
"Living Amber",
"Heart of Fear",
"enUS",
},
[60708] = {
"Meng the Demented",
"Mogu'shan Vaults",
"enUS",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
"enUS",
},
[70465] = {
"Frostmane Bonechiller",
"Blood in the Snow",
"enUS",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[72768] = {
"Kor'kron War Wolf",
"Siege of Orgrimmar",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[62254] = {
"Quilen Watcher",
"Crypt of Forgotten Kings",
"enUS",
},
[202789] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[62632] = {
"Sik'thik Engineer",
"Siege of Niuzao Temple",
"enUS",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[70219] = {
"Putrid Waste",
"Throne of Thunder",
"enUS",
},
[70594] = {
"Mist Lurker",
"Throne of Thunder",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[22846] = {
"Ashtongue Stormcaller",
"Black Temple",
"enUS",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[67966] = {
"Whirl Turtle",
"Throne of Thunder",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[64355] = {
"Kor'thik Silentwing",
"Heart of Fear",
"enUS",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[60585] = {
"Elder Regail",
"Terrace of Endless Spring",
"enUS",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[68036] = {
"Durumu the Forgotten",
"Throne of Thunder",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[70595] = {
"Frostmane Prowler",
"Blood in the Snow",
"enUS",
},
[72770] = {
"Kor'kron Dark Farseer",
"Siege of Orgrimmar",
"enUS",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
"enUS",
},
[70979] = {
"Water Elemental",
"Blood in the Snow",
"enUS",
},
[61157] = {
"Sassy Seedling",
"Greenstone Village",
"enUS",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[73538] = {
"Kor'kron War Wolf",
"Siege of Orgrimmar",
"enUS",
},
[65507] = {
"Rok'nah Felcaster",
"Theramore's Fall (A)",
"enUS",
},
[69700] = {
"Large Anima Golem",
"Throne of Thunder",
"enUS",
},
[59494] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[72131] = {
"Blind Blademaster",
"Siege of Orgrimmar",
"enUS",
},
[53545] = {
"Molten Spewer",
"Firelands",
"enUS",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[70468] = {
"Bonechiller Barafu",
"Blood in the Snow",
"enUS",
},
[61929] = {
"Sik'thik Amber-Weaver",
"Siege of Niuzao Temple",
"enUS",
},
[61989] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
"enUS",
},
[58605] = {
"Scarlet Judicator",
"Scarlet Monastery",
"enUS",
},
[101437] = {
"Burning Geode",
"UNKNOWN",
"enUS",
},
[71492] = {
"Maragor",
"Crypt of Forgotten Kings",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[69701] = {
"Anima Golem",
"Throne of Thunder",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[70341] = {
"Tormented Spirit",
"Throne of Thunder",
"enUS",
},
[63808] = {
"Faintly Glowing Gem",
"Mogu'shan Palace",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
"enUS",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[65444] = {
"Captain Mousson",
"Theramore's Fall (A)",
"enUS",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[211241] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
"enUS",
},
[61670] = {
"Sik'thik Demolisher",
"Siege of Niuzao Temple",
"enUS",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
"enUS",
},
[59751] = {
"Shado-Pan Warden",
"Shado-Pan Monastery",
"enUS",
},
[59522] = {
"Sudsy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[59458] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[63593] = {
"Set'thik Zephyrian",
"Heart of Fear",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
"enUS",
},
[39665] = {
"Rom'ogg Bonecrusher",
"Blackrock Caverns",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[64357] = {
"Kor'thik Swarmer",
"Heart of Fear",
"enUS",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
"enUS",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[39985] = {
"Mad Prisoner",
"Blackrock Caverns",
"enUS",
},
[50284] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[70471] = {
"Frostmane Berserker",
"Blood in the Snow",
"enUS",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
"enUS",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[61159] = {
"Greenstone Terror",
"Greenstone Village",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[98362] = {
"Troubled Soul",
"Black Rook Hold",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[33720] = {
"Obsidian Consort",
"Ulduar",
"enUS",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[212781] = {
"Dreamtalon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[72903] = {
"Kor'kron Siegemaster",
"Siege of Orgrimmar",
"enUS",
},
[131669] = {
"Jagged Hound",
"Waycrest Manor",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[33717] = {
"Azure Consort",
"Ulduar",
"enUS",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
"enUS",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[72264] = {
"Manifestation of Corruption",
"Siege of Orgrimmar",
"enUS",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
"enUS",
},
[70473] = {
"Frostmane Headhunter",
"Blood in the Snow",
"enUS",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
"enUS",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[73806] = {
"Kor'kron Machinist",
"Siege of Orgrimmar",
"enUS",
},
[65510] = {
"Rok'nah Wave-Caller",
"Theramore's Fall (A)",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[22874] = {
"Coilskar Harpooner",
"Black Temple",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[70474] = {
"Farastu",
"Blood in the Snow",
"enUS",
},
[61928] = {
"Sik'thik Guardian",
"Siege of Niuzao Temple",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[60009] = {
"Feng the Accursed",
"Mogu'shan Vaults",
"enUS",
},
[22880] = {
"Shadowmoon Champion",
"Black Temple",
"enUS",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[23223] = {
"Bonechewer Spectator",
"Black Temple",
"enUS",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[39987] = {
"Evolved Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
"enUS",
},
[205366] = {
"Time-Lost Wakethrasher",
"Dawn of the Infinite",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23232] = {
"Mutant War Hound",
"Black Temple",
"enUS",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
"enUS",
},
[72784] = {
"Kor'kron Gunner",
"Siege of Orgrimmar",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
"enUS",
},
[63592] = {
"Set'thik Gustwing",
"Heart of Fear",
"enUS",
},
[41139] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[60397] = {
"Emperor's Strength",
"Mogu'shan Vaults",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[69069] = {
"Living Fluid",
"Throne of Thunder",
"enUS",
},
[71244] = {
"Kor'kron Shadowblade",
"The Secrets of Ragefire",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[33719] = {
"Emerald Consort",
"Ulduar",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[22882] = {
"Shadowmoon Deathshaper",
"Black Temple",
"enUS",
},
[60586] = {
"Elder Asani",
"Terrace of Endless Spring",
"enUS",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
"enUS",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
"enUS",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[69070] = {
"Viscous Horror",
"Throne of Thunder",
"enUS",
},
[71245] = {
"Kor'kron Dark Shaman",
"The Secrets of Ragefire",
"enUS",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[61610] = {
"Seething Sha",
"Crypt of Forgotten Kings",
"enUS",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[22849] = {
"Ashtongue Feral Spirit",
"Black Temple",
"enUS",
},
[22881] = {
"Aqueous Surger",
"Black Temple",
"enUS",
},
[205629] = {
"Crazed Experiment",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22945] = {
"Shadowmoon Blood Mage",
"Black Temple",
"enUS",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
"enUS",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
"enUS",
},
[62442] = {
"Tsulong",
"Terrace of Endless Spring",
"enUS",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[212681] = {
"Vicious Snap Dragon",
"Throne of the Tides",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[130012] = {
"Irontide Ravager",
"Freehold",
"enUS",
},
[201792] = {
"Ahnzon",
"Dawn of the Infinite",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[56706] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
"enUS",
},
[214075] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[53231] = {
"Lava Scion",
"Firelands",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[64733] = {
"Rok'nah Loa-Singer",
"Theramore's Fall (A)",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[70224] = {
"Rotting Scavenger",
"Throne of Thunder",
"enUS",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
"enUS",
},
[72655] = {
"Fragment of Pride",
"Siege of Orgrimmar",
"enUS",
},
[64446] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[19843] = {
"Nethervine Trickster",
"Tempest Keep: The Botanica",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
"enUS",
},
[71504] = {
"Siegecrafter Blackfuse",
"Siege of Orgrimmar",
"enUS",
},
[60396] = {
"Emperor's Rage",
"Mogu'shan Vaults",
"enUS",
},
[39990] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[71383] = {
"Kor'thik Warcaller",
"Siege of Orgrimmar",
"enUS",
},
[50417] = {
"Bound Flames",
"Blackrock Caverns",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
"enUS",
},
[19557] = {
"Greater Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[39679] = {
"Corla, Herald of Twilight",
"Blackrock Caverns",
"enUS",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
"enUS",
},
[63275] = {
"Corrupted Protector",
"Terrace of Endless Spring",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[18404] = {
"Bloodwarder Steward",
"Tempest Keep: The Botanica",
"enUS",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[72791] = {
"Lingering Corruption",
"Siege of Orgrimmar",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[72408] = {
"Anti-Air Turret",
"Siege of Orgrimmar",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
"enUS",
},
[45620] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[61567] = {
"Vizier Jin'bak",
"Siege of Niuzao Temple",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[22946] = {
"Shadowmoon War Hound",
"Black Temple",
"enUS",
},
[71378] = {
"Quilen Guardian",
"Siege of Orgrimmar",
"enUS",
},
[194647] = {
"Thunder Caller",
"Vault of the Incarnates",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70227] = {
"Skittering Spiderling",
"Throne of Thunder",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[23394] = {
"Promenade Sentinel",
"Black Temple",
"enUS",
},
[71123] = {
"Echo of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[61247] = {
"Glintrok Greenhorn",
"Mogu'shan Palace",
"enUS",
},
[208198] = {
"Whiiskeyz",
"Scarlet Monastery",
"enUS",
},
[23172] = {
"Hand of Gorefiend",
"Black Temple",
"enUS",
},
[58674] = {
"Angry Hound",
"Scarlet Halls",
"enUS",
},
[61485] = {
"General Pa'valak",
"Siege of Niuzao Temple",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[53617] = {
"Molten Erupter",
"Firelands",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[70775] = {
"Horde Deckhand",
"Naval Battle Scenario",
"enUS",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[58738] = {
"Viletongue Skirmisher",
"A Brewing Storm",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[23524] = {
"Ashtongue Spiritbinder",
"Black Temple",
"enUS",
},
[71380] = {
"Animated Stone Mogu",
"Siege of Orgrimmar",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[60398] = {
"Emperor's Courage",
"Mogu'shan Vaults",
"enUS",
},
[71515] = {
"General Nazgrim",
"Siege of Orgrimmar",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[62637] = {
"Cursed Brew",
"Greenstone Village",
"enUS",
},
[62701] = {
"Mutated Construct",
"Heart of Fear",
"enUS",
},
[72276] = {
"Amalgam of Corruption",
"Siege of Orgrimmar",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[65785] = {
"Sergeant Grud",
"Theramore's Fall (A)",
"enUS",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[69078] = {
"Sul the Sandcrawler",
"Throne of Thunder",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[18405] = {
"Tempest-Forge Peacekeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[213576] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70230] = {
"Zandalari Blade Initiate",
"Throne of Thunder",
"enUS",
},
[63853] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72661] = {
"Zeal",
"Siege of Orgrimmar",
"enUS",
},
[22955] = {
"Charming Patron",
"Black Temple",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[60143] = {
"Gara'jal the Spiritbinder",
"Mogu'shan Vaults",
"enUS",
},
[22947] = {
"Mother Shahraz",
"Black Temple",
"enUS",
},
[71382] = {
"Burial Urn",
"Siege of Orgrimmar",
"enUS",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[60399] = {
"Qin-xi",
"Mogu'shan Vaults",
"enUS",
},
[56884] = {
"Corrupted Taran Zhu",
"Shado-Pan Monastery",
"enUS",
},
[196946] = {
"Lurking Lunker",
"Vault of the Incarnates",
"enUS",
},
[71030] = {
"Overseer Elaglo",
"The Secrets of Ragefire",
"enUS",
},
[72150] = {
"Kor'kron Shadowmage",
"Siege of Orgrimmar",
"enUS",
},
[147439] = {
"Molten Hound",
"Battle of Dazar'alor",
"enUS",
},
[23235] = {
"Bonechewer Blade Fury",
"Black Temple",
"enUS",
},
[208461] = {
"Scorching Brambles",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72662] = {
"Vanity",
"Siege of Orgrimmar",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[207438] = {
"Headless Horseman",
"Scarlet Monastery",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[23523] = {
"Ashtongue Elementalist",
"Black Temple",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
"enUS",
},
[59632] = {
"Champion Sithiss",
"A Brewing Storm",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[68313] = {
"Roaming Fog",
"Throne of Thunder",
"enUS",
},
[72535] = {
"Stone Statue",
"Siege of Orgrimmar",
"enUS",
},
[72663] = {
"Arrogance",
"Siege of Orgrimmar",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[60208] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[69465] = {
"Jin'rokh the Breaker",
"Throne of Thunder",
"enUS",
},
[60400] = {
"Jan-xi",
"Mogu'shan Vaults",
"enUS",
},
[62511] = {
"Amber-Shaper Un'sok",
"Heart of Fear",
"enUS",
},
[198997] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[99664] = {
"Restless Soul",
"Black Rook Hold",
"enUS",
},
[22917] = {
"Illidan Stormrage",
"Black Temple",
"enUS",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[58737] = {
"Viletongue Raider",
"A Brewing Storm",
"enUS",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[71518] = {
"Kor'kron Assassin",
"Siege of Orgrimmar",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[71385] = {
"Sri'thik Bombardier",
"Siege of Orgrimmar",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[73310] = {
"Dragonmaw War Banner",
"Siege of Orgrimmar",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[70746] = {
"Frostmane Flesh-Eater",
"Blood in the Snow",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[22948] = {
"Gurtogg Bloodboil",
"Black Temple",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[71770] = {
"Kor'kron Ironblade",
"Siege of Orgrimmar",
"enUS",
},
[69473] = {
"Ra-den",
"Throne of Thunder",
"enUS",
},
[63346] = {
"The Dark of Night",
"Terrace of Endless Spring",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[70235] = {
"Frozen Head",
"Throne of Thunder",
"enUS",
},
[23236] = {
"Bonechewer Shield Disciple",
"Black Temple",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
"enUS",
},
[60913] = {
"Energy Charge",
"Mogu'shan Vaults",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[71259] = {
"Huntmaster S'thoc",
"A Brewing Storm",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[71771] = {
"Kor'kron Arcweaver",
"Siege of Orgrimmar",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70236] = {
"Crazed Storm-Caller",
"Throne of Thunder",
"enUS",
},
[72411] = {
"Kor'kron Provisioner",
"Siege of Orgrimmar",
"enUS",
},
[210518] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[65783] = {
"Summoned Imp",
"Theramore's Fall (A)",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[71388] = {
"Amber-Encased Kunchong",
"Siege of Orgrimmar",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[71772] = {
"Kor'kron Assassin",
"Siege of Orgrimmar",
"enUS",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[33983] = {
"Constrictor Tentacle",
"Ulduar",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
"enUS",
},
[58739] = {
"Borokhula the Destroyer",
"A Brewing Storm",
"enUS",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
"enUS",
},
[70877] = {
"Volatile Earth",
"Heart of the Old God Scenario",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
"enUS",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
"enUS",
},
[71517] = {
"Kor'kron Arcweaver",
"Siege of Orgrimmar",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[71773] = {
"Kor'kron Warshaman",
"Siege of Orgrimmar",
"enUS",
},
[62205] = {
"Wing Leader Ner'onok",
"Siege of Niuzao Temple",
"enUS",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[71395] = {
"Modified Anima Golem",
"Siege of Orgrimmar",
"enUS",
},
[70238] = {
"Unblinking Eye",
"Throne of Thunder",
"enUS",
},
[206172] = {
"Nymue",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23196] = {
"Bonechewer Behemoth",
"Black Temple",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[22853] = {
"Illidari Defiler",
"Black Temple",
"enUS",
},
[22885] = {
"Dragon Turtle",
"Black Temple",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[22949] = {
"Gathios the Shatterer",
"Black Temple",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
"enUS",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[52409] = {
"Ragnaros",
"Firelands",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
"enUS",
},
[23237] = {
"Bonechewer Blood Prophet",
"Black Temple",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
"enUS",
},
[61565] = {
"Quilen Statue",
"Crypt of Forgotten Kings",
"enUS",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
"enUS",
},
[23397] = {
"Illidari Blood Lord",
"Black Temple",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
"enUS",
},
[19508] = {
"Sunseeker Herbalist",
"Tempest Keep: The Botanica",
"enUS",
},
[71392] = {
"Shadow Ritualist Phylactery",
"Siege of Orgrimmar",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
"enUS",
},
[73951] = {
"Commander Tik",
"Siege of Orgrimmar",
"enUS",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[101074] = {
"Hatespawn Whelpling",
"Darkheart Thicket",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
"enUS",
},
[73184] = {
"Starved Yeti",
"Siege of Orgrimmar",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[72424] = {
"Auctioneer Ralinza",
"Siege of Orgrimmar",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
"enUS",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[98900] = {
"Wyrmtongue Trickster",
"Black Rook Hold",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[22951] = {
"Lady Malande",
"Black Temple",
"enUS",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
},
[23018] = {
"Shadowmoon Houndmaster",
"Black Temple",
"enUS",
},
[73185] = {
"Enraged Mushan Beast",
"Siege of Orgrimmar",
"enUS",
},
[22950] = {
"High Nethermancer Zerevor",
"Black Temple",
"enUS",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
"enUS",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[69351] = {
"Greater Cave Bat",
"Throne of Thunder",
"enUS",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
"enUS",
},
[64947] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[40447] = {
"Chains of Woe",
"Blackrock Caverns",
"enUS",
},
[72422] = {
"Auctioneer Drezmit",
"Siege of Orgrimmar",
"enUS",
},
[58998] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[23398] = {
"Angered Soul Fragment",
"Black Temple",
"enUS",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
"enUS",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
"enUS",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[136330] = {
"Soul Thorns",
"Waycrest Manor",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[72423] = {
"Auctioneer Fazdran",
"Siege of Orgrimmar",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[17994] = {
"Bloodwarder Falconer",
"Tempest Keep: The Botanica",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[17993] = {
"Bloodwarder Protector",
"Tempest Keep: The Botanica",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[70245] = {
"Training Dummy",
"Throne of Thunder",
"enUS",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
"enUS",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[184693] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[213607] = {
"Deep Sea Murloc",
"Throne of the Tides",
"enUS",
},
[73188] = {
"Captive Cave Bat",
"Siege of Orgrimmar",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[71397] = {
"Zar'thik Amber Priest",
"Siege of Orgrimmar",
"enUS",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[56890] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[65402] = {
"Gurthan Swiftblade",
"Mogu'shan Palace",
"enUS",
},
[201746] = {
"Sundered Naturalist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
"enUS",
},
[61814] = {
"Jin Ironfist",
"Crypt of Forgotten Kings",
"enUS",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
"enUS",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[22855] = {
"Illidari Nightlord",
"Black Temple",
"enUS",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[71398] = {
"Zar'thik Swarmer",
"Siege of Orgrimmar",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
"enUS",
},
[23111] = {
"Shadowy Construct",
"Black Temple",
"enUS",
},
[33988] = {
"Immortal Guardian",
"Ulduar",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[70247] = {
"Venomous Head",
"Throne of Thunder",
"enUS",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
"enUS",
},
[63030] = {
"Enslaved Bonesmasher",
"Heart of Fear",
"enUS",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[63035] = {
"Zar'thik Zealot",
"Heart of Fear",
"enUS",
},
[67177] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[69352] = {
"Vampiric Cave Bat",
"Throne of Thunder",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
"enUS",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
"enUS",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[64183] = {
"Enormous Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[174773] = {
"Spiteful Shade",
"Atal'Dazar",
"enUS",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[66413] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
"enUS",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
"enUS",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
"enUS",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[81638] = {
"Aqueous Globule",
"The Everbloom",
"enUS",
},
[61240] = {
"Glintrok Skulker",
"Mogu'shan Palace",
"enUS",
},
[71401] = {
"Proto-Drake Whelp",
"The Secrets of Ragefire",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[72810] = {
"Wise Mistweaver Spirit",
"Siege of Orgrimmar",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[53500] = {
"Living Meteor",
"Firelands",
"enUS",
},
[59705] = {
"Scarlet Flamethrower",
"Scarlet Monastery",
"enUS",
},
[72425] = {
"Auctioneer Xifa",
"Siege of Orgrimmar",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
"enUS",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
"enUS",
},
[72427] = {
"Orgrimmar Peon",
"Siege of Orgrimmar",
"enUS",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
"enUS",
},
[61945] = {
"Gurthan Iron Maw",
"Pandaria",
"enUS",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[71658] = {
"Kor'kron Jailer",
"Siege of Orgrimmar",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[69869] = {
"Essence of Anima",
"Throne of Thunder",
"enUS",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[63032] = {
"Sra'thik Shield Master",
"Heart of Fear",
"enUS",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
"enUS",
},
[23400] = {
"Illidari Archon",
"Black Temple",
"enUS",
},
[61243] = {
"Gekkan",
"Mogu'shan Palace",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[70893] = {
"Lieutenant Blasthammer",
"Naval Battle Scenario",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
"enUS",
},
[23337] = {
"Illidari Centurion",
"Black Temple",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
"enUS",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[62009] = {
"Shadows of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
"enUS",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[179334] = {
"Portalmancer Zo'nyy",
"Tazavesh, the Veiled Market",
"enUS",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[61434] = {
"Sik'thik Vanguard",
"Siege of Niuzao Temple",
"enUS",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[122963] = {
"Rezan",
"Atal'Dazar",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[58555] = {
"Scarlet Fanatic",
"Scarlet Monastery",
"enUS",
},
[68078] = {
"Iron Qon",
"Throne of Thunder",
"enUS",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[72428] = {
"Horthus",
"Siege of Orgrimmar",
"enUS",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[61242] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
"enUS",
},
[71405] = {
"Set'thik Wind Wielder",
"Siege of Orgrimmar",
"enUS",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[22953] = {
"Wrathbone Flayer",
"Black Temple",
"enUS",
},
[69870] = {
"Essence of Vita",
"Throne of Thunder",
"enUS",
},
[73197] = {
"Lesser Sha Puddle",
"Siege of Orgrimmar",
"enUS",
},
[68079] = {
"Ro'shak",
"Throne of Thunder",
"enUS",
},
[33288] = {
"Yogg-Saron",
"Ulduar",
"enUS",
},
[59771] = {
"Zombified Corpse",
"Scarlet Monastery",
"enUS",
},
[72941] = {
"Dragonmaw Grunt",
"Siege of Orgrimmar",
"enUS",
},
[61946] = {
"Harthak Stormcaller",
"Pandaria",
"enUS",
},
[23239] = {
"Bonechewer Combatant",
"Black Temple",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[72429] = {
"Olvia",
"Siege of Orgrimmar",
"enUS",
},
[23049] = {
"Shadowmoon Weapon Master",
"Black Temple",
"enUS",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
"enUS",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
"enUS",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[72430] = {
"Shan'ti",
"Siege of Orgrimmar",
"enUS",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
"enUS",
},
[58876] = {
"Starving Hound",
"Scarlet Halls",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[72942] = {
"Dragonmaw Flagbearer",
"Siege of Orgrimmar",
"enUS",
},
[23401] = {
"Hungering Soul Fragment",
"Black Temple",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[71407] = {
"Amber",
"Siege of Orgrimmar",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[74091] = {
"Kor'kron Iron Sentinel",
"Siege of Orgrimmar",
"enUS",
},
[69232] = {
"Ball Lightning",
"Throne of Thunder",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
"enUS",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[111068] = {
"Archmage Galeorn",
"Black Rook Hold",
},
[61174] = {
"Cursed Jade",
"Greenstone Village",
"enUS",
},
[18155] = {
"Bloodfalcon",
"Tempest Keep: The Botanica",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[61947] = {
"Kargesh Ribcrusher",
"Mogu'shan Palace",
"enUS",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
"enUS",
},
[72943] = {
"Dragonmaw Proto-Drake",
"Siege of Orgrimmar",
"enUS",
},
[60731] = {
"Undying Shadows",
"Mogu'shan Vaults",
"enUS",
},
[71152] = {
"Skeer the Bloodseeker",
"Siege of Orgrimmar",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[71408] = {
"Kun-Da",
"Siege of Orgrimmar",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
"enUS",
},
[147614] = {
"Dark Iron Primalist",
"Battle of Dazar'alor",
"enUS",
},
[22952] = {
"Veras Darkshadow",
"Black Temple",
"enUS",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[70762] = {
"Lieutenant Sparklighter",
"Naval Battle Scenario",
"enUS",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[71529] = {
"Thok the Bloodthirsty",
"Siege of Orgrimmar",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[71153] = {
"Hisek the Swarmkeeper",
"Siege of Orgrimmar",
"enUS",
},
[63031] = {
"Set'thik Fanatic",
"Heart of Fear",
"enUS",
},
[71409] = {
"Commander Zak'tar",
"Siege of Orgrimmar",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[61436] = {
"Sik'thik Bladedancer",
"Siege of Niuzao Temple",
"enUS",
},
[122968] = {
"Yazma",
"Atal'Dazar",
"enUS",
},
[71921] = {
"Darkfang",
"Siege of Orgrimmar",
"enUS",
},
[187021] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[61623] = {
"Sap Globule",
"Siege of Niuzao Temple",
"enUS",
},
[72433] = {
"Mokvar the Treasurer",
"Siege of Orgrimmar",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[23399] = {
"Suffering Soul Fragment",
"Black Temple",
"enUS",
},
[72945] = {
"Dragonmaw Bonecrusher",
"Siege of Orgrimmar",
"enUS",
},
[23047] = {
"Shadowmoon Soldier",
"Black Temple",
"enUS",
},
[71154] = {
"Ka'roz the Locust",
"Siege of Orgrimmar",
"enUS",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[72421] = {
"Kor'kron Overseer",
"Siege of Orgrimmar",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[70246] = {
"Spirit Flayer",
"Throne of Thunder",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
"enUS",
},
[72434] = {
"Treasury Guard",
"Siege of Orgrimmar",
"enUS",
},
[72562] = {
"Poison Bolt Totem",
"Siege of Orgrimmar",
"enUS",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[63036] = {
"Kor'thik Extremist",
"Heart of Fear",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[23402] = {
"Illidari Battle-mage",
"Black Temple",
"enUS",
},
[71155] = {
"Korven the Prime",
"Siege of Orgrimmar",
"enUS",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[23498] = {
"Parasitic Shadowfiend",
"Black Temple",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
"enUS",
},
[71923] = {
"Bloodclaw",
"Siege of Orgrimmar",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[25865] = {
"Frozen Core",
"Coilfang: The Slave Pens",
"enUS",
},
[147621] = {
"Dark Iron Vanguard",
"Battle of Dazar'alor",
"enUS",
},
[72947] = {
"Kor'kron Demolisher",
"Siege of Orgrimmar",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
"enUS",
},
[71156] = {
"Kaz'tik the Manipulator",
"Siege of Orgrimmar",
"enUS",
},
[59520] = {
"Fizzy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[62397] = {
"Wind Lord Mel'jarak",
"Heart of Fear",
"enUS",
},
[59518] = {
"Bloated Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
"enUS",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[72564] = {
"Doomlord",
"Siege of Orgrimmar",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[40446] = {
"Skar'this the Summoner",
"Coilfang: The Slave Pens",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[33985] = {
"Corruptor Tentacle",
"Ulduar",
"enUS",
},
[71157] = {
"Xaril the Poisoned Mind",
"Siege of Orgrimmar",
"enUS",
},
[146371] = {
"Dark Iron Primalist",
"Battle of Dazar'alor",
"enUS",
},
[135052] = {
"Blight Toad",
"Waycrest Manor",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[64061] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[71158] = {
"Rik'kal the Dissector",
"Siege of Orgrimmar",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[72412] = {
"Kor'kron Grunt",
"Siege of Orgrimmar",
"enUS",
},
[71542] = {
"Blood",
"Siege of Orgrimmar",
"enUS",
},
[208521] = {
"Pumpkin Soldier",
"Scarlet Monastery",
"enUS",
},
[23083] = {
"Shadowmoon Riding Hound",
"Black Temple",
"enUS",
},
[211339] = {
"Dream Seedling",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23147] = {
"Shadowmoon Grunt",
"Black Temple",
"enUS",
},
[60402] = {
"Zandalari Fire-Dancer",
"Mogu'shan Vaults",
"enUS",
},
[64368] = {
"Apparition of Fear",
"Terrace of Endless Spring",
"enUS",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[59191] = {
"Commander Lindon",
"Scarlet Halls",
"enUS",
},
[23339] = {
"Illidari Heartseeker",
"Black Temple",
"enUS",
},
[186208] = {
"Rotbow Ranger",
"Brackenhide Hollow",
"enUS",
},
[23403] = {
"Illidari Assassin",
"Black Temple",
"enUS",
},
[61183] = {
"Belligerent Blossom",
"Greenstone Village",
"enUS",
},
[81522] = {
"Witherbark",
"The Everbloom",
"enUS",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[71543] = {
"Immerseus",
"Siege of Orgrimmar",
"enUS",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
"enUS",
},
[65786] = {
"Wave-Caller Zulga",
"Theramore's Fall (A)",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[65610] = {
"Airship Crewman",
"Theramore's Fall (A)",
"enUS",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[39994] = {
"Conflagration",
"Blackrock Caverns",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[70232] = {
"Muckbat",
"Throne of Thunder",
"enUS",
},
[195222] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[71160] = {
"Iyyokuk the Lucid",
"Siege of Orgrimmar",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[60480] = {
"Titan Spark",
"Mogu'shan Vaults",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
"enUS",
},
[67426] = {
"Admiral Hagman",
"Naval Battle Scenario",
"enUS",
},
[71161] = {
"Kil'ruk the Wind-Reaver",
"Siege of Orgrimmar",
"enUS",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
"enUS",
},
[72658] = {
"Amalgamated Hubris",
"Siege of Orgrimmar",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[63597] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[19865] = {
"Mutate Horror",
"Tempest Keep: The Botanica",
"enUS",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[64063] = {
"Mogu'shan Arcanist",
"Mogu'shan Vaults",
"enUS",
},
[60033] = {
"Frenzied Spirit",
"Scarlet Monastery",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[84554] = {
"Venom-Crazed Pale One",
"The Everbloom",
},
[22956] = {
"Priestess of Torment",
"Black Temple",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[204536] = {
"Blight Chunk",
"Dawn of the Infinite",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[63594] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[69455] = {
"Zandalari Water-Binder",
"Throne of Thunder",
"enUS",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
"enUS",
},
[72954] = {
"Kor'thik Honor Guard",
"Siege of Orgrimmar",
"enUS",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[23436] = {
"Image of Dementia",
"Black Temple",
"enUS",
},
[193558] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
"enUS",
},
[53189] = {
"Molten Elemental",
"Firelands",
"enUS",
},
[201788] = {
"Dazhak",
"Dawn of the Infinite",
"enUS",
},
[69756] = {
"Anima Orb",
"Throne of Thunder",
"enUS",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[62633] = {
"Sik'thik Builder",
"Siege of Niuzao Temple",
"enUS",
},
[19598] = {
"Mutate Fleshlasher",
"Tempest Keep: The Botanica",
"enUS",
},
[68221] = {
"Bore Worm",
"Throne of Thunder",
"enUS",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[71420] = {
"Hungry Kunchong",
"Siege of Orgrimmar",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
"enUS",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[22848] = {
"Storm Fury",
"Black Temple",
"enUS",
},
[68222] = {
"Bow Fly Swarm",
"Throne of Thunder",
"enUS",
},
[40021] = {
"Incendiary Spark",
"Blackrock Caverns",
"enUS",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[213143] = {
"Manifested Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[71479] = {
"He Softfoot",
"Siege of Orgrimmar",
"enUS",
},
[130400] = {
"Irontide Crusher",
"Freehold",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[61250] = {
"Sorcerer Mogu",
"Mogu'shan Vaults",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[65611] = {
"Airship Marine",
"Theramore's Fall (A)",
"enUS",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
"enUS",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[61634] = {
"Commander Vo'jak",
"Siege of Niuzao Temple",
"enUS",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[40817] = {
"Shadow of Obsidius",
"Blackrock Caverns",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[73541] = {
"Kor'kron Wolf Pup",
"Siege of Orgrimmar",
"enUS",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[59175] = {
"Master Archer",
"Scarlet Halls",
"enUS",
},
[205611] = {
"Molten Hound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[22957] = {
"Mistress of Dementia",
"Black Temple",
"enUS",
},
[60710] = {
"Subetai the Swift",
"Mogu'shan Vaults",
"enUS",
},
[62402] = {
"Kor'thik Elite Blademaster",
"Heart of Fear",
"enUS",
},
[73725] = {
"Xiang-Lin",
"Siege of Orgrimmar",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
"enUS",
},
[73539] = {
"Kor'kron Den Mother",
"Siege of Orgrimmar",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[203679] = {
"Anduin Lothar",
"Dawn of the Infinite",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
"enUS",
},
[63106] = {
"Sik'thik Swarmer",
"Siege of Niuzao Temple",
"enUS",
},
[73086] = {
"Healing Tide Totem",
"Siege of Orgrimmar",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
"enUS",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[146365] = {
"Blazing Fireguard",
"Battle of Dazar'alor",
"enUS",
},
[53575] = {
"Lava Wielder",
"Firelands",
"enUS",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
"enUS",
},
[22869] = {
"Illidari Boneslicer",
"Black Temple",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[146366] = {
"Molten Hound",
"Battle of Dazar'alor",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[72351] = {
"Dragonmaw Flagbearer",
"Siege of Orgrimmar",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[199715] = {
"Nokhud Battleguard",
"The Nokhud Offensive",
"enUS",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[146367] = {
"Char'golm",
"Battle of Dazar'alor",
"enUS",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[65474] = {
"Rok'nah Peon",
"Theramore's Fall (A)",
"enUS",
},
[61444] = {
"Ming the Cunning",
"Mogu'shan Palace",
"enUS",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[60386] = {
"Zandalari Terror Rider",
"Mogu'shan Vaults",
"enUS",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[25755] = {
"Ahunite Hailstone",
"Coilfang: The Slave Pens",
"enUS",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[64479] = {
"Gatecrusher",
"Theramore's Fall (A)",
"enUS",
},
[146370] = {
"Dark Iron Vanguard",
"Battle of Dazar'alor",
"enUS",
},
[197801] = {
"Awakened Terrasentry",
"Vault of the Incarnates",
"enUS",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
"enUS",
},
[98677] = {
"Rook Spiderling",
"Black Rook Hold",
"enUS",
},
[72194] = {
"Hellscream Demolisher",
"Siege of Orgrimmar",
"enUS",
},
[66181] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[58758] = {
"Soul Fragment",
"Scholomance",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[62980] = {
"Imperial Vizier Zor'lok",
"Heart of Fear",
"enUS",
},
[70787] = {
"Skullcrusher Gundu",
"Blood in the Snow",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[59078] = {
"Failed Student",
"Scholomance",
"enUS",
},
[203688] = {
"Horde Grunt",
"Dawn of the Infinite",
"enUS",
},
[193709] = {
"Primalist Earthwarden",
"Vault of the Incarnates",
"enUS",
},
[72350] = {
"Dragonmaw Elite Grunt",
"Siege of Orgrimmar",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[61445] = {
"Haiyan the Unstoppable",
"Mogu'shan Palace",
"enUS",
},
[155175] = {
"Gargoyle",
"Stratholme Pet Dungeon",
"enUS",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
"enUS",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[72451] = {
"Kor'kron Dark Shaman",
"Siege of Orgrimmar",
"enUS",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[64068] = {
"Mogu'shan Engine Keeper",
"Mogu'shan Vaults",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[205309] = {
"Overlord Mechagon",
"10.1.5 Time Rifts - Robot (A.Z.E.R.O.T.H.)",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
"enUS",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
"enUS",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
"enUS",
},
[71476] = {
"Embodied Misery",
"Siege of Orgrimmar",
"enUS",
},
[72452] = {
"Kor'kron Dire Wolf",
"Siege of Orgrimmar",
"enUS",
},
[91003] = {
"Rokmora",
"Neltharion's Lair",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[70789] = {
"Zandalari Rage Banner",
"Blood in the Snow",
"enUS",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[71475] = {
"Rook Stonetoe",
"Siege of Orgrimmar",
"enUS",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[69382] = {
"Malignant Ooze",
"Throne of Thunder",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[72498] = {
"Theramore Citizen",
"Siege of Orgrimmar",
"enUS",
},
[60701] = {
"Zian of the Endless Shadow",
"Mogu'shan Vaults",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[61766] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[71715] = {
"Orgrimmar Faithful",
"Siege of Orgrimmar",
"enUS",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[73349] = {
"Tormented Initiate",
"Siege of Orgrimmar",
"enUS",
},
[69383] = {
"Quivering Blob",
"Throne of Thunder",
"enUS",
},
[64453] = {
"Set'thik Windblade",
"Heart of Fear",
"enUS",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[40017] = {
"Twilight Element Warden",
"Blackrock Caverns",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[62982] = {
"Mindbender",
"Waycrest Manor",
"enUS",
},
[60999] = {
"Sha of Fear",
"Terrace of Endless Spring",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
"enUS",
},
[73094] = {
"Healing Tide Totem",
"Siege of Orgrimmar",
"enUS",
},
[67081] = {
"Forgotten King",
"Crypt of Forgotten Kings",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[65304] = {
"Hateful Monstrosity",
"Crypt of Forgotten Kings",
"enUS",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[58971] = {
"Webbed Victim",
"Throne of Thunder",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[19633] = {
"Bloodwarder Mender",
"Tempest Keep: The Botanica",
"enUS",
},
[72455] = {
"Overseer Komak",
"Siege of Orgrimmar",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[72486] = {
"Doyo'da",
"Siege of Orgrimmar",
"enUS",
},
[60040] = {
"Commander Durand",
"Scarlet Monastery",
"enUS",
},
[73095] = {
"Blackfuse Engineer",
"Siege of Orgrimmar",
"enUS",
},
[73223] = {
"Pterrordax",
"Siege of Orgrimmar",
"enUS",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[65807] = {
"Overseer Lurguk",
"Theramore's Fall (A)",
"enUS",
},
[64454] = {
"Zar'thik Augurer",
"Heart of Fear",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
"enUS",
},
[58569] = {
"Scarlet Purifier",
"Scarlet Monastery",
"enUS",
},
[70153] = {
"Fungal Growth",
"Throne of Thunder",
"enUS",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
"enUS",
},
[72456] = {
"Korgra the Snake",
"Siege of Orgrimmar",
"enUS",
},
[91007] = {
"Dargrul",
"Neltharion's Lair",
"enUS",
},
[62983] = {
"Lei Shi",
"Terrace of Endless Spring",
"enUS",
},
[56906] = {
"Saboteur Kip'tilak",
"Gate of the Setting Sun",
"enUS",
},
[68904] = {
"Suen",
"Throne of Thunder",
"enUS",
},
[67093] = {
"Sik'thik Battle-Mender",
"Siege of Niuzao Temple",
"enUS",
},
[64917] = {
"Sra'thik Ambercaller",
"Heart of Fear",
"enUS",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
"enUS",
},
[71433] = {
"Spark of Life",
"Siege of Orgrimmar",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[61448] = {
"Sik'thik Soldier",
"Siege of Niuzao Temple",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[72484] = {
"Zazo",
"Siege of Orgrimmar",
"enUS",
},
[129517] = {
"Reanimated Raptor",
"Atal'Dazar",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
"enUS",
},
[59915] = {
"Jasper Guardian",
"Mogu'shan Vaults",
"enUS",
},
[198136] = {
"Eminent Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[22896] = {
"Ashtongue Searing Totem",
"Black Temple",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[70691] = {
"Mouth of Terror",
"Heart of the Old God Scenario",
"enUS",
},
[62408] = {
"Zar'thik Battle-Mender",
"Heart of Fear",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[40019] = {
"Twilight Obsidian Borer",
"Blackrock Caverns",
"enUS",
},
[69899] = {
"Farraki Sand Conjurer",
"Throne of Thunder",
"enUS",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[23216] = {
"Ashtongue Defender",
"Black Temple",
"enUS",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[70690] = {
"Blood of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[210437] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[63048] = {
"Kor'thik Slicer",
"Pandaria",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[73098] = {
"Kor'kron Overseer",
"Siege of Orgrimmar",
"enUS",
},
[73226] = {
"Lesser Sha Puddle",
"Siege of Orgrimmar",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[69388] = {
"Zandalari Spear-Shaper",
"Throne of Thunder",
"enUS",
},
[205304] = {
"Freya",
"10.1.5 Time Rifts - Titan (Ulderoth)",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[67360] = {
"Horde Cannoneer",
"Naval Battle Scenario",
"enUS",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[59722] = {
"Pile of Corpses",
"Scarlet Monastery",
"enUS",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[70684] = {
"Frostmane Mauler",
"Blood in the Snow",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[62543] = {
"Blade Lord Ta'yak",
"Heart of Fear",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[133852] = {
"Living Rot",
"The Underrot",
"enUS",
},
[69133] = {
"Unharnessed Power",
"Throne of Thunder",
"enUS",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
"enUS",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[40084] = {
"Bellows Slave",
"Blackrock Caverns",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[22997] = {
"Flame of Azzinoth",
"Black Temple",
"enUS",
},
[205265] = {
"Time-Displaced Trooper",
"Dawn of the Infinite",
"enUS",
},
[63049] = {
"Set'thik Swiftblade",
"Heart of Fear",
"enUS",
},
[69012] = {
"Lesser Diffused Lightning",
"Throne of Thunder",
"enUS",
},
[18419] = {
"Bloodwarder Greenkeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
},
["aggro_modifies"] = {
["actor_name_color"] = true,
},
["minor_height_scale"] = 0.94999998807907,
["aura_width2"] = 22,
["aura_height2"] = 18,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["range_check_alpha"] = 1,
["semver"] = "1.0.0",
["cast_statusbar_texture"] = "Wglass",
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["show_healthbars_on_not_attackable"] = true,
["transparency_behavior"] = 4,
["spell_animations"] = false,
["aura_consolidate"] = true,
["health_statusbar_texture"] = "ToxiUI Tx Right",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Execute Range"] = 1,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Extra Border"] = 2,
},
["minor_width_scale"] = 0.89999997615814,
["castbar_target_text_size"] = 8,
["honor_blizzard_plate_alpha"] = true,
["aura_timer_text_font"] = "PT Sans Narrow",
["aura_height"] = 18,
["cast_statusbar_bgtexture"] = "Solid",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["castbar_target_notank"] = true,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.077178478241",
["nameplateLargeTopInset"] = "-1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "1",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "1",
["nameplateTargetRadialPosition"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["clampTargetNameplateToScreen"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "0",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.51",
["nameplateMotionSpeed"] = "0.050608683377504",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplateOtherTopInset"] = "-1",
["nameplateOtherAtBase"] = "0",
["nameplateShowOnlyNames"] = "1",
["SoftTargetNameplateInteract"] = "1",
["nameplateShowFriendlyGuardians"] = "1",
["nameplateOccludedAlphaMult"] = "0.29999998211861",
["SoftTargetIconGameObject"] = "0",
["ShowNamePlateLoseAggroFlash"] = "1",
["NamePlateHorizontalScale"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
},
["login_counter"] = 19845,
["aura_stack_font"] = "PT Sans Narrow",
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.2000000476837,
},
},
["cast_color_settings"] = {
["enabled"] = true,
["width"] = 12,
},
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator5",
["hover_highlight_alpha"] = 0.2999999821186066,
["usePlaterWidget"] = false,
["plate_config"] = {
["global_health_height"] = 13,
["friendlyplayer"] = {
["actorname_use_class_color"] = true,
["cast"] = {
121,
},
["only_thename"] = true,
["cast_incombat"] = {
121,
},
["show_guild_name"] = true,
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
},
["friendlynpc"] = {
["big_actorname_text_size"] = 10,
["cast"] = {
121,
},
["enabled"] = false,
["actorname_text_spacing"] = 16,
["cast_incombat"] = {
121,
},
["health_incombat"] = {
121,
17,
},
["health"] = {
121,
13,
},
["actorname_text_size"] = 17,
},
["enemynpc"] = {
["spellpercent_text_font"] = "Bebas Neue Cyrillic Regular",
["cast"] = {
124,
},
["level_text_font"] = "PT Sans Narrow",
["actorname_text_font"] = "Bebas Neue Cyrillic Regular",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
124,
10,
},
["health_incombat"] = {
121,
13,
},
["percent_text_anchor"] = {
["y"] = -0.2400054931640625,
["x"] = 0.8799972534179688,
["side"] = 11,
},
["spellname_text_font"] = "Bebas Neue Cyrillic Regular",
["big_actorname_text_font"] = "PT Sans Narrow",
["castbar_offset"] = -0.2400054931640625,
["spellpercent_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0,
["percent_text_size"] = 10,
["percent_text_font"] = "Bebas Neue Cyrillic Regular",
["spellname_text_size"] = 10,
["health"] = {
121,
13,
},
["actorname_text_size"] = 10,
["actorname_text_anchor"] = {
["y"] = 0.5799942016601562,
["x"] = -3.75,
["side"] = 1,
},
},
["enemyplayer"] = {
["spellpercent_text_font"] = "PT Sans Narrow",
["level_text_size"] = 8,
["cast"] = {
121,
},
["big_actortitle_text_size"] = 10,
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "PT Sans Narrow",
["actorname_text_font"] = "PT Sans Narrow",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 11,
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
121,
14,
},
["spellname_text_size"] = 11,
["spellname_text_font"] = "PT Sans Narrow",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["big_actorname_text_font"] = "PT Sans Narrow",
["big_actorname_text_size"] = 10,
["percent_text_size"] = 10,
["percent_text_font"] = "PT Sans Narrow",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
},
["global_health_width"] = 121,
},
["aura_y_offset"] = 5,
["use_ui_parent"] = true,
["cast_statusbar_bgcolor"] = {
0,
0,
0,
0.8900000005960464,
},
["border_thickness"] = 1.484683036804199,
["resources_settings"] = {
["chr"] = {
["Player-3209-0B4EDE3D"] = "HolyPower",
["Player-3682-0B236980"] = "ArcaneCharges",
["Player-1597-0F7AB124"] = "ArcaneCharges",
["Player-3682-0B241018"] = "Essence",
["Player-1403-0A1C79B6"] = "ArcaneCharges",
["Player-3682-0B038C9A"] = "ArcaneCharges",
["Player-3682-0B20292A"] = "HolyPower",
["Player-3209-0B2C0A65"] = "Chi",
["Player-1403-0A6909FE"] = "ComboPoints",
["Player-3209-0B29D149"] = "ArcaneCharges",
["Player-1307-0BE359D3"] = "ArcaneCharges",
["Player-3682-0B19EC37"] = "Chi",
["Player-3682-0B310D76"] = "HolyPower",
["Player-3682-0B155119"] = "SoulShards",
["Player-3682-0B2A13DE"] = "ComboPoints",
["Player-1403-0A70E106"] = "ComboPoints",
["Player-1597-0F88EA0A"] = "ArcaneCharges",
},
},
["ignore_softinteract_objects"] = true,
["npc_colors"] = {
[190404] = {
true,
false,
"mediumpurple",
},
[196798] = {
true,
false,
"blue",
},
[186696] = {
true,
false,
"fuchsia",
},
[109908] = {
true,
false,
"fuchsia",
},
[213806] = {
true,
false,
"fuchsia",
},
[190405] = {
true,
false,
"mediumpurple",
},
[196671] = {
true,
false,
"mediumpurple",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"fuchsia",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[190407] = {
true,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[131585] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[131009] = {
true,
false,
"fuchsia",
},
[99360] = {
true,
false,
"blue",
},
[197697] = {
true,
false,
"mediumpurple",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"blue",
},
[134144] = {
true,
false,
"lightgreen",
},
[81522] = {
true,
false,
"mediumpurple",
},
[40825] = {
true,
false,
"mediumpurple",
},
[131587] = {
true,
false,
"deepskyblue",
},
[208440] = {
true,
false,
"mediumpurple",
},
[164707] = {
true,
false,
"mediumpurple",
},
[196548] = {
true,
false,
"fuchsia",
},
[135552] = {
true,
false,
"fuchsia",
},
[84400] = {
true,
false,
"fuchsia",
},
[186191] = {
true,
false,
"deepskyblue",
},
[135169] = {
true,
false,
"fuchsia",
},
[201792] = {
true,
false,
"mediumpurple",
},
[206140] = {
true,
false,
"mediumpurple",
},
[83761] = {
true,
false,
"mediumpurple",
},
[184018] = {
true,
false,
"DRUID",
},
[178008] = {
true,
false,
"yellow",
},
[126983] = {
true,
false,
"DRUID",
},
[127111] = {
true,
false,
"deepskyblue",
},
[168418] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[213942] = {
true,
false,
"deepskyblue",
},
[199748] = {
true,
false,
"fuchsia",
},
[165222] = {
true,
false,
"blue",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[170850] = {
true,
true,
"fuchsia",
},
[134150] = {
true,
false,
"navajowhite",
},
[75451] = {
true,
false,
"fuchsia",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[128967] = {
true,
false,
"palegreen",
},
[75899] = {
true,
false,
"fuchsia",
},
[196043] = {
true,
false,
"fuchsia",
},
[131850] = {
true,
false,
"fuchsia",
},
[134024] = {
true,
false,
"fuchsia",
},
[178141] = {
true,
false,
"blue",
},
[196044] = {
true,
false,
"fuchsia",
},
[40923] = {
true,
false,
"DEATHKNIGHT",
},
[83892] = {
true,
false,
"fuchsia",
},
[135048] = {
true,
false,
"DEATHKNIGHT",
},
[178142] = {
true,
false,
"deepskyblue",
},
[98406] = {
false,
false,
"fuchsia",
},
[137478] = {
true,
false,
"gold",
},
[194894] = {
true,
false,
"deepskyblue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[135049] = {
true,
false,
"fuchsia",
},
[139269] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[168681] = {
true,
true,
"fuchsia",
},
[128969] = {
true,
false,
"goldenrod",
},
[99366] = {
true,
false,
"deepskyblue",
},
[82039] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"deepskyblue",
},
[136330] = {
true,
false,
"fuchsia",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[83894] = {
true,
false,
"blue",
},
[98280] = {
true,
false,
"blue",
},
[134157] = {
true,
false,
"peru",
},
[75966] = {
true,
false,
"fuchsia",
},
[205384] = {
true,
false,
"fuchsia",
},
[212673] = {
true,
false,
"mediumpurple",
},
[136076] = {
true,
false,
"lightcoral",
},
[134158] = {
true,
false,
"navajowhite",
},
[172265] = {
true,
false,
"deepskyblue",
},
[208198] = {
true,
false,
"fuchsia",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[137484] = {
true,
false,
"gold",
},
[131858] = {
true,
false,
"blue",
},
[40765] = {
true,
false,
"mediumpurple",
},
[45912] = {
true,
false,
"deepskyblue",
},
[207177] = {
true,
false,
"mediumpurple",
},
[174569] = {
false,
false,
"fuchsia",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"fuchsia",
},
[137486] = {
true,
false,
"gold",
},
[98538] = {
true,
false,
"mediumpurple",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[101991] = {
true,
false,
"mediumpurple",
},
[165108] = {
true,
true,
"fuchsia",
},
[82682] = {
true,
false,
"mediumpurple",
},
[156157] = {
true,
false,
"blue",
},
[75713] = {
true,
false,
"fuchsia",
},
[186208] = {
true,
false,
"fuchsia",
},
[138255] = {
true,
false,
"maroon",
},
[122963] = {
true,
false,
"mediumpurple",
},
[162040] = {
true,
false,
"fuchsia",
},
[198996] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[181861] = {
true,
false,
"mediumpurple",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[171376] = {
true,
false,
"blue",
},
[131863] = {
true,
false,
"mediumpurple",
},
[203857] = {
true,
false,
"fuchsia",
},
[195929] = {
true,
false,
"mediumpurple",
},
[207438] = {
true,
false,
"mediumpurple",
},
[131864] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"fuchsia",
},
[198999] = {
true,
false,
"mediumpurple",
},
[205265] = {
true,
false,
"DEATHKNIGHT",
},
[193373] = {
true,
false,
"blue",
},
[184422] = {
true,
false,
"DRUID",
},
[199000] = {
true,
false,
"mediumpurple",
},
[39616] = {
true,
false,
"DEATHKNIGHT",
},
[133912] = {
true,
false,
"fuchsia",
},
[136214] = {
true,
false,
"plum",
},
[136470] = {
true,
false,
"honeydew",
},
[75652] = {
true,
false,
"mediumpurple",
},
[134041] = {
true,
false,
"DEATHKNIGHT",
},
[197595] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[98542] = {
true,
false,
"mediumpurple",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[173044] = {
true,
false,
"deepskyblue",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[122967] = {
true,
false,
"mediumpurple",
},
[105704] = {
true,
false,
"deepskyblue",
},
[166396] = {
true,
false,
"blue",
},
[127315] = {
true,
false,
"fuchsia",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[132126] = {
true,
false,
"fuchsia",
},
[45915] = {
true,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[122968] = {
true,
false,
"mediumpurple",
},
[101549] = {
true,
false,
"blue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[184301] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[84990] = {
true,
false,
"blue",
},
[81985] = {
true,
false,
"fuchsia",
},
[122969] = {
true,
false,
"deepskyblue",
},
[100527] = {
true,
false,
"fuchsia",
},
[197985] = {
true,
false,
"fuchsia",
},
[150160] = {
true,
false,
"mediumpurple",
},
[178165] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[165762] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"blue",
},
[131492] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"mediumpurple",
},
[165763] = {
true,
false,
"deepskyblue",
},
[135329] = {
true,
false,
"mediumpurple",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[91002] = {
true,
false,
"fuchsia",
},
[174843] = {
true,
false,
"mediumpurple",
},
[136353] = {
true,
false,
"royalblue",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[205790] = {
true,
false,
"DEATHKNIGHT",
},
[45917] = {
true,
false,
"DRUID",
},
[162057] = {
true,
false,
"mediumpurple",
},
[205151] = {
true,
false,
"DEATHKNIGHT",
},
[91003] = {
true,
false,
"DRUID",
},
[186226] = {
true,
false,
"fuchsia",
},
[135204] = {
true,
false,
"honeydew",
},
[196712] = {
true,
false,
"fuchsia",
},
[205152] = {
true,
false,
"mediumpurple",
},
[92538] = {
true,
false,
"fuchsia",
},
[170882] = {
true,
false,
"blue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[162039] = {
true,
false,
"deepskyblue",
},
[180473] = {
true,
false,
"blue",
},
[150251] = {
true,
false,
"blue",
},
[129547] = {
true,
false,
"deepskyblue",
},
[196202] = {
true,
false,
"blue",
},
[103344] = {
true,
false,
"mediumpurple",
},
[168934] = {
true,
false,
"fuchsia",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"fuchsia",
},
[75979] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[114319] = {
true,
false,
"blue",
},
[129367] = {
true,
false,
"honeydew",
},
[168153] = {
true,
false,
"fuchsia",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"blue",
},
[175576] = {
true,
false,
"fuchsia",
},
[189266] = {
true,
false,
"deepskyblue",
},
[186741] = {
true,
false,
"fuchsia",
},
[44404] = {
true,
false,
"fuchsia",
},
[150169] = {
true,
false,
"mediumpurple",
},
[150297] = {
true,
false,
"deepskyblue",
},
[150250] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"deepskyblue",
},
[174210] = {
true,
false,
"deepskyblue",
},
[40634] = {
true,
false,
"deepskyblue",
},
[195399] = {
true,
false,
"fuchsia",
},
[182778] = {
true,
false,
"fuchsia",
},
[178392] = {
true,
false,
"fuchsia",
},
[197857] = {
true,
false,
"deepskyblue",
},
[199233] = {
true,
false,
"mediumpurple",
},
[102962] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[163086] = {
true,
false,
"blue",
},
[205408] = {
true,
false,
"deepskyblue",
},
[204262] = {
true,
false,
"fuchsia",
},
[91006] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[201788] = {
true,
false,
"fuchsia",
},
[191847] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[208698] = {
true,
false,
"fuchsia",
},
[205158] = {
true,
false,
"mediumpurple",
},
[136186] = {
true,
false,
"honeydew",
},
[129369] = {
true,
false,
"lightsalmon",
},
[97720] = {
true,
false,
"fuchsia",
},
[180336] = {
true,
false,
"deepskyblue",
},
[195696] = {
true,
false,
"mediumpurple",
},
[43873] = {
true,
false,
"DRUID",
},
[180348] = {
true,
false,
"blue",
},
[187768] = {
true,
false,
"deepskyblue",
},
[173016] = {
true,
false,
"deepskyblue",
},
[91007] = {
true,
false,
"DRUID",
},
[81864] = {
true,
false,
"blue",
},
[97197] = {
true,
false,
"deepskyblue",
},
[138281] = {
true,
false,
"mediumpurple",
},
[179841] = {
true,
false,
"deepskyblue",
},
[153882] = {
true,
false,
"deepskyblue",
},
[151325] = {
true,
false,
"fuchsia",
},
[134701] = {
true,
false,
"fuchsia",
},
[129370] = {
true,
false,
"gold",
},
[186107] = {
true,
false,
"fuchsia",
},
[65317] = {
true,
false,
"mediumpurple",
},
[84550] = {
true,
false,
"mediumpurple",
},
[101476] = {
true,
false,
"fuchsia",
},
[154744] = {
true,
false,
"fuchsia",
},
[189816] = {
true,
false,
"deepskyblue",
},
[188026] = {
true,
false,
"fuchsia",
},
[91008] = {
true,
false,
"deepskyblue",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[137516] = {
true,
false,
"lightsalmon",
},
[187771] = {
true,
false,
"blue",
},
[175992] = {
true,
false,
"fuchsia",
},
[98681] = {
true,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"fuchsia",
},
[165010] = {
true,
false,
"mediumpurple",
},
[137517] = {
true,
false,
"peru",
},
[180335] = {
true,
false,
"deepskyblue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[157810] = {
true,
false,
"deepskyblue",
},
[81984] = {
true,
false,
"mediumpurple",
},
[97068] = {
true,
false,
"mediumpurple",
},
[198998] = {
true,
false,
"mediumpurple",
},
[183425] = {
true,
false,
"blue",
},
[115020] = {
true,
false,
"mediumpurple",
},
[105715] = {
true,
false,
"blue",
},
[192464] = {
true,
false,
"fuchsia",
},
[168318] = {
true,
false,
"mediumpurple",
},
[176521] = {
true,
false,
"blue",
},
[98810] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[179847] = {
true,
false,
"fuchsia",
},
[132532] = {
true,
false,
"palegreen",
},
[192955] = {
true,
false,
"fuchsia",
},
[139949] = {
true,
false,
"honeydew",
},
[180104] = {
true,
false,
"deepskyblue",
},
[130012] = {
true,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[214117] = {
true,
false,
"fuchsia",
},
[135474] = {
true,
false,
"blue",
},
[126848] = {
true,
false,
"deepskyblue",
},
[102232] = {
true,
false,
"fuchsia",
},
[168594] = {
true,
false,
"mediumpurple",
},
[189886] = {
true,
false,
"gold",
},
[144298] = {
true,
false,
"blue",
},
[184580] = {
true,
false,
"blue",
},
[43875] = {
true,
false,
"DRUID",
},
[137521] = {
true,
false,
"cornflowerblue",
},
[176523] = {
true,
false,
"mediumpurple",
},
[104246] = {
true,
false,
"blue",
},
[213607] = {
true,
false,
"DEATHKNIGHT",
},
[190206] = {
true,
false,
"blue",
},
[186242] = {
true,
false,
"blue",
},
[194745] = {
true,
false,
"fuchsia",
},
[114796] = {
true,
false,
"blue",
},
[133430] = {
true,
false,
"cornflowerblue",
},
[160495] = {
true,
false,
"deepskyblue",
},
[96574] = {
true,
false,
"mediumpurple",
},
[165911] = {
true,
false,
"fuchsia",
},
[191230] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[84554] = {
true,
false,
"fuchsia",
},
[168658] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"deepskyblue",
},
[129758] = {
true,
false,
"fuchsia",
},
[104247] = {
true,
false,
"fuchsia",
},
[135052] = {
true,
false,
"DEATHKNIGHT",
},
[186116] = {
true,
false,
"DRUID",
},
[178139] = {
true,
false,
"mediumpurple",
},
[133432] = {
true,
false,
"gold",
},
[206065] = {
true,
false,
"fuchsia",
},
[184582] = {
true,
false,
"deepskyblue",
},
[154020] = {
true,
false,
"deepskyblue",
},
[128455] = {
true,
false,
"fuchsia",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"fuchsia",
},
[206066] = {
true,
false,
"fuchsia",
},
[198995] = {
true,
false,
"mediumpurple",
},
[114542] = {
true,
false,
"blue",
},
[40935] = {
true,
false,
"deepskyblue",
},
[169426] = {
true,
false,
"gold",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[180323] = {
true,
false,
"fuchsia",
},
[96512] = {
true,
false,
"mediumpurple",
},
[129788] = {
true,
false,
"fuchsia",
},
[180864] = {
true,
false,
"fuchsia",
},
[165076] = {
true,
false,
"blue",
},
[134174] = {
true,
false,
"honeydew",
},
[84520] = {
true,
false,
"mediumpurple",
},
[135167] = {
true,
false,
"peru",
},
[206068] = {
true,
false,
"DEATHKNIGHT",
},
[166299] = {
true,
false,
"fuchsia",
},
[177808] = {
true,
false,
"mediumpurple",
},
[56792] = {
true,
false,
"fuchsia",
},
[186120] = {
true,
false,
"DRUID",
},
[190340] = {
true,
false,
"deepskyblue",
},
[167962] = {
true,
true,
"fuchsia",
},
[134331] = {
true,
false,
"gold",
},
[133436] = {
true,
false,
"gold",
},
[190034] = {
true,
false,
"mediumpurple",
},
[59555] = {
true,
false,
"fuchsia",
},
[164510] = {
true,
false,
"fuchsia",
},
[186121] = {
true,
false,
"DRUID",
},
[167963] = {
true,
false,
"blue",
},
[184331] = {
true,
false,
"mediumpurple",
},
[164737] = {
true,
false,
"fuchsia",
},
[206070] = {
true,
false,
"mediumpurple",
},
[166301] = {
true,
false,
"fuchsia",
},
[114544] = {
true,
false,
"fuchsia",
},
[40936] = {
true,
false,
"mediumpurple",
},
[186122] = {
true,
false,
"blue",
},
[190342] = {
true,
false,
"fuchsia",
},
[101437] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"mediumpurple",
},
[41096] = {
true,
false,
"fuchsia",
},
[166302] = {
true,
false,
"deepskyblue",
},
[44566] = {
true,
false,
"mediumpurple",
},
[206063] = {
true,
false,
"DEATHKNIGHT",
},
[144296] = {
true,
false,
"mediumpurple",
},
[199037] = {
true,
false,
"deepskyblue",
},
[167965] = {
true,
false,
"blue",
},
[189555] = {
true,
false,
"blue",
},
[195842] = {
true,
false,
"deepskyblue",
},
[127879] = {
true,
false,
"blue",
},
[104251] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"blue",
},
[45572] = {
true,
false,
"fuchsia",
},
[107288] = {
true,
false,
"deepskyblue",
},
[101438] = {
true,
false,
"blue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[40633] = {
true,
false,
"deepskyblue",
},
[184335] = {
true,
false,
"fuchsia",
},
[100991] = {
true,
false,
"fuchsia",
},
[129699] = {
true,
false,
"DRUID",
},
[186125] = {
true,
false,
"fuchsia",
},
[190345] = {
true,
false,
"blue",
},
[167967] = {
true,
false,
"blue",
},
[45924] = {
true,
false,
"MAGE",
},
[189706] = {
true,
false,
"yellow",
},
[83025] = {
true,
false,
"blue",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[98370] = {
true,
false,
"fuchsia",
},
[118489] = {
true,
false,
"fuchsia",
},
[193799] = {
true,
false,
"fuchsia",
},
[177817] = {
true,
false,
"blue",
},
[179733] = {
true,
false,
"fuchsia",
},
[83026] = {
true,
false,
"mediumpurple",
},
[171805] = {
true,
false,
"blue",
},
[98691] = {
true,
false,
"blue",
},
[168992] = {
true,
false,
"deepskyblue",
},
[134338] = {
true,
false,
"navajowhite",
},
[204030] = {
true,
false,
"DEATHKNIGHT",
},
[45477] = {
true,
false,
"blue",
},
[196102] = {
true,
false,
"blue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[135234] = {
true,
false,
"DEATHKNIGHT",
},
[114803] = {
true,
false,
"deepskyblue",
},
[40586] = {
true,
false,
"mediumpurple",
},
[126845] = {
true,
false,
"fuchsia",
},
[81236] = {
true,
false,
"deepskyblue",
},
[130404] = {
true,
false,
"fuchsia",
},
[189901] = {
true,
false,
"mediumpurple",
},
[195930] = {
true,
false,
"mediumpurple",
},
[135235] = {
true,
false,
"goldenrod",
},
[82579] = {
true,
false,
"deepskyblue",
},
[178171] = {
true,
false,
"fuchsia",
},
[131527] = {
true,
false,
"mediumpurple",
},
[165414] = {
true,
false,
"deepskyblue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[114804] = {
true,
false,
"blue",
},
[155824] = {
true,
false,
"blue",
},
[194315] = {
true,
false,
"mediumpurple",
},
[175517] = {
true,
false,
"blue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[131824] = {
true,
false,
"mediumpurple",
},
[187154] = {
true,
false,
"deepskyblue",
},
[104300] = {
true,
false,
"fuchsia",
},
[130661] = {
true,
false,
"lightgreen",
},
[135365] = {
true,
false,
"mediumpurple",
},
[192781] = {
true,
false,
"MAGE",
},
[134417] = {
true,
false,
"gold",
},
[186220] = {
true,
false,
"deepskyblue",
},
[134139] = {
true,
false,
"gold",
},
[187155] = {
true,
false,
"deepskyblue",
},
[114632] = {
true,
false,
"deepskyblue",
},
[163882] = {
true,
false,
"mediumpurple",
},
[111563] = {
true,
false,
"blue",
},
[195851] = {
true,
false,
"blue",
},
[134599] = {
true,
false,
"gold",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[168310] = {
true,
false,
"fuchsia",
},
[135239] = {
true,
false,
"paleturquoise",
},
[98949] = {
true,
false,
"mediumpurple",
},
[196203] = {
true,
false,
"deepskyblue",
},
[134600] = {
true,
false,
"peru",
},
[201223] = {
true,
false,
"blue",
},
[125977] = {
true,
false,
"fuchsia",
},
[162038] = {
true,
false,
"mediumpurple",
},
[135240] = {
true,
false,
"blue",
},
[115765] = {
true,
false,
"fuchsia",
},
[40788] = {
true,
false,
"mediumpurple",
},
[129529] = {
true,
false,
"fuchsia",
},
[130488] = {
true,
false,
"lightsalmon",
},
[156212] = {
true,
false,
"deepskyblue",
},
[131847] = {
true,
false,
"DEATHKNIGHT",
},
[194816] = {
true,
false,
"mediumpurple",
},
[168932] = {
true,
false,
"gold",
},
[135241] = {
true,
false,
"peru",
},
[102019] = {
true,
false,
"fuchsia",
},
[141284] = {
true,
false,
"gold",
},
[155830] = {
true,
false,
"deepskyblue",
},
[104273] = {
true,
false,
"mediumpurple",
},
[133835] = {
true,
false,
"deepskyblue",
},
[199595] = {
true,
false,
"mediumpurple",
},
[192788] = {
true,
false,
"fuchsia",
},
[164557] = {
true,
false,
"mediumpurple",
},
[100485] = {
true,
false,
"deepskyblue",
},
[192786] = {
true,
false,
"blue",
},
[183707] = {
true,
false,
"deepskyblue",
},
[116549] = {
true,
false,
"deepskyblue",
},
[133836] = {
true,
false,
"blue",
},
[182045] = {
true,
false,
"fuchsia",
},
[165805] = {
true,
false,
"mediumpurple",
},
[101637] = {
true,
false,
"mediumpurple",
},
[155831] = {
true,
false,
"fuchsia",
},
[192787] = {
false,
false,
"fuchsia",
},
[206214] = {
true,
false,
"mediumpurple",
},
[98696] = {
true,
false,
"mediumpurple",
},
[187033] = {
true,
false,
"fuchsia",
},
[168747] = {
true,
false,
"fuchsia",
},
[136139] = {
true,
false,
"peru",
},
[95769] = {
true,
false,
"fuchsia",
},
[100486] = {
true,
false,
"fuchsia",
},
[163121] = {
true,
false,
"blue",
},
[59546] = {
true,
false,
"deepskyblue",
},
[115640] = {
true,
false,
"fuchsia",
},
[102788] = {
true,
false,
"mediumpurple",
},
[141283] = {
true,
false,
"navajowhite",
},
[190359] = {
true,
false,
"blue",
},
[189464] = {
true,
false,
"fuchsia",
},
[76446] = {
true,
false,
"blue",
},
[162099] = {
true,
false,
"fuchsia",
},
[87252] = {
true,
false,
"mediumpurple",
},
[131666] = {
true,
false,
"deepskyblue",
},
[155221] = {
true,
false,
"deepskyblue",
},
[134990] = {
true,
false,
"honeydew",
},
[138187] = {
true,
false,
"deepskyblue",
},
[41139] = {
true,
false,
"aqua",
},
[131436] = {
true,
false,
"mediumpurple",
},
[197905] = {
true,
false,
"deepskyblue",
},
[169159] = {
true,
false,
"gold",
},
[96587] = {
true,
false,
"deepskyblue",
},
[164506] = {
true,
false,
"blue",
},
[170483] = {
true,
false,
"fuchsia",
},
[189235] = {
true,
false,
"fuchsia",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"blue",
},
[136934] = {
true,
false,
"navajowhite",
},
[176551] = {
true,
false,
"deepskyblue",
},
[131667] = {
true,
false,
"mediumpurple",
},
[144071] = {
true,
false,
"gold",
},
[201790] = {
true,
false,
"deepskyblue",
},
[190362] = {
true,
false,
"fuchsia",
},
[189467] = {
true,
false,
"blue",
},
[196198] = {
true,
false,
"blue",
},
[98965] = {
true,
false,
"mediumpurple",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[208521] = {
true,
false,
"deepskyblue",
},
[82597] = {
true,
false,
"fuchsia",
},
[189340] = {
true,
false,
"mediumpurple",
},
[130400] = {
true,
false,
"deepskyblue",
},
[163459] = {
true,
false,
"blue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"deepskyblue",
},
[131669] = {
true,
false,
"DEATHKNIGHT",
},
[165556] = {
true,
false,
"fuchsia",
},
[115642] = {
true,
false,
"blue",
},
[95842] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"blue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[190174] = {
true,
false,
"fuchsia",
},
[131670] = {
true,
false,
"palegreen",
},
[163128] = {
true,
false,
"deepskyblue",
},
[187315] = {
true,
false,
"blue",
},
[129517] = {
true,
false,
"fuchsia",
},
[168627] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[198933] = {
true,
false,
"mediumpurple",
},
[169924] = {
true,
false,
"mediumpurple",
},
[192796] = {
true,
false,
"fuchsia",
},
[81820] = {
true,
false,
"fuchsia",
},
[204560] = {
true,
false,
"fuchsia",
},
[94224] = {
true,
false,
"fuchsia",
},
[189471] = {
true,
false,
"deepskyblue",
},
[186658] = {
true,
false,
"deepskyblue",
},
[189727] = {
true,
false,
"DRUID",
},
[137511] = {
true,
false,
"navajowhite",
},
[176573] = {
true,
false,
"fuchsia",
},
[86547] = {
true,
false,
"blue",
},
[99192] = {
true,
false,
"mediumpurple",
},
[86552] = {
true,
false,
"deepskyblue",
},
[189472] = {
true,
false,
"deepskyblue",
},
[185508] = {
true,
false,
"red",
},
[115388] = {
true,
false,
"fuchsia",
},
[131545] = {
true,
false,
"mediumpurple",
},
[200126] = {
true,
false,
"fuchsia",
},
[186124] = {
true,
false,
"deepskyblue",
},
[168942] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"fuchsia",
},
[164921] = {
true,
false,
"deepskyblue",
},
[170690] = {
true,
false,
"blue",
},
[189729] = {
true,
false,
"DRUID",
},
[167607] = {
true,
false,
"mediumpurple",
},
[156226] = {
true,
false,
"deepskyblue",
},
[188067] = {
true,
false,
"blue",
},
[213770] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
true,
false,
"goldenrod",
},
[45930] = {
true,
false,
"deepskyblue",
},
[59552] = {
true,
false,
"fuchsia",
},
[133593] = {
true,
false,
"honeydew",
},
[167964] = {
true,
false,
"fuchsia",
},
[40943] = {
true,
false,
"fuchsia",
},
[190370] = {
true,
false,
"deepskyblue",
},
[157634] = {
true,
false,
"blue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[199717] = {
true,
false,
"mediumpurple",
},
[192800] = {
true,
false,
"blue",
},
[167876] = {
true,
false,
"fuchsia",
},
[129366] = {
true,
false,
"goldenrod",
},
[81819] = {
true,
false,
"deepskyblue",
},
[127799] = {
true,
false,
"blue",
},
[190371] = {
true,
false,
"blue",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[131849] = {
true,
false,
"blue",
},
[203799] = {
true,
false,
"deepskyblue",
},
[131677] = {
true,
false,
"deepskyblue",
},
[186664] = {
true,
false,
"deepskyblue",
},
[128434] = {
true,
false,
"fuchsia",
},
[172981] = {
true,
false,
"blue",
},
[166971] = {
true,
false,
"fuchsia",
},
[190381] = {
true,
false,
"fuchsia",
},
[152905] = {
true,
false,
"fuchsia",
},
[197406] = {
true,
false,
"fuchsia",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
true,
false,
"blue",
},
[184107] = {
true,
false,
"mediumpurple",
},
[190373] = {
true,
false,
"deepskyblue",
},
[189478] = {
true,
false,
"mediumpurple",
},
[134364] = {
true,
false,
"honeydew",
},
[166589] = {
true,
false,
"fuchsia",
},
[206230] = {
true,
false,
"fuchsia",
},
[84957] = {
true,
false,
"fuchsia",
},
[163520] = {
true,
false,
"mediumpurple",
},
[114624] = {
true,
false,
"mediumpurple",
},
[197535] = {
true,
false,
"mediumpurple",
},
[192333] = {
true,
false,
"mediumpurple",
},
[113537] = {
true,
false,
"mediumpurple",
},
[204536] = {
true,
false,
"blue",
},
[198047] = {
true,
false,
"mediumpurple",
},
[195928] = {
true,
false,
"mediumpurple",
},
[167998] = {
true,
false,
"mediumpurple",
},
[128435] = {
true,
false,
"maroon",
},
[194467] = {
true,
false,
"blue",
},
[201756] = {
true,
false,
"fuchsia",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[205337] = {
true,
false,
"fuchsia",
},
[194469] = {
true,
false,
"blue",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[164929] = {
true,
false,
"blue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[136541] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[99664] = {
true,
false,
"fuchsia",
},
[45932] = {
true,
false,
"fuchsia",
},
[135007] = {
true,
false,
"gold",
},
[190377] = {
true,
false,
"fuchsia",
},
[135263] = {
true,
false,
"maroon",
},
[133345] = {
true,
false,
"goldenrod",
},
[102094] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"mediumpurple",
},
[114626] = {
true,
false,
"fuchsia",
},
[163524] = {
true,
false,
"fuchsia",
},
[189227] = {
true,
false,
"fuchsia",
},
[131586] = {
true,
false,
"mediumpurple",
},
[205212] = {
true,
false,
"fuchsia",
},
[192680] = {
true,
false,
"mediumpurple",
},
[195877] = {
true,
false,
"fuchsia",
},
[168384] = {
true,
false,
"blue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[131812] = {
true,
false,
"fuchsia",
},
[212681] = {
true,
false,
"deepskyblue",
},
[203678] = {
true,
false,
"mediumpurple",
},
[98706] = {
true,
false,
"mediumpurple",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"fuchsia",
},
[169905] = {
true,
false,
"blue",
},
[131685] = {
true,
false,
"deepskyblue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[186284] = {
true,
false,
"mediumpurple",
},
[177716] = {
true,
false,
"deepskyblue",
},
[150168] = {
true,
false,
"fuchsia",
},
[132491] = {
true,
false,
"palegreen",
},
[180070] = {
true,
false,
"fuchsia",
},
[199325] = {
true,
false,
"deepskyblue",
},
[196263] = {
true,
false,
"deepskyblue",
},
[167612] = {
true,
false,
"blue",
},
[95766] = {
true,
false,
"blue",
},
[164926] = {
true,
false,
"fuchsia",
},
[180015] = {
true,
false,
"blue",
},
[115395] = {
true,
false,
"mediumpurple",
},
[206074] = {
true,
false,
"DEATHKNIGHT",
},
[104270] = {
true,
false,
"mediumpurple",
},
[80805] = {
true,
false,
"mediumpurple",
},
[195927] = {
true,
false,
"mediumpurple",
},
[205727] = {
true,
false,
"deepskyblue",
},
[197671] = {
true,
false,
"blue",
},
[138465] = {
true,
false,
"lightcoral",
},
[98275] = {
true,
false,
"fuchsia",
},
[134629] = {
true,
false,
"navajowhite",
},
[188703] = {
true,
false,
"yellow",
},
[198311] = {
true,
false,
"mediumpurple",
},
[130485] = {
true,
false,
"peru",
},
[152898] = {
true,
false,
"fuchsia",
},
[150142] = {
true,
false,
"deepskyblue",
},
[175550] = {
true,
false,
"fuchsia",
},
[184023] = {
true,
false,
"blue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[99358] = {
true,
false,
"deepskyblue",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[162763] = {
true,
true,
"fuchsia",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
true,
false,
"lightcoral",
},
[168882] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[45919] = {
true,
false,
"mediumpurple",
},
[189234] = {
true,
false,
"mediumpurple",
},
[129527] = {
true,
false,
"deepskyblue",
},
[168007] = {
true,
false,
"blue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[137830] = {
true,
false,
"deepskyblue",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176959] = {
true,
false,
"deepskyblue",
},
[80935] = {
true,
false,
"deepskyblue",
},
[136295] = {
true,
false,
"peru",
},
[167113] = {
true,
false,
"blue",
},
[133482] = {
true,
false,
"maroon",
},
[59553] = {
true,
false,
"mediumpurple",
},
[156244] = {
true,
false,
"mediumpurple",
},
[96664] = {
true,
false,
"blue",
},
[196115] = {
true,
false,
"fuchsia",
},
[169927] = {
true,
false,
"fuchsia",
},
[168109] = {
true,
false,
"deepskyblue",
},
[185528] = {
true,
false,
"blue",
},
[185656] = {
true,
false,
"fuchsia",
},
[189719] = {
true,
false,
"DRUID",
},
[156245] = {
true,
false,
"mediumpurple",
},
[59873] = {
true,
false,
"mediumpurple",
},
[81432] = {
true,
false,
"deepskyblue",
},
[80936] = {
true,
false,
"blue",
},
[134251] = {
true,
false,
"honeydew",
},
[185529] = {
true,
false,
"fuchsia",
},
[189265] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[114266] = {
true,
false,
"deepskyblue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[187192] = {
true,
false,
"mediumpurple",
},
[141285] = {
true,
false,
"lightgreen",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"fuchsia",
},
[198326] = {
true,
false,
"mediumpurple",
},
[189878] = {
true,
false,
"yellow",
},
[104274] = {
true,
false,
"mediumpurple",
},
[131823] = {
true,
false,
"mediumpurple",
},
[184124] = {
true,
false,
"DRUID",
},
[192481] = {
true,
false,
"fuchsia",
},
[193293] = {
true,
false,
"mediumpurple",
},
[194316] = {
true,
false,
"mediumpurple",
},
[192767] = {
true,
false,
"mediumpurple",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"blue",
},
[133870] = {
true,
false,
"fuchsia",
},
[184125] = {
true,
false,
"DRUID",
},
[95771] = {
true,
false,
"deepskyblue",
},
[207969] = {
true,
false,
"fuchsia",
},
[151773] = {
true,
false,
"blue",
},
[198997] = {
true,
false,
"mediumpurple",
},
[163458] = {
true,
false,
"deepskyblue",
},
[104275] = {
true,
false,
"mediumpurple",
},
[131825] = {
true,
false,
"mediumpurple",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[154014] = {
true,
false,
"deepskyblue",
},
[157017] = {
true,
false,
"blue",
},
[169421] = {
true,
false,
"gold",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[162691] = {
true,
false,
"fuchsia",
},
[165919] = {
true,
false,
"mediumpurple",
},
[139422] = {
true,
false,
"gold",
},
[133361] = {
true,
false,
"fuchsia",
},
[162133] = {
true,
false,
"fuchsia",
},
[40577] = {
true,
false,
"mediumpurple",
},
[204918] = {
true,
false,
"fuchsia",
},
[164563] = {
true,
false,
"blue",
},
[134418] = {
true,
false,
"deepskyblue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[179269] = {
true,
false,
"fuchsia",
},
[180495] = {
true,
false,
"fuchsia",
},
[171341] = {
true,
false,
"deepskyblue",
},
[178630] = {
true,
false,
"deepskyblue",
},
[171799] = {
true,
false,
"fuchsia",
},
[136249] = {
true,
false,
"plum",
},
[92610] = {
true,
false,
"fuchsia",
},
[194487] = {
true,
false,
"deepskyblue",
},
[197698] = {
true,
false,
"mediumpurple",
},
[98970] = {
true,
false,
"mediumpurple",
},
[134514] = {
true,
false,
"lightgreen",
},
[204206] = {
true,
false,
"mediumpurple",
},
[100539] = {
true,
false,
"blue",
},
[126847] = {
true,
false,
"DRUID",
},
[179852] = {
true,
false,
"blue",
},
[175861] = {
true,
false,
"fuchsia",
},
[180474] = {
true,
false,
"fuchsia",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[169425] = {
true,
false,
"gold",
},
[115019] = {
true,
false,
"deepskyblue",
},
[191164] = {
true,
false,
"fuchsia",
},
[184131] = {
true,
false,
"deepskyblue",
},
[184581] = {
true,
false,
"fuchsia",
},
[190207] = {
true,
false,
"fuchsia",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[137713] = {
true,
false,
"paleturquoise",
},
[104278] = {
true,
false,
"fuchsia",
},
[164567] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"fuchsia",
},
[133685] = {
true,
false,
"deepskyblue",
},
[191739] = {
true,
false,
"mediumpurple",
},
[137458] = {
true,
false,
"deepskyblue",
},
[150165] = {
true,
false,
"deepskyblue",
},
[134012] = {
true,
false,
"lightsalmon",
},
[187969] = {
true,
false,
"deepskyblue",
},
[95779] = {
true,
false,
"mediumpurple",
},
[122965] = {
true,
false,
"mediumpurple",
},
[122972] = {
true,
false,
"deepskyblue",
},
[174197] = {
true,
false,
"deepskyblue",
},
[114317] = {
true,
false,
"deepskyblue",
},
[83893] = {
true,
false,
"deepskyblue",
},
[169428] = {
true,
false,
"gold",
},
[165137] = {
true,
false,
"mediumpurple",
},
[179842] = {
true,
false,
"fuchsia",
},
[212778] = {
true,
false,
"fuchsia",
},
[169861] = {
true,
false,
"blue",
},
[129552] = {
true,
false,
"deepskyblue",
},
[183495] = {
true,
false,
"mediumpurple",
},
[187897] = {
true,
false,
"mediumpurple",
},
[169429] = {
true,
false,
"gold",
},
[83846] = {
true,
false,
"mediumpurple",
},
[173190] = {
true,
false,
"deepskyblue",
},
[176974] = {
true,
false,
"fuchsia",
},
[190401] = {
true,
false,
"mediumpurple",
},
[205366] = {
true,
false,
"DEATHKNIGHT",
},
[86526] = {
true,
false,
"blue",
},
[129553] = {
true,
false,
"mediumpurple",
},
[169430] = {
true,
false,
"gold",
},
[205363] = {
true,
false,
"deepskyblue",
},
[196576] = {
true,
false,
"fuchsia",
},
[39960] = {
true,
false,
"DEATHKNIGHT",
},
[134137] = {
true,
false,
"deepskyblue",
},
[170480] = {
true,
false,
"mediumpurple",
},
[183497] = {
true,
false,
"blue",
},
[111068] = {
true,
false,
"mediumpurple",
},
[199124] = {
true,
false,
"deepskyblue",
},
[183033] = {
true,
false,
"mediumpurple",
},
[185032] = {
true,
false,
"mediumpurple",
},
[98792] = {
true,
false,
"deepskyblue",
},
[190403] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"fuchsia",
},
[180429] = {
true,
false,
"mediumpurple",
},
[115406] = {
true,
false,
"deepskyblue",
},
[126919] = {
true,
false,
"blue",
},
[195135] = {
true,
false,
"fuchsia",
},
[80816] = {
true,
false,
"deepskyblue",
},
[200137] = {
true,
false,
"deepskyblue",
},
},
["hook_data"] = {
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Name"] = "Use Big Icon",
["Value"] = false,
["Key"] = "useFullSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Name"] = "Icon Size Offset",
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Key"] = "iconPadding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Name"] = "Texture Width",
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Key"] = "textureHeightMod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Name"] = "Texture Position",
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Name"] = "Texture Alpha",
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["semver"] = "",
["HooksTemp"] = {
},
["version"] = -1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1688802814,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = false,
["Revision"] = 51,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Color Automation [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614608917,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 85,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Execute Range [Plater]",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1684153114,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 369,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Attacking Specific Unit [Plater]",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Name"] = "Color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Key"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Bar Color",
["Value"] = true,
["Key"] = "changeBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Border Color",
["Value"] = false,
["Key"] = "changeBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Reset Colors",
["Value"] = true,
["Key"] = "resetColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Combo Points [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Extra Border [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["HooksTemp"] = {
},
["version"] = -1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Time"] = 1705067856,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 60,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Don't Have Aura [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Players Targeting a Target [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614606781,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 358,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder [Plater]",
["LastHookEdited"] = "Initialization",
["Options"] = {
},
},
{
["OptionsValues"] = {
["targetcolor"] = {
0,
0.47450980392157,
1,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1654562266,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/_GSmNC31z/1",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 168,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Current Target Color [Plater]",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Name"] = "targetcolor",
["Value"] = {
0.46274509803922,
1,
0.48235294117647,
1,
},
["Key"] = "targetcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "targetcolor",
},
},
},
{
["OptionsValues"] = {
["glowColor"] = {
1,
0,
0.01568627543747425,
1,
},
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1703731894,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = true,
["Revision"] = 290,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "@scriptname Options:",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
1,
0,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Name"] = "Ants Amount",
["Value"] = 6,
["Key"] = "antsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Name"] = "Speed",
["Value"] = 0.25,
["Key"] = "frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Ants length",
["Value"] = 4,
["Key"] = "antsLength",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Ants Thickness",
["Value"] = 2,
["Key"] = "antsThickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Ants Border",
["Value"] = false,
["Key"] = "antsBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Outer Glow",
["Value"] = false,
["Key"] = "outerGlow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Name"] = "Steal/Purge Aura Glow",
["semver"] = "1.0.6",
["HooksTemp"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame)\n    \n    local healthBar = unitFrame.healthBar\n    local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n    -- change the value to whatever, for fire mages its 30% so 0.30\n    local useScorch = 0.30\n    \n    if (percent <= useScorch) then\n        -- from here the customizing is optional\n        -- for a list of commands look at the plater api\n        -- https://www.curseforge.com/wow/addons/plater-nameplates/pages/scripts/list-of-api-functions\n        \n        -- below is an example which will set the color & bordercolor to orange, \n        -- change the size of the frame and add a flash to it\n        \n        Plater.SetNameplateColor (unitFrame, \"#ff8c00\")\n        Plater.SetBorderColor (unitFrame, \"#ff8c00\")\n        Plater.SetNameplateSize (unitFrame, 120, 20)\n        Plater.FlashNameplateBorder (unitFrame, 1)\n    end\n    \n    \nend",
},
["Time"] = 1625007755,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/pc7PK_czd/1",
["Icon"] = 135827,
["Enabled"] = false,
["Revision"] = 102,
["semver"] = "1.0.0",
["Author"] = "Sphyre-Tarren Mill",
["Desc"] = "distinguish the mob for scorching",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Scorch",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["colorHealthbar"] = true,
["targetEnabled"] = false,
["raidMarkColors"] = false,
["targetColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["UseDefaultColor"] = false,
["IMobs"] = {
1,
0.97254901960784,
0,
1,
},
["threatColors"] = true,
["DefaultColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["EnMobs"] = {
1,
0,
0.10196078431373,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"]\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    modTable.UseDefaultColor = modTable.config[\"UseDefaultColor\"]\n    modTable.DefaultColor = modTable.config[\"DefaultColor\"]\n    \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    --Bosses - Greenyblue - \"Boss\"\n    --Mini Boss - DarkMagenta - \"MiniBoss\"\n    \n    --Focus mobs - Blue - \"FMobs\"\n    --Deadly mobs - Light Blue - \"DMobs\"\n    --Dodge Mobs - Purple - \"DoMobs\"\n    \n    --Healer mobs - White - HMobs\n    --Interruptable damage mobs - Orange - InMobs\n    --Enrage mobs - Light Orange - \"EnMobs\"\n    \n    --Expolsives mobs - Dark Pink - \"ExMobs\"\n    \n    modTable.NpcColors = {       \n        \n        -- De Other Side\n        [166473] = modTable.config[\"Boss\"],     --Hakkar the Soulflayer\n        [164555] = modTable.config[\"Boss\"],     --Milificent Manastorm\n        [164556] = modTable.config[\"Boss\"],     --Millhouse Manastorm\n        [169769] = modTable.config[\"Boss\"],     --Mueh'zala\n        \n        [170486] = modTable.config[\"FMobs\"],    --Atal'ia Devoted\n        [168992] = modTable.config[\"FMobs\"],    --Risen Cultist\n        [168934] = modTable.config[\"FMobs\"],    --Enraged Spirit\n        [167962] = modTable.config[\"FMobs\"],    --Defunct Dental Drill\n        [171184] = modTable.config[\"FMobs\"],    --Mythresh, Sky's Talon\n        \n        [167964] = modTable.config[\"DMobs\"],    --4.RF-4.RF\n        [164862] = modTable.config[\"DMobs\"],    --Weald Shimmermoth\n        \n        [167965] = modTable.config[\"IMobs\"],    --Lubricator\n        \n        [170490] = modTable.config[\"HMobs\"],    --Atal'ai High Priest\n        [170572] = modTable.config[\"HMobs\"],    --Atal'ai Hoodoo Hexxer\n        \n        [169905] = modTable.config[\"EnMobs\"],   --Risen Warlord\n        [171343] = modTable.config[\"EnMobs\"],   --Bladebeak Matriarch\n        \n        [168942] = modTable.config[\"DoMobs\"],    --DeathSpeaker\n        [167963] = modTable.config[\"DoMobs\"],    --Headless Client\n        [170480] = modTable.config[\"DoMobs\"],    --Atal'ia Deathwalker\n        \n        [170147] = modTable.config[\"ExMobs\"],   --Volatile Memory\n        \n        --Theater Of Pain\n        [164451] = modTable.config[\"Boss\"],     --Dessia the Decapitator\n        [164463] = modTable.config[\"Boss\"],     --Paceran the virulent\n        [164461] = modTable.config[\"Boss\"],     --Sathel the Accursed\n        [162317] = modTable.config[\"Boss\"],     --Gorechop\n        [162309] = modTable.config[\"Boss\"],     --Kul'tharok\n        [162329] = modTable.config[\"Boss\"],     --Xav the Unfallen\n        [165946] = modTable.config[\"Boss\"],     --Mordretha the Endless Empress\n        \n        [167536] = modTable.config[\"MiniBoss\"], --Harugia the Bloodthirsty\n        [162744] = modTable.config[\"MiniBoss\"], --Nekthara the Mangler\n        \n        [174210] = modTable.config[\"FMobs\"],    --Blighted Sludge-Spewer\n        [170882] = modTable.config[\"FMobs\"],    --Bone Magus\n        [160495] = modTable.config[\"FMobs\"],    --Maniacal Soulbinder\n        \n        [174197] = modTable.config[\"DMobs\"],    --Battlefield Ritualist\n        [163086] = modTable.config[\"DMobs\"],    --Rancid Gasbag\n        [170690] = modTable.config[\"DMobs\"],    --Diseased Horror\n        [167998] = modTable.config[\"DMobs\"],    --Portal Guardian\n        [164506] = modTable.config[\"DMobs\"],    --Ancient Captain\n        \n        [170850] = modTable.config[\"EnMobs\"],   --Raging BloodHorn\n        \n        [169893] = modTable.config[\"DoMobs\"],   --Hefarious Darkspeaker\n        [162763] = modTable.config[\"DoMobs\"],    --Soulforged Bonereaver\n        \n        --Necrotic Wake\n        [162691] = modTable.config[\"Boss\"],     --BlightBone\n        [162692] = modTable.config[\"Boss\"],     --Amarth\n        [166882] = modTable.config[\"Boss\"],     --Surgeon Stitchflesh\n        [166945] = modTable.config[\"Boss\"],     --Nalthor the Rimebinder\n        \n        [165824] = modTable.config[\"MiniBoss\"], --Nar'zudah\n        [165197] = modTable.config[\"MiniBoss\"], --Skeletal Monostrosity\n        \n        [163121] = modTable.config[\"FMobs\"],    --Stiched Vanguard\n        [165137] = modTable.config[\"FMobs\"],    --Zolramus GateKeeper\n        [163618] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        [168443] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        \n        [163128] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [168357] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [173044] = modTable.config[\"DMobs\"],    --Stitching Assistant\n        [167731] = modTable.config[\"DMobs\"],    --Separation Assistant\n        [163126] = modTable.config[\"DMobs\"],    --Brittlebone Mage\n        [163621] = modTable.config[\"DMobs\"],    --Goregrind\n        [163620] = modTable.config[\"DMobs\"],    --Rotspew\n        [172981] = modTable.config[\"DMobs\"],    --Kyrian Stitchwerk\n        \n        [173016] = modTable.config[\"IMobs\"],    --Corpse Collector\n        [166302] = modTable.config[\"IMobs\"],    --Corpse Harvester\n        [165919] = modTable.config[\"IMobs\"],    --Skeletal Marauder\n        \n        [165222] = modTable.config[\"HMobs\"],    --Zolramus Bonemender\n        [165872] = modTable.config[\"HMobs\"],    --Flesh Crafter\n        \n        --Halls Of Atonment\n        [165408] = modTable.config[\"Boss\"],     --Halkias\n        [156827] = modTable.config[\"Boss\"],     --Echelon  \n        [165410] = modTable.config[\"Boss\"],     --High Adjudicator Aleez\n        [164218] = modTable.config[\"Boss\"],     --Lord Chamberlain\n        \n        [167876] = modTable.config[\"MiniBoss\"], --Inquisitor Sigar\n        \n        [164562] = modTable.config[\"FMobs\"],    --Depraved Houndmaster\n        [165414] = modTable.config[\"FMobs\"],    --Depraved Obliterator\n        \n        [164563] = modTable.config[\"DMobs\"],    --Vicious Gargon\n        [165515] = modTable.config[\"DMobs\"],    --Depraved Darkblade\n        [167607] = modTable.config[\"DMobs\"],    --Stoneborn Slasher\n        [164557] = modTable.config[\"DMobs\"],    --Shard of Halkias\n        \n        [165529] = modTable.config[\"IMobs\"],    --Depraved Collector\n        [167612] = modTable.config[\"IMobs\"],    --Stoneborn Reaver\n        \n        [167611] = modTable.config[\"DoMobs\"],    --Stoneborn Eviscerator\n        \n        --Spires Of Ascension\n        [162059] = modTable.config[\"Boss\"],     --Kin-Tara\n        [163077] = modTable.config[\"Boss\"],     --Azules\n        [162058] = modTable.config[\"Boss\"],     --Ventunax\n        [162060] = modTable.config[\"Boss\"],     --Oryphrino\n        [167410] = modTable.config[\"Boss\"],     --Devos\n        \n        [168844] = modTable.config[\"MiniBoss\"],  --Lakesis\n        [168843] = modTable.config[\"MiniBoss\"],  --Klotos\n        [168845] = modTable.config[\"MiniBoss\"],  --Astronos\n        \n        [163458] = modTable.config[\"TMobs\"],   --Forsworn Castigator\n        [168418] = modTable.config[\"TMobs\"],   --Forsworn Inquisitor\n        [163520] = modTable.config[\"TMobs\"],   --Forsworn Squad-Leader\n        [168681] = modTable.config[\"TMobs\"],   --Forsworn Helion\n        \n        [163503] = modTable.config[\"DMobs\"],   --EtherDiver\n        [168658] = modTable.config[\"DMobs\"],   --Forsworn Devastator\n        [168717] = modTable.config[\"DMobs\"],   --Forsworn Justicar\n        \n        [168318] = modTable.config[\"IMobs\"],   --Forsworn Goliath\n        \n        [168420] = modTable.config[\"HMobs\"],   --Forsworn Champion\n        [163459] = modTable.config[\"HMobs\"],   --Forsworn Mender\n        [168718] = modTable.config[\"HMobs\"],   --Forsworn Warden\n        \n        --Sanguine Depths\n        [162103] = modTable.config[\"Boss\"],     --Executor Tarvold\n        [165318] = modTable.config[\"Boss\"],     --General Kaal\n        [162102] = modTable.config[\"Boss\"],     --Grand Proctor Beryllia\n        [162100] = modTable.config[\"Boss\"],     --Kryxis the Voracious\n        \n        [171376] = modTable.config[\"MiniBoss\"],    --Head Custodian Javlin\n        \n        [165076] = modTable.config[\"FMobs\"],    --Gluttonous Tick\n        [162040] = modTable.config[\"FMobs\"],    --Grand Overseer\n        [172265] = modTable.config[\"FMobs\"],   --Remnant of Fury\n        [168882] = modTable.config[\"FMobs\"],    --Fleeting Manifestation\n        \n        [162049] = modTable.config[\"DMobs\"],   --Vestige of Doubt\n        [171448] = modTable.config[\"DMobs\"],    --Dreadful Huntmaster\n        [166396] = modTable.config[\"DMobs\"],   --Noble Skirmisher\n        [166589] = modTable.config[\"DMobs\"],    --Animated Weapon\n        [171799] = modTable.config[\"DMobs\"],    --Depths Warden\n        [162047] = modTable.config[\"DMobs\"],    --Instiable Brute\n        \n        [162039] = modTable.config[\"IMobs\"],   --Wicked Oppressor\n        \n        [162057] = modTable.config[\"DoMobs\"],    --Chamber Sentinel\n        [162038] = modTable.config[\"DoMobs\"],   --Regal Mistdancer\n        \n        --Mist of Trina Scithe      \n        [164567] = modTable.config[\"Boss\"],     --ingra-maloch\n        [170217] = modTable.config[\"Boss\"],     --Mistcaller\n        [164517] = modTable.config[\"Boss\"],     --Tred'ova \n        \n        [164929] = modTable.config[\"FMobs\"],   --Tirnenn Villager\n        [164926] = modTable.config[\"FMobs\"],   --Drust Boughbreaker\n        \n        [166275] = modTable.config[\"DMobs\"],   --Mistveil Shaper\n        \n        [164920] = modTable.config[\"DMobs\"],   --Drust Soulcleaver\n        [166304] = modTable.config[\"DMobs\"],   --Mistveil Stinger\n        \n        [166299] = modTable.config[\"HMobs\"],   --Mistveil Tender\n        \n        [164921] = modTable.config[\"IMobs\"],   --Drust Harvester\n        [167111] = modTable.config[\"IMobs\"],   --Spinemaw Staghorn\n        \n        [167113] = modTable.config[\"DoMobs\"],   --Spinemaw Acidgullet \n        [166276] = modTable.config[\"DoMobs\"],   --Mistveil Guardian\n        \n        --Plaguefall    \n        [164967] = modTable.config[\"Boss\"],     --Doctor Ickus\n        [164266] = modTable.config[\"Boss\"],     --Domina Venomblade\n        [164255] = modTable.config[\"Boss\"],     --Globgrog\n        [164267] = modTable.config[\"Boss\"],     --Margrave Stradama\n        \n        [168886] = modTable.config[\"MiniBoss\"],  --Virulax Blightweaver\n        [169861] = modTable.config[\"MiniBoss\"],  --Ickor Bileflesh\n        \n        [164737] = modTable.config[\"FMobs\"],    --Brood Ambusher\n        [163915] = modTable.config[\"FMobs\"],    --Hatchling Nest\n        [168572] = modTable.config[\"FMobs\"],    --Fungi Stormer\n        [163891] = modTable.config[\"FMobs\"],    --Rotmarrow Slime\n        [168837] = modTable.config[\"FMobs\"],    --Stealthling\n        \n        [168578] = modTable.config[\"DMobs\"],    --FungalMancer\n        [168627] = modTable.config[\"DMobs\"],    --Plaguebinder\n        [167493] = modTable.config[\"DMobs\"],    --Venomous Sniper\n        [163882] = modTable.config[\"DMobs\"],    --Decaying Flesh Giant\n        [168310] = modTable.config[\"DMobs\"],    --Plagueroc\n        [165430] = modTable.config[\"DMobs\"],    --Malignant Spawn\n        \n        [168393] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [168396] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [163894] = modTable.config[\"DoMobs\"],   --Blighted Spinebreaker\n        \n        [169159] = modTable.config[\"ExMobs\"],   --Unstable Canister\n        [168878] = modTable.config[\"ExMobs\"],   --Rigged Plagueborer        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            elseif modTable.UseDefaultColor and not (unitFrame.namePlateUnitReaction == 4) and not unitIsPlayer and not unitFrame.namePlateIsQuestObjective then\n                Plater.SetNameplateColor(unitFrame, modTable.DefaultColor)\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n",
},
["Time"] = 1628712779,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/ocXXJPJZ7/6",
["Enabled"] = false,
["Revision"] = 236,
["semver"] = "1.0.5",
["Author"] = "Yummyyummy-Ravencrest",
["Desc"] = "Colours the Nameplates according to the type of M+ mob. This is my version of M+ Colored Mobs, https://wago.io/UKpo0_GbE",
["Prio"] = 98,
["version"] = 6,
["PlaterCore"] = 1,
["Name"] = "M+ Colouring",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Colors Header",
["Value"] = "Mythic+ Colours:",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Boss",
["Value"] = {
0,
1,
0.5843137254902,
1,
},
["Key"] = "Boss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "MiniBoss",
["Value"] = {
0.37647058823529,
0,
0.37647058823529,
1,
},
["Key"] = "MiniBoss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mini bosses",
},
{
["Type"] = 1,
["Name"] = "Focus Mobs",
["Value"] = {
0,
0,
1,
1,
},
["Key"] = "FMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that need to be focus.",
},
{
["Type"] = 1,
["Name"] = "Deadly Mobs",
["Value"] = {
0,
1,
1,
1,
},
["Key"] = "DMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are considered Deadly.",
},
{
["Type"] = 1,
["Name"] = "Dodge Mobs",
["Value"] = {
0.81176470588235,
0,
1,
1,
},
["Key"] = "DoMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are not considered deadly, but have ability's that need to be dogded.",
},
{
["Type"] = 1,
["Name"] = "Healer Mobs",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "HMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have healing ability's that should be kicked,",
},
{
["Type"] = 1,
["Name"] = "Interruptable Mobs",
["Value"] = {
1,
0.49803921568627,
0,
1,
},
["Key"] = "IMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have Interruptable spell that should be kicked.",
},
{
["Type"] = 1,
["Name"] = "Enrage Mobs",
["Value"] = {
1,
0.63921568627451,
0,
1,
},
["Key"] = "EnMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that enrage and should be calmed if possible.",
},
{
["Type"] = 1,
["Name"] = "Expolsives Mobs",
["Value"] = {
1,
0,
0.38039215686275,
1,
},
["Key"] = "ExMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that explode before or after death. WATCH OUT!!!",
},
{
["Type"] = 1,
["Name"] = "DefaultColor",
["Value"] = {
0.43921568627451,
0.43921568627451,
0.43921568627451,
1,
},
["Key"] = "DefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Target Color",
["Value"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["Key"] = "targetColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 9",
["Value"] = 0,
["Key"] = "option9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Addictional Options",
["Value"] = "Addictional Options",
["Key"] = "option22",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Target Color",
["Value"] = false,
["Key"] = "targetEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Raid Mark Colors",
["Value"] = true,
["Key"] = "raidMarkColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Color Healthbar",
["Value"] = false,
["Key"] = "colorHealthbar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "ThreatColors",
["Value"] = false,
["Key"] = "threatColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 4,
["Name"] = "Use Default Color",
["Value"] = true,
["Key"] = "UseDefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
["cooldownColor"] = {
1,
0.01960784383118153,
0,
1,
},
["interruptedColor"] = {
1,
0.2823529541492462,
0.3568627536296845,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x610c5b685dc84cc7",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1703700395,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 485,
["semver"] = "",
["Author"] = "Verlijke-Mal'Ganis",
["Desc"] = "Changes the color of the nameplate castbar based on the current cooldown of the player's interrupt.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Name"] = "Kick Ready Color",
["Value"] = {
0,
1,
0,
1,
},
["Key"] = "readyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is ready to be used.",
},
{
["Type"] = 1,
["Name"] = "Kick Will Be Ready Color",
["Value"] = {
1,
0.5921568627451,
0.031372549019608,
1,
},
["Key"] = "semiCooldownColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, but will be ready before the cast ends.",
},
{
["Type"] = 1,
["Name"] = "Kick Will NOT Be Ready",
["Value"] = {
1,
0,
0.007843137254902,
1,
},
["Key"] = "cooldownColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, and will NOT be ready before the cast ends.",
},
{
["Type"] = 2,
["Max"] = 1000,
["Desc"] = "Time in milliseconds that your kick should be off cooldown before cast end to count as \"kick will be ready\" (recommended to set to a few hundred ms above your latency).",
["Min"] = 0,
["Name"] = "Kick CD Tolerance (ms)",
["Value"] = 500,
["Key"] = "cooldownTolerance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Protected Cast Color",
["Value"] = {
0.74117647058824,
0.74901960784314,
0.73725490196078,
1,
},
["Key"] = "protectedColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for protected casts.",
},
{
["Type"] = 1,
["Name"] = "Interrupted Color",
["Value"] = {
1,
0,
0,
1,
},
["Key"] = "interruptedColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for interrupted casts.",
},
{
["Type"] = 4,
["Name"] = "Castbar CD Line",
["Value"] = true,
["Key"] = "cooldownLine",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Draw a line on castbars indicating when your interrupt will be off-cooldown.",
},
},
["Name"] = "Interrupt CD Indicator",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62229f65202d123",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1688801832,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/CignDPWs3/8",
["Icon"] = 4224736,
["Enabled"] = false,
["Revision"] = 497,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Set Bar Color",
["Value"] = true,
["Key"] = "setColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust health bar colors?",
},
{
["Type"] = 4,
["Name"] = "Set Name Color",
["Value"] = false,
["Key"] = "setNameColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 4,
["Name"] = "Set Border Color",
["Value"] = false,
["Key"] = "setBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 1,
["Name"] = "Vy Color",
["Value"] = {
0,
0.9921568627451,
1,
1,
},
["Key"] = "vyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Urh Color",
["Value"] = {
0.63137254901961,
0.34901960784314,
1,
1,
},
["Key"] = "urhColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Wo Color",
["Value"] = {
0.33725490196078,
1,
0.42352941176471,
1,
},
["Key"] = "woColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider",
["Value"] = 0,
["Key"] = "pog",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Name",
["Value"] = true,
["Key"] = "setName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's Name?",
},
{
["Type"] = 3,
["Name"] = "Vy Name",
["Value"] = "Vy (Haste)",
["Key"] = "vyName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Urh Name",
["Value"] = "Urh (CDR)",
["Key"] = "urhName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Wo Name",
["Value"] = "Wo (Stealth)",
["Key"] = "woName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Height",
["Value"] = false,
["Key"] = "setHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar height?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Bar Height",
["Value"] = 20,
["Key"] = "barHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Font Size",
["Value"] = false,
["Key"] = "setFontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's font size?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Font Size",
["Value"] = 20,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Texture",
["Value"] = false,
["Key"] = "setTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar texture?",
},
{
["Type"] = 5,
["Name"] = "Bar Warning",
["Value"] = "*set texture path in \"Nameplate Updated\" hook. Default custom texture is PlaterFocus",
["Key"] = "barWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Background Color",
["Value"] = false,
["Key"] = "setBackgroundColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Some bar textures (like PlaterFocus) Also show the background color, which you can set here.",
},
{
["Type"] = 1,
["Name"] = "Vy Background Color",
["Value"] = {
0,
0.098039215686275,
0.098039215686275,
1,
},
["Key"] = "vyBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Urh Background Color",
["Value"] = {
0.043137254901961,
0,
0.098039215686275,
1,
},
["Key"] = "urhBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Wo Background Color",
["Value"] = {
0,
0.098039215686275,
0.011764705882353,
1,
},
["Key"] = "woBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Reload Warning",
["Value"] = "Moving the sliders around too much can cause some temporary lag. To fix this simply reload your game after applying changes!",
["Key"] = "reloadWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Ilrieth-Argent Dawn",
["Desc"] = "modify Encrypted mobs' names and healthbar colors with custom values",
["Prio"] = 99,
["version"] = 8,
["PlaterCore"] = 1,
["Name"] = "Encrypted Names & Colors",
["LastHookEdited"] = "",
["semver"] = "1.0.7",
},
{
["OptionsValues"] = {
["color"] = {
0.6274510025978088,
1,
0.7568628191947937,
1,
},
["wrap"] = true,
["size"] = 2.449691534042358,
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.TargetBorder) then\n        unitFrame.TargetBorder:Hide()\n    end\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local size = modTable.config.size\n    local color = modTable.config.color\n    \n    \n    if (not unitFrame.TargetBorder) then\n        unitFrame.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")    \n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            --ViragDevTool_AddData(unitFrame, 'frame')\n            --ViragDevTool_AddData(Plater.db.profile, \"db\")\n            local r, g, b, a = DetailsFramework:ParseColors (color)\n            unitFrame.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            \n            unitFrame.TargetBorder:SetBorderSizes (size, size, size, size)\n            \n            if modTable.config.wrap then\n                envTable.UpdateSize(unitFrame.TargetBorder)    \n            else    \n                unitFrame.TargetBorder:UpdateSizes()\n            end\n            \n            unitFrame.TargetBorder:Show()\n        else\n            unitFrame.TargetBorder:Hide()\n        end\n    end\n    \n    function envTable.UpdateSize(b)\n        local offset = Plater.db.profile.border_thickness\n        local borderSize = b.borderSize or 1\n        local minPixels = b.borderSizeMinPixels or 2\n        local upwardExtendHeightPixels = b.upwardExtendHeightPixels or borderSize\n        local upwardExtendHeightMinPixels = b.upwardExtendHeightMinPixels or minPixels\n        \n        PixelUtil.SetWidth(b.Left, size, minPixels)\n        PixelUtil.SetPoint(b.Left, \"TOPRIGHT\", b, \"TOPLEFT\", -offset, upwardExtendHeightPixels + offset, -offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Left, \"BOTTOMRIGHT\", b, \"BOTTOMLEFT\", -offset, -size - offset, -offset, minPixels - offset)\n        \n        PixelUtil.SetWidth(b.Right, size, minPixels)\n        PixelUtil.SetPoint(b.Right, \"TOPLEFT\", b, \"TOPRIGHT\", offset, upwardExtendHeightPixels + offset, offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Right, \"BOTTOMLEFT\", b, \"BOTTOMRIGHT\", offset, -size - offset, offset, minPixels - offset)\n        \n        PixelUtil.SetHeight(b.Bottom, size, minPixels)\n        PixelUtil.SetPoint(b.Bottom, \"TOPLEFT\", b, \"BOTTOMLEFT\", -offset, -offset)\n        PixelUtil.SetPoint(b.Bottom, \"TOPRIGHT\", b, \"BOTTOMRIGHT\", offset, -offset)\n        \n        if b.Top then\n            PixelUtil.SetHeight(b.Top, size, minPixels)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMLEFT\", b, \"TOPLEFT\", -offset, offset)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMRIGHT\", b, \"TOPRIGHT\", offset, -offset)\n        end\n    end\nend",
},
["Time"] = 1704186652,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/XR0IX1Suj/1",
["Icon"] = 3573824,
["Enabled"] = true,
["Revision"] = 338,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Add an extra border to your current target. Options included to wrap the border on top of the already existing border.",
["Prio"] = 99,
["Name"] = "Wrapping Target Border",
["PlaterCore"] = 1,
["version"] = 1,
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 5,
["Name"] = "Color",
["Value"] = "Border",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 2,
["Name"] = "size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "size",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Wrap border",
["Value"] = true,
["Key"] = "wrap",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Check this to place the border AROUND the default nameplate border instead of on top of it",
},
},
},
},
["disable_omnicc_on_auras"] = true,
["aura_width"] = 22,
["health_statusbar_bgcolor"] = {
0,
0,
0,
1,
},
["target_shady_enabled"] = false,
["pet_width_scale"] = 0.8499999642372131,
["quick_hide"] = true,
["target_highlight_color"] = {
0.02745098248124123,
0.2745098173618317,
},
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Tank Interrupt"] = 12,
["Unit - Important"] = 11,
["Cast - Very Important"] = 15,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Fixate On You"] = 11,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Glowing [P]"] = 10,
["Cast - Quick Flash"] = 2,
["Auto Set Skull"] = 11,
["Fixate"] = 11,
["Spiteful Affix"] = 3,
["Relics 9.2 M Dungeons"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Countdown"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Add - Explode on Die [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Circular Swipe"] = 4,
["Unit - Show Energy"] = 11,
},
["click_space"] = {
125,
},
["castbar_target_font"] = "PT Sans Narrow",
["ui_parent_cast_level"] = 108,
["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
["cast_statusbar_spark_color"] = {
nil,
0.13333333333333,
0.8,
},
["indicator_raidmark_scale"] = 0.99999994039536,
["pet_height_scale"] = 0.8499999642372131,
["aura_x_offset"] = 0,
["first_run3"] = true,
["health_selection_overlay_color"] = {
0.3450980484485626,
0.3843137621879578,
0.3921568989753723,
},
["target_highlight"] = false,
["ui_parent_scale_tune"] = 1.4099998474121,
["profile_name"] = "Default",
["health_statusbar_bgtexture"] = "Clean",
["ui_parent_target_strata"] = "MEDIUM",
["aura_show_enrage"] = true,
["global_offset_x"] = -0.6000003814697266,
["aura_tracker"] = {
["buff_tracked"] = {
["209859"] = true,
},
["debuff_banned"] = {
["356329"] = false,
["228354"] = false,
["113724"] = false,
["289308"] = false,
["331934"] = false,
["205708"] = false,
["352939"] = false,
["354050"] = false,
["12486"] = false,
["236299"] = true,
},
["buff_banned"] = {
["206150"] = true,
["333553"] = true,
["61574"] = true,
["61573"] = true,
},
},
["castbar_target_show"] = true,
["update_throttle"] = 0.1499999910593033,
["tocversion"] = 100205,
["castbar_icon_show"] = false,
["global_offset_y"] = 4.430000305175781,
["target_shady_combat_only"] = false,
["not_affecting_combat_alpha"] = 1,
["target_shady_alpha"] = 0.3199999928474426,
["target_highlight_height"] = 22,
["aggro_can_check_notank"] = true,
["version"] = 1,
["aura_alpha"] = 0.84999996423721,
["patch_version"] = 36,
["range_check_in_range_or_target_alpha"] = 0.7999999523162842,
["aura_timer_text_size"] = 12,
["number_region_first_run"] = true,
["color_override_colors"] = {
[3] = {
0,
0.1450980454683304,
1,
},
},
["health_animation_time_dilatation"] = 2.6199998855591,
["border_color"] = {
nil,
nil,
nil,
1,
},
["health_selection_overlay_alpha"] = 1,
["range_check_enabled"] = false,
["dps"] = {
["colors"] = {
["solo"] = {
0,
1,
0.011764705882353,
},
["notontank"] = {
0.960784375667572,
0.501960813999176,
},
["aggro"] = {
0.8666667342185974,
0.08627451211214066,
0.08627451211214066,
},
["noaggro"] = {
0,
0.250980406999588,
},
["pulling"] = {
nil,
0.2980392277240753,
0.168627455830574,
},
},
},
["castbar_target_anchor"] = {
["y"] = -8.94000244140625,
["x"] = -3.170005798339844,
["side"] = 10,
},
["range_check_alpha_friendlies"] = 1,
["tank"] = {
["colors"] = {
["aggro"] = {
1,
0.03529411926865578,
0,
},
["nocombat"] = {
0.05882353335618973,
1,
},
["noaggro"] = {
0,
0.5058823823928833,
1,
},
["pulling"] = {
nil,
0.4196078777313232,
},
},
},
},
["qpaladin"] = {
["target_highlight"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1688802706,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Desc"] = "Add the buff name in the trigger box.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Revision"] = 633,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Name"] = "Aura - Buff Alert [Plater]",
["Prio"] = 99,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["SpellIds"] = {
398151,
377738,
378149,
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1614608904,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["Icon"] = 135945,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 188,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "M+ Spiteful",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Time to die Spiteful affix",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
377488,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1688802707,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 369,
["semver"] = "",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Desc"] = "Add the debuff name in the trigger box.",
["Author"] = "Tercioo-Sylvanas",
["SpellIds"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["Prio"] = 99,
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
415437,
264050,
267824,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1622577650,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 64,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Auto Set Skull",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Auto set skull marker",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802694,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["Enabled"] = true,
["Revision"] = 210,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Countdown",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1688802690,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["Icon"] = 1029718,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 271,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Fixate [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show above the nameplate who is the player fixated",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802689,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 235,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802691,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 268,
["semver"] = "",
["Enabled"] = true,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Author"] = "Tecno-Azralon",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["Name"] = "Fixate On You [Plater]",
["Prio"] = 99,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["OptionsValues"] = {
["NameplateSizeOffset"] = 1.3500000238419,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Time"] = 1648170127,
["url"] = "https://wago.io/1TlaFYtDO/75",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["Icon"] = 2065634,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["Enabled"] = true,
["Revision"] = 2918,
["semver"] = "1.0.74",
["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- Îã§Ïö∞ÏÑ∏Í∑∏ÎÑ§, false spell\n    }    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Author"] = "Bombad¬£o-Azralon",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- Îã§Ïö∞ÏÑ∏Í∑∏ÎÑ§, false spell\n    }    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["SpellIds"] = {
240446,
347363,
339415,
318406,
331223,
326607,
327885,
334625,
328016,
324527,
344005,
321999,
340219,
328986,
320576,
322358,
341445,
336451,
332672,
331398,
331379,
334664,
334967,
320230,
328146,
320631,
322493,
324372,
327240,
322939,
328756,
331745,
340304,
319685,
326827,
342481,
356548,
356537,
356407,
349987,
349663,
350090,
355782,
350922,
355438,
357404,
357189,
347150,
355057,
355139,
355429,
355584,
358131,
350517,
357260,
351119,
351646,
350180,
335783,
294533,
353782,
347855,
353769,
331935,
336383,
342160,
353742,
353444,
277039,
278192,
329909,
358328,
325632,
81008,
296355,
355224,
296839,
310392,
367380,
297966,
332002,
329904,
294517,
329423,
329905,
353124,
358270,
295985,
184381,
318995,
260344,
301952,
362820,
329930,
355212,
332165,
358327,
359770,
364040,
361644,
363088,
361989,
363024,
365008,
365805,
365958,
360717,
361923,
363533,
364386,
364114,
362028,
362617,
365385,
},
["Prio"] = 99,
["Name"] = "M+ Explosive [Fixed]",
["PlaterCore"] = 1,
["version"] = 75,
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["Options"] = {
{
["Type"] = 4,
["Key"] = "ShowArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "ArrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "GlowAlpha",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 1,
["Key"] = "NameplateSizeOffset",
["Value"] = 1.25,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Height Scale",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["OptionsValues"] = {
["customSize"] = {
{
"17",
"120, 16",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775232,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 283,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["SpellIds"] = {
354080,
},
["Prio"] = 99,
["Name"] = "Cast - Castbar is Timer [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["Options"] = {
{
["Type"] = 7,
["Key"] = "customSize",
["Value"] = {
{
"17",
"120, 16",
},
},
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Key"] = "width",
["Value"] = 120,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Key"] = "height",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Key"] = "timerFontSize",
["Value"] = 12,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Timer Size",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Time Separators",
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "separatorColor",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Key"] = "separatorWidth",
["Value"] = 1,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1688802705,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 379,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Aura - Blink by Time Left [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Key"] = "timeleftToBlink",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Key"] = "blinkSpeed",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Key"] = "blinkMaxAlpha",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftWarning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Warning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftCritical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Critical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1688802692,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["Icon"] = 2175503,
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 534,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["Name"] = "Explosion Affix M+ [Plater]",
["Prio"] = 99,
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
389446,
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802696,
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["url"] = "",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
["semver"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 148,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Name"] = "Add - Health Markers [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Enabled"] = true,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1705066622,
["semver"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 575,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["Name"] = "Add - Important [P]",
["Prio"] = 99,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
194745,
190426,
},
["Enabled"] = true,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
376644,
373017,
386781,
384823,
372735,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
200630,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1688802924,
["semver"] = "",
["url"] = "",
["Icon"] = 610472,
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 69,
["Options"] = {
},
["Name"] = "Aura is Shield [P]",
["Prio"] = 99,
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Enabled"] = true,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1705066619,
["semver"] = "",
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Desc"] = "Change the color of  add",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 165,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["Name"] = "Add - Warning [P]",
["Prio"] = 99,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
186696,
101075,
100818,
98081,
52019,
},
["Enabled"] = true,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1688802707,
["semver"] = "",
["url"] = "",
["Icon"] = 236209,
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["Revision"] = 20,
["Options"] = {
},
["Name"] = "Aura While Casting [P]",
["Prio"] = 99,
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Enabled"] = true,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1705067832,
["semver"] = "",
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Desc"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["Revision"] = 116,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["Name"] = "Add - Non Elite Trash [P]",
["Prio"] = 99,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["Enabled"] = false,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802690,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Revision"] = 34,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["Name"] = "Fixate by Unit Buff [P]",
["Prio"] = 99,
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
426662,
426663,
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1705066826,
["semver"] = "",
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Desc"] = "",
["Enabled"] = true,
["Revision"] = 110,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["Name"] = "Add - Explode on Die [P]",
["Prio"] = 99,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
},
["show_healthbars_on_not_attackable"] = true,
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4140: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4138: in function <Interface/AddOns/Plater/Plater.lua:4138>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4141: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4138: in function <Interface/AddOns/Plater/Plater.lua:4138>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4142: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4138: in function <Interface/AddOns/Plater/Plater.lua:4138>\n",
["nameplateMotion"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6046: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6044>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Details/Libs/DF/slider.lua:762>\n",
["SoftTargetInteract"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/UltraSquirt/UltraSquirt.lua\"]:837: in function `ResetCVars'\n[string \"@Interface/AddOns/UltraSquirt/UltraSquirt.lua\"]:1602: in function <Interface/AddOns/UltraSquirt/UltraSquirt.lua:1599>\n",
["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6063: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6061>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/mixins.lua\"]:372: in function `RunHooksForWidget'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:749: in function <Interface/AddOns/Details/Libs/DF/slider.lua:713>\n",
["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Blizzard_SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"FRIENDNAMEPLATES\"]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
},
["url"] = "https://wago.io/RPHjubTGI/1",
["health_selection_overlay_color"] = {
0.3450980484485626,
0.3843137621879578,
0.3921568989753723,
},
["transparency_behavior"] = 4,
["spell_animations"] = false,
["hover_highlight_alpha"] = 0.2999999821186066,
["target_shady_enabled"] = false,
["cast_statusbar_spark_alpha"] = 0.8299999833107,
["aura2_y_offset"] = 5,
["health_statusbar_bgtexture"] = "Clean",
["plate_config"] = {
["global_health_height"] = 13,
["friendlyplayer"] = {
["cast"] = {
121,
},
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
["show_guild_name"] = true,
["cast_incombat"] = {
121,
},
["actorname_use_class_color"] = true,
["only_thename"] = true,
},
["friendlynpc"] = {
["cast"] = {
121,
},
["big_actorname_text_size"] = 10,
["health"] = {
121,
13,
},
["enabled"] = false,
["actorname_text_spacing"] = 16,
["actorname_text_size"] = 17,
["cast_incombat"] = {
121,
},
["health_incombat"] = {
121,
17,
},
},
["global_health_width"] = 121,
["enemyplayer"] = {
["actorname_text_font"] = "PT Sans Narrow",
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["spellpercent_text_font"] = "PT Sans Narrow",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["level_text_size"] = 8,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast"] = {
121,
},
["all_names"] = true,
["big_actortitle_text_size"] = 10,
["actorname_text_outline"] = "OUTLINE",
["percent_text_size"] = 10,
["actorname_text_spacing"] = 11,
["percent_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
121,
14,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_font"] = "PT Sans Narrow",
["quest_color_enabled"] = true,
["spellname_text_size"] = 11,
["health"] = {
121,
13,
},
["quest_enabled"] = true,
["big_actorname_text_font"] = "PT Sans Narrow",
["big_actorname_text_size"] = 10,
["level_text_font"] = "PT Sans Narrow",
["health_incombat"] = {
121,
13,
},
},
["enemynpc"] = {
["actorname_text_font"] = "Bebas Neue Cyrillic Regular",
["castbar_offset"] = -0.2400054931640625,
["spellpercent_text_font"] = "Bebas Neue Cyrillic Regular",
["actorname_text_size"] = 10,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast"] = {
124,
},
["spellpercent_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = 0.5799942016601562,
["x"] = -3.75,
["side"] = 1,
},
["percent_text_size"] = 10,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Bebas Neue Cyrillic Regular",
["cast_incombat"] = {
124,
10,
},
["spellname_text_font"] = "Bebas Neue Cyrillic Regular",
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
["spellname_text_size"] = 10,
["big_actorname_text_font"] = "PT Sans Narrow",
["percent_text_anchor"] = {
["y"] = -0.2400054931640625,
["x"] = 0.8799972534179688,
["side"] = 11,
},
["level_text_font"] = "PT Sans Narrow",
["level_text_alpha"] = 0,
},
},
["health_selection_overlay"] = "Details Vidro",
["aura_y_offset"] = 5,
["use_ui_parent"] = true,
["global_offset_x"] = -0.6000003814697266,
["health_statusbar_texture"] = "ToxiUI Tx Right",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Execute Range"] = 1,
["Aura Reorder"] = 3,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.19607843137255,
0.050980392156863,
0.062745098039216,
1,
},
["update_throttle"] = 0.1499999910593033,
["color_override_colors"] = {
[3] = {
0,
0.1450980454683304,
1,
},
},
["extra_icon_cooldown_reverse"] = false,
["resources_settings"] = {
["chr"] = {
["Player-3209-0B4EDE3D"] = "HolyPower",
["Player-3682-0B236980"] = "ArcaneCharges",
["Player-1597-0F7AB124"] = "ArcaneCharges",
["Player-3682-0B241018"] = "Essence",
["Player-1403-0A1C79B6"] = "ArcaneCharges",
["Player-3682-0B038C9A"] = "ArcaneCharges",
["Player-3682-0B20292A"] = "HolyPower",
["Player-3209-0B2C0A65"] = "Chi",
["Player-1403-0A6909FE"] = "ComboPoints",
["Player-3209-0B29D149"] = "ArcaneCharges",
["Player-1307-0BE359D3"] = "ArcaneCharges",
["Player-1597-0F88EA0A"] = "ArcaneCharges",
["Player-3682-0B19EC37"] = "Chi",
["Player-3682-0B155119"] = "SoulShards",
["Player-3682-0B2A13DE"] = "ComboPoints",
["Player-1403-0A70E106"] = "ComboPoints",
["Player-3682-0B310D76"] = "HolyPower",
},
},
["castbar_target_text_size"] = 8,
["npc_cache"] = {
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[169421] = {
"Felguard",
"Brackenhide Hollow",
"enUS",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[22897] = {
"Summoned Windfury Totem",
"Black Temple",
"enUS",
},
[22929] = {
"Greater Shadowfiend",
"Black Temple",
"enUS",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[169425] = {
"Felhound",
"Brackenhide Hollow",
"enUS",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
"enUS",
},
[19507] = {
"Sunseeker Gene-Splicer",
"Tempest Keep: The Botanica",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[169426] = {
"Infernal",
"Brackenhide Hollow",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[169428] = {
"Wrathguard",
"Brackenhide Hollow",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[169429] = {
"Shivarra",
"Brackenhide Hollow",
},
[18420] = {
"Sunseeker Geomancer",
"Tempest Keep: The Botanica",
"enUS",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[169430] = {
"Ur'zul",
"Brackenhide Hollow",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[40023] = {
"Defiled Earth Rager",
"Blackrock Caverns",
"enUS",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[197835] = {
"Kaurdyth",
"Vault of the Incarnates",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59982] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[102277] = {
"Deadeye Decoy",
"Darkheart Thicket",
"enUS",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[58831] = {
"Bound Servant",
"Scholomance",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
"enUS",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[18421] = {
"Sunseeker Researcher",
"Tempest Keep: The Botanica",
"enUS",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
"enUS",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[145898] = {
"Anointed Disciple",
"Battle of Dazar'alor",
"enUS",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[39705] = {
"Ascendant Lord Obsidius",
"Blackrock Caverns",
"enUS",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[133361] = {
"Wasting Servant",
"Waycrest Manor",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
"enUS",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[19509] = {
"Sunseeker Harvester",
"Tempest Keep: The Botanica",
"enUS",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
"enUS",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[137458] = {
"Rotting Spore",
"The Underrot",
"enUS",
},
[205265] = {
"Time-Displaced Trooper",
"Dawn of the Infinite",
"enUS",
},
[126845] = {
"Captain Jolly",
"Freehold",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[145903] = {
"Darkforged Crusader",
"Battle of Dazar'alor",
"enUS",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
"enUS",
},
[168932] = {
"Doomguard",
"Brackenhide Hollow",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
"enUS",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[53140] = {
"Son of Flame",
"Firelands",
"enUS",
},
[18422] = {
"Sunseeker Botanist",
"Tempest Keep: The Botanica",
"enUS",
},
[147440] = {
"Blazing Fireguard",
"Battle of Dazar'alor",
"enUS",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[126847] = {
"Captain Raoul",
"Freehold",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
"enUS",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[58898] = {
"Vigilant Watchman",
"Scarlet Halls",
"enUS",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[126848] = {
"Captain Eudora",
"Freehold",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[39708] = {
"Twilight Flame Caller",
"Blackrock Caverns",
"enUS",
},
[19958] = {
"White Seedling",
"Tempest Keep: The Botanica",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[17975] = {
"High Botanist Freywinn",
"Tempest Keep: The Botanica",
"enUS",
},
[174569] = {
"Training Dummy",
"The Shadowlands",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
"enUS",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
"enUS",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
"enUS",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
},
[22997] = {
"Flame of Azzinoth",
"Black Temple",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[205790] = {
"Time-Lost Smack-o-Tron",
"Dawn of the Infinite",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[125828] = {
"Kronwel",
"Atal'Dazar",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[19511] = {
"Nethervine Inciter",
"Tempest Keep: The Botanica",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[86552] = {
"Gorged Burster",
"The Everbloom",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17976] = {
"Commander Sarannis",
"Tempest Keep: The Botanica",
"enUS",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
"enUS",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
"enUS",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[139269] = {
"Gloom Horror",
"Waycrest Manor",
"enUS",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[204262] = {
"Necrofrost",
"Dawn of the Infinite",
"enUS",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[126983] = {
"Harlan Sweete",
"Freehold",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
"enUS",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[23318] = {
"Ashtongue Rogue",
"Black Temple",
"enUS",
},
[213219] = {
"Congealed Ooze",
"Throne of the Tides",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[19512] = {
"Nethervine Reaper",
"Tempest Keep: The Botanica",
"enUS",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
"enUS",
},
[19608] = {
"Frayer Wildling",
"Tempest Keep: The Botanica",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
"enUS",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[22871] = {
"Teron Gorefiend",
"Black Temple",
"enUS",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
"enUS",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
"enUS",
},
[19513] = {
"Mutate Fear-Shrieker",
"Tempest Keep: The Botanica",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17978] = {
"Thorngrin the Tender",
"Tempest Keep: The Botanica",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[203763] = {
"Alliance Footman",
"Dawn of the Infinite",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
"enUS",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[198136] = {
"Eminent Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
"enUS",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[205305] = {
"Fractured Causality",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[198142] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[205307] = {
"Fury of N'zoth",
"10.1.5 Time Rifts - Black Empire (Azq'roth)",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[18587] = {
"Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[22841] = {
"Shade of Akama",
"Black Temple",
"enUS",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[204030] = {
"Goblin Sapper",
"Dawn of the Infinite",
"enUS",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
"enUS",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[17980] = {
"Laj",
"Tempest Keep: The Botanica",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[99365] = {
"Taintheart Stalker",
"Darkheart Thicket",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[210437] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[167962] = {
"Defunct Dental Drill",
"De Other Side",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[155170] = {
"Risen Villager",
"Stratholme Pet Dungeon",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[144680] = {
"Frida Ironbellows",
"Battle of Dazar'alor",
"enUS",
},
[134701] = {
"Blood Effigy",
"The Underrot",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
"enUS",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[22939] = {
"Temple Acolyte",
"Black Temple",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[155174] = {
"Unholy Skeleton",
"Stratholme Pet Dungeon",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Freehold",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[201746] = {
"Sundered Naturalist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[39978] = {
"Twilight Torturer",
"Blackrock Caverns",
"enUS",
},
[198933] = {
"Iridikron",
"Dawn of the Infinite",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
"enUS",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33134] = {
"Sara",
"Ulduar",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[45672] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
"enUS",
},
[207638] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[19486] = {
"Sunseeker Chemist",
"Tempest Keep: The Botanica",
"enUS",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
"enUS",
},
[207639] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[39980] = {
"Twilight Sadist",
"Blackrock Caverns",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[201756] = {
"Whiiskeyz",
"Dawn of the Infinite",
"enUS",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
"enUS",
},
[101679] = {
"Dreadsoul Poisoner",
"Darkheart Thicket",
"enUS",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[100529] = {
"Hatespawn Slime",
"Darkheart Thicket",
"enUS",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[202789] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[22846] = {
"Ashtongue Stormcaller",
"Black Temple",
"enUS",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[53545] = {
"Molten Spewer",
"Firelands",
"enUS",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205611] = {
"Molten Hound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[211241] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
"enUS",
},
[39665] = {
"Rom'ogg Bonecrusher",
"Blackrock Caverns",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[33716] = {
"Ruby Consort",
"Ulduar",
"enUS",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[39985] = {
"Mad Prisoner",
"Blackrock Caverns",
"enUS",
},
[50284] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[98362] = {
"Troubled Soul",
"Black Rook Hold",
"enUS",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[212781] = {
"Dreamtalon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131669] = {
"Jagged Hound",
"Waycrest Manor",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[33717] = {
"Azure Consort",
"Ulduar",
"enUS",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[22848] = {
"Storm Fury",
"Black Temple",
"enUS",
},
[22880] = {
"Shadowmoon Champion",
"Black Temple",
"enUS",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[39987] = {
"Evolved Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[205366] = {
"Time-Lost Wakethrasher",
"Dawn of the Infinite",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23232] = {
"Mutant War Hound",
"Black Temple",
"enUS",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
"enUS",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
"enUS",
},
[41139] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
"enUS",
},
[201788] = {
"Dazhak",
"Dawn of the Infinite",
"enUS",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
"enUS",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[22849] = {
"Ashtongue Feral Spirit",
"Black Temple",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[22945] = {
"Shadowmoon Blood Mage",
"Black Temple",
"enUS",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
"enUS",
},
[214075] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[19843] = {
"Nethervine Trickster",
"Tempest Keep: The Botanica",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[39990] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[84554] = {
"Venom-Crazed Pale One",
"The Everbloom",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[18404] = {
"Bloodwarder Steward",
"Tempest Keep: The Botanica",
"enUS",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[45620] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[23394] = {
"Promenade Sentinel",
"Black Temple",
"enUS",
},
[208198] = {
"Whiiskeyz",
"Scarlet Monastery",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[53617] = {
"Molten Erupter",
"Firelands",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[18405] = {
"Tempest-Forge Peacekeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[213576] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[22947] = {
"Mother Shahraz",
"Black Temple",
"enUS",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[196946] = {
"Lurking Lunker",
"Vault of the Incarnates",
"enUS",
},
[23235] = {
"Bonechewer Blade Fury",
"Black Temple",
"enUS",
},
[208461] = {
"Scorching Brambles",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[207438] = {
"Headless Horseman",
"Scarlet Monastery",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
"enUS",
},
[23523] = {
"Ashtongue Elementalist",
"Black Temple",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[198997] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
"enUS",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[22948] = {
"Gurtogg Bloodboil",
"Black Temple",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[23172] = {
"Hand of Gorefiend",
"Black Temple",
"enUS",
},
[58674] = {
"Angry Hound",
"Scarlet Halls",
"enUS",
},
[23236] = {
"Bonechewer Shield Disciple",
"Black Temple",
"enUS",
},
[186208] = {
"Rotbow Ranger",
"Brackenhide Hollow",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[210518] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[33983] = {
"Constrictor Tentacle",
"Ulduar",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
"enUS",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[206172] = {
"Nymue",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208578] = {
"Wild Sproutling",
"10.1.5 Time Rifts - Titan (Ulderoth)",
"enUS",
},
[22853] = {
"Illidari Defiler",
"Black Temple",
"enUS",
},
[99664] = {
"Restless Soul",
"Black Rook Hold",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[22949] = {
"Gathios the Shatterer",
"Black Temple",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
"enUS",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[205304] = {
"Freya",
"10.1.5 Time Rifts - Titan (Ulderoth)",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[40817] = {
"Shadow of Obsidius",
"Blackrock Caverns",
"enUS",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[23237] = {
"Bonechewer Blood Prophet",
"Black Temple",
"enUS",
},
[40021] = {
"Incendiary Spark",
"Blackrock Caverns",
"enUS",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
"enUS",
},
[23397] = {
"Illidari Blood Lord",
"Black Temple",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[50417] = {
"Bound Flames",
"Blackrock Caverns",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[39982] = {
"Crazed Mage",
"Blackrock Caverns",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[40084] = {
"Bellows Slave",
"Blackrock Caverns",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
"enUS",
},
[53231] = {
"Lava Scion",
"Firelands",
"enUS",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[33720] = {
"Obsidian Consort",
"Ulduar",
"enUS",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[133852] = {
"Living Rot",
"The Underrot",
"enUS",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[101074] = {
"Hatespawn Whelpling",
"Darkheart Thicket",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[40446] = {
"Skar'this the Summoner",
"Coilfang: The Slave Pens",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
"enUS",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[33719] = {
"Emerald Consort",
"Ulduar",
"enUS",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
"enUS",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[33136] = {
"Guardian of Yogg-Saron",
"Ulduar",
"enUS",
},
[98900] = {
"Wyrmtongue Trickster",
"Black Rook Hold",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[199715] = {
"Nokhud Battleguard",
"The Nokhud Offensive",
"enUS",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59175] = {
"Master Archer",
"Scarlet Halls",
"enUS",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[22950] = {
"High Nethermancer Zerevor",
"Black Temple",
"enUS",
},
[52409] = {
"Ragnaros",
"Firelands",
"enUS",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
"enUS",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[40447] = {
"Chains of Woe",
"Blackrock Caverns",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[58998] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
"enUS",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
"enUS",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
"enUS",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[136330] = {
"Soul Thorns",
"Waycrest Manor",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[33985] = {
"Corruptor Tentacle",
"Ulduar",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[22946] = {
"Shadowmoon War Hound",
"Black Temple",
"enUS",
},
[23216] = {
"Ashtongue Defender",
"Black Temple",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[17993] = {
"Bloodwarder Protector",
"Tempest Keep: The Botanica",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[18419] = {
"Bloodwarder Greenkeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
"enUS",
},
[59191] = {
"Commander Lindon",
"Scarlet Halls",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[213607] = {
"Deep Sea Murloc",
"Throne of the Tides",
"enUS",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22896] = {
"Ashtongue Searing Totem",
"Black Temple",
"enUS",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
"enUS",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[23111] = {
"Shadowy Construct",
"Black Temple",
"enUS",
},
[33988] = {
"Immortal Guardian",
"Ulduar",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
"enUS",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
"enUS",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22882] = {
"Shadowmoon Deathshaper",
"Black Temple",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[17994] = {
"Bloodwarder Falconer",
"Tempest Keep: The Botanica",
"enUS",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[91007] = {
"Dargrul",
"Neltharion's Lair",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[23047] = {
"Shadowmoon Soldier",
"Black Temple",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
"enUS",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
"enUS",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[53500] = {
"Living Meteor",
"Firelands",
"enUS",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
"enUS",
},
[22917] = {
"Illidan Stormrage",
"Black Temple",
"enUS",
},
[22952] = {
"Veras Darkshadow",
"Black Temple",
"enUS",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[39679] = {
"Corla, Herald of Twilight",
"Blackrock Caverns",
"enUS",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
"enUS",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
"enUS",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[23400] = {
"Illidari Archon",
"Black Temple",
"enUS",
},
[22855] = {
"Illidari Nightlord",
"Black Temple",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[81638] = {
"Aqueous Globule",
"The Everbloom",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[23222] = {
"Bonechewer Brawler",
"Black Temple",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[179334] = {
"Portalmancer Zo'nyy",
"Tazavesh, the Veiled Market",
"enUS",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23196] = {
"Bonechewer Behemoth",
"Black Temple",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[122963] = {
"Rezan",
"Atal'Dazar",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
"enUS",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[18155] = {
"Bloodfalcon",
"Tempest Keep: The Botanica",
"enUS",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
"enUS",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[22962] = {
"Mistress of Woe",
"Black Temple",
"enUS",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
"enUS",
},
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[22964] = {
"Priestess of Delight",
"Black Temple",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[22953] = {
"Wrathbone Flayer",
"Black Temple",
"enUS",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[23049] = {
"Shadowmoon Weapon Master",
"Black Temple",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
"enUS",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
"enUS",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[58876] = {
"Starving Hound",
"Scarlet Halls",
"enUS",
},
[23337] = {
"Illidari Centurion",
"Black Temple",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[23401] = {
"Hungering Soul Fragment",
"Black Temple",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[33288] = {
"Yogg-Saron",
"Ulduar",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
"enUS",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[111068] = {
"Archmage Galeorn",
"Black Rook Hold",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
"enUS",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[147614] = {
"Dark Iron Primalist",
"Battle of Dazar'alor",
"enUS",
},
[91003] = {
"Rokmora",
"Neltharion's Lair",
"enUS",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
"enUS",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[184693] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[122968] = {
"Yazma",
"Atal'Dazar",
"enUS",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[187021] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
"enUS",
},
[23018] = {
"Shadowmoon Houndmaster",
"Black Temple",
"enUS",
},
[23402] = {
"Illidari Battle-mage",
"Black Temple",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[23498] = {
"Parasitic Shadowfiend",
"Black Temple",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[203688] = {
"Horde Grunt",
"Dawn of the Infinite",
"enUS",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
"enUS",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[25865] = {
"Frozen Core",
"Coilfang: The Slave Pens",
"enUS",
},
[147621] = {
"Dark Iron Vanguard",
"Battle of Dazar'alor",
"enUS",
},
[147439] = {
"Molten Hound",
"Battle of Dazar'alor",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[146371] = {
"Dark Iron Primalist",
"Battle of Dazar'alor",
"enUS",
},
[98677] = {
"Rook Spiderling",
"Black Rook Hold",
"enUS",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[208521] = {
"Pumpkin Soldier",
"Scarlet Monastery",
"enUS",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[19865] = {
"Mutate Horror",
"Tempest Keep: The Botanica",
"enUS",
},
[197801] = {
"Awakened Terrasentry",
"Vault of the Incarnates",
"enUS",
},
[146370] = {
"Dark Iron Vanguard",
"Battle of Dazar'alor",
"enUS",
},
[201792] = {
"Ahnzon",
"Dawn of the Infinite",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
"enUS",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[22955] = {
"Charming Patron",
"Black Temple",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[23083] = {
"Shadowmoon Riding Hound",
"Black Temple",
"enUS",
},
[211339] = {
"Dream Seedling",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23147] = {
"Shadowmoon Grunt",
"Black Temple",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
"enUS",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[212981] = {
"Hapless Assistant",
"The Everbloom",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[23339] = {
"Illidari Heartseeker",
"Black Temple",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[23403] = {
"Illidari Assassin",
"Black Temple",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[81522] = {
"Witherbark",
"The Everbloom",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[195222] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[204536] = {
"Blight Chunk",
"Dawn of the Infinite",
"enUS",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[19508] = {
"Sunseeker Herbalist",
"Tempest Keep: The Botanica",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[155175] = {
"Gargoyle",
"Stratholme Pet Dungeon",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22956] = {
"Priestess of Torment",
"Black Temple",
"enUS",
},
[19557] = {
"Greater Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
"enUS",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
"enUS",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[22957] = {
"Mistress of Dementia",
"Black Temple",
"enUS",
},
[23436] = {
"Image of Dementia",
"Black Temple",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
"enUS",
},
[53189] = {
"Molten Elemental",
"Firelands",
"enUS",
},
[174773] = {
"Spiteful Shade",
"Atal'Dazar",
"enUS",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
"enUS",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
},
[19598] = {
"Mutate Fleshlasher",
"Tempest Keep: The Botanica",
"enUS",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[212681] = {
"Vicious Snap Dragon",
"Throne of the Tides",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
"enUS",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
"enUS",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[213143] = {
"Manifested Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[130400] = {
"Irontide Crusher",
"Freehold",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
"enUS",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[197793] = {
"Awakened Juggernaut",
"Vault of the Incarnates",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[203679] = {
"Anduin Lothar",
"Dawn of the Infinite",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[146365] = {
"Blazing Fireguard",
"Battle of Dazar'alor",
"enUS",
},
[53575] = {
"Lava Wielder",
"Firelands",
"enUS",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
"enUS",
},
[130012] = {
"Irontide Ravager",
"Freehold",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[146366] = {
"Molten Hound",
"Battle of Dazar'alor",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[146367] = {
"Char'golm",
"Battle of Dazar'alor",
"enUS",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[198310] = {
"Flame Tarasek",
"Vault of the Incarnates",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
"enUS",
},
[22874] = {
"Coilskar Harpooner",
"Black Temple",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[135052] = {
"Blight Toad",
"Waycrest Manor",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[58758] = {
"Soul Fragment",
"Scholomance",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[59078] = {
"Failed Student",
"Scholomance",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[193709] = {
"Primalist Earthwarden",
"Vault of the Incarnates",
"enUS",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
"enUS",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[91002] = {
"Rotdrool Grabber",
"UNKNOWN",
"enUS",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
"enUS",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[39994] = {
"Conflagration",
"Blackrock Caverns",
"enUS",
},
[205309] = {
"Overlord Mechagon",
"10.1.5 Time Rifts - Robot (A.Z.E.R.O.T.H.)",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
"enUS",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
"enUS",
},
[22959] = {
"Ardent Host",
"Black Temple",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[40017] = {
"Twilight Element Warden",
"Blackrock Caverns",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[98681] = {
"Rook Spinner",
"Black Rook Hold",
"enUS",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[23239] = {
"Bonechewer Combatant",
"Black Temple",
"enUS",
},
[62982] = {
"Mindbender",
"Waycrest Manor",
"enUS",
},
[22869] = {
"Illidari Boneslicer",
"Black Temple",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
"enUS",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[22965] = {
"Devoted Steward",
"Black Temple",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[19505] = {
"Sunseeker Channeler",
"Tempest Keep: The Botanica",
"enUS",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
"enUS",
},
[23223] = {
"Bonechewer Spectator",
"Black Temple",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[19633] = {
"Bloodwarder Mender",
"Tempest Keep: The Botanica",
"enUS",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
"enUS",
},
[23420] = {
"Essence of Anger",
"Black Temple",
"enUS",
},
[194647] = {
"Thunder Caller",
"Vault of the Incarnates",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[39698] = {
"Karsh Steelbender",
"Blackrock Caverns",
"enUS",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
"enUS",
},
[23524] = {
"Ashtongue Spiritbinder",
"Black Temple",
"enUS",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[205629] = {
"Crazed Experiment",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22951] = {
"Lady Malande",
"Black Temple",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[23399] = {
"Suffering Soul Fragment",
"Black Temple",
"enUS",
},
[23398] = {
"Angered Soul Fragment",
"Black Temple",
"enUS",
},
[129517] = {
"Reanimated Raptor",
"Atal'Dazar",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[40019] = {
"Twilight Obsidian Borer",
"Blackrock Caverns",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
"enUS",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
"enUS",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22881] = {
"Aqueous Surger",
"Black Temple",
"enUS",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
"enUS",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
"enUS",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[22885] = {
"Dragon Turtle",
"Black Temple",
"enUS",
},
[101437] = {
"Burning Geode",
"UNKNOWN",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[25755] = {
"Ahunite Hailstone",
"Coilfang: The Slave Pens",
"enUS",
},
[25756] = {
"Ahunite Coldwave",
"Coilfang: The Slave Pens",
"enUS",
},
},
["tocversion"] = 100205,
["castbar_icon_show"] = false,
["global_offset_y"] = 4.430000305175781,
["honor_blizzard_plate_alpha"] = true,
["aggro_modifies"] = {
["actor_name_color"] = true,
},
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["minor_height_scale"] = 0.94999998807907,
["aura_consolidate"] = true,
["not_affecting_combat_alpha"] = 1,
["minor_width_scale"] = 0.89999997615814,
["aura_timer_text_font"] = "PT Sans Narrow",
["cast_statusbar_texture"] = "Wglass",
["cast_color_settings"] = {
["enabled"] = true,
["width"] = 12,
},
["aura_height"] = 18,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator5",
["usePlaterWidget"] = false,
["cast_statusbar_bgtexture"] = "Solid",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Icon Settings:",
["Name"] = "Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showIcon",
["Value"] = true,
["Name"] = "Show Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Key"] = "iconOnLeftSide",
["Value"] = true,
["Name"] = "Icon on Left Side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Key"] = "iconSizeOffset",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Key"] = "iconPadding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Padding",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option5",
["Value"] = "Can't Interrupt Texture:",
["Name"] = "Interrupt Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTexture",
["Value"] = true,
["Name"] = "Show Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Key"] = "iconTexturePath",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Name"] = "Texture Path",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Key"] = "desaturatedTexture",
["Value"] = true,
["Name"] = "Texture Desaturated",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Key"] = "textureWidth",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Key"] = "textureHeightMod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Height Mod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Key"] = "texturePosition",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["version"] = -1,
["LastHookEdited"] = "",
["semver"] = "",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["Time"] = 1688802814,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = false,
["Revision"] = 51,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Color Automation [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1614608917,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 85,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Execute Range [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1684153114,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 369,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "Attacking Specific Unit [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Combo Points [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Extra Border [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["LastHookEdited"] = "",
["semver"] = "",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["Time"] = 1705067856,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 60,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Don't Have Aura [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Players Targeting a Target [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614606781,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 358,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Initialization",
["Name"] = "Aura Reorder [Plater]",
},
{
["OptionsValues"] = {
["targetcolor"] = {
0,
0.47450980392157,
1,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1654562266,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/_GSmNC31z/1",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 168,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "targetcolor",
["Value"] = {
0.46274509803922,
1,
0.48235294117647,
1,
},
["Name"] = "targetcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "targetcolor",
},
},
["LastHookEdited"] = "",
["Name"] = "Current Target Color [Plater]",
},
{
["OptionsValues"] = {
["glowColor"] = {
1,
0,
0.01568627543747425,
1,
},
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1703731894,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = true,
["Revision"] = 290,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "@scriptname Options:",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
1,
0,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Key"] = "antsAmount",
["Value"] = 6,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Amount",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Key"] = "frequency",
["Value"] = 0.25,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Speed",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsLength",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants length",
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsThickness",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Thickness",
},
{
["Type"] = 4,
["Key"] = "antsBorder",
["Value"] = false,
["Name"] = "Ants Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outerGlow",
["Value"] = false,
["Name"] = "Outer Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["semver"] = "1.0.6",
["Name"] = "Steal/Purge Aura Glow",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame)\n    \n    local healthBar = unitFrame.healthBar\n    local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n    -- change the value to whatever, for fire mages its 30% so 0.30\n    local useScorch = 0.30\n    \n    if (percent <= useScorch) then\n        -- from here the customizing is optional\n        -- for a list of commands look at the plater api\n        -- https://www.curseforge.com/wow/addons/plater-nameplates/pages/scripts/list-of-api-functions\n        \n        -- below is an example which will set the color & bordercolor to orange, \n        -- change the size of the frame and add a flash to it\n        \n        Plater.SetNameplateColor (unitFrame, \"#ff8c00\")\n        Plater.SetBorderColor (unitFrame, \"#ff8c00\")\n        Plater.SetNameplateSize (unitFrame, 120, 20)\n        Plater.FlashNameplateBorder (unitFrame, 1)\n    end\n    \n    \nend",
},
["Time"] = 1625007755,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/pc7PK_czd/1",
["Icon"] = 135827,
["Enabled"] = false,
["Revision"] = 102,
["semver"] = "1.0.0",
["Author"] = "Sphyre-Tarren Mill",
["Desc"] = "distinguish the mob for scorching",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Scorch",
},
{
["OptionsValues"] = {
["colorHealthbar"] = true,
["targetEnabled"] = false,
["raidMarkColors"] = false,
["targetColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["UseDefaultColor"] = false,
["IMobs"] = {
1,
0.97254901960784,
0,
1,
},
["threatColors"] = true,
["DefaultColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["EnMobs"] = {
1,
0,
0.10196078431373,
1,
},
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"]\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    modTable.UseDefaultColor = modTable.config[\"UseDefaultColor\"]\n    modTable.DefaultColor = modTable.config[\"DefaultColor\"]\n    \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    --Bosses - Greenyblue - \"Boss\"\n    --Mini Boss - DarkMagenta - \"MiniBoss\"\n    \n    --Focus mobs - Blue - \"FMobs\"\n    --Deadly mobs - Light Blue - \"DMobs\"\n    --Dodge Mobs - Purple - \"DoMobs\"\n    \n    --Healer mobs - White - HMobs\n    --Interruptable damage mobs - Orange - InMobs\n    --Enrage mobs - Light Orange - \"EnMobs\"\n    \n    --Expolsives mobs - Dark Pink - \"ExMobs\"\n    \n    modTable.NpcColors = {       \n        \n        -- De Other Side\n        [166473] = modTable.config[\"Boss\"],     --Hakkar the Soulflayer\n        [164555] = modTable.config[\"Boss\"],     --Milificent Manastorm\n        [164556] = modTable.config[\"Boss\"],     --Millhouse Manastorm\n        [169769] = modTable.config[\"Boss\"],     --Mueh'zala\n        \n        [170486] = modTable.config[\"FMobs\"],    --Atal'ia Devoted\n        [168992] = modTable.config[\"FMobs\"],    --Risen Cultist\n        [168934] = modTable.config[\"FMobs\"],    --Enraged Spirit\n        [167962] = modTable.config[\"FMobs\"],    --Defunct Dental Drill\n        [171184] = modTable.config[\"FMobs\"],    --Mythresh, Sky's Talon\n        \n        [167964] = modTable.config[\"DMobs\"],    --4.RF-4.RF\n        [164862] = modTable.config[\"DMobs\"],    --Weald Shimmermoth\n        \n        [167965] = modTable.config[\"IMobs\"],    --Lubricator\n        \n        [170490] = modTable.config[\"HMobs\"],    --Atal'ai High Priest\n        [170572] = modTable.config[\"HMobs\"],    --Atal'ai Hoodoo Hexxer\n        \n        [169905] = modTable.config[\"EnMobs\"],   --Risen Warlord\n        [171343] = modTable.config[\"EnMobs\"],   --Bladebeak Matriarch\n        \n        [168942] = modTable.config[\"DoMobs\"],    --DeathSpeaker\n        [167963] = modTable.config[\"DoMobs\"],    --Headless Client\n        [170480] = modTable.config[\"DoMobs\"],    --Atal'ia Deathwalker\n        \n        [170147] = modTable.config[\"ExMobs\"],   --Volatile Memory\n        \n        --Theater Of Pain\n        [164451] = modTable.config[\"Boss\"],     --Dessia the Decapitator\n        [164463] = modTable.config[\"Boss\"],     --Paceran the virulent\n        [164461] = modTable.config[\"Boss\"],     --Sathel the Accursed\n        [162317] = modTable.config[\"Boss\"],     --Gorechop\n        [162309] = modTable.config[\"Boss\"],     --Kul'tharok\n        [162329] = modTable.config[\"Boss\"],     --Xav the Unfallen\n        [165946] = modTable.config[\"Boss\"],     --Mordretha the Endless Empress\n        \n        [167536] = modTable.config[\"MiniBoss\"], --Harugia the Bloodthirsty\n        [162744] = modTable.config[\"MiniBoss\"], --Nekthara the Mangler\n        \n        [174210] = modTable.config[\"FMobs\"],    --Blighted Sludge-Spewer\n        [170882] = modTable.config[\"FMobs\"],    --Bone Magus\n        [160495] = modTable.config[\"FMobs\"],    --Maniacal Soulbinder\n        \n        [174197] = modTable.config[\"DMobs\"],    --Battlefield Ritualist\n        [163086] = modTable.config[\"DMobs\"],    --Rancid Gasbag\n        [170690] = modTable.config[\"DMobs\"],    --Diseased Horror\n        [167998] = modTable.config[\"DMobs\"],    --Portal Guardian\n        [164506] = modTable.config[\"DMobs\"],    --Ancient Captain\n        \n        [170850] = modTable.config[\"EnMobs\"],   --Raging BloodHorn\n        \n        [169893] = modTable.config[\"DoMobs\"],   --Hefarious Darkspeaker\n        [162763] = modTable.config[\"DoMobs\"],    --Soulforged Bonereaver\n        \n        --Necrotic Wake\n        [162691] = modTable.config[\"Boss\"],     --BlightBone\n        [162692] = modTable.config[\"Boss\"],     --Amarth\n        [166882] = modTable.config[\"Boss\"],     --Surgeon Stitchflesh\n        [166945] = modTable.config[\"Boss\"],     --Nalthor the Rimebinder\n        \n        [165824] = modTable.config[\"MiniBoss\"], --Nar'zudah\n        [165197] = modTable.config[\"MiniBoss\"], --Skeletal Monostrosity\n        \n        [163121] = modTable.config[\"FMobs\"],    --Stiched Vanguard\n        [165137] = modTable.config[\"FMobs\"],    --Zolramus GateKeeper\n        [163618] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        [168443] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        \n        [163128] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [168357] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [173044] = modTable.config[\"DMobs\"],    --Stitching Assistant\n        [167731] = modTable.config[\"DMobs\"],    --Separation Assistant\n        [163126] = modTable.config[\"DMobs\"],    --Brittlebone Mage\n        [163621] = modTable.config[\"DMobs\"],    --Goregrind\n        [163620] = modTable.config[\"DMobs\"],    --Rotspew\n        [172981] = modTable.config[\"DMobs\"],    --Kyrian Stitchwerk\n        \n        [173016] = modTable.config[\"IMobs\"],    --Corpse Collector\n        [166302] = modTable.config[\"IMobs\"],    --Corpse Harvester\n        [165919] = modTable.config[\"IMobs\"],    --Skeletal Marauder\n        \n        [165222] = modTable.config[\"HMobs\"],    --Zolramus Bonemender\n        [165872] = modTable.config[\"HMobs\"],    --Flesh Crafter\n        \n        --Halls Of Atonment\n        [165408] = modTable.config[\"Boss\"],     --Halkias\n        [156827] = modTable.config[\"Boss\"],     --Echelon  \n        [165410] = modTable.config[\"Boss\"],     --High Adjudicator Aleez\n        [164218] = modTable.config[\"Boss\"],     --Lord Chamberlain\n        \n        [167876] = modTable.config[\"MiniBoss\"], --Inquisitor Sigar\n        \n        [164562] = modTable.config[\"FMobs\"],    --Depraved Houndmaster\n        [165414] = modTable.config[\"FMobs\"],    --Depraved Obliterator\n        \n        [164563] = modTable.config[\"DMobs\"],    --Vicious Gargon\n        [165515] = modTable.config[\"DMobs\"],    --Depraved Darkblade\n        [167607] = modTable.config[\"DMobs\"],    --Stoneborn Slasher\n        [164557] = modTable.config[\"DMobs\"],    --Shard of Halkias\n        \n        [165529] = modTable.config[\"IMobs\"],    --Depraved Collector\n        [167612] = modTable.config[\"IMobs\"],    --Stoneborn Reaver\n        \n        [167611] = modTable.config[\"DoMobs\"],    --Stoneborn Eviscerator\n        \n        --Spires Of Ascension\n        [162059] = modTable.config[\"Boss\"],     --Kin-Tara\n        [163077] = modTable.config[\"Boss\"],     --Azules\n        [162058] = modTable.config[\"Boss\"],     --Ventunax\n        [162060] = modTable.config[\"Boss\"],     --Oryphrino\n        [167410] = modTable.config[\"Boss\"],     --Devos\n        \n        [168844] = modTable.config[\"MiniBoss\"],  --Lakesis\n        [168843] = modTable.config[\"MiniBoss\"],  --Klotos\n        [168845] = modTable.config[\"MiniBoss\"],  --Astronos\n        \n        [163458] = modTable.config[\"TMobs\"],   --Forsworn Castigator\n        [168418] = modTable.config[\"TMobs\"],   --Forsworn Inquisitor\n        [163520] = modTable.config[\"TMobs\"],   --Forsworn Squad-Leader\n        [168681] = modTable.config[\"TMobs\"],   --Forsworn Helion\n        \n        [163503] = modTable.config[\"DMobs\"],   --EtherDiver\n        [168658] = modTable.config[\"DMobs\"],   --Forsworn Devastator\n        [168717] = modTable.config[\"DMobs\"],   --Forsworn Justicar\n        \n        [168318] = modTable.config[\"IMobs\"],   --Forsworn Goliath\n        \n        [168420] = modTable.config[\"HMobs\"],   --Forsworn Champion\n        [163459] = modTable.config[\"HMobs\"],   --Forsworn Mender\n        [168718] = modTable.config[\"HMobs\"],   --Forsworn Warden\n        \n        --Sanguine Depths\n        [162103] = modTable.config[\"Boss\"],     --Executor Tarvold\n        [165318] = modTable.config[\"Boss\"],     --General Kaal\n        [162102] = modTable.config[\"Boss\"],     --Grand Proctor Beryllia\n        [162100] = modTable.config[\"Boss\"],     --Kryxis the Voracious\n        \n        [171376] = modTable.config[\"MiniBoss\"],    --Head Custodian Javlin\n        \n        [165076] = modTable.config[\"FMobs\"],    --Gluttonous Tick\n        [162040] = modTable.config[\"FMobs\"],    --Grand Overseer\n        [172265] = modTable.config[\"FMobs\"],   --Remnant of Fury\n        [168882] = modTable.config[\"FMobs\"],    --Fleeting Manifestation\n        \n        [162049] = modTable.config[\"DMobs\"],   --Vestige of Doubt\n        [171448] = modTable.config[\"DMobs\"],    --Dreadful Huntmaster\n        [166396] = modTable.config[\"DMobs\"],   --Noble Skirmisher\n        [166589] = modTable.config[\"DMobs\"],    --Animated Weapon\n        [171799] = modTable.config[\"DMobs\"],    --Depths Warden\n        [162047] = modTable.config[\"DMobs\"],    --Instiable Brute\n        \n        [162039] = modTable.config[\"IMobs\"],   --Wicked Oppressor\n        \n        [162057] = modTable.config[\"DoMobs\"],    --Chamber Sentinel\n        [162038] = modTable.config[\"DoMobs\"],   --Regal Mistdancer\n        \n        --Mist of Trina Scithe      \n        [164567] = modTable.config[\"Boss\"],     --ingra-maloch\n        [170217] = modTable.config[\"Boss\"],     --Mistcaller\n        [164517] = modTable.config[\"Boss\"],     --Tred'ova \n        \n        [164929] = modTable.config[\"FMobs\"],   --Tirnenn Villager\n        [164926] = modTable.config[\"FMobs\"],   --Drust Boughbreaker\n        \n        [166275] = modTable.config[\"DMobs\"],   --Mistveil Shaper\n        \n        [164920] = modTable.config[\"DMobs\"],   --Drust Soulcleaver\n        [166304] = modTable.config[\"DMobs\"],   --Mistveil Stinger\n        \n        [166299] = modTable.config[\"HMobs\"],   --Mistveil Tender\n        \n        [164921] = modTable.config[\"IMobs\"],   --Drust Harvester\n        [167111] = modTable.config[\"IMobs\"],   --Spinemaw Staghorn\n        \n        [167113] = modTable.config[\"DoMobs\"],   --Spinemaw Acidgullet \n        [166276] = modTable.config[\"DoMobs\"],   --Mistveil Guardian\n        \n        --Plaguefall    \n        [164967] = modTable.config[\"Boss\"],     --Doctor Ickus\n        [164266] = modTable.config[\"Boss\"],     --Domina Venomblade\n        [164255] = modTable.config[\"Boss\"],     --Globgrog\n        [164267] = modTable.config[\"Boss\"],     --Margrave Stradama\n        \n        [168886] = modTable.config[\"MiniBoss\"],  --Virulax Blightweaver\n        [169861] = modTable.config[\"MiniBoss\"],  --Ickor Bileflesh\n        \n        [164737] = modTable.config[\"FMobs\"],    --Brood Ambusher\n        [163915] = modTable.config[\"FMobs\"],    --Hatchling Nest\n        [168572] = modTable.config[\"FMobs\"],    --Fungi Stormer\n        [163891] = modTable.config[\"FMobs\"],    --Rotmarrow Slime\n        [168837] = modTable.config[\"FMobs\"],    --Stealthling\n        \n        [168578] = modTable.config[\"DMobs\"],    --FungalMancer\n        [168627] = modTable.config[\"DMobs\"],    --Plaguebinder\n        [167493] = modTable.config[\"DMobs\"],    --Venomous Sniper\n        [163882] = modTable.config[\"DMobs\"],    --Decaying Flesh Giant\n        [168310] = modTable.config[\"DMobs\"],    --Plagueroc\n        [165430] = modTable.config[\"DMobs\"],    --Malignant Spawn\n        \n        [168393] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [168396] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [163894] = modTable.config[\"DoMobs\"],   --Blighted Spinebreaker\n        \n        [169159] = modTable.config[\"ExMobs\"],   --Unstable Canister\n        [168878] = modTable.config[\"ExMobs\"],   --Rigged Plagueborer        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            elseif modTable.UseDefaultColor and not (unitFrame.namePlateUnitReaction == 4) and not unitIsPlayer and not unitFrame.namePlateIsQuestObjective then\n                Plater.SetNameplateColor(unitFrame, modTable.DefaultColor)\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n",
},
["Time"] = 1628712779,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/ocXXJPJZ7/6",
["Enabled"] = false,
["Revision"] = 236,
["semver"] = "1.0.5",
["Author"] = "Yummyyummy-Ravencrest",
["Desc"] = "Colours the Nameplates according to the type of M+ mob. This is my version of M+ Colored Mobs, https://wago.io/UKpo0_GbE",
["Prio"] = 98,
["version"] = 6,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Mythic+ Colours:",
["Name"] = "Colors Header",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "Boss",
["Value"] = {
0,
1,
0.5843137254902,
1,
},
["Name"] = "Boss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "MiniBoss",
["Value"] = {
0.37647058823529,
0,
0.37647058823529,
1,
},
["Name"] = "MiniBoss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mini bosses",
},
{
["Type"] = 1,
["Key"] = "FMobs",
["Value"] = {
0,
0,
1,
1,
},
["Name"] = "Focus Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that need to be focus.",
},
{
["Type"] = 1,
["Key"] = "DMobs",
["Value"] = {
0,
1,
1,
1,
},
["Name"] = "Deadly Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are considered Deadly.",
},
{
["Type"] = 1,
["Key"] = "DoMobs",
["Value"] = {
0.81176470588235,
0,
1,
1,
},
["Name"] = "Dodge Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are not considered deadly, but have ability's that need to be dogded.",
},
{
["Type"] = 1,
["Key"] = "HMobs",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Healer Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have healing ability's that should be kicked,",
},
{
["Type"] = 1,
["Key"] = "IMobs",
["Value"] = {
1,
0.49803921568627,
0,
1,
},
["Name"] = "Interruptable Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have Interruptable spell that should be kicked.",
},
{
["Type"] = 1,
["Key"] = "EnMobs",
["Value"] = {
1,
0.63921568627451,
0,
1,
},
["Name"] = "Enrage Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that enrage and should be calmed if possible.",
},
{
["Type"] = 1,
["Key"] = "ExMobs",
["Value"] = {
1,
0,
0.38039215686275,
1,
},
["Name"] = "Expolsives Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that explode before or after death. WATCH OUT!!!",
},
{
["Type"] = 1,
["Key"] = "DefaultColor",
["Value"] = {
0.43921568627451,
0.43921568627451,
0.43921568627451,
1,
},
["Name"] = "DefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetColor",
["Value"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["Name"] = "Target Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option9",
["Value"] = 0,
["Name"] = "Option 9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option22",
["Value"] = "Addictional Options",
["Name"] = "Addictional Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "targetEnabled",
["Value"] = false,
["Name"] = "Use Target Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "raidMarkColors",
["Value"] = true,
["Name"] = "Raid Mark Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "colorHealthbar",
["Value"] = false,
["Name"] = "Color Healthbar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "threatColors",
["Value"] = false,
["Name"] = "ThreatColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 4,
["Key"] = "UseDefaultColor",
["Value"] = true,
["Name"] = "Use Default Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["HooksTemp"] = {
},
["Name"] = "M+ Colouring",
},
{
["OptionsValues"] = {
["cooldownColor"] = {
1,
0.01960784383118153,
0,
1,
},
["interruptedColor"] = {
1,
0.2823529541492462,
0.3568627536296845,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x610c5b685dc84cc7",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1703700395,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 485,
["semver"] = "",
["Author"] = "Verlijke-Mal'Ganis",
["Desc"] = "Changes the color of the nameplate castbar based on the current cooldown of the player's interrupt.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Interrupt CD Indicator",
["Options"] = {
{
["Type"] = 1,
["Key"] = "readyColor",
["Value"] = {
0,
1,
0,
1,
},
["Name"] = "Kick Ready Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is ready to be used.",
},
{
["Type"] = 1,
["Key"] = "semiCooldownColor",
["Value"] = {
1,
0.5921568627451,
0.031372549019608,
1,
},
["Name"] = "Kick Will Be Ready Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, but will be ready before the cast ends.",
},
{
["Type"] = 1,
["Key"] = "cooldownColor",
["Value"] = {
1,
0,
0.007843137254902,
1,
},
["Name"] = "Kick Will NOT Be Ready",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, and will NOT be ready before the cast ends.",
},
{
["Type"] = 2,
["Max"] = 1000,
["Desc"] = "Time in milliseconds that your kick should be off cooldown before cast end to count as \"kick will be ready\" (recommended to set to a few hundred ms above your latency).",
["Min"] = 0,
["Key"] = "cooldownTolerance",
["Value"] = 500,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Kick CD Tolerance (ms)",
},
{
["Type"] = 1,
["Key"] = "protectedColor",
["Value"] = {
0.74117647058824,
0.74901960784314,
0.73725490196078,
1,
},
["Name"] = "Protected Cast Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for protected casts.",
},
{
["Type"] = 1,
["Key"] = "interruptedColor",
["Value"] = {
1,
0,
0,
1,
},
["Name"] = "Interrupted Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for interrupted casts.",
},
{
["Type"] = 4,
["Key"] = "cooldownLine",
["Value"] = true,
["Name"] = "Castbar CD Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Draw a line on castbars indicating when your interrupt will be off-cooldown.",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62229f65202d123",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
},
["Time"] = 1688801832,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/CignDPWs3/8",
["Icon"] = 4224736,
["Enabled"] = false,
["Revision"] = 497,
["Options"] = {
{
["Type"] = 4,
["Key"] = "setColor",
["Value"] = true,
["Name"] = "Set Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust health bar colors?",
},
{
["Type"] = 4,
["Key"] = "setNameColor",
["Value"] = false,
["Name"] = "Set Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 4,
["Key"] = "setBorderColor",
["Value"] = false,
["Name"] = "Set Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 1,
["Key"] = "vyColor",
["Value"] = {
0,
0.9921568627451,
1,
1,
},
["Name"] = "Vy Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "urhColor",
["Value"] = {
0.63137254901961,
0.34901960784314,
1,
1,
},
["Name"] = "Urh Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "woColor",
["Value"] = {
0.33725490196078,
1,
0.42352941176471,
1,
},
["Name"] = "Wo Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "pog",
["Value"] = 0,
["Name"] = "Divider",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setName",
["Value"] = true,
["Name"] = "Set Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's Name?",
},
{
["Type"] = 3,
["Key"] = "vyName",
["Value"] = "Vy (Haste)",
["Name"] = "Vy Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "urhName",
["Value"] = "Urh (CDR)",
["Name"] = "Urh Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "woName",
["Value"] = "Wo (Stealth)",
["Name"] = "Wo Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setHeight",
["Value"] = false,
["Name"] = "Set Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar height?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Key"] = "barHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Bar Height",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setFontSize",
["Value"] = false,
["Name"] = "Set Font Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's font size?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Key"] = "fontSize",
["Value"] = 20,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Font Size",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setTexture",
["Value"] = false,
["Name"] = "Set Bar Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar texture?",
},
{
["Type"] = 5,
["Key"] = "barWarning",
["Value"] = "*set texture path in \"Nameplate Updated\" hook. Default custom texture is PlaterFocus",
["Name"] = "Bar Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setBackgroundColor",
["Value"] = false,
["Name"] = "Set Bar Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Some bar textures (like PlaterFocus) Also show the background color, which you can set here.",
},
{
["Type"] = 1,
["Key"] = "vyBGColor",
["Value"] = {
0,
0.098039215686275,
0.098039215686275,
1,
},
["Name"] = "Vy Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "urhBGColor",
["Value"] = {
0.043137254901961,
0,
0.098039215686275,
1,
},
["Name"] = "Urh Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "woBGColor",
["Value"] = {
0,
0.098039215686275,
0.011764705882353,
1,
},
["Name"] = "Wo Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "reloadWarning",
["Value"] = "Moving the sliders around too much can cause some temporary lag. To fix this simply reload your game after applying changes!",
["Name"] = "Reload Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Ilrieth-Argent Dawn",
["Desc"] = "modify Encrypted mobs' names and healthbar colors with custom values",
["Prio"] = 99,
["version"] = 8,
["PlaterCore"] = 1,
["semver"] = "1.0.7",
["LastHookEdited"] = "",
["Name"] = "Encrypted Names & Colors",
},
{
["OptionsValues"] = {
["color"] = {
0.6274510025978088,
1,
0.7568628191947937,
1,
},
["wrap"] = true,
["size"] = 2.449691534042358,
},
["LastHookEdited"] = "",
["Hooks"] = {
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.TargetBorder) then\n        unitFrame.TargetBorder:Hide()\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local size = modTable.config.size\n    local color = modTable.config.color\n    \n    \n    if (not unitFrame.TargetBorder) then\n        unitFrame.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")    \n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            --ViragDevTool_AddData(unitFrame, 'frame')\n            --ViragDevTool_AddData(Plater.db.profile, \"db\")\n            local r, g, b, a = DetailsFramework:ParseColors (color)\n            unitFrame.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            \n            unitFrame.TargetBorder:SetBorderSizes (size, size, size, size)\n            \n            if modTable.config.wrap then\n                envTable.UpdateSize(unitFrame.TargetBorder)    \n            else    \n                unitFrame.TargetBorder:UpdateSizes()\n            end\n            \n            unitFrame.TargetBorder:Show()\n        else\n            unitFrame.TargetBorder:Hide()\n        end\n    end\n    \n    function envTable.UpdateSize(b)\n        local offset = Plater.db.profile.border_thickness\n        local borderSize = b.borderSize or 1\n        local minPixels = b.borderSizeMinPixels or 2\n        local upwardExtendHeightPixels = b.upwardExtendHeightPixels or borderSize\n        local upwardExtendHeightMinPixels = b.upwardExtendHeightMinPixels or minPixels\n        \n        PixelUtil.SetWidth(b.Left, size, minPixels)\n        PixelUtil.SetPoint(b.Left, \"TOPRIGHT\", b, \"TOPLEFT\", -offset, upwardExtendHeightPixels + offset, -offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Left, \"BOTTOMRIGHT\", b, \"BOTTOMLEFT\", -offset, -size - offset, -offset, minPixels - offset)\n        \n        PixelUtil.SetWidth(b.Right, size, minPixels)\n        PixelUtil.SetPoint(b.Right, \"TOPLEFT\", b, \"TOPRIGHT\", offset, upwardExtendHeightPixels + offset, offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Right, \"BOTTOMLEFT\", b, \"BOTTOMRIGHT\", offset, -size - offset, offset, minPixels - offset)\n        \n        PixelUtil.SetHeight(b.Bottom, size, minPixels)\n        PixelUtil.SetPoint(b.Bottom, \"TOPLEFT\", b, \"BOTTOMLEFT\", -offset, -offset)\n        PixelUtil.SetPoint(b.Bottom, \"TOPRIGHT\", b, \"BOTTOMRIGHT\", offset, -offset)\n        \n        if b.Top then\n            PixelUtil.SetHeight(b.Top, size, minPixels)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMLEFT\", b, \"TOPLEFT\", -offset, offset)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMRIGHT\", b, \"TOPRIGHT\", offset, -offset)\n        end\n    end\nend",
},
["Time"] = 1704186652,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/XR0IX1Suj/1",
["Icon"] = 3573824,
["Enabled"] = true,
["Revision"] = 338,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Add an extra border to your current target. Options included to wrap the border on top of the already existing border.",
["Prio"] = 99,
["Name"] = "Wrapping Target Border",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Border",
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0.5,
["Name"] = "size",
["Value"] = 2,
["Key"] = "size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "wrap",
["Value"] = true,
["Name"] = "Wrap border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Check this to place the border AROUND the default nameplate border instead of on top of it",
},
},
["HooksTemp"] = {
},
["version"] = 1,
},
},
["first_run3"] = true,
["ui_parent_scale_tune"] = 1.4099998474121,
["aura_width2"] = 22,
["ignore_softinteract_objects"] = true,
["npc_colors"] = {
[134139] = {
true,
false,
"gold",
},
[196798] = {
true,
false,
"blue",
},
[186696] = {
true,
false,
"fuchsia",
},
[109908] = {
true,
false,
"fuchsia",
},
[213806] = {
true,
false,
"fuchsia",
},
[136186] = {
true,
false,
"honeydew",
},
[196671] = {
true,
false,
"mediumpurple",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"fuchsia",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[173016] = {
true,
false,
"deepskyblue",
},
[201788] = {
true,
false,
"fuchsia",
},
[180433] = {
true,
false,
"fuchsia",
},
[107288] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"deepskyblue",
},
[131009] = {
true,
false,
"fuchsia",
},
[99360] = {
true,
false,
"blue",
},
[197697] = {
true,
false,
"mediumpurple",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"blue",
},
[135167] = {
true,
false,
"peru",
},
[81522] = {
true,
false,
"mediumpurple",
},
[40825] = {
true,
false,
"mediumpurple",
},
[131587] = {
true,
false,
"deepskyblue",
},
[208440] = {
true,
false,
"mediumpurple",
},
[164707] = {
true,
false,
"mediumpurple",
},
[196548] = {
true,
false,
"fuchsia",
},
[135552] = {
true,
false,
"fuchsia",
},
[84400] = {
true,
false,
"fuchsia",
},
[186191] = {
true,
false,
"deepskyblue",
},
[135169] = {
true,
false,
"fuchsia",
},
[201792] = {
true,
false,
"mediumpurple",
},
[206140] = {
true,
false,
"mediumpurple",
},
[83761] = {
true,
false,
"mediumpurple",
},
[184018] = {
true,
false,
"DRUID",
},
[178008] = {
true,
false,
"yellow",
},
[126983] = {
true,
false,
"DRUID",
},
[178392] = {
true,
false,
"fuchsia",
},
[168418] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[213942] = {
true,
false,
"deepskyblue",
},
[199748] = {
true,
false,
"fuchsia",
},
[165222] = {
true,
false,
"blue",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[170850] = {
true,
true,
"fuchsia",
},
[178139] = {
true,
false,
"mediumpurple",
},
[75451] = {
true,
false,
"fuchsia",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[128967] = {
true,
false,
"palegreen",
},
[75899] = {
true,
false,
"fuchsia",
},
[196043] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[189266] = {
true,
false,
"deepskyblue",
},
[168934] = {
true,
false,
"fuchsia",
},
[196044] = {
true,
false,
"fuchsia",
},
[40923] = {
true,
false,
"DEATHKNIGHT",
},
[83892] = {
true,
false,
"fuchsia",
},
[135048] = {
true,
false,
"DEATHKNIGHT",
},
[192464] = {
true,
false,
"fuchsia",
},
[98406] = {
false,
false,
"fuchsia",
},
[137478] = {
true,
false,
"gold",
},
[194894] = {
true,
false,
"deepskyblue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[135049] = {
true,
false,
"fuchsia",
},
[139269] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[168681] = {
true,
true,
"fuchsia",
},
[128969] = {
true,
false,
"goldenrod",
},
[99366] = {
true,
false,
"deepskyblue",
},
[82039] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"deepskyblue",
},
[136330] = {
true,
false,
"fuchsia",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[83894] = {
true,
false,
"blue",
},
[135052] = {
true,
false,
"DEATHKNIGHT",
},
[134157] = {
true,
false,
"peru",
},
[75966] = {
true,
false,
"fuchsia",
},
[205384] = {
true,
false,
"fuchsia",
},
[212673] = {
true,
false,
"mediumpurple",
},
[136076] = {
true,
false,
"lightcoral",
},
[134158] = {
true,
false,
"navajowhite",
},
[172265] = {
true,
false,
"deepskyblue",
},
[208198] = {
true,
false,
"fuchsia",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[137484] = {
true,
false,
"gold",
},
[131858] = {
true,
false,
"blue",
},
[40765] = {
true,
false,
"mediumpurple",
},
[180323] = {
true,
false,
"fuchsia",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"fuchsia",
},
[137486] = {
true,
false,
"gold",
},
[98538] = {
true,
false,
"mediumpurple",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[101991] = {
true,
false,
"mediumpurple",
},
[162039] = {
true,
false,
"deepskyblue",
},
[82682] = {
true,
false,
"mediumpurple",
},
[156157] = {
true,
false,
"blue",
},
[75713] = {
true,
false,
"fuchsia",
},
[186208] = {
true,
false,
"fuchsia",
},
[138255] = {
true,
false,
"maroon",
},
[122963] = {
true,
false,
"mediumpurple",
},
[162040] = {
true,
false,
"fuchsia",
},
[198996] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[181861] = {
true,
false,
"mediumpurple",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[171376] = {
true,
false,
"blue",
},
[131863] = {
true,
false,
"mediumpurple",
},
[203857] = {
true,
false,
"fuchsia",
},
[198998] = {
true,
false,
"mediumpurple",
},
[207438] = {
true,
false,
"mediumpurple",
},
[131864] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"fuchsia",
},
[198999] = {
true,
false,
"mediumpurple",
},
[205265] = {
true,
false,
"DEATHKNIGHT",
},
[193373] = {
true,
false,
"blue",
},
[184422] = {
true,
false,
"DRUID",
},
[199000] = {
true,
false,
"mediumpurple",
},
[39616] = {
true,
false,
"DEATHKNIGHT",
},
[133912] = {
true,
false,
"fuchsia",
},
[136214] = {
true,
false,
"plum",
},
[136470] = {
true,
false,
"honeydew",
},
[75652] = {
true,
false,
"mediumpurple",
},
[134041] = {
true,
false,
"DEATHKNIGHT",
},
[197595] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[98542] = {
true,
false,
"mediumpurple",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[173044] = {
true,
false,
"deepskyblue",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[122967] = {
true,
false,
"mediumpurple",
},
[105704] = {
true,
false,
"deepskyblue",
},
[166396] = {
true,
false,
"blue",
},
[127315] = {
true,
false,
"fuchsia",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[132126] = {
true,
false,
"fuchsia",
},
[180335] = {
true,
false,
"deepskyblue",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[81984] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[101549] = {
true,
false,
"blue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[134174] = {
true,
false,
"honeydew",
},
[115488] = {
true,
false,
"blue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[84990] = {
true,
false,
"blue",
},
[81985] = {
true,
false,
"fuchsia",
},
[122969] = {
true,
false,
"deepskyblue",
},
[100527] = {
true,
false,
"fuchsia",
},
[197985] = {
true,
false,
"fuchsia",
},
[150160] = {
true,
false,
"mediumpurple",
},
[178165] = {
true,
false,
"fuchsia",
},
[104300] = {
true,
false,
"fuchsia",
},
[175992] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"blue",
},
[131492] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"mediumpurple",
},
[165763] = {
true,
false,
"deepskyblue",
},
[135329] = {
true,
false,
"mediumpurple",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[91002] = {
true,
false,
"fuchsia",
},
[174843] = {
true,
false,
"mediumpurple",
},
[136353] = {
true,
false,
"royalblue",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[205790] = {
true,
false,
"DEATHKNIGHT",
},
[45917] = {
true,
false,
"DRUID",
},
[162057] = {
true,
false,
"mediumpurple",
},
[205151] = {
true,
false,
"DEATHKNIGHT",
},
[91003] = {
true,
false,
"DRUID",
},
[186226] = {
true,
false,
"fuchsia",
},
[135204] = {
true,
false,
"honeydew",
},
[196712] = {
true,
false,
"fuchsia",
},
[205152] = {
true,
false,
"mediumpurple",
},
[205408] = {
true,
false,
"deepskyblue",
},
[170882] = {
true,
false,
"blue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[200137] = {
true,
false,
"deepskyblue",
},
[180473] = {
true,
false,
"blue",
},
[80816] = {
true,
false,
"deepskyblue",
},
[165108] = {
true,
true,
"fuchsia",
},
[196202] = {
true,
false,
"blue",
},
[103344] = {
true,
false,
"mediumpurple",
},
[126919] = {
true,
false,
"blue",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"fuchsia",
},
[75979] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[196203] = {
true,
false,
"deepskyblue",
},
[129367] = {
true,
false,
"honeydew",
},
[114319] = {
true,
false,
"blue",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"blue",
},
[44404] = {
true,
false,
"fuchsia",
},
[101476] = {
true,
false,
"fuchsia",
},
[186741] = {
true,
false,
"fuchsia",
},
[98792] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[150297] = {
true,
false,
"deepskyblue",
},
[185032] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[180348] = {
true,
false,
"blue",
},
[199124] = {
true,
false,
"deepskyblue",
},
[111068] = {
true,
false,
"mediumpurple",
},
[182778] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[170480] = {
true,
false,
"mediumpurple",
},
[168153] = {
true,
false,
"fuchsia",
},
[102962] = {
true,
false,
"fuchsia",
},
[208698] = {
true,
false,
"fuchsia",
},
[163086] = {
true,
false,
"blue",
},
[196576] = {
true,
false,
"fuchsia",
},
[204262] = {
true,
false,
"fuchsia",
},
[91006] = {
true,
false,
"blue",
},
[128455] = {
true,
false,
"fuchsia",
},
[198995] = {
true,
false,
"mediumpurple",
},
[86526] = {
true,
false,
"blue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[205366] = {
true,
false,
"DEATHKNIGHT",
},
[205158] = {
true,
false,
"mediumpurple",
},
[92538] = {
true,
false,
"fuchsia",
},
[129369] = {
true,
false,
"lightsalmon",
},
[97720] = {
true,
false,
"fuchsia",
},
[195929] = {
true,
false,
"mediumpurple",
},
[173190] = {
true,
false,
"deepskyblue",
},
[195696] = {
true,
false,
"mediumpurple",
},
[190034] = {
true,
false,
"mediumpurple",
},
[187768] = {
true,
false,
"deepskyblue",
},
[169861] = {
true,
false,
"blue",
},
[83846] = {
true,
false,
"mediumpurple",
},
[81864] = {
true,
false,
"blue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[138281] = {
true,
false,
"mediumpurple",
},
[187897] = {
true,
false,
"mediumpurple",
},
[153882] = {
true,
false,
"deepskyblue",
},
[180864] = {
true,
false,
"fuchsia",
},
[134701] = {
true,
false,
"fuchsia",
},
[129370] = {
true,
false,
"gold",
},
[186107] = {
true,
false,
"fuchsia",
},
[122965] = {
true,
false,
"mediumpurple",
},
[84550] = {
true,
false,
"mediumpurple",
},
[83893] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[189816] = {
true,
false,
"deepskyblue",
},
[97197] = {
true,
false,
"deepskyblue",
},
[91008] = {
true,
false,
"deepskyblue",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[165137] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[137516] = {
true,
false,
"lightsalmon",
},
[187771] = {
true,
false,
"blue",
},
[44566] = {
true,
false,
"mediumpurple",
},
[98681] = {
true,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"fuchsia",
},
[165010] = {
true,
false,
"mediumpurple",
},
[137517] = {
true,
false,
"peru",
},
[122972] = {
true,
false,
"deepskyblue",
},
[95779] = {
true,
false,
"mediumpurple",
},
[134012] = {
true,
false,
"lightsalmon",
},
[150165] = {
true,
false,
"deepskyblue",
},
[189555] = {
true,
false,
"blue",
},
[98280] = {
true,
false,
"blue",
},
[183425] = {
true,
false,
"blue",
},
[187969] = {
true,
false,
"deepskyblue",
},
[105715] = {
true,
false,
"blue",
},
[122968] = {
true,
false,
"mediumpurple",
},
[144296] = {
true,
false,
"mediumpurple",
},
[132532] = {
true,
false,
"palegreen",
},
[98810] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[179847] = {
true,
false,
"fuchsia",
},
[176521] = {
true,
false,
"blue",
},
[184580] = {
true,
false,
"blue",
},
[139949] = {
true,
false,
"honeydew",
},
[133685] = {
true,
false,
"deepskyblue",
},
[130012] = {
true,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[214117] = {
true,
false,
"fuchsia",
},
[191739] = {
true,
false,
"mediumpurple",
},
[164567] = {
true,
false,
"deepskyblue",
},
[104278] = {
true,
false,
"fuchsia",
},
[168594] = {
true,
false,
"mediumpurple",
},
[137713] = {
true,
false,
"paleturquoise",
},
[144298] = {
true,
false,
"blue",
},
[206063] = {
true,
false,
"DEATHKNIGHT",
},
[43875] = {
true,
false,
"DRUID",
},
[137521] = {
true,
false,
"cornflowerblue",
},
[176523] = {
true,
false,
"mediumpurple",
},
[104246] = {
true,
false,
"blue",
},
[213607] = {
true,
false,
"DEATHKNIGHT",
},
[190206] = {
true,
false,
"blue",
},
[186242] = {
true,
false,
"blue",
},
[114316] = {
true,
false,
"deepskyblue",
},
[114796] = {
true,
false,
"blue",
},
[133430] = {
true,
false,
"cornflowerblue",
},
[190207] = {
true,
false,
"fuchsia",
},
[96574] = {
true,
false,
"mediumpurple",
},
[84554] = {
true,
false,
"fuchsia",
},
[191230] = {
true,
false,
"fuchsia",
},
[184131] = {
true,
false,
"deepskyblue",
},
[165911] = {
true,
false,
"fuchsia",
},
[191164] = {
true,
false,
"fuchsia",
},
[184581] = {
true,
false,
"fuchsia",
},
[129758] = {
true,
false,
"fuchsia",
},
[104247] = {
true,
false,
"fuchsia",
},
[134024] = {
true,
false,
"fuchsia",
},
[186116] = {
true,
false,
"DRUID",
},
[131850] = {
true,
false,
"fuchsia",
},
[134150] = {
true,
false,
"navajowhite",
},
[133432] = {
true,
false,
"gold",
},
[184582] = {
true,
false,
"deepskyblue",
},
[154020] = {
true,
false,
"deepskyblue",
},
[118489] = {
true,
false,
"fuchsia",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"fuchsia",
},
[206066] = {
true,
false,
"fuchsia",
},
[100539] = {
true,
false,
"blue",
},
[40935] = {
true,
false,
"deepskyblue",
},
[114542] = {
true,
false,
"blue",
},
[192955] = {
true,
false,
"fuchsia",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[197698] = {
true,
false,
"mediumpurple",
},
[96512] = {
true,
false,
"mediumpurple",
},
[204206] = {
true,
false,
"mediumpurple",
},
[199233] = {
true,
false,
"mediumpurple",
},
[98970] = {
true,
false,
"mediumpurple",
},
[195399] = {
true,
false,
"fuchsia",
},
[194487] = {
true,
false,
"deepskyblue",
},
[206065] = {
true,
false,
"fuchsia",
},
[206068] = {
true,
false,
"DEATHKNIGHT",
},
[166299] = {
true,
false,
"fuchsia",
},
[136249] = {
true,
false,
"plum",
},
[177808] = {
true,
false,
"mediumpurple",
},
[186120] = {
true,
false,
"DRUID",
},
[190340] = {
true,
false,
"deepskyblue",
},
[167962] = {
true,
true,
"fuchsia",
},
[134331] = {
true,
false,
"gold",
},
[133436] = {
true,
false,
"gold",
},
[171799] = {
true,
false,
"fuchsia",
},
[178630] = {
true,
false,
"deepskyblue",
},
[164510] = {
true,
false,
"fuchsia",
},
[186121] = {
true,
false,
"DRUID",
},
[167963] = {
true,
false,
"blue",
},
[184331] = {
true,
false,
"mediumpurple",
},
[206070] = {
true,
false,
"mediumpurple",
},
[180495] = {
true,
false,
"fuchsia",
},
[166301] = {
true,
false,
"fuchsia",
},
[114544] = {
true,
false,
"fuchsia",
},
[40936] = {
true,
false,
"mediumpurple",
},
[186122] = {
true,
false,
"blue",
},
[190342] = {
true,
false,
"fuchsia",
},
[101437] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"mediumpurple",
},
[41096] = {
true,
false,
"fuchsia",
},
[166302] = {
true,
false,
"deepskyblue",
},
[134418] = {
true,
false,
"deepskyblue",
},
[151325] = {
true,
false,
"fuchsia",
},
[40577] = {
true,
false,
"mediumpurple",
},
[167965] = {
true,
false,
"blue",
},
[165919] = {
true,
false,
"mediumpurple",
},
[164737] = {
true,
false,
"fuchsia",
},
[195842] = {
true,
false,
"deepskyblue",
},
[184301] = {
true,
false,
"deepskyblue",
},
[104251] = {
true,
false,
"fuchsia",
},
[45572] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"blue",
},
[162691] = {
true,
false,
"fuchsia",
},
[101438] = {
true,
false,
"blue",
},
[127879] = {
true,
false,
"blue",
},
[195930] = {
true,
false,
"mediumpurple",
},
[163458] = {
true,
false,
"deepskyblue",
},
[127111] = {
true,
false,
"deepskyblue",
},
[100991] = {
true,
false,
"fuchsia",
},
[186125] = {
true,
false,
"fuchsia",
},
[190345] = {
true,
false,
"blue",
},
[167967] = {
true,
false,
"blue",
},
[45924] = {
true,
false,
"MAGE",
},
[129699] = {
true,
false,
"DRUID",
},
[83025] = {
true,
false,
"blue",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[98370] = {
true,
false,
"fuchsia",
},
[168310] = {
true,
false,
"fuchsia",
},
[193799] = {
true,
false,
"fuchsia",
},
[177817] = {
true,
false,
"blue",
},
[179733] = {
true,
false,
"fuchsia",
},
[135234] = {
true,
false,
"DEATHKNIGHT",
},
[171805] = {
true,
false,
"blue",
},
[98691] = {
true,
false,
"blue",
},
[168992] = {
true,
false,
"deepskyblue",
},
[134338] = {
true,
false,
"navajowhite",
},
[204030] = {
true,
false,
"DEATHKNIGHT",
},
[45477] = {
true,
false,
"blue",
},
[196102] = {
true,
false,
"blue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[40586] = {
true,
false,
"mediumpurple",
},
[131825] = {
true,
false,
"mediumpurple",
},
[81236] = {
true,
false,
"deepskyblue",
},
[130404] = {
true,
false,
"fuchsia",
},
[207969] = {
true,
false,
"fuchsia",
},
[190405] = {
true,
false,
"mediumpurple",
},
[135235] = {
true,
false,
"goldenrod",
},
[82579] = {
true,
false,
"deepskyblue",
},
[189706] = {
true,
false,
"yellow",
},
[131527] = {
true,
false,
"mediumpurple",
},
[165414] = {
true,
false,
"deepskyblue",
},
[175576] = {
true,
false,
"fuchsia",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[155824] = {
true,
false,
"blue",
},
[114804] = {
true,
false,
"blue",
},
[187154] = {
true,
false,
"deepskyblue",
},
[175517] = {
true,
false,
"blue",
},
[184125] = {
true,
false,
"DRUID",
},
[133870] = {
true,
false,
"fuchsia",
},
[194315] = {
true,
false,
"mediumpurple",
},
[192767] = {
true,
false,
"mediumpurple",
},
[135365] = {
true,
false,
"mediumpurple",
},
[130661] = {
true,
false,
"lightgreen",
},
[192781] = {
true,
false,
"MAGE",
},
[192481] = {
true,
false,
"fuchsia",
},
[194316] = {
true,
false,
"mediumpurple",
},
[193293] = {
true,
false,
"mediumpurple",
},
[187155] = {
true,
false,
"deepskyblue",
},
[114632] = {
true,
false,
"deepskyblue",
},
[163882] = {
true,
false,
"mediumpurple",
},
[184124] = {
true,
false,
"DRUID",
},
[195851] = {
true,
false,
"blue",
},
[134599] = {
true,
false,
"gold",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[194816] = {
true,
false,
"mediumpurple",
},
[135239] = {
true,
false,
"paleturquoise",
},
[98949] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[134600] = {
true,
false,
"peru",
},
[201223] = {
true,
false,
"blue",
},
[168932] = {
true,
false,
"gold",
},
[198326] = {
true,
false,
"mediumpurple",
},
[135240] = {
true,
false,
"blue",
},
[115765] = {
true,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[141285] = {
true,
false,
"lightgreen",
},
[187192] = {
true,
false,
"mediumpurple",
},
[156212] = {
true,
false,
"deepskyblue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[114266] = {
true,
false,
"deepskyblue",
},
[134284] = {
true,
false,
"deepskyblue",
},
[135241] = {
true,
false,
"peru",
},
[102019] = {
true,
false,
"fuchsia",
},
[189265] = {
true,
false,
"fuchsia",
},
[155830] = {
true,
false,
"deepskyblue",
},
[116549] = {
true,
false,
"deepskyblue",
},
[133835] = {
true,
false,
"deepskyblue",
},
[80936] = {
true,
false,
"blue",
},
[81432] = {
true,
false,
"deepskyblue",
},
[59873] = {
true,
false,
"mediumpurple",
},
[100485] = {
true,
false,
"deepskyblue",
},
[192786] = {
true,
false,
"blue",
},
[183707] = {
true,
false,
"deepskyblue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[133836] = {
true,
false,
"blue",
},
[182045] = {
true,
false,
"fuchsia",
},
[165805] = {
true,
false,
"mediumpurple",
},
[189719] = {
true,
false,
"DRUID",
},
[155831] = {
true,
false,
"fuchsia",
},
[192787] = {
false,
false,
"fuchsia",
},
[206214] = {
true,
false,
"mediumpurple",
},
[102788] = {
true,
false,
"mediumpurple",
},
[187033] = {
true,
false,
"fuchsia",
},
[168747] = {
true,
false,
"fuchsia",
},
[136139] = {
true,
false,
"peru",
},
[141283] = {
true,
false,
"navajowhite",
},
[100486] = {
true,
false,
"fuchsia",
},
[192788] = {
true,
false,
"fuchsia",
},
[101637] = {
true,
false,
"mediumpurple",
},
[168109] = {
true,
false,
"deepskyblue",
},
[98696] = {
true,
false,
"mediumpurple",
},
[169927] = {
true,
false,
"fuchsia",
},
[190359] = {
true,
false,
"blue",
},
[189464] = {
true,
false,
"fuchsia",
},
[76446] = {
true,
false,
"blue",
},
[162099] = {
true,
false,
"fuchsia",
},
[196115] = {
true,
false,
"fuchsia",
},
[96587] = {
true,
false,
"deepskyblue",
},
[156244] = {
true,
false,
"mediumpurple",
},
[115640] = {
true,
false,
"fuchsia",
},
[138187] = {
true,
false,
"deepskyblue",
},
[59553] = {
true,
false,
"mediumpurple",
},
[133482] = {
true,
false,
"maroon",
},
[87252] = {
true,
false,
"mediumpurple",
},
[167113] = {
true,
false,
"blue",
},
[131666] = {
true,
false,
"deepskyblue",
},
[164506] = {
true,
false,
"blue",
},
[170483] = {
true,
false,
"fuchsia",
},
[176959] = {
true,
false,
"deepskyblue",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"blue",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176551] = {
true,
false,
"deepskyblue",
},
[131667] = {
true,
false,
"mediumpurple",
},
[144071] = {
true,
false,
"gold",
},
[137830] = {
true,
false,
"deepskyblue",
},
[190362] = {
true,
false,
"fuchsia",
},
[189467] = {
true,
false,
"blue",
},
[196198] = {
true,
false,
"blue",
},
[82597] = {
true,
false,
"fuchsia",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[208521] = {
true,
false,
"deepskyblue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[189340] = {
true,
false,
"mediumpurple",
},
[130400] = {
true,
false,
"deepskyblue",
},
[163459] = {
true,
false,
"blue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"deepskyblue",
},
[131669] = {
true,
false,
"DEATHKNIGHT",
},
[165556] = {
true,
false,
"fuchsia",
},
[115642] = {
true,
false,
"blue",
},
[95842] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"blue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[168882] = {
true,
false,
"fuchsia",
},
[131670] = {
true,
false,
"palegreen",
},
[198933] = {
true,
false,
"mediumpurple",
},
[169924] = {
true,
false,
"mediumpurple",
},
[129517] = {
true,
false,
"fuchsia",
},
[81820] = {
true,
false,
"fuchsia",
},
[171184] = {
true,
false,
"mediumpurple",
},
[163128] = {
true,
false,
"deepskyblue",
},
[162763] = {
true,
true,
"fuchsia",
},
[186658] = {
true,
false,
"deepskyblue",
},
[168627] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"fuchsia",
},
[94224] = {
true,
false,
"fuchsia",
},
[189471] = {
true,
false,
"deepskyblue",
},
[189727] = {
true,
false,
"DRUID",
},
[192796] = {
true,
false,
"fuchsia",
},
[99358] = {
true,
false,
"deepskyblue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[184023] = {
true,
false,
"blue",
},
[175550] = {
true,
false,
"fuchsia",
},
[86552] = {
true,
false,
"deepskyblue",
},
[189472] = {
true,
false,
"deepskyblue",
},
[185508] = {
true,
false,
"red",
},
[115388] = {
true,
false,
"fuchsia",
},
[131545] = {
true,
false,
"mediumpurple",
},
[150142] = {
true,
false,
"deepskyblue",
},
[152898] = {
true,
false,
"fuchsia",
},
[168942] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"fuchsia",
},
[164921] = {
true,
false,
"deepskyblue",
},
[198311] = {
true,
false,
"mediumpurple",
},
[189729] = {
true,
false,
"DRUID",
},
[188703] = {
true,
false,
"yellow",
},
[156226] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"mediumpurple",
},
[213770] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
true,
false,
"goldenrod",
},
[45930] = {
true,
false,
"deepskyblue",
},
[134629] = {
true,
false,
"navajowhite",
},
[133593] = {
true,
false,
"honeydew",
},
[98275] = {
true,
false,
"fuchsia",
},
[40943] = {
true,
false,
"fuchsia",
},
[157634] = {
true,
false,
"blue",
},
[190370] = {
true,
false,
"deepskyblue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[197671] = {
true,
false,
"blue",
},
[192800] = {
true,
false,
"blue",
},
[205727] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumpurple",
},
[81819] = {
true,
false,
"deepskyblue",
},
[104270] = {
true,
false,
"mediumpurple",
},
[190371] = {
true,
false,
"blue",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[206074] = {
true,
false,
"DEATHKNIGHT",
},
[166971] = {
true,
false,
"fuchsia",
},
[131677] = {
true,
false,
"deepskyblue",
},
[180015] = {
true,
false,
"blue",
},
[164926] = {
true,
false,
"fuchsia",
},
[172981] = {
true,
false,
"blue",
},
[203799] = {
true,
false,
"deepskyblue",
},
[95766] = {
true,
false,
"blue",
},
[186664] = {
true,
false,
"deepskyblue",
},
[167612] = {
true,
false,
"blue",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
true,
false,
"blue",
},
[128434] = {
true,
false,
"fuchsia",
},
[190373] = {
true,
false,
"deepskyblue",
},
[189478] = {
true,
false,
"mediumpurple",
},
[134364] = {
true,
false,
"honeydew",
},
[163520] = {
true,
false,
"mediumpurple",
},
[206230] = {
true,
false,
"fuchsia",
},
[199325] = {
true,
false,
"deepskyblue",
},
[166589] = {
true,
false,
"fuchsia",
},
[84957] = {
true,
false,
"fuchsia",
},
[197535] = {
true,
false,
"mediumpurple",
},
[180070] = {
true,
false,
"fuchsia",
},
[132491] = {
true,
false,
"palegreen",
},
[150168] = {
true,
false,
"fuchsia",
},
[198047] = {
true,
false,
"mediumpurple",
},
[177716] = {
true,
false,
"deepskyblue",
},
[186284] = {
true,
false,
"mediumpurple",
},
[128435] = {
true,
false,
"maroon",
},
[194467] = {
true,
false,
"blue",
},
[201756] = {
true,
false,
"fuchsia",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[205337] = {
true,
false,
"fuchsia",
},
[190377] = {
true,
false,
"fuchsia",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[167998] = {
true,
false,
"mediumpurple",
},
[102287] = {
true,
false,
"mediumpurple",
},
[136541] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[99664] = {
true,
false,
"fuchsia",
},
[133345] = {
true,
false,
"goldenrod",
},
[135007] = {
true,
false,
"gold",
},
[194469] = {
true,
false,
"blue",
},
[135263] = {
true,
false,
"maroon",
},
[45932] = {
true,
false,
"fuchsia",
},
[102094] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"mediumpurple",
},
[169905] = {
true,
false,
"blue",
},
[163524] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[131586] = {
true,
false,
"mediumpurple",
},
[168384] = {
true,
false,
"blue",
},
[192680] = {
true,
false,
"mediumpurple",
},
[195877] = {
true,
false,
"fuchsia",
},
[205212] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"mediumpurple",
},
[131812] = {
true,
false,
"fuchsia",
},
[212681] = {
true,
false,
"deepskyblue",
},
[203678] = {
true,
false,
"mediumpurple",
},
[188244] = {
true,
false,
"mediumpurple",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"fuchsia",
},
[189227] = {
true,
false,
"fuchsia",
},
[131685] = {
true,
false,
"deepskyblue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[164929] = {
true,
false,
"blue",
},
[195928] = {
true,
false,
"mediumpurple",
},
[204536] = {
true,
false,
"blue",
},
[113537] = {
true,
false,
"mediumpurple",
},
[192333] = {
true,
false,
"mediumpurple",
},
[114624] = {
true,
false,
"mediumpurple",
},
[196263] = {
true,
false,
"deepskyblue",
},
[184107] = {
true,
false,
"mediumpurple",
},
[190381] = {
true,
false,
"fuchsia",
},
[197406] = {
true,
false,
"fuchsia",
},
[152905] = {
true,
false,
"fuchsia",
},
[115395] = {
true,
false,
"mediumpurple",
},
[131849] = {
true,
false,
"blue",
},
[127799] = {
true,
false,
"blue",
},
[80805] = {
true,
false,
"mediumpurple",
},
[129366] = {
true,
false,
"goldenrod",
},
[167876] = {
true,
false,
"fuchsia",
},
[199717] = {
true,
false,
"mediumpurple",
},
[138465] = {
true,
false,
"lightcoral",
},
[167964] = {
true,
false,
"fuchsia",
},
[59552] = {
true,
false,
"fuchsia",
},
[188067] = {
true,
false,
"blue",
},
[170690] = {
true,
false,
"blue",
},
[130485] = {
true,
false,
"peru",
},
[186124] = {
true,
false,
"deepskyblue",
},
[200126] = {
true,
false,
"fuchsia",
},
[99192] = {
true,
false,
"mediumpurple",
},
[86547] = {
true,
false,
"blue",
},
[176573] = {
true,
false,
"fuchsia",
},
[137511] = {
true,
false,
"navajowhite",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[187315] = {
true,
false,
"blue",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
true,
false,
"lightcoral",
},
[190174] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[177891] = {
true,
false,
"mediumpurple",
},
[189234] = {
true,
false,
"mediumpurple",
},
[129527] = {
true,
false,
"deepskyblue",
},
[168007] = {
true,
false,
"blue",
},
[98965] = {
true,
false,
"mediumpurple",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[201790] = {
true,
false,
"deepskyblue",
},
[136934] = {
true,
false,
"navajowhite",
},
[189235] = {
true,
false,
"fuchsia",
},
[80935] = {
true,
false,
"deepskyblue",
},
[136295] = {
true,
false,
"peru",
},
[169159] = {
true,
false,
"gold",
},
[131436] = {
true,
false,
"mediumpurple",
},
[41139] = {
true,
false,
"aqua",
},
[155221] = {
true,
false,
"deepskyblue",
},
[96664] = {
true,
false,
"blue",
},
[197905] = {
true,
false,
"deepskyblue",
},
[95769] = {
true,
false,
"fuchsia",
},
[134990] = {
true,
false,
"honeydew",
},
[185528] = {
true,
false,
"blue",
},
[185656] = {
true,
false,
"fuchsia",
},
[59546] = {
true,
false,
"deepskyblue",
},
[104273] = {
true,
false,
"mediumpurple",
},
[164557] = {
true,
false,
"mediumpurple",
},
[163121] = {
true,
false,
"blue",
},
[141284] = {
true,
false,
"gold",
},
[134251] = {
true,
false,
"honeydew",
},
[185529] = {
true,
false,
"fuchsia",
},
[199595] = {
true,
false,
"mediumpurple",
},
[184335] = {
true,
false,
"fuchsia",
},
[168318] = {
true,
false,
"mediumpurple",
},
[190404] = {
true,
false,
"mediumpurple",
},
[130488] = {
true,
false,
"lightsalmon",
},
[129529] = {
true,
false,
"fuchsia",
},
[40788] = {
true,
false,
"mediumpurple",
},
[45935] = {
true,
false,
"fuchsia",
},
[178141] = {
true,
false,
"blue",
},
[189878] = {
true,
false,
"yellow",
},
[104274] = {
true,
false,
"mediumpurple",
},
[131823] = {
true,
false,
"mediumpurple",
},
[111563] = {
true,
false,
"blue",
},
[131847] = {
true,
false,
"DEATHKNIGHT",
},
[190407] = {
true,
false,
"deepskyblue",
},
[40633] = {
true,
false,
"deepskyblue",
},
[162038] = {
true,
false,
"mediumpurple",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"blue",
},
[131824] = {
true,
false,
"mediumpurple",
},
[179010] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"deepskyblue",
},
[125977] = {
true,
false,
"fuchsia",
},
[151773] = {
true,
false,
"blue",
},
[174569] = {
false,
false,
"fuchsia",
},
[114783] = {
true,
false,
"deepskyblue",
},
[104275] = {
true,
false,
"mediumpurple",
},
[126845] = {
true,
false,
"fuchsia",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[198997] = {
true,
false,
"mediumpurple",
},
[157017] = {
true,
false,
"blue",
},
[169421] = {
true,
false,
"gold",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[189901] = {
true,
false,
"mediumpurple",
},
[154014] = {
true,
false,
"deepskyblue",
},
[186220] = {
true,
false,
"deepskyblue",
},
[133361] = {
true,
false,
"fuchsia",
},
[162133] = {
true,
false,
"fuchsia",
},
[131585] = {
true,
false,
"blue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[164563] = {
true,
false,
"blue",
},
[139422] = {
true,
false,
"gold",
},
[188026] = {
true,
false,
"fuchsia",
},
[179269] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"deepskyblue",
},
[171341] = {
true,
false,
"deepskyblue",
},
[59555] = {
true,
false,
"fuchsia",
},
[204918] = {
true,
false,
"fuchsia",
},
[56792] = {
true,
false,
"fuchsia",
},
[178171] = {
true,
false,
"fuchsia",
},
[84520] = {
true,
false,
"mediumpurple",
},
[114334] = {
true,
false,
"mediumpurple",
},
[165076] = {
true,
false,
"blue",
},
[134514] = {
true,
false,
"lightgreen",
},
[129788] = {
true,
false,
"fuchsia",
},
[134144] = {
true,
false,
"lightgreen",
},
[126847] = {
true,
false,
"DRUID",
},
[179852] = {
true,
false,
"blue",
},
[43873] = {
true,
false,
"DRUID",
},
[92610] = {
true,
false,
"fuchsia",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[169425] = {
true,
false,
"gold",
},
[115019] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[206064] = {
true,
false,
"deepskyblue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[194745] = {
true,
false,
"fuchsia",
},
[75506] = {
true,
false,
"deepskyblue",
},
[189886] = {
true,
false,
"gold",
},
[102232] = {
true,
false,
"fuchsia",
},
[126848] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"fuchsia",
},
[169426] = {
true,
false,
"gold",
},
[135474] = {
true,
false,
"blue",
},
[137458] = {
true,
false,
"deepskyblue",
},
[175861] = {
true,
false,
"fuchsia",
},
[120651] = {
true,
false,
"gold",
},
[115020] = {
true,
false,
"mediumpurple",
},
[129547] = {
true,
false,
"deepskyblue",
},
[180474] = {
true,
false,
"fuchsia",
},
[65317] = {
true,
false,
"mediumpurple",
},
[45915] = {
true,
false,
"fuchsia",
},
[114317] = {
true,
false,
"deepskyblue",
},
[97068] = {
true,
false,
"mediumpurple",
},
[169428] = {
true,
false,
"gold",
},
[45912] = {
true,
false,
"deepskyblue",
},
[179842] = {
true,
false,
"fuchsia",
},
[212778] = {
true,
false,
"fuchsia",
},
[174197] = {
true,
false,
"deepskyblue",
},
[174210] = {
true,
false,
"deepskyblue",
},
[183495] = {
true,
false,
"mediumpurple",
},
[179841] = {
true,
false,
"deepskyblue",
},
[169429] = {
true,
false,
"gold",
},
[91007] = {
true,
false,
"DRUID",
},
[165762] = {
true,
false,
"fuchsia",
},
[176974] = {
true,
false,
"fuchsia",
},
[190401] = {
true,
false,
"mediumpurple",
},
[134417] = {
true,
false,
"gold",
},
[129552] = {
true,
false,
"deepskyblue",
},
[191847] = {
true,
false,
"deepskyblue",
},
[169430] = {
true,
false,
"gold",
},
[205363] = {
true,
false,
"deepskyblue",
},
[129553] = {
true,
false,
"mediumpurple",
},
[39960] = {
true,
false,
"DEATHKNIGHT",
},
[134137] = {
true,
false,
"deepskyblue",
},
[197857] = {
true,
false,
"deepskyblue",
},
[183497] = {
true,
false,
"blue",
},
[40634] = {
true,
false,
"deepskyblue",
},
[154744] = {
true,
false,
"fuchsia",
},
[157810] = {
true,
false,
"deepskyblue",
},
[150250] = {
true,
false,
"deepskyblue",
},
[160495] = {
true,
false,
"deepskyblue",
},
[190403] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"fuchsia",
},
[180429] = {
true,
false,
"mediumpurple",
},
[115406] = {
true,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"mediumpurple",
},
[195135] = {
true,
false,
"fuchsia",
},
[150251] = {
true,
false,
"blue",
},
[114584] = {
true,
false,
"mediumpurple",
},
},
["target_highlight_height"] = 22,
["target_shady_alpha"] = 0.3199999928474426,
["disable_omnicc_on_auras"] = true,
["health_statusbar_bgcolor"] = {
0,
0,
0,
1,
},
["aura_width"] = 22,
["aura_height2"] = 18,
["castbar_target_notank"] = true,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.077178478241",
["nameplateLargeTopInset"] = "-1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "1",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "1",
["nameplateTargetRadialPosition"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["clampTargetNameplateToScreen"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "0",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.51",
["nameplateMotionSpeed"] = "0.050608683377504",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplateOtherTopInset"] = "-1",
["nameplateOtherAtBase"] = "0",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["SoftTargetNameplateInteract"] = "1",
["nameplateShowFriendlyGuardians"] = "1",
["nameplateOccludedAlphaMult"] = "0.29999998211861",
["NamePlateHorizontalScale"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["SoftTargetIconGameObject"] = "0",
["nameplateShowOnlyNames"] = "1",
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.2000000476837,
},
},
["aggro_can_check_notank"] = true,
["login_counter"] = 19655,
["version"] = 1,
["border_color"] = {
nil,
nil,
nil,
1,
},
["pet_width_scale"] = 0.8499999642372131,
["aura_tracker"] = {
["debuff_banned"] = {
["356329"] = false,
["228354"] = false,
["113724"] = false,
["289308"] = false,
["331934"] = false,
["205708"] = false,
["352939"] = false,
["354050"] = false,
["236299"] = true,
["12486"] = false,
},
["buff_tracked"] = {
["209859"] = true,
},
["buff_banned"] = {
["206150"] = true,
["333553"] = true,
["61574"] = true,
["61573"] = true,
},
},
["ui_parent_target_strata"] = "MEDIUM",
["range_check_enabled"] = false,
["castbar_target_anchor"] = {
["y"] = -8.94000244140625,
["x"] = -3.170005798339844,
["side"] = 10,
},
["quick_hide"] = true,
["aura_stack_font"] = "PT Sans Narrow",
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["script_auto_imported"] = {
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Tank Interrupt"] = 12,
["Unit - Important"] = 11,
["Cast - Quick Flash"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Unit - Show Energy"] = 11,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Circular Swipe"] = 4,
["Cast - Shield Interrupt"] = 2,
["Cast - Important Target [P]"] = 2,
["Add - Explode on Die [P]"] = 1,
["Auto Set Skull"] = 11,
["Aura - Buff Alert"] = 15,
["Add - Non Elite Trash [P]"] = 4,
["Countdown"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Cast - Stop Casting"] = 4,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Spiteful Affix"] = 3,
["Cast - Very Important"] = 15,
["Cast - Glowing [P]"] = 10,
["Fixate On You"] = 11,
},
["target_highlight_color"] = {
0.02745098248124123,
0.2745098173618317,
},
["range_check_in_range_or_target_alpha"] = 0.7999999523162842,
["aura_timer_text_size"] = 12,
["cast_statusbar_bgcolor"] = {
0,
0,
0,
0.8900000005960464,
},
["indicator_raidmark_scale"] = 0.99999994039536,
["number_region_first_run"] = true,
["pet_height_scale"] = 0.8499999642372131,
["patch_version"] = 36,
["range_check_alpha"] = 1,
["click_space"] = {
125,
},
["castbar_target_show"] = true,
["castbar_target_font"] = "PT Sans Narrow",
["ui_parent_cast_level"] = 108,
["semver"] = "1.0.0",
["target_shady_combat_only"] = false,
["profile_name"] = "Default",
["dps"] = {
["colors"] = {
["solo"] = {
0,
1,
0.011764705882353,
},
["notontank"] = {
0.960784375667572,
0.501960813999176,
},
["aggro"] = {
0.8666667342185974,
0.08627451211214066,
0.08627451211214066,
},
["noaggro"] = {
0,
0.250980406999588,
},
["pulling"] = {
nil,
0.2980392277240753,
0.168627455830574,
},
},
},
["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
["health_selection_overlay_alpha"] = 1,
["hide_blizzard_castbar"] = true,
["health_animation_time_dilatation"] = 2.6199998855591,
["aura_alpha"] = 0.84999996423721,
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.5254902243614197,
0,
1,
},
["anothertank"] = {
0,
0.8901961445808411,
},
["aggro"] = {
0.1568627506494522,
0.1764705926179886,
},
["noaggro"] = {
[3] = 0.062745101749897,
},
["nocombat"] = {
0.05882353335618973,
1,
},
["pulling"] = {
nil,
0.7843137979507446,
},
},
},
["border_thickness"] = 1.480000019073486,
["range_check_alpha_friendlies"] = 1,
["aura_show_enrage"] = true,
["cast_statusbar_spark_color"] = {
nil,
0.13333333333333,
0.8,
},
},
["Mage-MOD"] = {
["target_shady_combat_only"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
398151,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1614608904,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["url"] = "",
["NpcNames"] = {
"174773",
},
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Revision"] = 188,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["semver"] = "",
["Icon"] = 135945,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
392488,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.168627455830574,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
384194,
392451,
392924,
397889,
209413,
207980,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1622577650,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Revision"] = 64,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Auto Set Skull",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["semver"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775244,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["Revision"] = 209,
["Options"] = {
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Countdown",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
209495,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1628775247,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Revision"] = 270,
["Options"] = {
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Prio"] = 99,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["semver"] = "",
["Icon"] = 1029718,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1622577644,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 234,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["semver"] = "",
["Icon"] = 136048,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775245,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 267,
["semver"] = "",
["Enabled"] = true,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Author"] = "Tecno-Azralon",
["Prio"] = 99,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["OptionsValues"] = {
["NameplateSizeOffset"] = 1.3500000238419,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Time"] = 1648170127,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["url"] = "https://wago.io/1TlaFYtDO/75",
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["Revision"] = 2918,
["Options"] = {
{
["Type"] = 4,
["Key"] = "ShowArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "ArrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "GlowAlpha",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 1,
["Key"] = "NameplateSizeOffset",
["Value"] = 1.25,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Height Scale",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- Îã§Ïö∞ÏÑ∏Í∑∏ÎÑ§, false spell\n    }    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Bombad¬£o-Azralon",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- Îã§Ïö∞ÏÑ∏Í∑∏ÎÑ§, false spell\n    }    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["SpellIds"] = {
240446,
347363,
339415,
318406,
331223,
326607,
327885,
334625,
328016,
324527,
344005,
321999,
340219,
328986,
320576,
322358,
341445,
336451,
332672,
331398,
331379,
334664,
334967,
320230,
328146,
320631,
322493,
324372,
327240,
322939,
328756,
331745,
340304,
319685,
326827,
342481,
356548,
356537,
356407,
349987,
349663,
350090,
355782,
350922,
355438,
357404,
357189,
347150,
355057,
355139,
355429,
355584,
358131,
350517,
357260,
351119,
351646,
350180,
335783,
294533,
353782,
347855,
353769,
331935,
336383,
342160,
353742,
353444,
277039,
278192,
329909,
358328,
325632,
81008,
296355,
355224,
296839,
310392,
367380,
297966,
332002,
329904,
294517,
329423,
329905,
353124,
358270,
295985,
184381,
318995,
260344,
301952,
362820,
329930,
355212,
332165,
358327,
359770,
364040,
361644,
363088,
361989,
363024,
365008,
365805,
365958,
360717,
361923,
363533,
364386,
364114,
362028,
362617,
365385,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["version"] = 75,
["PlaterCore"] = 1,
["Name"] = "M+ Explosive [Fixed]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["semver"] = "1.0.74",
["Icon"] = 2065634,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["OptionsValues"] = {
["customSize"] = {
{
"17",
"120, 16",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775232,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["Revision"] = 283,
["Options"] = {
{
["Type"] = 7,
["Key"] = "customSize",
["Value"] = {
{
"17",
"120, 16",
},
},
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Key"] = "width",
["Value"] = 120,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Key"] = "height",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Key"] = "timerFontSize",
["Value"] = 12,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Timer Size",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Time Separators",
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "separatorColor",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Key"] = "separatorWidth",
["Value"] = 1,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["SpellIds"] = {
354080,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Castbar is Timer [P]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1648647350,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["Revision"] = 377,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Key"] = "timeleftToBlink",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Key"] = "blinkSpeed",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Key"] = "blinkMaxAlpha",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftWarning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Warning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftCritical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Critical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "BombadÔøΩo-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1669340967,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 137,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"197697",
"59544",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["version"] = -1,
["Name"] = "Add - Important [P]",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
376644,
373017,
386781,
384823,
372735,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
392640,
397888,
209033,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Add - Warning [P]",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura While Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["version"] = -1,
["Name"] = "Add - Non Elite Trash [P]",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
377004,
381516,
196543,
199726,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["version"] = -1,
["Name"] = "Add - Explode on Die [P]",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
},
["pet_height_scale"] = 0.8499999642372131,
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4537",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13415",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:184",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:14010",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6610",
["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6549",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:4535",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:4536",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6927",
["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6548",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6964",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13414",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6917",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:180",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:2932",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13440",
["nameplateShowSelf"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:352: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:348>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:143: in function <Interface/SharedXML/CallbackRegistry.lua:142>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:146: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:301: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:300>\n",
},
["url"] = "https://wago.io/RPHjubTGI/1",
["health_selection_overlay_color"] = {
0,
0.1372549086809158,
nil,
0,
},
["hover_highlight"] = false,
["spell_animations"] = false,
["hover_highlight_alpha"] = 1,
["indicator_raidmark_scale"] = 0.99999994039536,
["cast_statusbar_spark_alpha"] = 0.8299999833107,
["aura2_y_offset"] = 5,
["health_statusbar_bgtexture"] = "Clean",
["plate_config"] = {
["global_health_height"] = 15,
["friendlyplayer"] = {
["cast"] = {
121,
},
["health_incombat"] = {
121,
15,
},
["health"] = {
121,
15,
},
["cast_incombat"] = {
121,
},
["actorname_use_class_color"] = true,
},
["friendlynpc"] = {
["cast"] = {
121,
},
["actorname_text_spacing"] = 9,
["health"] = {
121,
15,
},
["cast_incombat"] = {
121,
},
["health_incombat"] = {
121,
15,
},
},
["enemynpc"] = {
["actorname_text_font"] = "Bebas Neue Cyrillic Regular",
["spellpercent_text_font"] = "PT Sans Narrow",
["actorname_text_size"] = 10,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast"] = {
135,
},
["spellpercent_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["side"] = 1,
},
["percent_text_size"] = 8,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
135,
},
["health_incombat"] = {
135,
14,
},
["health"] = {
135,
14,
},
["spellname_text_font"] = "PT Sans Narrow",
["percent_text_anchor"] = {
["y"] = 0.000885009765625,
["x"] = -18.74000549316406,
},
["level_text_font"] = "PT Sans Narrow",
["big_actorname_text_font"] = "PT Sans Narrow",
},
["enemyplayer"] = {
["actorname_text_font"] = "PT Sans Narrow",
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["spellpercent_text_font"] = "PT Sans Narrow",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["level_text_size"] = 8,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast"] = {
135,
},
["all_names"] = true,
["big_actortitle_text_size"] = 10,
["actorname_text_outline"] = "OUTLINE",
["percent_text_size"] = 10,
["actorname_text_spacing"] = 11,
["percent_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
135,
14,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_font"] = "PT Sans Narrow",
["quest_color_enabled"] = true,
["spellname_text_size"] = 11,
["health"] = {
121,
15,
},
["quest_enabled"] = true,
["big_actorname_text_font"] = "PT Sans Narrow",
["big_actorname_text_size"] = 10,
["level_text_font"] = "PT Sans Narrow",
["health_incombat"] = {
121,
15,
},
},
["global_health_width"] = 121,
},
["health_selection_overlay"] = "Smooth v2",
["aura_y_offset"] = 5,
["tank"] = {
["colors"] = {
["aggro"] = {
0,
0.4117647409439087,
},
["anothertank"] = {
0.7058823704719543,
0,
},
["pulling"] = {
0,
0.847058892250061,
1,
},
},
},
["health_statusbar_texture"] = "Clean",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Combo Points"] = 6,
["Cast Bar Icon Config"] = 2,
["Attacking Specific Unit"] = 2,
["Extra Border"] = 2,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Execute Range"] = 1,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.19607843137255,
0.050980392156863,
0.062745098039216,
1,
},
["update_throttle"] = 0.1499999910593033,
["hide_blizzard_castbar"] = true,
["extra_icon_cooldown_reverse"] = false,
["resources_settings"] = {
["chr"] = {
["Player-1307-0BE359D3"] = "ArcaneCharges",
["Player-3682-0B038C9A"] = "ArcaneCharges",
["Player-3682-0B19EC37"] = "Chi",
["Player-3209-0B2C0A65"] = "Chi",
["Player-3209-0B29D149"] = "ArcaneCharges",
["Player-3209-0B4EDE3D"] = "HolyPower",
},
},
["castbar_target_text_size"] = 8,
["npc_cache"] = {
[75829] = {
"Nhallish",
"Shadowmoon Burial Grounds",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
},
[184522] = {
"Vigilant Custodian",
"Sepulcher of the First Ones",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
},
[96609] = {
"Gildedfur Stag",
"Halls of Valor",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
},
[183500] = {
"Thieveing Agent",
"Sepulcher of the First Ones",
},
[184651] = {
"Subjugator Zeltoth",
"Sepulcher of the First Ones",
},
[74551] = {
"Razorfen Beast Stalker",
"Razorfen Kraul",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[190406] = {
"Aqualing",
"Halls of Infusion",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
},
[24664] = {
"Kael'thas Sunstrider",
"Magisters' Terrace",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
},
[95843] = {
"King Haldor",
"Halls of Valor",
},
[6206] = {
"Caverndeep Burrower",
"Gnomeregan",
},
[74552] = {
"Razorfen Huntmaster",
"Razorfen Kraul",
},
[120651] = {
"Explosives",
"The Nokhud Offensive",
},
[6218] = {
"Irradiated Slime",
"Gnomeregan",
},
[6222] = {
"Leprous Technician",
"Gnomeregan",
},
[6230] = {
"Peacekeeper Security Suit",
"Gnomeregan",
},
[6234] = {
"Mechanized Guardian",
"Gnomeregan",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
},
[96611] = {
"Angerhoof Bull",
"Halls of Valor",
},
[84399] = {
"Vicious Mandragora",
"The Everbloom",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
},
[76407] = {
"Ner'zhul",
"Shadowmoon Burial Grounds",
},
[8440] = {
"Avatar of Hakkar",
"Sunken Temple",
},
[74553] = {
"Blood-Branded Razorfen",
"Razorfen Kraul",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
},
[5271] = {
"Atal'ai Deathwalker",
"Sunken Temple",
},
[75001] = {
"Hunter Bonetusk",
"Razorfen Kraul",
},
[5283] = {
"Nightmare Wanderer",
"Sunken Temple",
},
[5291] = {
"Hakkari Frostwing",
"Sunken Temple",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
},
[55659] = {
"Imp Gang Boss",
"Shadowmoon Burial Grounds",
},
[83697] = {
"Grom'kar Deckhand",
"Iron Docks",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
},
[184530] = {
"Eternal Sentry",
"Sepulcher of the First Ones",
},
[85232] = {
"Infested Venomfang",
"The Everbloom",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[84401] = {
"Swift Sproutling",
"The Everbloom",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
},
[184659] = {
"Dominated Sentinel",
"Sepulcher of the First Ones",
},
[83762] = {
"Grom'kar Deckhand",
"Iron Docks",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
},
[197831] = {
"Quarry Stonebreaker",
"UNKNOWN",
},
[76090] = {
"Blood-Branded Razorfen",
"Razorfen Kraul",
},
[24697] = {
"Sister of Torment",
"Magisters' Terrace",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[24761] = {
"Brightscale Wyrm",
"Magisters' Terrace",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[74620] = {
"Battle Boar",
"Razorfen Kraul",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[156913] = {
"Decaying Corpse",
"Darkmaul Citadel",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[75452] = {
"Bonemaw",
"Shadowmoon Burial Grounds",
},
[83764] = {
"Grom'kar Deadeye",
"Iron Docks",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
},
[192464] = {
"Raging Ember",
"Neltharus",
},
[197835] = {
"Kaurdyth",
"UNKNOWN",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[75453] = {
"Geomancer Acolyte",
"Razorfen Kraul",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[157300] = {
"Tunk",
"Darkmaul Citadel",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[62982] = {
"Mindbender",
"Shadowmoon Burial Grounds",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
},
[184539] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
},
[83894] = {
"Dulhu",
"The Everbloom",
},
[74751] = {
"Solarshard Totem",
"Razorfen Kraul",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
},
[24698] = {
"Ethereum Smuggler",
"Magisters' Terrace",
},
[24762] = {
"Sunblade Keeper",
"Magisters' Terrace",
},
[181856] = {
"Point Defense Drone",
"Sepulcher of the First Ones",
},
[5711] = {
"Ogom the Wretched",
"Sunken Temple",
},
[5719] = {
"Morphaz",
"Sunken Temple",
},
[143622] = {
"Wild Imp",
"Shadowmoon Burial Grounds",
},
[59051] = {
"Strife",
"Temple of the Jade Serpent",
},
[194389] = {
"Lava Spawn",
"Neltharus",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[174569] = {
"Training Dummy",
"The Shadowlands",
},
[89011] = {
"Rylak Skyterror",
"Iron Docks",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
},
[105699] = {
"Mana Saber",
"Court of Stars",
},
[151041] = {
"Etruvis the Vassal",
"Crucible of Storms",
},
[181859] = {
"Volatile Materium",
"Sepulcher of the First Ones",
},
[7849] = {
"Mobile Alert System",
"Gnomeregan",
},
[183138] = {
"Inchoate Shadow",
"Sepulcher of the First Ones",
},
[194647] = {
"Thunder Caller",
"Vault of the Incarnates",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
},
[181861] = {
"Magmatusk",
"Neltharus",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
},
[190174] = {
"Hypnosis Bat",
"Court of Stars",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
},
[196696] = {
"Geode Chunk",
"The Azure Vault",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
},
[24683] = {
"Sunblade Mage Guard",
"Magisters' Terrace",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
},
[183398] = {
"Ancient Sentinel",
"Sepulcher of the First Ones",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
},
[104295] = {
"Blazing Imp",
"Court of Stars",
},
[75715] = {
"Reanimated Ritual Bones",
"Shadowmoon Burial Grounds",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
},
[74948] = {
"Roogug",
"Razorfen Kraul",
},
[185574] = {
"Dominated Saboteur",
"Sepulcher of the First Ones",
},
[75588] = {
"Grotto Toad",
"Razorfen Kraul",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[3527] = {
"Healing Stream Totem",
"Sunken Temple",
},
[84028] = {
"Siegemaster Rokra",
"Iron Docks",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
},
[105703] = {
"Mana Wyrm",
"Court of Stars",
},
[81279] = {
"Grom'kar Flameslinger",
"Iron Docks",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
},
[62858] = {
"Beast",
"Shadowmoon Burial Grounds",
},
[81983] = {
"Verdant Mandragora",
"The Everbloom",
},
[189669] = {
"Binding Spear",
"Neltharus",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
},
[183404] = {
"Eternal Assembler",
"Sepulcher of the First Ones",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
},
[75590] = {
"Enormous Bullfrog",
"Razorfen Kraul",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
},
[105705] = {
"Bound Energy",
"Court of Stars",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
},
[6207] = {
"Caverndeep Ambusher",
"Gnomeregan",
},
[6211] = {
"Caverndeep Reaver",
"Gnomeregan",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[6219] = {
"Corrosive Lurker",
"Gnomeregan",
},
[6223] = {
"Leprous Defender",
"Gnomeregan",
},
[81985] = {
"Everbloom Tender",
"The Everbloom",
},
[6235] = {
"Electrocutioner 6000",
"Gnomeregan",
},
[197985] = {
"Flame Channeler",
"10.0 Dragon Isles",
},
[15547] = {
"Spectral Charger",
"Karazhan",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
},
[185582] = {
"Eternal Assembler",
"Sepulcher of the First Ones",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
},
[5280] = {
"Nightmare Wyrmkin",
"Sunken Temple",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
},
[196581] = {
"White Tiger Statue",
"Shadowmoon Burial Grounds",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[98035] = {
"Dreadstalker",
"Shadowmoon Burial Grounds",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
},
[200035] = {
"Carrion Worm",
"Shadowmoon Burial Grounds",
},
[76105] = {
"Crystalfire Totem",
"Razorfen Kraul",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
},
[156814] = {
"Gor'groth",
"Darkmaul Citadel",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
},
[24557] = {
"Kagani Nightstrike",
"Magisters' Terrace",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
},
[107435] = {
"Suspicious Noble",
"Court of Stars",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
},
[24685] = {
"Sunblade Magister",
"Magisters' Terrace",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[75467] = {
"Cave Bat",
"Razorfen Kraul",
},
[184693] = {
"Living Flame",
"Vault of the Incarnates",
},
[4421] = {
"Charlga Razorflank",
"Razorfen Kraul",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
},
[76107] = {
"Solarshard Totem",
"Razorfen Kraul",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
},
[19874] = {
"Baron Rafe Dreuger",
"Karazhan",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
},
[182777] = {
"Rygelon",
"Sepulcher of the First Ones",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[75149] = {
"Aggem Thorncurse",
"Razorfen Kraul",
},
[181244] = {
"Domination Core",
"Sepulcher of the First Ones",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
},
[36296] = {
"Apothecary Hummel",
"Shadowfang Keep",
},
[156821] = {
"Darkmaul Shadowcaller",
"Darkmaul Citadel",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
},
[184954] = {
"Ancient Shaper",
"Sepulcher of the First Ones",
},
[95674] = {
"Fenryr",
"Halls of Valor",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[97081] = {
"King Bjorn",
"Halls of Valor",
},
[83846] = {
"Yalnu",
"The Everbloom",
},
[16406] = {
"Phantom Attendant",
"Karazhan",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
},
[89] = {
"Infernal",
"Shadowmoon Burial Grounds",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[5720] = {
"Weaver",
"Sunken Temple",
},
[77006] = {
"Corpse Skitterling",
"Shadowmoon Burial Grounds",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
},
[75152] = {
"Death Speaker Jargba",
"Razorfen Kraul",
},
[95676] = {
"Odyn",
"Halls of Valor",
},
[19875] = {
"Baroness Dorothea Millstipe",
"Karazhan",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
},
[97083] = {
"King Ranulf",
"Halls of Valor",
},
[26125] = {
"Pebblestalker",
"Sunken Temple",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[24207] = {
"Army of the Dead",
"Shadowmoon Burial Grounds",
},
[84552] = {
"Toxic Spiderling",
"The Everbloom",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
},
[97084] = {
"King Tor",
"Halls of Valor",
},
[184961] = {
"Gnarled Skitter",
"Sepulcher of the First Ones",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
},
[97788] = {
"Storm Drake",
"Halls of Valor",
},
[185346] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
},
[16407] = {
"Spectral Servant",
"Karazhan",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
},
[185347] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
},
[84554] = {
"Venom-Crazed Pale Hulk",
"The Everbloom",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
},
[74900] = {
"Kraulshaper Tukaar",
"Razorfen Kraul",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
},
[19876] = {
"Lord Robin Daris",
"Karazhan",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
},
[97087] = {
"Valarjar Champion",
"Halls of Valor",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
},
[185607] = {
"Lost Soul",
"Sepulcher of the First Ones",
},
[7079] = {
"Viscous Fallout",
"Gnomeregan",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
},
[167962] = {
"Defunct Dental Drill",
"De Other Side",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
},
[130272] = {
"Constrictor Vine",
"Maraudon",
},
[198136] = {
"Eminent Earthshaper",
"Vault of the Incarnates",
},
[19668] = {
"Sha Beast",
"Shadowmoon Burial Grounds",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
},
[184535] = {
"Overthrown Artisan",
"Sepulcher of the First Ones",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
},
[198142] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
},
[74550] = {
"Razorfen Kraulshaper",
"Razorfen Kraul",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[24744] = {
"Vexallus",
"Magisters' Terrace",
},
[144754] = {
"Fa'thuul the Feared",
"Crucible of Storms",
},
[130273] = {
"Celebrian Dryad",
"Maraudon",
},
[24688] = {
"Wretched Skulker",
"Magisters' Terrace",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
},
[180990] = {
"The Jailer",
"Sepulcher of the First Ones",
},
[24553] = {
"Apoko",
"Magisters' Terrace",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
},
[24560] = {
"Priestess Delrissa",
"Magisters' Terrace",
},
[6212] = {
"Dark Iron Agent",
"Gnomeregan",
},
[75061] = {
"Young Boar",
"Razorfen Kraul",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
},
[24815] = {
"Sunblade Imp",
"Magisters' Terrace",
},
[6232] = {
"Arcane Nullifier X-21",
"Gnomeregan",
},
[94960] = {
"Hymdall",
"Halls of Valor",
},
[130274] = {
"Creeping Sludge",
"Maraudon",
},
[75096] = {
"Crystalline Aberration",
"Razorfen Kraul",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
},
[24556] = {
"Zelfan",
"Magisters' Terrace",
},
[24684] = {
"Sunblade Blood Knight",
"Magisters' Terrace",
},
[181224] = {
"Dausegne",
"Sepulcher of the First Ones",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
},
[163492] = {
"Rabid Wolf",
"Redridge - 9xp Bastion",
},
[97219] = {
"Solsten",
"Halls of Valor",
},
[58964] = {
"Colmek",
"Court of Stars",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[5273] = {
"Atal'ai High Priest",
"Sunken Temple",
},
[5277] = {
"Nightmare Scalebane",
"Sunken Temple",
},
[130275] = {
"Sister of Celebras",
"Maraudon",
},
[75097] = {
"Crystalline Shard",
"Razorfen Kraul",
},
[24777] = {
"Sunblade Sentinel",
"Magisters' Terrace",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
},
[74554] = {
"Razorfen Scarblade",
"Razorfen Kraul",
},
[24696] = {
"Coilskar Witch",
"Magisters' Terrace",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[196102] = {
"Conjured Lasher",
"Darkmoon Faire",
},
[163366] = {
"Magus of the Dead",
"Shadowmoon Burial Grounds",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
},
[197509] = {
"Primal Thundercloud",
"10.0 Dragon Isles",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[69791] = {
"Akulakhan",
"Sepulcher of the First Ones",
},
[163111] = {
"Magistrate Solomon",
"Redridge - 9xp Bastion",
},
[76057] = {
"Carrion Worm",
"Shadowmoon Burial Grounds",
},
[75384] = {
"Kraulshaped Monstrosity",
"Razorfen Kraul",
},
[6220] = {
"Irradiated Horror",
"Gnomeregan",
},
[184533] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[181398] = {
"Mal'Ganis",
"Sepulcher of the First Ones",
},
[17252] = {
"Shaadhun",
"Shadowmoon Burial Grounds",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[24561] = {
"Yazzai",
"Magisters' Terrace",
},
[185581] = {
"Eternal Forger",
"Sepulcher of the First Ones",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
},
[63508] = {
"Xuen",
"Sepulcher of the First Ones",
},
[185363] = {
"Manifestor Krugan",
"Sepulcher of the First Ones",
},
[181399] = {
"Kin'tessa",
"Sepulcher of the First Ones",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
},
[24689] = {
"Wretched Bruiser",
"Magisters' Terrace",
},
[183396] = {
"Eternal Forger",
"Sepulcher of the First Ones",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
},
[24687] = {
"Sunblade Physician",
"Magisters' Terrace",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
},
[192781] = {
"Ore Elemental",
"Neltharus",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
},
[74652] = {
"Razorfen Thornbolt",
"Razorfen Kraul",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
},
[69792] = {
"Akulakhan",
"Sepulcher of the First Ones",
},
[83028] = {
"Grom'kar Deadeye",
"Iron Docks",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
},
[186644] = {
"Leymor",
"The Azure Vault",
},
[184962] = {
"Gnarled Scavenger",
"Sepulcher of the First Ones",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
},
[84499] = {
"Entanglement",
"The Everbloom",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
},
[47120] = {
"Argaloth",
"Baradin Hold",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
},
[104822] = {
"Flame of Woe",
"Halls of Valor",
},
[184600] = {
"Llarondus",
"Sepulcher of the First Ones",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
},
[7603] = {
"Leprous Assistant",
"Gnomeregan",
},
[76444] = {
"Subjugated Soul",
"Shadowmoon Burial Grounds",
},
[74462] = {
"Warlord Ramtusk",
"Razorfen Kraul",
},
[36272] = {
"Apothecary Frye",
"Shadowfang Keep",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[182169] = {
"Lihuvim",
"Sepulcher of the First Ones",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
},
[55869] = {
"Alizabal",
"Baradin Hold",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
},
[184603] = {
"Ancient Bufonid",
"Sepulcher of the First Ones",
},
[417] = {
"Phuutom",
"Sepulcher of the First Ones",
},
[97202] = {
"Olmyr the Enlightened",
"Halls of Valor",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
},
[16410] = {
"Spectral Retainer",
"Karazhan",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[24690] = {
"Wretched Husk",
"Magisters' Terrace",
},
[81305] = {
"Fleshrender Nok'gar",
"Iron Docks",
},
[184733] = {
"Dominated Grunt",
"Sepulcher of the First Ones",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
},
[76446] = {
"Shadowmoon Dominator",
"Shadowmoon Burial Grounds",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
},
[8317] = {
"Atal'ai Deathwalker's Spirit",
"Sunken Temple",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
},
[74555] = {
"Razorfen Hidecrusher",
"Razorfen Kraul",
},
[5709] = {
"Shade of Eranikus",
"Sunken Temple",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
},
[5721] = {
"Dreamscythe",
"Sunken Temple",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
},
[184734] = {
"Sacred Matrix Automa",
"Sepulcher of the First Ones",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
},
[183406] = {
"Colossal Realmcrafter",
"Sepulcher of the First Ones",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[193558] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
},
[107073] = {
"Duskwatch Reinforcement",
"Court of Stars",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
},
[184735] = {
"Degeneration Automa",
"Sepulcher of the First Ones",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[56350] = {
"Disciple of Hate",
"Baradin Hold",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
},
[79852] = {
"Oshir",
"Iron Docks",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
},
[101639] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
},
[183202] = {
"Mawsworn Warden",
"Path of the Primus",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
},
[75440] = {
"Quilboar Pebble-Watcher",
"Razorfen Kraul",
},
[96934] = {
"Valarjar Trapper",
"Halls of Valor",
},
[184737] = {
"Acquisitions Automa",
"Sepulcher of the First Ones",
},
[180773] = {
"Vigilant Guardian",
"Sepulcher of the First Ones",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
},
[7915] = {
"Walking Bomb",
"Gnomeregan",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[189470] = {
"Lava Flare",
"Neltharus",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
},
[5710] = {
"Jammal'an the Prophet",
"Sunken Temple",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
},
[16411] = {
"Spectral Chef",
"Karazhan",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
},
[182311] = {
"Pre-Fabricated Sentry",
"Sepulcher of the First Ones",
},
[24723] = {
"Selin Fireheart",
"Magisters' Terrace",
},
[183206] = {
"Winged Soul Eater",
"Path of the Primus",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
},
[96677] = {
"Steeljaw Grizzly",
"Halls of Valor",
},
[16409] = {
"Phantom Guest",
"Karazhan",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
},
[190496] = {
"Terros",
"Vault of the Incarnates",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
},
[184742] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
},
[180906] = {
"Halondrus",
"Sepulcher of the First Ones",
},
[186739] = {
"Azureblade",
"The Azure Vault",
},
[86809] = {
"Grom'kar Incinerator",
"Iron Docks",
},
[83612] = {
"Skulloc",
"Iron Docks",
},
[181546] = {
"Prototype of Renewal",
"Sepulcher of the First Ones",
},
[163260] = {
"Vicious Ghoul",
"Redridge - 9xp Bastion",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
},
[183209] = {
"Soulseeker",
"Path of the Primus",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
},
[16171] = {
"Coldmist Widow",
"Karazhan",
},
[75429] = {
"Quilboar Mealtender",
"Razorfen Kraul",
},
[181548] = {
"Prototype of Absolution",
"Sepulcher of the First Ones",
},
[74534] = {
"Crystalline Behemoth",
"Razorfen Kraul",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
},
[135002] = {
"Demonic Tyrant",
"Sepulcher of the First Ones",
},
[8035] = {
"Dark Iron Land Mine",
"Gnomeregan",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[181549] = {
"Prototype of War",
"Sepulcher of the First Ones",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
},
[12218] = {
"Vile Larva",
"Maraudon",
},
[75110] = {
"Razorfen Torchbearer",
"Razorfen Kraul",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
},
[12258] = {
"Razorlash",
"Maraudon",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[174773] = {
"Spiteful Shade",
"Shadowmoon Burial Grounds",
},
[16412] = {
"Ghostly Baker",
"Karazhan",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
},
[75466] = {
"Vile Bat",
"Razorfen Kraul",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
},
[181551] = {
"Prototype of Duty",
"Sepulcher of the First Ones",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[194467] = {
"Brackenhide Slasher",
"Brackenhide Hollow",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[104273] = {
"Jazshariu",
"Court of Stars",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[6225] = {
"Mechano-Tank",
"Gnomeregan",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
},
[6233] = {
"Mechanized Sentry",
"Gnomeregan",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[36565] = {
"Apothecary Baxter",
"Shadowfang Keep",
},
[194469] = {
"Fledgling Slasher",
"Brackenhide Hollow",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
},
[61245] = {
"Capacitor Totem",
"Sunken Temple",
},
[83616] = {
"Zoggosh",
"Iron Docks",
},
[184623] = {
"Ancient Avian",
"Sepulcher of the First Ones",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
},
[95061] = {
"Greater Fire Elemental",
"Sunken Temple",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
},
[5270] = {
"Atal'ai Corpse Eater",
"Sunken Temple",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
},
[197793] = {
"Awakened Juggernaut",
"UNKNOWN",
},
[184880] = {
"Dominated Disrupter",
"Sepulcher of the First Ones",
},
[15687] = {
"Moroes",
"Karazhan",
},
[185008] = {
"Volatile Sentry",
"Sepulcher of the First Ones",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
},
[6329] = {
"Irradiated Pillager",
"Gnomeregan",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
},
[29264] = {
"Spirit Wolf",
"Shadowmoon Burial Grounds",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[16408] = {
"Phantom Valet",
"Karazhan",
},
[185271] = {
"Stellar Mote",
"Sepulcher of the First Ones",
},
[182074] = {
"Acquisitions Automa",
"Sepulcher of the First Ones",
},
[165189] = {
"Smierdziel",
"Shadowmoon Burial Grounds",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
},
[184882] = {
"Mawsworn Warden",
"Path of the Primus",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
},
[99922] = {
"Ebonclaw Packmate",
"Halls of Valor",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
},
[81297] = {
"Dreadfang",
"Iron Docks",
},
[184627] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[198310] = {
"Flame Tarasek",
"Vault of the Incarnates",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
},
[197799] = {
"Quarry Infuser",
"UNKNOWN",
},
[182071] = {
"Guardian Automa",
"Sepulcher of the First Ones",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[184884] = {
"Mawsworn Warden",
"Path of the Primus",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
},
[185268] = {
"Ebonsteel Construct",
"Sepulcher of the First Ones",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
},
[8336] = {
"Hakkari Sapper",
"Sunken Temple",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[193709] = {
"Primalist Earthwarden",
"Vault of the Incarnates",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
},
[197801] = {
"Awakened Terrasentry",
"UNKNOWN",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
},
[76088] = {
"Razorfen Huntmaster",
"Razorfen Kraul",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[80808] = {
"Neesa Nox",
"Iron Docks",
},
[95832] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
},
[75436] = {
"Quilboar Swinewatcher",
"Razorfen Kraul",
},
[81638] = {
"Aqueous Globule",
"The Everbloom",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[83613] = {
"Koramar",
"Iron Docks",
},
[74669] = {
"Crystalfire Totem",
"Razorfen Kraul",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
},
[76089] = {
"Razorfen Beast Stalker",
"Razorfen Kraul",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
},
[194273] = {
"Witherling",
"Brackenhide Hollow",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[16415] = {
"Skeletal Waiter",
"Karazhan",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
},
[166262] = {
"Decaying Corpse",
"Darkmaul Citadel",
},
[95833] = {
"Hyrja",
"Halls of Valor",
},
[75437] = {
"Quilboar Broodmentor",
"Razorfen Kraul",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[156501] = {
"Ravnyr",
"Darkmaul Citadel",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
},
[12219] = {
"Barbed Lasher",
"Maraudon",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
},
[185274] = {
"Astral Particle",
"Sepulcher of the First Ones",
},
[13282] = {
"Noxxion",
"Maraudon",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
},
[16414] = {
"Ghostly Steward",
"Karazhan",
},
[185275] = {
"Kelmortos",
"Sepulcher of the First Ones",
},
[97369] = {
"Liquid Magma Totem",
"Sepulcher of the First Ones",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
},
[75055] = {
"Razorfen Torchbearer",
"Razorfen Kraul",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[75247] = {
"Groyat, the Blind Hunter",
"Razorfen Kraul",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
},
[75439] = {
"Novice Quilboar",
"Razorfen Kraul",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
},
[8319] = {
"Nightmare Whelp",
"Sunken Temple",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
},
[156825] = {
"Darkmaul Centurion",
"Darkmaul Citadel",
},
[184126] = {
"Defense Matrix Automa",
"Sepulcher of the First Ones",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[5722] = {
"Hazzas",
"Sunken Temple",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
},
[7800] = {
"Mekgineer Thermaplugg",
"Gnomeregan",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
},
[74545] = {
"Razorfen Geomagus",
"Razorfen Kraul",
},
[31216] = {
"Bengeezuz",
"Sepulcher of the First Ones",
},
[181954] = {
"Anduin Wrynn",
"Sepulcher of the First Ones",
},
[80875] = {
"Bombsquad",
"Iron Docks",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
},
[104218] = {
"Advisor Melandrus",
"Court of Stars",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[183745] = {
"Guardian Automa",
"Sepulcher of the First Ones",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
},
[112668] = {
"Infernal Imp",
"Court of Stars",
},
[2630] = {
"Earthbind Totem",
"Sunken Temple",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[13456] = {
"Noxxion's Spawn",
"Maraudon",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
},
[104277] = {
"Legion Hound",
"Court of Stars",
},
[57080] = {
"Corrupted Scroll",
"Temple of the Jade Serpent",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[95675] = {
"God-King Skovald",
"Halls of Valor",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
},
[185154] = {
"Mal'Ganis",
"Sepulcher of the First Ones",
},
[65310] = {
"Turnip Punching Bag",
"Halls of Valor",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[185155] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[52363] = {
"Occu'thar",
"Baradin Hold",
},
[184828] = {
"Winged Soul Eater",
"Path of the Primus",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
},
[181395] = {
"Skolex",
"Sepulcher of the First Ones",
},
[104918] = {
"Vigilant Duskwatch",
"Court of Stars",
},
[181850] = {
"Pre-Fabricated Sentry",
"Sepulcher of the First Ones",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
},
[104215] = {
"Patrol Captain Gerdo",
"Court of Stars",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[183499] = {
"Hired Muscle",
"Sepulcher of the First Ones",
},
[183501] = {
"Artificer Xy'mox",
"Sepulcher of the First Ones",
},
[185181] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
},
[96640] = {
"Valarjar Marksman",
"Halls of Valor",
},
[181011] = {
"Ancient Guardian",
"Sepulcher of the First Ones",
},
[99868] = {
"Fenryr",
"Halls of Valor",
},
[171396] = {
"Kyrian Goliath",
"Sepulcher of the First Ones",
},
[183496] = {
"Foul Gorger",
"Sepulcher of the First Ones",
},
[104217] = {
"Talixae Flamewreath",
"Court of Stars",
},
[74549] = {
"Razorfen Stonechanter",
"Razorfen Kraul",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[24686] = {
"Sunblade Warlock",
"Magisters' Terrace",
},
[17007] = {
"Lady Keira Berrybuck",
"Karazhan",
},
[96608] = {
"Ebonclaw Worg",
"Halls of Valor",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[157328] = {
"Darkmaul Channeler",
"Darkmaul Citadel",
},
[6066] = {
"Earthgrab Totem",
"Sunken Temple",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
},
[183498] = {
"Illicit Collector",
"Sepulcher of the First Ones",
},
[75509] = {
"Sadana Bloodfury",
"Shadowmoon Burial Grounds",
},
[185800] = {
"N√≠√µh√∂ggr",
"Court of Stars",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
},
},
["border_color"] = {
1,
nil,
0.011764705882353,
0.84000000357628,
},
["focus_color"] = {
nil,
nil,
nil,
1,
},
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["honor_blizzard_plate_alpha"] = true,
["health_selection_overlay_alpha"] = 0,
["transparency_behavior"] = 4,
["minor_height_scale"] = 0.94999998807907,
["aura_consolidate"] = true,
["not_affecting_combat_alpha"] = 1,
["minor_width_scale"] = 0.89999997615814,
["aura_timer_text_font"] = "PT Sans Narrow",
["aura_alpha"] = 0.84999996423721,
["cast_color_settings"] = {
["enabled"] = true,
["width"] = 12,
},
["aura_height"] = 18,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator2",
["castbar_target_show"] = true,
["cast_statusbar_bgtexture"] = "Solid",
["aura2_x_offset"] = 0,
["target_indicator"] = "Double Arrows",
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Icon Settings:",
["Name"] = "Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showIcon",
["Value"] = true,
["Name"] = "Show Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Key"] = "iconOnLeftSide",
["Value"] = true,
["Name"] = "Icon on Left Side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Key"] = "iconSizeOffset",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Key"] = "iconPadding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Padding",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option5",
["Value"] = "Can't Interrupt Texture:",
["Name"] = "Interrupt Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTexture",
["Value"] = true,
["Name"] = "Show Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Key"] = "iconTexturePath",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Name"] = "Texture Path",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Key"] = "desaturatedTexture",
["Value"] = true,
["Name"] = "Texture Desaturated",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Key"] = "textureWidth",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Key"] = "textureHeightMod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Height Mod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Key"] = "texturePosition",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["version"] = -1,
["LastHookEdited"] = "",
["semver"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["Time"] = 1547392935,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Color Automation [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1614608917,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 85,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Execute Range [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1623383400,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "Attacking Specific Unit [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1541606242,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Hide Neutral Units [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Combo Points [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Extra Border [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["LastHookEdited"] = "",
["semver"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["Time"] = 1554138845,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Don't Have Aura [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Players Targeting a Target [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614606781,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 358,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Initialization",
["Name"] = "Aura Reorder [Plater]",
},
{
["OptionsValues"] = {
["targetcolor"] = {
0,
0.47450980392157,
1,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1654562266,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/_GSmNC31z/1",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 168,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "targetcolor",
["Value"] = {
0.46274509803922,
1,
0.48235294117647,
1,
},
["Name"] = "targetcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "targetcolor",
},
},
["LastHookEdited"] = "",
["Name"] = "Current Target Color [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1678511108,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = true,
["Revision"] = 285,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "@scriptname Options:",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
1,
0,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Key"] = "antsAmount",
["Value"] = 6,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Amount",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Key"] = "frequency",
["Value"] = 0.25,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Speed",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsLength",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants length",
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsThickness",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Thickness",
},
{
["Type"] = 4,
["Key"] = "antsBorder",
["Value"] = false,
["Name"] = "Ants Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outerGlow",
["Value"] = false,
["Name"] = "Outer Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["HooksTemp"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["semver"] = "1.0.6",
["Name"] = "Steal/Purge Aura Glow",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame)\n    \n    local healthBar = unitFrame.healthBar\n    local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n    -- change the value to whatever, for fire mages its 30% so 0.30\n    local useScorch = 0.30\n    \n    if (percent <= useScorch) then\n        -- from here the customizing is optional\n        -- for a list of commands look at the plater api\n        -- https://www.curseforge.com/wow/addons/plater-nameplates/pages/scripts/list-of-api-functions\n        \n        -- below is an example which will set the color & bordercolor to orange, \n        -- change the size of the frame and add a flash to it\n        \n        Plater.SetNameplateColor (unitFrame, \"#ff8c00\")\n        Plater.SetBorderColor (unitFrame, \"#ff8c00\")\n        Plater.SetNameplateSize (unitFrame, 120, 20)\n        Plater.FlashNameplateBorder (unitFrame, 1)\n    end\n    \n    \nend",
},
["Time"] = 1625007755,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/pc7PK_czd/1",
["Icon"] = 135827,
["Enabled"] = false,
["Revision"] = 102,
["semver"] = "1.0.0",
["Author"] = "Sphyre-Tarren Mill",
["Desc"] = "distinguish the mob for scorching",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Scorch",
},
{
["OptionsValues"] = {
["colorHealthbar"] = true,
["targetEnabled"] = false,
["raidMarkColors"] = false,
["targetColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["UseDefaultColor"] = false,
["IMobs"] = {
1,
0.97254901960784,
0,
1,
},
["threatColors"] = true,
["DefaultColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["EnMobs"] = {
1,
0,
0.10196078431373,
1,
},
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"]\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    modTable.UseDefaultColor = modTable.config[\"UseDefaultColor\"]\n    modTable.DefaultColor = modTable.config[\"DefaultColor\"]\n    \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    --Bosses - Greenyblue - \"Boss\"\n    --Mini Boss - DarkMagenta - \"MiniBoss\"\n    \n    --Focus mobs - Blue - \"FMobs\"\n    --Deadly mobs - Light Blue - \"DMobs\"\n    --Dodge Mobs - Purple - \"DoMobs\"\n    \n    --Healer mobs - White - HMobs\n    --Interruptable damage mobs - Orange - InMobs\n    --Enrage mobs - Light Orange - \"EnMobs\"\n    \n    --Expolsives mobs - Dark Pink - \"ExMobs\"\n    \n    modTable.NpcColors = {       \n        \n        -- De Other Side\n        [166473] = modTable.config[\"Boss\"],     --Hakkar the Soulflayer\n        [164555] = modTable.config[\"Boss\"],     --Milificent Manastorm\n        [164556] = modTable.config[\"Boss\"],     --Millhouse Manastorm\n        [169769] = modTable.config[\"Boss\"],     --Mueh'zala\n        \n        [170486] = modTable.config[\"FMobs\"],    --Atal'ia Devoted\n        [168992] = modTable.config[\"FMobs\"],    --Risen Cultist\n        [168934] = modTable.config[\"FMobs\"],    --Enraged Spirit\n        [167962] = modTable.config[\"FMobs\"],    --Defunct Dental Drill\n        [171184] = modTable.config[\"FMobs\"],    --Mythresh, Sky's Talon\n        \n        [167964] = modTable.config[\"DMobs\"],    --4.RF-4.RF\n        [164862] = modTable.config[\"DMobs\"],    --Weald Shimmermoth\n        \n        [167965] = modTable.config[\"IMobs\"],    --Lubricator\n        \n        [170490] = modTable.config[\"HMobs\"],    --Atal'ai High Priest\n        [170572] = modTable.config[\"HMobs\"],    --Atal'ai Hoodoo Hexxer\n        \n        [169905] = modTable.config[\"EnMobs\"],   --Risen Warlord\n        [171343] = modTable.config[\"EnMobs\"],   --Bladebeak Matriarch\n        \n        [168942] = modTable.config[\"DoMobs\"],    --DeathSpeaker\n        [167963] = modTable.config[\"DoMobs\"],    --Headless Client\n        [170480] = modTable.config[\"DoMobs\"],    --Atal'ia Deathwalker\n        \n        [170147] = modTable.config[\"ExMobs\"],   --Volatile Memory\n        \n        --Theater Of Pain\n        [164451] = modTable.config[\"Boss\"],     --Dessia the Decapitator\n        [164463] = modTable.config[\"Boss\"],     --Paceran the virulent\n        [164461] = modTable.config[\"Boss\"],     --Sathel the Accursed\n        [162317] = modTable.config[\"Boss\"],     --Gorechop\n        [162309] = modTable.config[\"Boss\"],     --Kul'tharok\n        [162329] = modTable.config[\"Boss\"],     --Xav the Unfallen\n        [165946] = modTable.config[\"Boss\"],     --Mordretha the Endless Empress\n        \n        [167536] = modTable.config[\"MiniBoss\"], --Harugia the Bloodthirsty\n        [162744] = modTable.config[\"MiniBoss\"], --Nekthara the Mangler\n        \n        [174210] = modTable.config[\"FMobs\"],    --Blighted Sludge-Spewer\n        [170882] = modTable.config[\"FMobs\"],    --Bone Magus\n        [160495] = modTable.config[\"FMobs\"],    --Maniacal Soulbinder\n        \n        [174197] = modTable.config[\"DMobs\"],    --Battlefield Ritualist\n        [163086] = modTable.config[\"DMobs\"],    --Rancid Gasbag\n        [170690] = modTable.config[\"DMobs\"],    --Diseased Horror\n        [167998] = modTable.config[\"DMobs\"],    --Portal Guardian\n        [164506] = modTable.config[\"DMobs\"],    --Ancient Captain\n        \n        [170850] = modTable.config[\"EnMobs\"],   --Raging BloodHorn\n        \n        [169893] = modTable.config[\"DoMobs\"],   --Hefarious Darkspeaker\n        [162763] = modTable.config[\"DoMobs\"],    --Soulforged Bonereaver\n        \n        --Necrotic Wake\n        [162691] = modTable.config[\"Boss\"],     --BlightBone\n        [162692] = modTable.config[\"Boss\"],     --Amarth\n        [166882] = modTable.config[\"Boss\"],     --Surgeon Stitchflesh\n        [166945] = modTable.config[\"Boss\"],     --Nalthor the Rimebinder\n        \n        [165824] = modTable.config[\"MiniBoss\"], --Nar'zudah\n        [165197] = modTable.config[\"MiniBoss\"], --Skeletal Monostrosity\n        \n        [163121] = modTable.config[\"FMobs\"],    --Stiched Vanguard\n        [165137] = modTable.config[\"FMobs\"],    --Zolramus GateKeeper\n        [163618] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        [168443] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        \n        [163128] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [168357] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [173044] = modTable.config[\"DMobs\"],    --Stitching Assistant\n        [167731] = modTable.config[\"DMobs\"],    --Separation Assistant\n        [163126] = modTable.config[\"DMobs\"],    --Brittlebone Mage\n        [163621] = modTable.config[\"DMobs\"],    --Goregrind\n        [163620] = modTable.config[\"DMobs\"],    --Rotspew\n        [172981] = modTable.config[\"DMobs\"],    --Kyrian Stitchwerk\n        \n        [173016] = modTable.config[\"IMobs\"],    --Corpse Collector\n        [166302] = modTable.config[\"IMobs\"],    --Corpse Harvester\n        [165919] = modTable.config[\"IMobs\"],    --Skeletal Marauder\n        \n        [165222] = modTable.config[\"HMobs\"],    --Zolramus Bonemender\n        [165872] = modTable.config[\"HMobs\"],    --Flesh Crafter\n        \n        --Halls Of Atonment\n        [165408] = modTable.config[\"Boss\"],     --Halkias\n        [156827] = modTable.config[\"Boss\"],     --Echelon  \n        [165410] = modTable.config[\"Boss\"],     --High Adjudicator Aleez\n        [164218] = modTable.config[\"Boss\"],     --Lord Chamberlain\n        \n        [167876] = modTable.config[\"MiniBoss\"], --Inquisitor Sigar\n        \n        [164562] = modTable.config[\"FMobs\"],    --Depraved Houndmaster\n        [165414] = modTable.config[\"FMobs\"],    --Depraved Obliterator\n        \n        [164563] = modTable.config[\"DMobs\"],    --Vicious Gargon\n        [165515] = modTable.config[\"DMobs\"],    --Depraved Darkblade\n        [167607] = modTable.config[\"DMobs\"],    --Stoneborn Slasher\n        [164557] = modTable.config[\"DMobs\"],    --Shard of Halkias\n        \n        [165529] = modTable.config[\"IMobs\"],    --Depraved Collector\n        [167612] = modTable.config[\"IMobs\"],    --Stoneborn Reaver\n        \n        [167611] = modTable.config[\"DoMobs\"],    --Stoneborn Eviscerator\n        \n        --Spires Of Ascension\n        [162059] = modTable.config[\"Boss\"],     --Kin-Tara\n        [163077] = modTable.config[\"Boss\"],     --Azules\n        [162058] = modTable.config[\"Boss\"],     --Ventunax\n        [162060] = modTable.config[\"Boss\"],     --Oryphrino\n        [167410] = modTable.config[\"Boss\"],     --Devos\n        \n        [168844] = modTable.config[\"MiniBoss\"],  --Lakesis\n        [168843] = modTable.config[\"MiniBoss\"],  --Klotos\n        [168845] = modTable.config[\"MiniBoss\"],  --Astronos\n        \n        [163458] = modTable.config[\"TMobs\"],   --Forsworn Castigator\n        [168418] = modTable.config[\"TMobs\"],   --Forsworn Inquisitor\n        [163520] = modTable.config[\"TMobs\"],   --Forsworn Squad-Leader\n        [168681] = modTable.config[\"TMobs\"],   --Forsworn Helion\n        \n        [163503] = modTable.config[\"DMobs\"],   --EtherDiver\n        [168658] = modTable.config[\"DMobs\"],   --Forsworn Devastator\n        [168717] = modTable.config[\"DMobs\"],   --Forsworn Justicar\n        \n        [168318] = modTable.config[\"IMobs\"],   --Forsworn Goliath\n        \n        [168420] = modTable.config[\"HMobs\"],   --Forsworn Champion\n        [163459] = modTable.config[\"HMobs\"],   --Forsworn Mender\n        [168718] = modTable.config[\"HMobs\"],   --Forsworn Warden\n        \n        --Sanguine Depths\n        [162103] = modTable.config[\"Boss\"],     --Executor Tarvold\n        [165318] = modTable.config[\"Boss\"],     --General Kaal\n        [162102] = modTable.config[\"Boss\"],     --Grand Proctor Beryllia\n        [162100] = modTable.config[\"Boss\"],     --Kryxis the Voracious\n        \n        [171376] = modTable.config[\"MiniBoss\"],    --Head Custodian Javlin\n        \n        [165076] = modTable.config[\"FMobs\"],    --Gluttonous Tick\n        [162040] = modTable.config[\"FMobs\"],    --Grand Overseer\n        [172265] = modTable.config[\"FMobs\"],   --Remnant of Fury\n        [168882] = modTable.config[\"FMobs\"],    --Fleeting Manifestation\n        \n        [162049] = modTable.config[\"DMobs\"],   --Vestige of Doubt\n        [171448] = modTable.config[\"DMobs\"],    --Dreadful Huntmaster\n        [166396] = modTable.config[\"DMobs\"],   --Noble Skirmisher\n        [166589] = modTable.config[\"DMobs\"],    --Animated Weapon\n        [171799] = modTable.config[\"DMobs\"],    --Depths Warden\n        [162047] = modTable.config[\"DMobs\"],    --Instiable Brute\n        \n        [162039] = modTable.config[\"IMobs\"],   --Wicked Oppressor\n        \n        [162057] = modTable.config[\"DoMobs\"],    --Chamber Sentinel\n        [162038] = modTable.config[\"DoMobs\"],   --Regal Mistdancer\n        \n        --Mist of Trina Scithe      \n        [164567] = modTable.config[\"Boss\"],     --ingra-maloch\n        [170217] = modTable.config[\"Boss\"],     --Mistcaller\n        [164517] = modTable.config[\"Boss\"],     --Tred'ova \n        \n        [164929] = modTable.config[\"FMobs\"],   --Tirnenn Villager\n        [164926] = modTable.config[\"FMobs\"],   --Drust Boughbreaker\n        \n        [166275] = modTable.config[\"DMobs\"],   --Mistveil Shaper\n        \n        [164920] = modTable.config[\"DMobs\"],   --Drust Soulcleaver\n        [166304] = modTable.config[\"DMobs\"],   --Mistveil Stinger\n        \n        [166299] = modTable.config[\"HMobs\"],   --Mistveil Tender\n        \n        [164921] = modTable.config[\"IMobs\"],   --Drust Harvester\n        [167111] = modTable.config[\"IMobs\"],   --Spinemaw Staghorn\n        \n        [167113] = modTable.config[\"DoMobs\"],   --Spinemaw Acidgullet \n        [166276] = modTable.config[\"DoMobs\"],   --Mistveil Guardian\n        \n        --Plaguefall    \n        [164967] = modTable.config[\"Boss\"],     --Doctor Ickus\n        [164266] = modTable.config[\"Boss\"],     --Domina Venomblade\n        [164255] = modTable.config[\"Boss\"],     --Globgrog\n        [164267] = modTable.config[\"Boss\"],     --Margrave Stradama\n        \n        [168886] = modTable.config[\"MiniBoss\"],  --Virulax Blightweaver\n        [169861] = modTable.config[\"MiniBoss\"],  --Ickor Bileflesh\n        \n        [164737] = modTable.config[\"FMobs\"],    --Brood Ambusher\n        [163915] = modTable.config[\"FMobs\"],    --Hatchling Nest\n        [168572] = modTable.config[\"FMobs\"],    --Fungi Stormer\n        [163891] = modTable.config[\"FMobs\"],    --Rotmarrow Slime\n        [168837] = modTable.config[\"FMobs\"],    --Stealthling\n        \n        [168578] = modTable.config[\"DMobs\"],    --FungalMancer\n        [168627] = modTable.config[\"DMobs\"],    --Plaguebinder\n        [167493] = modTable.config[\"DMobs\"],    --Venomous Sniper\n        [163882] = modTable.config[\"DMobs\"],    --Decaying Flesh Giant\n        [168310] = modTable.config[\"DMobs\"],    --Plagueroc\n        [165430] = modTable.config[\"DMobs\"],    --Malignant Spawn\n        \n        [168393] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [168396] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [163894] = modTable.config[\"DoMobs\"],   --Blighted Spinebreaker\n        \n        [169159] = modTable.config[\"ExMobs\"],   --Unstable Canister\n        [168878] = modTable.config[\"ExMobs\"],   --Rigged Plagueborer        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            elseif modTable.UseDefaultColor and not (unitFrame.namePlateUnitReaction == 4) and not unitIsPlayer and not unitFrame.namePlateIsQuestObjective then\n                Plater.SetNameplateColor(unitFrame, modTable.DefaultColor)\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n",
},
["Time"] = 1628712779,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/ocXXJPJZ7/6",
["Enabled"] = false,
["Revision"] = 236,
["semver"] = "1.0.5",
["Author"] = "Yummyyummy-Ravencrest",
["Desc"] = "Colours the Nameplates according to the type of M+ mob. This is my version of M+ Colored Mobs, https://wago.io/UKpo0_GbE",
["Prio"] = 98,
["version"] = 6,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Mythic+ Colours:",
["Name"] = "Colors Header",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "Boss",
["Value"] = {
0,
1,
0.5843137254902,
1,
},
["Name"] = "Boss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "MiniBoss",
["Value"] = {
0.37647058823529,
0,
0.37647058823529,
1,
},
["Name"] = "MiniBoss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mini bosses",
},
{
["Type"] = 1,
["Key"] = "FMobs",
["Value"] = {
0,
0,
1,
1,
},
["Name"] = "Focus Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that need to be focus.",
},
{
["Type"] = 1,
["Key"] = "DMobs",
["Value"] = {
0,
1,
1,
1,
},
["Name"] = "Deadly Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are considered Deadly.",
},
{
["Type"] = 1,
["Key"] = "DoMobs",
["Value"] = {
0.81176470588235,
0,
1,
1,
},
["Name"] = "Dodge Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are not considered deadly, but have ability's that need to be dogded.",
},
{
["Type"] = 1,
["Key"] = "HMobs",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Healer Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have healing ability's that should be kicked,",
},
{
["Type"] = 1,
["Key"] = "IMobs",
["Value"] = {
1,
0.49803921568627,
0,
1,
},
["Name"] = "Interruptable Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have Interruptable spell that should be kicked.",
},
{
["Type"] = 1,
["Key"] = "EnMobs",
["Value"] = {
1,
0.63921568627451,
0,
1,
},
["Name"] = "Enrage Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that enrage and should be calmed if possible.",
},
{
["Type"] = 1,
["Key"] = "ExMobs",
["Value"] = {
1,
0,
0.38039215686275,
1,
},
["Name"] = "Expolsives Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that explode before or after death. WATCH OUT!!!",
},
{
["Type"] = 1,
["Key"] = "DefaultColor",
["Value"] = {
0.43921568627451,
0.43921568627451,
0.43921568627451,
1,
},
["Name"] = "DefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetColor",
["Value"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["Name"] = "Target Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option9",
["Value"] = 0,
["Name"] = "Option 9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option22",
["Value"] = "Addictional Options",
["Name"] = "Addictional Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "targetEnabled",
["Value"] = false,
["Name"] = "Use Target Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "raidMarkColors",
["Value"] = true,
["Name"] = "Raid Mark Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "colorHealthbar",
["Value"] = false,
["Name"] = "Color Healthbar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "threatColors",
["Value"] = false,
["Name"] = "ThreatColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 4,
["Key"] = "UseDefaultColor",
["Value"] = true,
["Name"] = "Use Default Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["HooksTemp"] = {
},
["Name"] = "M+ Colouring",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["UID"] = "0x610c5b685dc84cc7",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1678511151,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 477,
["semver"] = "",
["Author"] = "Verlijke-Mal'Ganis",
["Desc"] = "Changes the color of the nameplate castbar based on the current cooldown of the player's interrupt.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Interrupt CD Indicator",
["Options"] = {
{
["Type"] = 1,
["Key"] = "readyColor",
["Value"] = {
0,
1,
0,
1,
},
["Name"] = "Kick Ready Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is ready to be used.",
},
{
["Type"] = 1,
["Key"] = "semiCooldownColor",
["Value"] = {
1,
0.5921568627451,
0.031372549019608,
1,
},
["Name"] = "Kick Will Be Ready Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, but will be ready before the cast ends.",
},
{
["Type"] = 1,
["Key"] = "cooldownColor",
["Value"] = {
1,
0,
0.007843137254902,
1,
},
["Name"] = "Kick Will NOT Be Ready",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, and will NOT be ready before the cast ends.",
},
{
["Type"] = 2,
["Max"] = 1000,
["Desc"] = "Time in milliseconds that your kick should be off cooldown before cast end to count as \"kick will be ready\" (recommended to set to a few hundred ms above your latency).",
["Min"] = 0,
["Key"] = "cooldownTolerance",
["Value"] = 500,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Kick CD Tolerance (ms)",
},
{
["Type"] = 1,
["Key"] = "protectedColor",
["Value"] = {
0.74117647058824,
0.74901960784314,
0.73725490196078,
1,
},
["Name"] = "Protected Cast Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for protected casts.",
},
{
["Type"] = 1,
["Key"] = "interruptedColor",
["Value"] = {
1,
0,
0,
1,
},
["Name"] = "Interrupted Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for interrupted casts.",
},
{
["Type"] = 4,
["Key"] = "cooldownLine",
["Value"] = true,
["Name"] = "Castbar CD Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Draw a line on castbars indicating when your interrupt will be off-cooldown.",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["UID"] = "0x62229f65202d123",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
},
["Time"] = 1678511103,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/CignDPWs3/8",
["Icon"] = 4224736,
["Enabled"] = true,
["Revision"] = 499,
["Options"] = {
{
["Type"] = 4,
["Key"] = "setColor",
["Value"] = true,
["Name"] = "Set Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust health bar colors?",
},
{
["Type"] = 4,
["Key"] = "setNameColor",
["Value"] = false,
["Name"] = "Set Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 4,
["Key"] = "setBorderColor",
["Value"] = false,
["Name"] = "Set Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 1,
["Key"] = "vyColor",
["Value"] = {
0,
0.9921568627451,
1,
1,
},
["Name"] = "Vy Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "urhColor",
["Value"] = {
0.63137254901961,
0.34901960784314,
1,
1,
},
["Name"] = "Urh Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "woColor",
["Value"] = {
0.33725490196078,
1,
0.42352941176471,
1,
},
["Name"] = "Wo Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "pog",
["Value"] = 0,
["Name"] = "Divider",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setName",
["Value"] = true,
["Name"] = "Set Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's Name?",
},
{
["Type"] = 3,
["Key"] = "vyName",
["Value"] = "Vy (Haste)",
["Name"] = "Vy Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "urhName",
["Value"] = "Urh (CDR)",
["Name"] = "Urh Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "woName",
["Value"] = "Wo (Stealth)",
["Name"] = "Wo Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setHeight",
["Value"] = false,
["Name"] = "Set Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar height?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Key"] = "barHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Bar Height",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setFontSize",
["Value"] = false,
["Name"] = "Set Font Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's font size?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Key"] = "fontSize",
["Value"] = 20,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Font Size",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setTexture",
["Value"] = false,
["Name"] = "Set Bar Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar texture?",
},
{
["Type"] = 5,
["Key"] = "barWarning",
["Value"] = "*set texture path in \"Nameplate Updated\" hook. Default custom texture is PlaterFocus",
["Name"] = "Bar Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setBackgroundColor",
["Value"] = false,
["Name"] = "Set Bar Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Some bar textures (like PlaterFocus) Also show the background color, which you can set here.",
},
{
["Type"] = 1,
["Key"] = "vyBGColor",
["Value"] = {
0,
0.098039215686275,
0.098039215686275,
1,
},
["Name"] = "Vy Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "urhBGColor",
["Value"] = {
0.043137254901961,
0,
0.098039215686275,
1,
},
["Name"] = "Urh Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "woBGColor",
["Value"] = {
0,
0.098039215686275,
0.011764705882353,
1,
},
["Name"] = "Wo Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "reloadWarning",
["Value"] = "Moving the sliders around too much can cause some temporary lag. To fix this simply reload your game after applying changes!",
["Name"] = "Reload Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Ilrieth-Argent Dawn",
["Desc"] = "modify Encrypted mobs' names and healthbar colors with custom values",
["Prio"] = 99,
["version"] = 8,
["PlaterCore"] = 1,
["semver"] = "1.0.7",
["LastHookEdited"] = "",
["Name"] = "Encrypted Names & Colors",
},
},
["target_shady_enabled"] = false,
["border_thickness"] = 0.800000011920929,
["aura_width2"] = 22,
["npc_colors"] = {
[167998] = {
true,
true,
"fuchsia",
},
[165108] = {
true,
true,
"fuchsia",
},
[178165] = {
true,
true,
"fuchsia",
},
[162691] = {
true,
false,
"fuchsia",
},
[170850] = {
true,
true,
"fuchsia",
},
[164873] = {
true,
true,
"fuchsia",
},
[162763] = {
true,
true,
"fuchsia",
},
[163086] = {
true,
false,
"fuchsia",
},
[164929] = {
true,
true,
"fuchsia",
},
[162047] = {
true,
true,
"fuchsia",
},
[168418] = {
true,
true,
"crimson",
},
[163520] = {
true,
true,
"fuchsia",
},
[174569] = {
false,
false,
"fuchsia",
},
[167962] = {
true,
true,
"fuchsia",
},
[170490] = {
true,
true,
"fuchsia",
},
[165529] = {
true,
false,
"springgreen",
},
[163458] = {
true,
true,
"crimson",
},
[171341] = {
true,
true,
"greenyellow",
},
[162057] = {
true,
true,
"fuchsia",
},
[163459] = {
true,
true,
"greenyellow",
},
[168318] = {
true,
true,
"fuchsia",
},
[171799] = {
true,
true,
"fuchsia",
},
[168594] = {
true,
true,
"fuchsia",
},
[163121] = {
true,
true,
"fuchsia",
},
[177808] = {
true,
true,
"fuchsia",
},
[168681] = {
true,
true,
"fuchsia",
},
[164557] = {
true,
false,
"fuchsia",
},
[167964] = {
true,
true,
"fuchsia",
},
[166299] = {
true,
true,
"fuchsia",
},
[163618] = {
true,
false,
"fuchsia",
},
[174210] = {
true,
true,
"fuchsia",
},
[162040] = {
true,
true,
"fuchsia",
},
[170572] = {
true,
true,
"fuchsia",
},
[168942] = {
true,
true,
"fuchsia",
},
[168572] = {
true,
true,
"fuchsia",
},
[169905] = {
true,
true,
"fuchsia",
},
[180495] = {
true,
true,
"fuchsia",
},
[178141] = {
true,
true,
"fuchsia",
},
[167111] = {
true,
true,
"fuchsia",
},
},
["ghost_auras"] = {
["auras"] = {
["DEATHKNIGHT"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["WARRIOR"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["SHAMAN"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["MAGE"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["PRIEST"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
["589"] = true,
["34914"] = true,
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["ROGUE"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["WARLOCK"] = {
["1"] = {
[980] = true,
[172] = true,
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["DEMONHUNTER"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
},
["PALADIN"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["DRUID"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
["9"] = {
},
["8"] = {
},
},
["MONK"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["HUNTER"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
},
},
["target_highlight_height"] = 7.005825042724609,
["target_shady_alpha"] = 0.2520707845687866,
["disable_omnicc_on_auras"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.2000000476837,
},
},
["aura_width"] = 22,
["aura_height2"] = 18,
["castbar_target_notank"] = true,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.1499999761581",
["nameplateLargeTopInset"] = "-1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateTargetRadialPosition"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["clampTargetNameplateToScreen"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.51",
["nameplateMotionSpeed"] = "0.050608683377504",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplateOtherTopInset"] = "-1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.30423501133919",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["NamePlateHorizontalScale"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["SoftTargetIconGameObject"] = "0",
},
["global_offset_y"] = 0.2299995422363281,
["aggro_can_check_notank"] = true,
["login_counter"] = 11387,
["version"] = 1,
["castbar_icon_show"] = false,
["pet_width_scale"] = 0.8499999642372131,
["focus_indicator_enabled"] = false,
["target_highlight_alpha"] = 0.9511719942092896,
["usePlaterWidget"] = false,
["castbar_target_anchor"] = {
["y"] = -8.94000244140625,
["x"] = -3.170005798339844,
["side"] = 10,
},
["quick_hide"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["aura_stack_font"] = "PT Sans Narrow",
["patch_version"] = 25,
["target_highlight_color"] = {
nil,
0.05882353335618973,
},
["range_check_in_range_or_target_alpha"] = 0.7999999523162842,
["aura_timer_text_size"] = 12,
["range_check_alpha_friendlies"] = 1,
["aura_show_enrage"] = true,
["number_region_first_run"] = true,
["script_auto_imported"] = {
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 1,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Tank Interrupt"] = 12,
["Unit - Important"] = 11,
["Cast - Quick Flash"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Unit - Show Energy"] = 11,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Circular Swipe"] = 4,
["Cast - Shield Interrupt"] = 2,
["Cast - Important Target [P]"] = 2,
["Add - Explode on Die [P]"] = 1,
["Spiteful Affix"] = 3,
["Aura - Buff Alert"] = 15,
["Add - Non Elite Trash [P]"] = 4,
["Cast - On Going Cast [P]"] = 2,
["Cast - Stop Casting"] = 4,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Auto Set Skull"] = 11,
["Cast - Very Important"] = 15,
["Cast - Glowing [P]"] = 10,
["Fixate On You"] = 11,
},
["focus_as_target_alpha"] = true,
["range_check_alpha"] = 1,
["click_space"] = {
138,
36,
},
["range_check_enabled"] = false,
["castbar_target_font"] = "PT Sans Narrow",
["ui_parent_cast_level"] = 108,
["semver"] = "1.0.0",
["health_statusbar_bgcolor"] = {
0.0470588281750679,
0.05098039656877518,
0.05098039656877518,
1,
},
["aggro_modifies"] = {
["actor_name_color"] = true,
},
["dps"] = {
["colors"] = {
["solo"] = {
0,
1,
0.011764705882353,
},
["notontank"] = {
1,
0.43529411764706,
0,
},
["aggro"] = {
nil,
0.007843137718737125,
},
["noaggro"] = {
0.3803921937942505,
0.4823529720306397,
},
["pulling"] = {
0.93333333333333,
1,
0.95686274509804,
},
},
},
["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
["aura_tracker"] = {
["debuff_banned"] = {
["356329"] = false,
["228354"] = false,
["113724"] = false,
["289308"] = false,
["331934"] = false,
["205708"] = false,
["352939"] = false,
["354050"] = false,
["236299"] = true,
["12486"] = false,
},
["buff_tracked"] = {
["209859"] = true,
},
["buff_banned"] = {
["206150"] = true,
["333553"] = true,
["61574"] = true,
["61573"] = true,
},
},
["ui_parent_scale_tune"] = 1.4099998474121,
["use_ui_parent"] = true,
["cast_statusbar_texture"] = "Wglass",
["health_animation_time_dilatation"] = 2.6199998855591,
["color_override"] = false,
["cast_statusbar_bgcolor"] = {
0,
0.062745101749897,
0.5137255191802979,
0.8900000005960464,
},
["first_run3"] = true,
["cast_statusbar_spark_color"] = {
nil,
0.13333333333333,
0.8,
},
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-08-03 19:08:57 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Qpfromage",
"2024-08-03 13:58:34 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Qpfromage",
"2024-07-26 16:40:50 | INIT | Plater-v583a-Retail | Framework v551 | 11.0.0 | enUS | Sikducker",
"2024-07-25 15:54:16 | INIT | Plater-v583a-Retail | Framework v551 | 11.0.0 | enUS | Sikducker",
"2024-07-25 08:46:57 | INIT | Plater-v583a-Retail | Framework v551 | 11.0.0 | enUS | Sikducker",
"2024-07-25 07:55:08 | INIT | Plater-v583-Retail | Framework v551 | 11.0.0 | enUS | Sikducker",
"2024-07-24 13:14:32 | INIT | Plater-v583-Retail | Framework v551 | 11.0.0 | enUS | Qtte",
"2024-07-24 10:20:53 | INIT | Plater-v583-Retail | Framework v551 | 11.0.0 | enUS | Sikducker",
"2024-07-24 09:52:17 | INIT | Plater-v583-Retail | Framework v551 | 11.0.0 | enUS | Qpfromage",
"2024-07-24 08:55:09 | INIT | Plater-v583-Retail | Framework v551 | 11.0.0 | enUS | Qpfromage",
"2024-07-24 08:38:32 | INIT | Plater-v583-Retail | Framework v551 | 11.0.0 | enUS | Qpfromage",
"2024-07-23 16:44:03 | INIT | Plater-v583-Retail | Framework v551 | 10.2.7 | enUS | Sikducker",
"2024-07-23 16:11:04 | INIT | Plater-v583-Retail | Framework v551 | 10.2.7 | enUS | Sikducker",
"2024-07-23 05:46:43 | INIT | Plater-v583-Retail | Framework v551 | 10.2.7 | enUS | Sikducker",
"2024-07-23 05:38:49 | INIT | Plater-v583-Retail | Framework v551 | 10.2.7 | enUS | Sikducker",
"2024-07-23 05:34:48 | INIT | Plater-v583-Retail | Framework v551 | 10.2.7 | enUS | Qpfromage",
"2024-07-23 05:17:57 | INIT | Plater-v583-Retail | Framework v551 | 10.2.7 | enUS | Qpfromage",
"2024-07-23 04:38:27 | INIT | Plater-v583-Retail | Framework v551 | 10.2.7 | enUS | Sikducker",
"2024-07-23 04:36:19 | INIT | Plater-v583-Retail | Framework v551 | 10.2.7 | enUS | Sikducker",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
